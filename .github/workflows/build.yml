name: Build
on:
  workflow_run:
    workflows:
      - Install
    types:
      - completed
jobs:
  env-vars:
    name: Initialize environment variables
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      branch: ${{ steps.get-branch.outputs.name }}
      commit-message: ${{ steps.get-commit.outputs.message }}
      release: ${{ steps.get-release.outputs.version }}
    steps:
      - name: Get branch name
        id: get-branch
        run: |
          echo "::set-output name=name::${GITHUB_REF#refs/heads/}"

      - name: Get commit
        id: get-commit
        run: |
          echo "::set-output name=message::${{ format(github.event.head_commit.message, 'chore(release): ', '') }}"

      - name: Get release version
        id: get-release
        run: |
          VERSION=$(grep \"version\"\: ${GITHUB_WORKSPACE}/package.json | sed 's/.*"version": "\(.*\)".*/\1/')
          echo "::set-output name=version::$VERSION"

  build:
    name: Build package
    needs: [env-vars]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Enable corepack
        run: corepack enable

      - name: Enable Yarn Berry
        run: yarn set version stable

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${GITHUB_WORKSPACE}/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' && steps.npm-cache.outputs.cache-hit != 'true' }}
        run: yarn install

      - name: Build package
        run: yarn build

      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: '${{ github.event.repository.owner.login }}-${{ github.event.repository.name }}-${{ needs.env-vars.outputs.branch }}-${{ needs.env-vars.outputs.release  }}-build'
          path: |
            dist
            package.json
            README.md
            yarn.lock
