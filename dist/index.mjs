var Xs=Object.create;var Ui=Object.defineProperty;var au=Object.getOwnPropertyDescriptor;var eu=Object.getOwnPropertyNames;var iu=Object.getPrototypeOf,nu=Object.prototype.hasOwnProperty;var De=(a,o)=>()=>(o||a((o={exports:{}}).exports,o),o.exports);var su=(a,o,c,d)=>{if(o&&typeof o=="object"||typeof o=="function")for(let g of eu(o))!nu.call(a,g)&&g!==c&&Ui(a,g,{get:()=>o[g],enumerable:!(d=au(o,g))||d.enumerable});return a};var fa=(a,o,c)=>(c=a!=null?Xs(iu(a)):{},su(o||!a||!a.__esModule?Ui(c,"default",{value:a,enumerable:!0}):c,a));var Vi=De(U=>{"use strict";var wa=Symbol.for("react.element"),br=Symbol.for("react.portal"),Br=Symbol.for("react.fragment"),Ur=Symbol.for("react.strict_mode"),Nr=Symbol.for("react.profiler"),yr=Symbol.for("react.provider"),Dr=Symbol.for("react.context"),Pr=Symbol.for("react.forward_ref"),Fr=Symbol.for("react.suspense"),kr=Symbol.for("react.memo"),Mr=Symbol.for("react.lazy"),Li=Symbol.iterator;function Lr(a){return a===null||typeof a!="object"?null:(a=Li&&a[Li]||a["@@iterator"],typeof a=="function"?a:null)}var xi={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},qi=Object.assign,Ki={};function ba(a,o,c){this.props=a,this.context=o,this.refs=Ki,this.updater=c||xi}ba.prototype.isReactComponent={};ba.prototype.setState=function(a,o){if(typeof a!="object"&&typeof a!="function"&&a!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,a,o,"setState")};ba.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function Oi(){}Oi.prototype=ba.prototype;function ke(a,o,c){this.props=a,this.context=o,this.refs=Ki,this.updater=c||xi}var Me=ke.prototype=new Oi;Me.constructor=ke;qi(Me,ba.prototype);Me.isPureReactComponent=!0;var wi=Array.isArray,ji=Object.prototype.hasOwnProperty,Le={current:null},Hi={key:!0,ref:!0,__self:!0,__source:!0};function Wi(a,o,c){var d,g={},_=null,E=null;if(o!=null)for(d in o.ref!==void 0&&(E=o.ref),o.key!==void 0&&(_=""+o.key),o)ji.call(o,d)&&!Hi.hasOwnProperty(d)&&(g[d]=o[d]);var I=arguments.length-2;if(I===1)g.children=c;else if(1<I){for(var S=Array(I),B=0;B<I;B++)S[B]=arguments[B+2];g.children=S}if(a&&a.defaultProps)for(d in I=a.defaultProps,I)g[d]===void 0&&(g[d]=I[d]);return{$$typeof:wa,type:a,key:_,ref:E,props:g,_owner:Le.current}}function wr(a,o){return{$$typeof:wa,type:a.type,key:o,ref:a.ref,props:a.props,_owner:a._owner}}function we(a){return typeof a=="object"&&a!==null&&a.$$typeof===wa}function Gr(a){var o={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,function(c){return o[c]})}var Gi=/\/+/g;function Fe(a,o){return typeof a=="object"&&a!==null&&a.key!=null?Gr(""+a.key):o.toString(36)}function ne(a,o,c,d,g){var _=typeof a;(_==="undefined"||_==="boolean")&&(a=null);var E=!1;if(a===null)E=!0;else switch(_){case"string":case"number":E=!0;break;case"object":switch(a.$$typeof){case wa:case br:E=!0}}if(E)return E=a,g=g(E),a=d===""?"."+Fe(E,0):d,wi(g)?(c="",a!=null&&(c=a.replace(Gi,"$&/")+"/"),ne(g,o,c,"",function(B){return B})):g!=null&&(we(g)&&(g=wr(g,c+(!g.key||E&&E.key===g.key?"":(""+g.key).replace(Gi,"$&/")+"/")+a)),o.push(g)),1;if(E=0,d=d===""?".":d+":",wi(a))for(var I=0;I<a.length;I++){_=a[I];var S=d+Fe(_,I);E+=ne(_,o,c,S,g)}else if(S=Lr(a),typeof S=="function")for(a=S.call(a),I=0;!(_=a.next()).done;)_=_.value,S=d+Fe(_,I++),E+=ne(_,o,c,S,g);else if(_==="object")throw o=String(a),Error("Objects are not valid as a React child (found: "+(o==="[object Object]"?"object with keys {"+Object.keys(a).join(", ")+"}":o)+"). If you meant to render a collection of children, use an array instead.");return E}function ie(a,o,c){if(a==null)return a;var d=[],g=0;return ne(a,d,"","",function(_){return o.call(c,_,g++)}),d}function xr(a){if(a._status===-1){var o=a._result;o=o(),o.then(function(c){(a._status===0||a._status===-1)&&(a._status=1,a._result=c)},function(c){(a._status===0||a._status===-1)&&(a._status=2,a._result=c)}),a._status===-1&&(a._status=0,a._result=o)}if(a._status===1)return a._result.default;throw a._result}var J={current:null},se={transition:null},qr={ReactCurrentDispatcher:J,ReactCurrentBatchConfig:se,ReactCurrentOwner:Le};U.Children={map:ie,forEach:function(a,o,c){ie(a,function(){o.apply(this,arguments)},c)},count:function(a){var o=0;return ie(a,function(){o++}),o},toArray:function(a){return ie(a,function(o){return o})||[]},only:function(a){if(!we(a))throw Error("React.Children.only expected to receive a single React element child.");return a}};U.Component=ba;U.Fragment=Br;U.Profiler=Nr;U.PureComponent=ke;U.StrictMode=Ur;U.Suspense=Fr;U.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=qr;U.cloneElement=function(a,o,c){if(a==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+a+".");var d=qi({},a.props),g=a.key,_=a.ref,E=a._owner;if(o!=null){if(o.ref!==void 0&&(_=o.ref,E=Le.current),o.key!==void 0&&(g=""+o.key),a.type&&a.type.defaultProps)var I=a.type.defaultProps;for(S in o)ji.call(o,S)&&!Hi.hasOwnProperty(S)&&(d[S]=o[S]===void 0&&I!==void 0?I[S]:o[S])}var S=arguments.length-2;if(S===1)d.children=c;else if(1<S){I=Array(S);for(var B=0;B<S;B++)I[B]=arguments[B+2];d.children=I}return{$$typeof:wa,type:a.type,key:g,ref:_,props:d,_owner:E}};U.createContext=function(a){return a={$$typeof:Dr,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},a.Provider={$$typeof:yr,_context:a},a.Consumer=a};U.createElement=Wi;U.createFactory=function(a){var o=Wi.bind(null,a);return o.type=a,o};U.createRef=function(){return{current:null}};U.forwardRef=function(a){return{$$typeof:Pr,render:a}};U.isValidElement=we;U.lazy=function(a){return{$$typeof:Mr,_payload:{_status:-1,_result:a},_init:xr}};U.memo=function(a,o){return{$$typeof:kr,type:a,compare:o===void 0?null:o}};U.startTransition=function(a){var o=se.transition;se.transition={};try{a()}finally{se.transition=o}};U.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")};U.useCallback=function(a,o){return J.current.useCallback(a,o)};U.useContext=function(a){return J.current.useContext(a)};U.useDebugValue=function(){};U.useDeferredValue=function(a){return J.current.useDeferredValue(a)};U.useEffect=function(a,o){return J.current.useEffect(a,o)};U.useId=function(){return J.current.useId()};U.useImperativeHandle=function(a,o,c){return J.current.useImperativeHandle(a,o,c)};U.useInsertionEffect=function(a,o){return J.current.useInsertionEffect(a,o)};U.useLayoutEffect=function(a,o){return J.current.useLayoutEffect(a,o)};U.useMemo=function(a,o){return J.current.useMemo(a,o)};U.useReducer=function(a,o,c){return J.current.useReducer(a,o,c)};U.useRef=function(a){return J.current.useRef(a)};U.useState=function(a){return J.current.useState(a)};U.useSyncExternalStore=function(a,o,c){return J.current.useSyncExternalStore(a,o,c)};U.useTransition=function(){return J.current.useTransition()};U.version="18.0.0-fc46dba67-20220329"});var Ri=De((N,ue)=>{"use strict";process.env.NODE_ENV!=="production"&&function(){"use strict";typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart=="function"&&__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error);var a="18.0.0-fc46dba67-20220329",o=Symbol.for("react.element"),c=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),g=Symbol.for("react.strict_mode"),_=Symbol.for("react.profiler"),E=Symbol.for("react.provider"),I=Symbol.for("react.context"),S=Symbol.for("react.forward_ref"),B=Symbol.for("react.suspense"),K=Symbol.for("react.suspense_list"),q=Symbol.for("react.memo"),j=Symbol.for("react.lazy"),P=Symbol.for("react.offscreen"),Q=Symbol.iterator,H="@@iterator";function C(r){if(r===null||typeof r!="object")return null;var m=Q&&r[Q]||r[H];return typeof m=="function"?m:null}var aa={current:null},F={transition:null},k={current:null,isBatchingLegacy:!1,didScheduleLegacyUpdate:!1},X={current:null},ca={},ja=null;function Oe(r){ja=r}ca.setExtraStackFrame=function(r){ja=r},ca.getCurrentStack=null,ca.getStackAddendum=function(){var r="";ja&&(r+=ja);var m=ca.getCurrentStack;return m&&(r+=m()||""),r};var Kn=!1,On=!1,jn=!1,Hn=!1,Wn=!1,ga={ReactCurrentDispatcher:aa,ReactCurrentBatchConfig:F,ReactCurrentOwner:X};ga.ReactDebugCurrentFrame=ca,ga.ReactCurrentActQueue=k;function ha(r){{for(var m=arguments.length,A=new Array(m>1?m-1:0),f=1;f<m;f++)A[f-1]=arguments[f];je("warn",r,A)}}function D(r){{for(var m=arguments.length,A=new Array(m>1?m-1:0),f=1;f<m;f++)A[f-1]=arguments[f];je("error",r,A)}}function je(r,m,A){{var f=ga.ReactDebugCurrentFrame,h=f.getStackAddendum();h!==""&&(m+="%s",A=A.concat([h]));var v=A.map(function(p){return String(p)});v.unshift("Warning: "+m),Function.prototype.apply.call(console[r],console,v)}}var He={};function ce(r,m){{var A=r.constructor,f=A&&(A.displayName||A.name)||"ReactClass",h=f+"."+m;if(He[h])return;D("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.",m,f),He[h]=!0}}var We={isMounted:function(r){return!1},enqueueForceUpdate:function(r,m,A){ce(r,"forceUpdate")},enqueueReplaceState:function(r,m,A,f){ce(r,"replaceState")},enqueueSetState:function(r,m,A,f){ce(r,"setState")}},ua=Object.assign,Ae={};Object.freeze(Ae);function Aa(r,m,A){this.props=r,this.context=m,this.refs=Ae,this.updater=A||We}Aa.prototype.isReactComponent={},Aa.prototype.setState=function(r,m){if(typeof r!="object"&&typeof r!="function"&&r!=null)throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,r,m,"setState")},Aa.prototype.forceUpdate=function(r){this.updater.enqueueForceUpdate(this,r,"forceUpdate")};{var fe={isMounted:["isMounted","Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],replaceState:["replaceState","Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]},Vn=function(r,m){Object.defineProperty(Aa.prototype,r,{get:function(){ha("%s(...) is deprecated in plain JavaScript React classes. %s",m[0],m[1])}})};for(var de in fe)fe.hasOwnProperty(de)&&Vn(de,fe[de])}function Ve(){}Ve.prototype=Aa.prototype;function ge(r,m,A){this.props=r,this.context=m,this.refs=Ae,this.updater=A||We}var he=ge.prototype=new Ve;he.constructor=ge,ua(he,Aa.prototype),he.isPureReactComponent=!0;function Rn(){var r={current:null};return Object.seal(r),r}var zn=Array.isArray;function Ha(r){return zn(r)}function Yn(r){{var m=typeof Symbol=="function"&&Symbol.toStringTag,A=m&&r[Symbol.toStringTag]||r.constructor.name||"Object";return A}}function Jn(r){try{return Re(r),!1}catch{return!0}}function Re(r){return""+r}function Wa(r){if(Jn(r))return D("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.",Yn(r)),Re(r)}function Zn(r,m,A){var f=r.displayName;if(f)return f;var h=m.displayName||m.name||"";return h!==""?A+"("+h+")":A}function ze(r){return r.displayName||"Context"}function la(r){if(r==null)return null;if(typeof r.tag=="number"&&D("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."),typeof r=="function")return r.displayName||r.name||null;if(typeof r=="string")return r;switch(r){case d:return"Fragment";case c:return"Portal";case _:return"Profiler";case g:return"StrictMode";case B:return"Suspense";case K:return"SuspenseList"}if(typeof r=="object")switch(r.$$typeof){case I:var m=r;return ze(m)+".Consumer";case E:var A=r;return ze(A._context)+".Provider";case S:return Zn(r,r.render,"ForwardRef");case q:var f=r.displayName||null;return f!==null?f:la(r.type)||"Memo";case j:{var h=r,v=h._payload,p=h._init;try{return la(p(v))}catch{return null}}}return null}var ya=Object.prototype.hasOwnProperty,Ye={key:!0,ref:!0,__self:!0,__source:!0},Je,Ze,Ie;Ie={};function $e(r){if(ya.call(r,"ref")){var m=Object.getOwnPropertyDescriptor(r,"ref").get;if(m&&m.isReactWarning)return!1}return r.ref!==void 0}function Qe(r){if(ya.call(r,"key")){var m=Object.getOwnPropertyDescriptor(r,"key").get;if(m&&m.isReactWarning)return!1}return r.key!==void 0}function $n(r,m){var A=function(){Je||(Je=!0,D("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",m))};A.isReactWarning=!0,Object.defineProperty(r,"key",{get:A,configurable:!0})}function Qn(r,m){var A=function(){Ze||(Ze=!0,D("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",m))};A.isReactWarning=!0,Object.defineProperty(r,"ref",{get:A,configurable:!0})}function Cn(r){if(typeof r.ref=="string"&&X.current&&r.__self&&X.current.stateNode!==r.__self){var m=la(X.current.type);Ie[m]||(D('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',m,r.ref),Ie[m]=!0)}}var _e=function(r,m,A,f,h,v,p){var b={$$typeof:o,type:r,key:m,ref:A,props:p,_owner:v};return b._store={},Object.defineProperty(b._store,"validated",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(b,"_self",{configurable:!1,enumerable:!1,writable:!1,value:f}),Object.defineProperty(b,"_source",{configurable:!1,enumerable:!1,writable:!1,value:h}),Object.freeze&&(Object.freeze(b.props),Object.freeze(b)),b};function Xn(r,m,A){var f,h={},v=null,p=null,b=null,y=null;if(m!=null){$e(m)&&(p=m.ref,Cn(m)),Qe(m)&&(Wa(m.key),v=""+m.key),b=m.__self===void 0?null:m.__self,y=m.__source===void 0?null:m.__source;for(f in m)ya.call(m,f)&&!Ye.hasOwnProperty(f)&&(h[f]=m[f])}var M=arguments.length-2;if(M===1)h.children=A;else if(M>1){for(var L=Array(M),w=0;w<M;w++)L[w]=arguments[w+2];Object.freeze&&Object.freeze(L),h.children=L}if(r&&r.defaultProps){var x=r.defaultProps;for(f in x)h[f]===void 0&&(h[f]=x[f])}if(v||p){var O=typeof r=="function"?r.displayName||r.name||"Unknown":r;v&&$n(h,O),p&&Qn(h,O)}return _e(r,v,p,b,y,X.current,h)}function as(r,m){var A=_e(r.type,m,r.ref,r._self,r._source,r._owner,r.props);return A}function es(r,m,A){if(r==null)throw new Error("React.cloneElement(...): The argument must be a React element, but you passed "+r+".");var f,h=ua({},r.props),v=r.key,p=r.ref,b=r._self,y=r._source,M=r._owner;if(m!=null){$e(m)&&(p=m.ref,M=X.current),Qe(m)&&(Wa(m.key),v=""+m.key);var L;r.type&&r.type.defaultProps&&(L=r.type.defaultProps);for(f in m)ya.call(m,f)&&!Ye.hasOwnProperty(f)&&(m[f]===void 0&&L!==void 0?h[f]=L[f]:h[f]=m[f])}var w=arguments.length-2;if(w===1)h.children=A;else if(w>1){for(var x=Array(w),O=0;O<w;O++)x[O]=arguments[O+2];h.children=x}return _e(r.type,v,p,b,y,M,h)}function Ia(r){return typeof r=="object"&&r!==null&&r.$$typeof===o}var Ce=".",is=":";function ns(r){var m=/[=:]/g,A={"=":"=0",":":"=2"},f=r.replace(m,function(h){return A[h]});return"$"+f}var Xe=!1,ss=/\/+/g;function ai(r){return r.replace(ss,"$&/")}function pe(r,m){return typeof r=="object"&&r!==null&&r.key!=null?(Wa(r.key),ns(""+r.key)):m.toString(36)}function Va(r,m,A,f,h){var v=typeof r;(v==="undefined"||v==="boolean")&&(r=null);var p=!1;if(r===null)p=!0;else switch(v){case"string":case"number":p=!0;break;case"object":switch(r.$$typeof){case o:case c:p=!0}}if(p){var b=r,y=h(b),M=f===""?Ce+pe(b,0):f;if(Ha(y)){var L="";M!=null&&(L=ai(M)+"/"),Va(y,m,L,"",function(Cs){return Cs})}else y!=null&&(Ia(y)&&(y.key&&(!b||b.key!==y.key)&&Wa(y.key),y=as(y,A+(y.key&&(!b||b.key!==y.key)?ai(""+y.key)+"/":"")+M)),m.push(y));return 1}var w,x,O=0,W=f===""?Ce:f+is;if(Ha(r))for(var Ca=0;Ca<r.length;Ca++)w=r[Ca],x=W+pe(w,Ca),O+=Va(w,m,A,x,h);else{var ye=C(r);if(typeof ye=="function"){var vi=r;ye===vi.entries&&(Xe||ha("Using Maps as children is not supported. Use an array of keyed ReactElements instead."),Xe=!0);for(var $s=ye.call(vi),bi,Qs=0;!(bi=$s.next()).done;)w=bi.value,x=W+pe(w,Qs++),O+=Va(w,m,A,x,h)}else if(v==="object"){var Bi=String(r);throw new Error("Objects are not valid as a React child (found: "+(Bi==="[object Object]"?"object with keys {"+Object.keys(r).join(", ")+"}":Bi)+"). If you meant to render a collection of children, use an array instead.")}}return O}function Ra(r,m,A){if(r==null)return r;var f=[],h=0;return Va(r,f,"","",function(v){return m.call(A,v,h++)}),f}function us(r){var m=0;return Ra(r,function(){m++}),m}function rs(r,m,A){Ra(r,function(){m.apply(this,arguments)},A)}function ts(r){return Ra(r,function(m){return m})||[]}function ls(r){if(!Ia(r))throw new Error("React.Children.only expected to receive a single React element child.");return r}function os(r){var m={$$typeof:I,_currentValue:r,_currentValue2:r,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};m.Provider={$$typeof:E,_context:m};var A=!1,f=!1,h=!1;{var v={$$typeof:I,_context:m};Object.defineProperties(v,{Provider:{get:function(){return f||(f=!0,D("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?")),m.Provider},set:function(p){m.Provider=p}},_currentValue:{get:function(){return m._currentValue},set:function(p){m._currentValue=p}},_currentValue2:{get:function(){return m._currentValue2},set:function(p){m._currentValue2=p}},_threadCount:{get:function(){return m._threadCount},set:function(p){m._threadCount=p}},Consumer:{get:function(){return A||(A=!0,D("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?")),m.Consumer}},displayName:{get:function(){return m.displayName},set:function(p){h||(ha("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.",p),h=!0)}}}),m.Consumer=v}return m._currentRenderer=null,m._currentRenderer2=null,m}var Da=-1,Ee=0,ei=1,ms=2;function cs(r){if(r._status===Da){var m=r._result,A=m();if(A.then(function(v){if(r._status===Ee||r._status===Da){var p=r;p._status=ei,p._result=v}},function(v){if(r._status===Ee||r._status===Da){var p=r;p._status=ms,p._result=v}}),r._status===Da){var f=r;f._status=Ee,f._result=A}}if(r._status===ei){var h=r._result;return h===void 0&&D(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))

Did you accidentally put curly braces around the import?`,h),"default"in h||D(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))`,h),h.default}else throw r._result}function As(r){var m={_status:Da,_result:r},A={$$typeof:j,_payload:m,_init:cs};{var f,h;Object.defineProperties(A,{defaultProps:{configurable:!0,get:function(){return f},set:function(v){D("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."),f=v,Object.defineProperty(A,"defaultProps",{enumerable:!0})}},propTypes:{configurable:!0,get:function(){return h},set:function(v){D("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."),h=v,Object.defineProperty(A,"propTypes",{enumerable:!0})}}})}return A}function fs(r){r!=null&&r.$$typeof===q?D("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))."):typeof r!="function"?D("forwardRef requires a render function but was given %s.",r===null?"null":typeof r):r.length!==0&&r.length!==2&&D("forwardRef render functions accept exactly two parameters: props and ref. %s",r.length===1?"Did you forget to use the ref parameter?":"Any additional parameter will be undefined."),r!=null&&(r.defaultProps!=null||r.propTypes!=null)&&D("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");var m={$$typeof:S,render:r};{var A;Object.defineProperty(m,"displayName",{enumerable:!1,configurable:!0,get:function(){return A},set:function(f){A=f,!r.name&&!r.displayName&&(r.displayName=f)}})}return m}var ds=Symbol.for("react.module.reference");function ii(r){return!!(typeof r=="string"||typeof r=="function"||r===d||r===_||Wn||r===g||r===B||r===K||Hn||r===P||Kn||On||jn||typeof r=="object"&&r!==null&&(r.$$typeof===j||r.$$typeof===q||r.$$typeof===E||r.$$typeof===I||r.$$typeof===S||r.$$typeof===ds||r.getModuleId!==void 0))}function gs(r,m){ii(r)||D("memo: The first argument must be a component. Instead received: %s",r===null?"null":typeof r);var A={$$typeof:q,type:r,compare:m===void 0?null:m};{var f;Object.defineProperty(A,"displayName",{enumerable:!1,configurable:!0,get:function(){return f},set:function(h){f=h,!r.name&&!r.displayName&&(r.displayName=h)}})}return A}function z(){var r=aa.current;return r===null&&D(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`),r}function hs(r){var m=z();if(r._context!==void 0){var A=r._context;A.Consumer===r?D("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?"):A.Provider===r&&D("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?")}return m.useContext(r)}function Is(r){var m=z();return m.useState(r)}function _s(r,m,A){var f=z();return f.useReducer(r,m,A)}function ps(r){var m=z();return m.useRef(r)}function Es(r,m){var A=z();return A.useEffect(r,m)}function Ss(r,m){var A=z();return A.useInsertionEffect(r,m)}function Ts(r,m){var A=z();return A.useLayoutEffect(r,m)}function vs(r,m){var A=z();return A.useCallback(r,m)}function bs(r,m){var A=z();return A.useMemo(r,m)}function Bs(r,m,A){var f=z();return f.useImperativeHandle(r,m,A)}function Us(r,m){{var A=z();return A.useDebugValue(r,m)}}function Ns(){var r=z();return r.useTransition()}function ys(r){var m=z();return m.useDeferredValue(r)}function Ds(){var r=z();return r.useId()}function Ps(r,m,A){var f=z();return f.useSyncExternalStore(r,m,A)}var Pa=0,ni,si,ui,ri,ti,li,oi;function mi(){}mi.__reactDisabledLog=!0;function Fs(){{if(Pa===0){ni=console.log,si=console.info,ui=console.warn,ri=console.error,ti=console.group,li=console.groupCollapsed,oi=console.groupEnd;var r={configurable:!0,enumerable:!0,value:mi,writable:!0};Object.defineProperties(console,{info:r,log:r,warn:r,error:r,group:r,groupCollapsed:r,groupEnd:r})}Pa++}}function ks(){{if(Pa--,Pa===0){var r={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:ua({},r,{value:ni}),info:ua({},r,{value:si}),warn:ua({},r,{value:ui}),error:ua({},r,{value:ri}),group:ua({},r,{value:ti}),groupCollapsed:ua({},r,{value:li}),groupEnd:ua({},r,{value:oi})})}Pa<0&&D("disabledDepth fell below zero. This is a bug in React. Please file an issue.")}}var Se=ga.ReactCurrentDispatcher,Te;function za(r,m,A){{if(Te===void 0)try{throw Error()}catch(h){var f=h.stack.trim().match(/\n( *(at )?)/);Te=f&&f[1]||""}return`
`+Te+r}}var ve=!1,Ya;{var Ms=typeof WeakMap=="function"?WeakMap:Map;Ya=new Ms}function ci(r,m){if(!r||ve)return"";{var A=Ya.get(r);if(A!==void 0)return A}var f;ve=!0;var h=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var v;v=Se.current,Se.current=null,Fs();try{if(m){var p=function(){throw Error()};if(Object.defineProperty(p.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(p,[])}catch(W){f=W}Reflect.construct(r,[],p)}else{try{p.call()}catch(W){f=W}r.call(p.prototype)}}else{try{throw Error()}catch(W){f=W}r()}}catch(W){if(W&&f&&typeof W.stack=="string"){for(var b=W.stack.split(`
`),y=f.stack.split(`
`),M=b.length-1,L=y.length-1;M>=1&&L>=0&&b[M]!==y[L];)L--;for(;M>=1&&L>=0;M--,L--)if(b[M]!==y[L]){if(M!==1||L!==1)do if(M--,L--,L<0||b[M]!==y[L]){var w=`
`+b[M].replace(" at new "," at ");return r.displayName&&w.includes("<anonymous>")&&(w=w.replace("<anonymous>",r.displayName)),typeof r=="function"&&Ya.set(r,w),w}while(M>=1&&L>=0);break}}}finally{ve=!1,Se.current=v,ks(),Error.prepareStackTrace=h}var x=r?r.displayName||r.name:"",O=x?za(x):"";return typeof r=="function"&&Ya.set(r,O),O}function Ls(r,m,A){return ci(r,!1)}function ws(r){var m=r.prototype;return!!(m&&m.isReactComponent)}function Ja(r,m,A){if(r==null)return"";if(typeof r=="function")return ci(r,ws(r));if(typeof r=="string")return za(r);switch(r){case B:return za("Suspense");case K:return za("SuspenseList")}if(typeof r=="object")switch(r.$$typeof){case S:return Ls(r.render);case q:return Ja(r.type,m,A);case j:{var f=r,h=f._payload,v=f._init;try{return Ja(v(h),m,A)}catch{}}}return""}var Ai={},fi=ga.ReactDebugCurrentFrame;function Za(r){if(r){var m=r._owner,A=Ja(r.type,r._source,m?m.type:null);fi.setExtraStackFrame(A)}else fi.setExtraStackFrame(null)}function Gs(r,m,A,f,h){{var v=Function.call.bind(ya);for(var p in r)if(v(r,p)){var b=void 0;try{if(typeof r[p]!="function"){var y=Error((f||"React class")+": "+A+" type `"+p+"` is invalid; it must be a function, usually from the `prop-types` package, but received `"+typeof r[p]+"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");throw y.name="Invariant Violation",y}b=r[p](m,p,f,A,null,"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED")}catch(M){b=M}b&&!(b instanceof Error)&&(Za(h),D("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).",f||"React class",A,p,typeof b),Za(null)),b instanceof Error&&!(b.message in Ai)&&(Ai[b.message]=!0,Za(h),D("Failed %s type: %s",A,b.message),Za(null))}}}function _a(r){if(r){var m=r._owner,A=Ja(r.type,r._source,m?m.type:null);Oe(A)}else Oe(null)}var be;be=!1;function di(){if(X.current){var r=la(X.current.type);if(r)return`

Check the render method of \``+r+"`."}return""}function xs(r){if(r!==void 0){var m=r.fileName.replace(/^.*[\\\/]/,""),A=r.lineNumber;return`

Check your code at `+m+":"+A+"."}return""}function qs(r){return r!=null?xs(r.__source):""}var gi={};function Ks(r){var m=di();if(!m){var A=typeof r=="string"?r:r.displayName||r.name;A&&(m=`

Check the top-level render call using <`+A+">.")}return m}function hi(r,m){if(!(!r._store||r._store.validated||r.key!=null)){r._store.validated=!0;var A=Ks(m);if(!gi[A]){gi[A]=!0;var f="";r&&r._owner&&r._owner!==X.current&&(f=" It was passed a child from "+la(r._owner.type)+"."),_a(r),D('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',A,f),_a(null)}}}function Ii(r,m){if(typeof r=="object"){if(Ha(r))for(var A=0;A<r.length;A++){var f=r[A];Ia(f)&&hi(f,m)}else if(Ia(r))r._store&&(r._store.validated=!0);else if(r){var h=C(r);if(typeof h=="function"&&h!==r.entries)for(var v=h.call(r),p;!(p=v.next()).done;)Ia(p.value)&&hi(p.value,m)}}}function _i(r){{var m=r.type;if(m==null||typeof m=="string")return;var A;if(typeof m=="function")A=m.propTypes;else if(typeof m=="object"&&(m.$$typeof===S||m.$$typeof===q))A=m.propTypes;else return;if(A){var f=la(m);Gs(A,r.props,"prop",f,r)}else if(m.PropTypes!==void 0&&!be){be=!0;var h=la(m);D("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?",h||"Unknown")}typeof m.getDefaultProps=="function"&&!m.getDefaultProps.isReactClassApproved&&D("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.")}}function Os(r){{for(var m=Object.keys(r.props),A=0;A<m.length;A++){var f=m[A];if(f!=="children"&&f!=="key"){_a(r),D("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.",f),_a(null);break}}r.ref!==null&&(_a(r),D("Invalid attribute `ref` supplied to `React.Fragment`."),_a(null))}}function pi(r,m,A){var f=ii(r);if(!f){var h="";(r===void 0||typeof r=="object"&&r!==null&&Object.keys(r).length===0)&&(h+=" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");var v=qs(m);v?h+=v:h+=di();var p;r===null?p="null":Ha(r)?p="array":r!==void 0&&r.$$typeof===o?(p="<"+(la(r.type)||"Unknown")+" />",h=" Did you accidentally export a JSX literal instead of a component?"):p=typeof r,D("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s",p,h)}var b=Xn.apply(this,arguments);if(b==null)return b;if(f)for(var y=2;y<arguments.length;y++)Ii(arguments[y],r);return r===d?Os(b):_i(b),b}var Ei=!1;function js(r){var m=pi.bind(null,r);return m.type=r,Ei||(Ei=!0,ha("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.")),Object.defineProperty(m,"type",{enumerable:!1,get:function(){return ha("Factory.type is deprecated. Access the class directly before passing it to createFactory."),Object.defineProperty(this,"type",{value:r}),r}}),m}function Hs(r,m,A){for(var f=es.apply(this,arguments),h=2;h<arguments.length;h++)Ii(arguments[h],f.type);return _i(f),f}function Ws(r,m){var A=F.transition;F.transition={};var f=F.transition;F.transition._updatedFibers=new Set;try{r()}finally{if(F.transition=A,A===null&&f._updatedFibers){var h=f._updatedFibers.size;h>10&&ha("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."),f._updatedFibers.clear()}}}var Si=!1,$a=null;function Vs(r){if($a===null)try{var m=("require"+Math.random()).slice(0,7),A=ue&&ue[m];$a=A.call(ue,"timers").setImmediate}catch{$a=function(h){Si===!1&&(Si=!0,typeof MessageChannel>"u"&&D("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));var v=new MessageChannel;v.port1.onmessage=h,v.port2.postMessage(void 0)}}return $a(r)}var pa=0,Ti=!1;function Rs(r){{var m=pa;pa++,k.current===null&&(k.current=[]);var A=k.isBatchingLegacy,f;try{if(k.isBatchingLegacy=!0,f=r(),!A&&k.didScheduleLegacyUpdate){var h=k.current;h!==null&&(k.didScheduleLegacyUpdate=!1,Ne(h))}}catch(x){throw Qa(m),x}finally{k.isBatchingLegacy=A}if(f!==null&&typeof f=="object"&&typeof f.then=="function"){var v=f,p=!1,b={then:function(x,O){p=!0,v.then(function(W){Qa(m),pa===0?Be(W,x,O):x(W)},function(W){Qa(m),O(W)})}};return!Ti&&typeof Promise<"u"&&Promise.resolve().then(function(){}).then(function(){p||(Ti=!0,D("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"))}),b}else{var y=f;if(Qa(m),pa===0){var M=k.current;M!==null&&(Ne(M),k.current=null);var L={then:function(x,O){k.current===null?(k.current=[],Be(y,x,O)):x(y)}};return L}else{var w={then:function(x,O){x(y)}};return w}}}}function Qa(r){r!==pa-1&&D("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. "),pa=r}function Be(r,m,A){{var f=k.current;if(f!==null)try{Ne(f),Vs(function(){f.length===0?(k.current=null,m(r)):Be(r,m,A)})}catch(h){A(h)}else m(r)}}var Ue=!1;function Ne(r){if(!Ue){Ue=!0;var m=0;try{for(;m<r.length;m++){var A=r[m];do A=A(!0);while(A!==null)}r.length=0}catch(f){throw r=r.slice(m+1),f}finally{Ue=!1}}}var zs=pi,Ys=Hs,Js=js,Zs={map:Ra,forEach:rs,count:us,toArray:ts,only:ls};N.Children=Zs,N.Component=Aa,N.Fragment=d,N.Profiler=_,N.PureComponent=ge,N.StrictMode=g,N.Suspense=B,N.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ga,N.cloneElement=Ys,N.createContext=os,N.createElement=zs,N.createFactory=Js,N.createRef=Rn,N.forwardRef=fs,N.isValidElement=Ia,N.lazy=As,N.memo=gs,N.startTransition=Ws,N.unstable_act=Rs,N.useCallback=vs,N.useContext=hs,N.useDebugValue=Us,N.useDeferredValue=ys,N.useEffect=Es,N.useId=Ds,N.useImperativeHandle=Bs,N.useInsertionEffect=Ss,N.useLayoutEffect=Ts,N.useMemo=bs,N.useReducer=_s,N.useRef=ps,N.useState=Is,N.useSyncExternalStore=Ps,N.useTransition=Ns,N.version=a,typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop=="function"&&__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error)}()});var ma=De((Nv,Ge)=>{"use strict";process.env.NODE_ENV==="production"?Ge.exports=Vi():Ge.exports=Ri()});import Tt from"meow";import vt from"update-notifier";var ea=(c=>(c.Project="project",c.Workspace="workspace",c))(ea||{}),T=class{flags;name;runFunction;commands;type="project";constructor(o){this.name=o.name,this.commands=o.commands,this.flags=o.flags,this.type=o.type??"project",this.runFunction=o.run}async run({cli:o,config:c,flags:d}){if(this.runFunction)return await this.runFunction({cli:o,config:c,flags:d})}};async function Pe({cli:a,config:o,command:c,commands:d,flags:g}){if(!c||c.length===0||!c[0]){console.error("No command specified");return}if(!d){console.error("No commands specified");return}let _=c[0],E=d.find(I=>I.name===_);if(!E){console.error(`Unknown command ${_}`);return}c.length===1?E.run({cli:a,config:o,flags:g}):c.length>1&&Pe({cli:a,config:o,command:c.slice(1),commands:E?.commands,flags:g})}import{build as Er}from"esbuild";import Ea from"typescript";import Ni from"fs-extra";import Z from"path";async function Xa({input:a,types:o,output:c}){let d=typeof o=="object"?o.configPath:void 0,g=d?await Ni.readFile(Z.join(Z.resolve(),d),"utf8"):null,_=g?await JSON.parse(g.toString()):{extends:"@srclaunch/dx/tsconfig.ui.json",include:[Z.join(Z.resolve(),a?.directory??"src")]},E={..._,compilerOptions:{..._.compilerOptions,declarationDir:Z.join(Z.resolve(),c?.directory??"dist"),listEmittedFiles:!0,rootDir:Z.join(Z.resolve(),a?.directory??"src")}},{options:I}=Ea.parseJsonConfigFileContent(E,Ea.sys,Z.join(Z.resolve())),B=(await Ni.readdir(Z.join(Z.resolve(),a?.directory??"src"))).filter(P=>P.endsWith(".ts")||P.endsWith(".tsx")).map(P=>Z.join(Z.resolve(),a?.directory??"src",P)),K=Ea.createProgram(B,I),q=K.emit(),j=Ea.getPreEmitDiagnostics(K).concat(q.diagnostics);for(let P of j)if(P.file){let{line:Q,character:H}=P.file.getLineAndCharacterOfPosition(P.start),C=Ea.flattenDiagnosticMessageText(P.messageText,`
`);console.log(`${P.file.fileName} (${Q+1},${H+1}): ${C}`)}else console.log(`${Ea.flattenDiagnosticMessageText(P.messageText,`
`)}`)}var t=(a=>(a.Afghanistan="AF",a.Albania="AL",a.Algeria="DZ",a.AmericanSamoa="AS",a.Andorra="AD",a.Angola="AO",a.Anguilla="AI",a.Antarctica="AQ",a.AntiguaAndBarbuda="AG",a.Argentina="AR",a.Armenia="AM",a.Aruba="AW",a.Australia="AU",a.Austria="AT",a.Azerbaijan="AZ",a.Bahamas="BS",a.Bahrain="BH",a.Bangladesh="BD",a.Barbados="BB",a.Belarus="BY",a.Belgium="BE",a.Belize="BZ",a.Benin="BJ",a.Bermuda="BM",a.Bhutan="BT",a.Bolivia="BO",a.BosniaAndHerzegovina="BA",a.Botswana="BW",a.BouvetIsland="BV",a.Brazil="BR",a.BritishIndianOceanTerritory="IO",a.Brunei="BN",a.Bulgaria="BG",a.BurkinaFaso="BF",a.Burundi="BI",a.Cambodia="KH",a.Cameroon="CM",a.Canada="CA",a.CapeVerde="CV",a.CaymanIslands="KY",a.CentralAfricanRepublic="CF",a.Chad="TD",a.Chile="CL",a.China="CN",a.ChristmasIsland="CX",a.CocosKeelingIslands="CC",a.Colombia="CO",a.Comoros="KM",a.Congo="CG",a.CongoTheDemocraticRepublicOfThe="CD",a.CookIslands="CK",a.CostaRica="CR",a.CoteDIvoire="CI",a.Croatia="HR",a.Cuba="CU",a.Cyprus="CY",a.CzechRepublic="CZ",a.Denmark="DK",a.Djibouti="DJ",a.Dominica="DM",a.DominicanRepublic="DO",a.Ecuador="EC",a.Egypt="EG",a.ElSalvador="SV",a.EquatorialGuinea="GQ",a.Eritrea="ER",a.Estonia="EE",a.Ethiopia="ET",a.FalklandIslands="FK",a.FaroeIslands="FO",a.Fiji="FJ",a.Finland="FI",a.France="FR",a.FrenchGuiana="GF",a.FrenchPolynesia="PF",a.FrenchSouthernTerritories="TF",a.Gabon="GA",a.Gambia="GM",a.Georgia="GE",a.Germany="DE",a.Ghana="GH",a.Gibraltar="GI",a.Greece="GR",a.Greenland="GL",a.Grenada="GD",a.Guadeloupe="GP",a.Guam="GU",a.Guatemala="GT",a.Guernsey="GG",a.Guinea="GN",a.GuineaBissau="GW",a.Guyana="GY",a.Haiti="HT",a.HeardIslandMcdonaldIslands="HM",a.HolySeeVaticanCityState="VA",a.Honduras="HN",a.HongKong="HK",a.Hungary="HU",a.Iceland="IS",a.India="IN",a.Indonesia="ID",a.Iran="IR",a.Iraq="IQ",a.Ireland="IE",a.IsleOfMan="IM",a.Israel="IL",a.Italy="IT",a.Jamaica="JM",a.Japan="JP",a.Jersey="JE",a.Jordan="JO",a.Kazakhstan="KZ",a.Kenya="KE",a.Kiribati="KI",a.Kuwait="KW",a.Kyrgyzstan="KG",a.Laos="LA",a.Latvia="LV",a.Lebanon="LB",a.Lesotho="LS",a.Liberia="LR",a.Libya="LY",a.Liechtenstein="LI",a.Lithuania="LT",a.Luxembourg="LU",a.Macau="MO",a.Madagascar="MG",a.Malawi="MW",a.Malaysia="MY",a.Maldives="MV",a.Mali="ML",a.Malta="MT",a.MarshallIslands="MH",a.Martinique="MQ",a.Mauritania="MR",a.Mauritius="MU",a.Mayotte="YT",a.Mexico="MX",a.MicronesiaFederatedStatesOf="FM",a.Moldova="MD",a.Monaco="MC",a.Mongolia="MN",a.Montenegro="ME",a.Montserrat="MS",a.Morocco="MA",a.Mozambique="MZ",a.Myanmar="MM",a.Namibia="NA",a.Nauru="NR",a.Nepal="NP",a.Netherlands="NL",a.NetherlandsAntilles="AN",a.NewCaledonia="NC",a.NewZealand="NZ",a.NorthKorea="KP",a.Nicaragua="NI",a.Niger="NE",a.Nigeria="NG",a.Niue="NU",a.NorfolkIsland="NF",a.NorthMacedonia="MK",a.NorthernMarianaIslands="MP",a.Norway="NO",a.Oman="OM",a.Pakistan="PK",a.Palau="PW",a.PalestinianTerritoryOccupied="PS",a.Panama="PA",a.PapuaNewGuinea="PG",a.Paraguay="PY",a.Peru="PE",a.Philippines="PH",a.Pitcairn="PN",a.Poland="PL",a.Portugal="PT",a.PuertoRico="PR",a.Qatar="QA",a.Reunion="RE",a.Romania="RO",a.RussianFederation="RU",a.Rwanda="RW",a.SaintBarthelemy="BL",a.SaintHelena="SH",a.SaintKittsAndNevis="KN",a.SaintLucia="LC",a.SaintMartin="MF",a.SaintPierreAndMiquelon="PM",a.SaintVincentAndTheGrenadines="VC",a.Samoa="WS",a.SanMarino="SM",a.SaoTomeAndPrincipe="ST",a.SaudiArabia="SA",a.Senegal="SN",a.Serbia="RS",a.SerbiaAndMontenegro="CS",a.Seychelles="SC",a.SierraLeone="SL",a.Singapore="SG",a.Slovakia="SK",a.Slovenia="SI",a.SolomonIslands="SB",a.Somalia="SO",a.SouthAfrica="ZA",a.SouthGeorgiaAndTheSouthSandwichIslands="GS",a.SouthKorea="KR",a.Spain="ES",a.SriLanka="LK",a.Sudan="SD",a.Suriname="SR",a.SvalbardAndJanMayen="SJ",a.Swaziland="SZ",a.Sweden="SE",a.Switzerland="CH",a.Syria="SY",a.Taiwan="TW",a.Tajikistan="TJ",a.Tanzania="TZ",a.Thailand="TH",a.TimorLeste="TL",a.Togo="TG",a.Tokelau="TK",a.Tonga="TO",a.TrinidadAndTobago="TT",a.Tunisia="TN",a.Turkey="TR",a.Turkmenistan="TM",a.TurksAndCaicosIslands="TC",a.Tuvalu="TV",a.Uganda="UG",a.Ukraine="UA",a.UnitedArabEmirates="AE",a.UnitedKingdom="GB",a.UnitedStates="US",a.UnitedStatesMinorOutlyingIslands="UM",a.Uruguay="UY",a.Uzbekistan="UZ",a.Vanuatu="VU",a.Venezuela="VE",a.Vietnam="VN",a.VirginIslandsBritish="VG",a.VirginIslandsUS="VI",a.WallisAndFutuna="WF",a.WesternSahara="EH",a.Yemen="YE",a.Zambia="ZM",a.Zimbabwe="ZW",a))(t||{}),Y=(a=>(a.AfghanistanAfghani="AFN",a.AlbaniaLek="ALL",a.ArmeniaDram="AMD",a.AlgeriaDinar="DZD",a.AmericanSamoaTala="WST",a.AngolaKwanza="AOA",a.ArgentinaPeso="ARS",a.AustraliaDollar="AUD",a.ArubaFlorin="AWG",a.AzerbaijanNewManat="AZN",a.BosniaAndHerzegovinaConvertibleMark="BAM",a.BahrainDinar="BHD",a.BarbadosDollar="BBD",a.BangladeshTaka="BDT",a.BelgiumFranc="BGN",a.BermudaDollar="BMD",a.BruneiDollar="BND",a.BoliviaBoliviano="BOB",a.BrazilReal="BRL",a.BahamasDollar="BSD",a.BhutanNgultrum="BTN",a.BotswanaPula="BWP",a.BelarusRuble="BYN",a.BelizeDollar="BZD",a.BulgariaLev="BGN",a.BurundiFranc="BIF",a.BritishPound="GBP",a.CanadaDollar="CAD",a.CambodiaRiel="KHR",a.ComorosFranc="KMF",a.CaymanIslandsDollar="KYD",a.ChilePeso="CLP",a.ChinaYuan="CNY",a.ColombiaPeso="COP",a.CostaRicaColon="CRC",a.CroatiaKuna="HRK",a.CubaConvertiblePeso="CUC",a.CubaPeso="CUP",a.CapeVerdeEscudo="CVE",a.CyprusPound="CYP",a.CzechRepublicKoruna="CZK",a.DjiboutiFranc="DJF",a.DenmarkKrone="DKK",a.DominicaDollar="XCD",a.DominicanRepublicPeso="DOP",a.EastCaribbeanDollar="XCD",a.EgyptPound="EGP",a.ElSalvadorColon="SVC",a.EquatorialGuineaEkwele="GQE",a.EritreaNakfa="ERN",a.EstoniaKroon="EEK",a.EthiopiaBirr="ETB",a.Euro="EUR",a.FijiDollar="FJD",a.FalklandIslandsPound="FKP",a.GambiaDalasi="GMD",a.GabonFranc="GMD",a.GeorgiaLari="GEL",a.GhanaCedi="GHS",a.GibraltarPound="GIP",a.GuatemalaQuetzal="GTQ",a.GuernseyPound="GGP",a.GuineaBissauPeso="GWP",a.GuyanaDollar="GYD",a.HongKongDollar="HKD",a.HondurasLempira="HNL",a.HaitiGourde="HTG",a.HungaryForint="HUF",a.IndonesiaRupiah="IDR",a.IsleOfManPound="IMP",a.IsraelNewShekel="ILS",a.IndiaRupee="INR",a.IraqDinar="IQD",a.IranRial="IRR",a.IcelandKrona="ISK",a.JamaicaDollar="JMD",a.JapanYen="JPY",a.JerseyPound="JEP",a.JordanDinar="JOD",a.KazakhstanTenge="KZT",a.KenyaShilling="KES",a.KyrgyzstanSom="KGS",a.NorthKoreaWon="KPW",a.SouthKoreaWon="KRW",a.KuwaitDinar="KWD",a.LaosKip="LAK",a.LebanonPound="LBP",a.LiberiaDollar="LRD",a.LesothoLoti="LSL",a.LibyanDinar="LYD",a.LithuaniaLitas="LTL",a.LatviaLats="LVL",a.LibyaDinar="LYD",a.MacauPataca="MOP",a.MaldivesRufiyaa="MVR",a.MalawiKwacha="MWK",a.MaltaLira="MTL",a.MauritiusRupee="MUR",a.MongoliaTughrik="MNT",a.MoroccoDirham="MAD",a.MoldovaLeu="MDL",a.MozambiqueMetical="MZN",a.MadagascarAriary="MGA",a.MacedoniaDenar="MKD",a.MexicoPeso="MXN",a.MalaysiaRinggit="MYR",a.MyanmarKyat="MMK",a.MicronesiaFederatedStatesDollar="USD",a.NicaraguaCordoba="NIO",a.NamibiaDollar="NAD",a.NetherlandsAntillesGuilder="ANG",a.NewCaledoniaFranc="XPF",a.NigeriaNaira="NGN",a.NicaraguaCordobaOro="NIO",a.NigerCFAFranc="XOF",a.NorwayKrone="NOK",a.NepalRupee="NPR",a.NewZealandDollar="NZD",a.OmanRial="OMR",a.PanamaBalboa="PAB",a.PeruNuevoSol="PEN",a.PapuaNewGuineaKina="PGK",a.PhilippinesPeso="PHP",a.PakistanRupee="PKR",a.PeruNuevo="PEN",a.PolandZloty="PLN",a.ParaguayGuarani="PYG",a.QatarRial="QAR",a.RomaniaNewLeu="RON",a.SerbiaDinar="RSD",a.SriLankaRupee="LKR",a.RussiaRuble="RUB",a.RwandaFranc="RWF",a.SaudiArabiaRiyal="SAR",a.SlovakiaKoruna="SKK",a.SloveniaTolar="SIT",a.SolomonIslandsDollar="SBD",a.SeychellesRupee="SCR",a.SudanPound="SDG",a.SwedenKrona="SEK",a.SingaporeDollar="SGD",a.SaintHelenaPound="SHP",a.SierraLeoneLeone="SLL",a.SomaliaShilling="SOS",a.SurinameDollar="SRD",a.SintMaartenPound="SXD",a.SyriaPound="SYP",a.SwazilandLilangeni="SZL",a.SwitzerlandFranc="CHF",a.ThailandBaht="THB",a.TajikistanSomoni="TJS",a.TurkmenistanManat="TMT",a.TunisiaDinar="TND",a.TongaPaanga="TOP",a.TurkeyLira="TRY",a.TrinidadAndTobagoDollar="TTD",a.TaiwanNewDollar="TWD",a.TanzaniaShilling="TZS",a.UnitedArabEmiratesDirham="AED",a.UkraineHryvnia="UAH",a.UgandaShilling="UGX",a.UnitedKingdomPound="GBP",a.UnitedStatesDollar="USD",a.UruguayPeso="UYU",a.UzbekistanSom="UZS",a.VenezuelaBolivar="VEF",a.VietnamDong="VND",a.VanuatuVatu="VUV",a.SamoaTala="WST",a.YemenRial="YER",a.SouthAfricaRand="ZAR",a.ZambiaKwacha="ZMW",a.ZimbabweDollar="ZWL",a))(Y||{}),Mt={AfghanistanAfghani:{code:"AFN",countries:[t.Afghanistan],decimal_digits:2,decimal_separator:".",name:"Afghan Afghani",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u060B",symbol_native:"\u060B",symbol_placement:"before",thousands_separator:","},AlbaniaLek:{code:"ALL",countries:[t.Albania],decimal_digits:2,decimal_separator:",",name:"Albanian Lek",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lek",symbol_native:"Lek",symbol_placement:"before",thousands_separator:"."},AlgeriaDinar:{code:"DZD",countries:[t.Algeria],decimal_digits:2,decimal_separator:".",name:"Algerian Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u062C",symbol_native:"\u062F.\u062C",symbol_placement:"before",thousands_separator:","},ArgentinaPeso:{code:"ARS",countries:[t.Argentina],decimal_digits:2,decimal_separator:".",name:"Argentine Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ArmeniaDram:{code:"AMD",countries:[t.Armenia],decimal_digits:2,decimal_separator:",",name:"Armenian Dram",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0564\u0580.",symbol_native:"\u0564\u0580.",symbol_placement:"before",thousands_separator:"."},ArubaFlorin:{code:"AWG",countries:[t.Aruba],decimal_digits:2,decimal_separator:".",name:"Aruban Florin",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0192",symbol_native:"\u0192",symbol_placement:"before",thousands_separator:","},AustraliaDollar:{code:"AUD",countries:[t.Australia],decimal_digits:2,decimal_separator:".",name:"Australian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},AzerbaijanManat:{code:"AZN",countries:[t.Azerbaijan],decimal_digits:2,decimal_separator:".",name:"Azerbaijani Manat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u043C\u0430\u043D",symbol_native:"\u043C\u0430\u043D",symbol_placement:"before",thousands_separator:","},BahrainDinar:{code:"BHD",countries:[t.Bahrain],decimal_digits:3,decimal_separator:".",name:"Bahraini Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:".\u062F.\u0628",symbol_native:".\u062F.\u0628",symbol_placement:"before",thousands_separator:","},BangladeshTaka:{code:"BDT",countries:[t.Bangladesh],decimal_digits:2,decimal_separator:".",name:"Bangladeshi Taka",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u09F3",symbol_native:"\u09F3",symbol_placement:"before",thousands_separator:","},BarbadosDollar:{code:"BBD",countries:[t.Barbados],decimal_digits:2,decimal_separator:".",name:"Barbadian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BelarusRuble:{code:"BYN",countries:[t.Belarus],decimal_digits:2,decimal_separator:".",name:"Belarusian Ruble",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Br",symbol_native:"Br",symbol_placement:"before",thousands_separator:"."},BelizeDollar:{code:"BZD",countries:[t.Belize],decimal_digits:2,decimal_separator:".",name:"Belize Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"BZ$",symbol_native:"BZ$",symbol_placement:"before",thousands_separator:","},BermudaDollar:{code:"BMD",countries:[t.Bermuda],decimal_digits:2,decimal_separator:".",name:"Bermudian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BoliviaBoliviano:{code:"BOB",countries:[t.Bolivia],decimal_digits:2,decimal_separator:".",name:"Bolivian Boliviano",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$b",symbol_native:"$b",symbol_placement:"before",thousands_separator:","},BosniaAndHerzegovinaConvertibleMarka:{code:"BAM",countries:[t.BosniaAndHerzegovina],decimal_digits:2,decimal_separator:",",name:"Bosnia and Herzegovina Convertible Marka",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KM",symbol_native:"KM",symbol_placement:"before",thousands_separator:"."},BotswanaPula:{code:"BWP",countries:[t.Botswana],decimal_digits:2,decimal_separator:".",name:"Botswana Pula",negative_sign:"-",positive_sign:"",rounding:0,symbol:"P",symbol_native:"P",symbol_placement:"before",thousands_separator:","},BrazilReal:{code:"BRL",countries:[t.Brazil],decimal_digits:2,decimal_separator:",",name:"Brazilian Real",negative_sign:"-",positive_sign:"",rounding:0,symbol:"R$",symbol_native:"R$",symbol_placement:"before",thousands_separator:"."},BruneiDollar:{code:"BND",countries:[t.Brunei],decimal_digits:2,decimal_separator:".",name:"Brunei Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BulgariaLev:{code:"BGN",countries:[t.Bulgaria],decimal_digits:2,decimal_separator:".",name:"Bulgarian Lev",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u043B\u0432",symbol_native:"\u043B\u0432",symbol_placement:"before",thousands_separator:"."},BurundiFranc:{code:"BIF",countries:[t.Burundi],decimal_digits:0,decimal_separator:".",name:"Burundian Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"FBu",symbol_native:"FBu",symbol_placement:"before",thousands_separator:","},CambodiaRiel:{code:"KHR",countries:[t.Cambodia],decimal_digits:2,decimal_separator:",",name:"Cambodian Riel",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u17DB",symbol_native:"\u17DB",symbol_placement:"before",thousands_separator:"."},CanadaDollar:{code:"CAD",countries:[t.Canada],decimal_digits:2,decimal_separator:".",name:"Canadian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},CapeVerdeEscudo:{code:"CVE",countries:[t.CapeVerde],decimal_digits:2,decimal_separator:".",name:"Cape Verde Escudo",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Esc",symbol_native:"Esc",symbol_placement:"before",thousands_separator:","},CaymanIslandsDollar:{code:"KYD",countries:[t.CaymanIslands],decimal_digits:2,decimal_separator:".",name:"Cayman Islands Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ChilePeso:{code:"CLP",countries:[t.Chile],decimal_digits:0,decimal_separator:".",name:"Chilean Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ChinaYuanRenminbi:{code:"CNY",countries:[t.China],decimal_digits:2,decimal_separator:".",name:"Chinese Yuan",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA5",symbol_native:"\xA5",symbol_placement:"before",thousands_separator:","},ColombiaPeso:{code:"COP",countries:[t.Colombia],decimal_digits:2,decimal_separator:".",name:"Colombian Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ComorosFranc:{code:"KMF",countries:[t.Comoros],decimal_digits:0,decimal_separator:".",name:"Comoros Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CF",symbol_native:"CF",symbol_placement:"before",thousands_separator:","},CostaRicaColon:{code:"CRC",countries:[t.CostaRica],decimal_digits:2,decimal_separator:".",name:"Costa Rican Colon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A1",symbol_native:"\u20A1",symbol_placement:"before",thousands_separator:","},CroatiaKuna:{code:"HRK",countries:[t.Croatia],decimal_digits:2,decimal_separator:",",name:"Croatian Kuna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kn",symbol_native:"kn",symbol_placement:"before",thousands_separator:"."},CubaConvertiblePeso:{code:"CUC",countries:[t.Cuba],decimal_digits:2,decimal_separator:",",name:"Cuba Convertible Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},CubaPeso:{code:"CUP",countries:[t.Cuba],decimal_digits:2,decimal_separator:",",name:"Cuba Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},CyprusPound:{code:"CYP",countries:[t.Cyprus],decimal_digits:2,decimal_separator:",",name:"Cyprus Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},CzechRepublicKoruna:{code:"CZK",countries:[t.CzechRepublic],decimal_digits:2,decimal_separator:",",name:"Czech Republic Koruna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"K\u010D",symbol_native:"K\u010D",symbol_placement:"before",thousands_separator:"."},DenmarkKrone:{code:"DKK",countries:[t.Denmark],decimal_digits:2,decimal_separator:",",name:"Denmark Krone",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},DjiboutiFranc:{code:"DJF",countries:[t.Djibouti],decimal_digits:0,decimal_separator:".",name:"Djibouti Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Fdj",symbol_native:"Fdj",symbol_placement:"before",thousands_separator:","},DominicanRepublicPeso:{code:"DOP",countries:[t.DominicanRepublic],decimal_digits:2,decimal_separator:",",name:"Dominican Republic Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RD$",symbol_native:"RD$",symbol_placement:"before",thousands_separator:"."},EastCaribbeanDollar:{code:"XCD",countries:[t.AntiguaAndBarbuda,t.Dominica,t.Grenada,t.SaintKittsAndNevis,t.SaintLucia,t.SaintVincentAndTheGrenadines],decimal_digits:2,decimal_separator:".",name:"East Caribbean Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},EgyptPound:{code:"EGP",countries:[t.Egypt],decimal_digits:2,decimal_separator:".",name:"Egypt Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:","},ElSalvadorColon:{code:"SVC",countries:[t.ElSalvador],decimal_digits:2,decimal_separator:",",name:"El Salvador Colon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A1",symbol_native:"\u20A1",symbol_placement:"before",thousands_separator:"."},EquatorialGuineaEkwele:{code:"GQE",countries:[t.EquatorialGuinea],decimal_digits:0,decimal_separator:".",name:"Equatorial Guinea Ekwele",negative_sign:"-",positive_sign:"",rounding:0,symbol:"GQE",symbol_native:"GQE",symbol_placement:"before",thousands_separator:","},EritreaNakfa:{code:"ERN",countries:[t.Eritrea],decimal_digits:2,decimal_separator:",",name:"Eritrea Nakfa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Nfk",symbol_native:"Nfk",symbol_placement:"before",thousands_separator:"."},EstoniaKroon:{code:"EEK",countries:[t.Estonia],decimal_digits:2,decimal_separator:",",name:"Estonia Kroon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},EthiopiaBirr:{code:"ETB",countries:[t.Ethiopia],decimal_digits:2,decimal_separator:",",name:"Ethiopia Birr",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Br",symbol_native:"Br",symbol_placement:"before",thousands_separator:"."},Euro:{code:"EUR",countries:[t.Andorra,t.Austria,t.Belgium,t.Cyprus,t.Estonia,t.Finland,t.France,t.Germany,t.Greece,t.Ireland,t.Italy,t.Latvia,t.Lithuania,t.Luxembourg,t.Malta,t.Monaco,t.Netherlands,t.Portugal,t.Spain,t.Sweden,t.UnitedKingdom],decimal_digits:2,decimal_separator:",",name:"Euro",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AC",symbol_native:"\u20AC",symbol_placement:"before",thousands_separator:"."},FalklandIslandsPound:{code:"FKP",countries:[t.FalklandIslands],decimal_digits:2,decimal_separator:",",name:"Equatorial Guinea Ekwele",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},FijiDollar:{code:"FJD",countries:[t.Fiji],decimal_digits:2,decimal_separator:",",name:"Fiji Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},GambiaDalasi:{code:"GMD",countries:[t.Gambia],decimal_digits:2,decimal_separator:",",name:"Gambia Dalasi",negative_sign:"-",positive_sign:"",rounding:0,symbol:"D",symbol_native:"D",symbol_placement:"before",thousands_separator:"."},GeorgiaLari:{code:"GEL",countries:[t.Georgia],decimal_digits:2,decimal_separator:",",name:"Georgia Lari",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BE",symbol_native:"\u20BE",symbol_placement:"before",thousands_separator:"."},GhanaCedi:{code:"GHS",countries:[t.Ghana],decimal_digits:2,decimal_separator:",",name:"Ghana Cedi",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B5",symbol_native:"\u20B5",symbol_placement:"before",thousands_separator:"."},GibraltarPound:{code:"GIP",countries:[t.Gibraltar],decimal_digits:2,decimal_separator:",",name:"Gibraltar Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},GuatemalaQuetzal:{code:"GTQ",countries:[t.Guatemala],decimal_digits:2,decimal_separator:",",name:"Guatemala Quetzal",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Q",symbol_native:"Q",symbol_placement:"before",thousands_separator:"."},GuernseyPound:{code:"GGP",countries:[t.Guernsey],decimal_digits:2,decimal_separator:",",name:"Guernsey Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},GuineaBissauPeso:{code:"GWP",countries:[t.GuineaBissau],decimal_digits:2,decimal_separator:",",name:"Guinea-Bissau Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B5",symbol_native:"\u20B5",symbol_placement:"before",thousands_separator:"."},GuyanaDollar:{code:"GYD",countries:[t.Guyana],decimal_digits:2,decimal_separator:",",name:"Guyana Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},HaitiGourde:{code:"HTG",countries:[t.Haiti],decimal_digits:2,decimal_separator:",",name:"Haiti Gourde",negative_sign:"-",positive_sign:"",rounding:0,symbol:"G",symbol_native:"G",symbol_placement:"before",thousands_separator:"."},HondurasLempira:{code:"HNL",countries:[t.Honduras],decimal_digits:2,decimal_separator:",",name:"Honduras Lempira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"L",symbol_native:"L",symbol_placement:"before",thousands_separator:"."},HongKongDollar:{code:"HKD",countries:[t.HongKong],decimal_digits:2,decimal_separator:",",name:"Hong Kong Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},HungaryForint:{code:"HUF",countries:[t.Hungary],decimal_digits:2,decimal_separator:",",name:"Hungary Forint",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ft",symbol_native:"Ft",symbol_placement:"before",thousands_separator:"."},IcelandKrona:{code:"ISK",countries:[t.Iceland],decimal_digits:0,decimal_separator:",",name:"Iceland Krona",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},IndianRupee:{code:"INR",countries:[t.India,t.Bhutan],decimal_digits:2,decimal_separator:",",name:"Indian Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B9",symbol_native:"\u20B9",symbol_placement:"before",thousands_separator:"."},IndonesiaRupiah:{code:"IDR",countries:[t.Indonesia],decimal_digits:0,decimal_separator:",",name:"Indonesia Rupiah",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Rp",symbol_native:"Rp",symbol_placement:"before",thousands_separator:"."},IranRial:{code:"IRR",countries:[t.Iran],decimal_digits:0,decimal_separator:",",name:"Iran Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},IsleOfManPound:{code:"IMP",countries:[t.IsleOfMan],decimal_digits:2,decimal_separator:",",name:"Isle of Man Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},IsraeliShekel:{code:"ILS",countries:[t.Israel],decimal_digits:2,decimal_separator:",",name:"Israeli Shekel",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AA",symbol_native:"\u20AA",symbol_placement:"before",thousands_separator:"."},JamaicaDollar:{code:"JMD",countries:[t.Jamaica],decimal_digits:2,decimal_separator:",",name:"Jamaica Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"J$",symbol_native:"J$",symbol_placement:"before",thousands_separator:"."},JapanYen:{code:"JPY",countries:[t.Japan],decimal_digits:0,decimal_separator:",",name:"Japan Yen",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA5",symbol_native:"\uFFE5",symbol_placement:"before",thousands_separator:"."},JerseyPound:{code:"JEP",countries:[t.Jersey],decimal_digits:2,decimal_separator:",",name:"Jersey Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},JordanDinar:{code:"JOD",countries:[t.Jordan],decimal_digits:3,decimal_separator:",",name:"Jordan Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"JD",symbol_native:"JD",symbol_placement:"before",thousands_separator:"."},KazakhstanTenge:{code:"KZT",countries:[t.Kazakhstan],decimal_digits:2,decimal_separator:",",name:"Kazakhstan Tenge",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B8",symbol_native:"\u20B8",symbol_placement:"before",thousands_separator:"."},KenyaShilling:{code:"KES",countries:[t.Kenya],decimal_digits:2,decimal_separator:",",name:"Kenya Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KSh",symbol_native:"KSh",symbol_placement:"before",thousands_separator:"."},KuwaitDinar:{code:"KWD",countries:[t.Kuwait],decimal_digits:3,decimal_separator:",",name:"Kuwait Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KD",symbol_native:"KD",symbol_placement:"before",thousands_separator:"."},KyrgyzstanSom:{code:"KGS",countries:[t.Kyrgyzstan],decimal_digits:2,decimal_separator:",",name:"Kyrgyzstan Som",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KGS",symbol_native:"KGS",symbol_placement:"before",thousands_separator:"."},LaosKip:{code:"LAK",countries:[t.Laos],decimal_digits:0,decimal_separator:",",name:"Laos Kip",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AD",symbol_native:"\u20AD",symbol_placement:"before",thousands_separator:"."},LatviaLats:{code:"LVL",countries:[t.Latvia],decimal_digits:2,decimal_separator:",",name:"Latvia Lat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ls",symbol_native:"Ls",symbol_placement:"before",thousands_separator:"."},LebanonPound:{code:"LBP",countries:[t.Lebanon],decimal_digits:0,decimal_separator:",",name:"Lebanon Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},LesothoLoti:{code:"LSL",countries:[t.Lesotho],decimal_digits:2,decimal_separator:",",name:"Lesotho Loti",negative_sign:"-",positive_sign:"",rounding:0,symbol:"M",symbol_native:"M",symbol_placement:"before",thousands_separator:"."},LiberiaDollar:{code:"LRD",countries:[t.Liberia],decimal_digits:2,decimal_separator:",",name:"Liberia Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},LibyanDinar:{code:"LYD",countries:[t.Libya],decimal_digits:3,decimal_separator:",",name:"Libyan Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"LD",symbol_native:"LD",symbol_placement:"before",thousands_separator:"."},LithuaniaLitas:{code:"LTL",countries:[t.Lithuania],decimal_digits:2,decimal_separator:",",name:"Lithuania Litas",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lt",symbol_native:"Lt",symbol_placement:"before",thousands_separator:"."},MacauPataca:{code:"MOP",countries:[t.Macau],decimal_digits:2,decimal_separator:",",name:"Macau Pataca",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MOP$",symbol_native:"MOP$",symbol_placement:"before",thousands_separator:"."},MacedoniaDenar:{code:"MKD",countries:[t.NorthMacedonia],decimal_digits:2,decimal_separator:",",name:"Macedonia Denar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0434\u0435\u043D",symbol_native:"\u0434\u0435\u043D",symbol_placement:"before",thousands_separator:"."},MadagascarAriary:{code:"MGA",countries:[t.Madagascar],decimal_digits:0,decimal_separator:",",name:"Madagascar Ariary",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ar",symbol_native:"Ar",symbol_placement:"before",thousands_separator:"."},MalawiKwacha:{code:"MWK",countries:[t.Malawi],decimal_digits:2,decimal_separator:",",name:"Malawi Kwacha",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MK",symbol_native:"MK",symbol_placement:"before",thousands_separator:"."},MalaysiaRinggit:{code:"MYR",countries:[t.Malaysia],decimal_digits:2,decimal_separator:",",name:"Malaysia Ringgit",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RM",symbol_native:"RM",symbol_placement:"before",thousands_separator:"."},MaldivesRufiyaa:{code:"MVR",countries:[t.Maldives],decimal_digits:2,decimal_separator:",",name:"Maldives Rufiyaa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Rf",symbol_native:"Rf",symbol_placement:"before",thousands_separator:"."},MaltaLira:{code:"MTL",countries:[t.Malta],decimal_digits:2,decimal_separator:",",name:"Malta Lira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lm",symbol_native:"Lm",symbol_placement:"before",thousands_separator:"."},MauritiusRupee:{code:"MUR",countries:[t.Mauritius],decimal_digits:2,decimal_separator:",",name:"Mauritius Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},MexicoPeso:{code:"MXN",countries:[t.Mexico],decimal_digits:2,decimal_separator:",",name:"Mexico Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},MoldovaLeu:{code:"MDL",countries:[t.Moldova],decimal_digits:2,decimal_separator:",",name:"Moldova Leu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"L",symbol_native:"L",symbol_placement:"before",thousands_separator:"."},MongoliaTughrik:{code:"MNT",countries:[t.Mongolia],decimal_digits:2,decimal_separator:",",name:"Mongolia Tughrik",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AE",symbol_native:"\u20AE",symbol_placement:"before",thousands_separator:"."},MoroccoDirham:{code:"MAD",countries:[t.Morocco],decimal_digits:2,decimal_separator:",",name:"Morocco Dirham",negative_sign:"-",positive_sign:"",rounding:0,symbol:"DH",symbol_native:"DH",symbol_placement:"before",thousands_separator:"."},MozambiqueMetical:{code:"MZN",countries:[t.Mozambique],decimal_digits:2,decimal_separator:",",name:"Mozambique Metical",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MT",symbol_native:"MT",symbol_placement:"before",thousands_separator:"."},MyanmarKyat:{code:"MMK",countries:[t.Myanmar],decimal_digits:0,decimal_separator:",",name:"Myanmar Kyat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"K",symbol_native:"K",symbol_placement:"before",thousands_separator:"."},NamibiaDollar:{code:"NAD",countries:[t.Namibia],decimal_digits:2,decimal_separator:",",name:"Namibia Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},NepalRupee:{code:"NPR",countries:[t.Nepal],decimal_digits:2,decimal_separator:",",name:"Nepal Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},NetherlandsAntillesGuilder:{code:"ANG",countries:[t.NetherlandsAntilles],decimal_digits:2,decimal_separator:",",name:"Netherlands Antilles Guilder",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0192",symbol_native:"\u0192",symbol_placement:"before",thousands_separator:"."},NewCaledoniaFranc:{code:"XPF",countries:[t.NewCaledonia],decimal_digits:0,decimal_separator:",",name:"New Caledonia Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A3",symbol_native:"\u20A3",symbol_placement:"before",thousands_separator:"."},NewZealandDollar:{code:"NZD",countries:[t.NewZealand],decimal_digits:2,decimal_separator:",",name:"New Zealand Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},NicaraguaCordoba:{code:"NIO",countries:[t.Nicaragua],decimal_digits:2,decimal_separator:",",name:"Nicaragua Cordoba",negative_sign:"-",positive_sign:"",rounding:0,symbol:"C$",symbol_native:"C$",symbol_placement:"before",thousands_separator:"."},NigerCFAFranc:{code:"XOF",countries:[t.Niger],decimal_digits:0,decimal_separator:",",name:"Niger CFA Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CFA",symbol_native:"CFA",symbol_placement:"before",thousands_separator:"."},NigeriaNaira:{code:"NGN",countries:[t.Nigeria],decimal_digits:2,decimal_separator:",",name:"Nigeria Naira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A6",symbol_native:"\u20A6",symbol_placement:"before",thousands_separator:"."},NorthKoreaWon:{code:"KPW",countries:[t.NorthKorea],decimal_digits:0,decimal_separator:",",name:"North Korea Won",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A9",symbol_native:"\u20A9",symbol_placement:"before",thousands_separator:"."},NorwayKrone:{code:"NOK",countries:[t.Norway],decimal_digits:2,decimal_separator:",",name:"Norway Krone",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},OmanRial:{code:"OMR",countries:[t.Oman],decimal_digits:3,decimal_separator:",",name:"Oman Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},PakistanRupee:{code:"PKR",countries:[t.Pakistan],decimal_digits:2,decimal_separator:",",name:"Pakistan Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},PanamaBalboa:{code:"PAB",countries:[t.Panama],decimal_digits:2,decimal_separator:",",name:"Panama Balboa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"B/.",symbol_native:"B/.",symbol_placement:"before",thousands_separator:"."},ParaguayGuarani:{code:"PYG",countries:[t.Paraguay],decimal_digits:0,decimal_separator:",",name:"Paraguay Guarani",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Gs",symbol_native:"Gs",symbol_placement:"before",thousands_separator:"."},PeruvianNuevo:{code:"PEN",countries:[t.Peru],decimal_digits:2,decimal_separator:",",name:"Peruvian Nuevo",negative_sign:"-",positive_sign:"",rounding:0,symbol:"S/.",symbol_native:"S/.",symbol_placement:"before",thousands_separator:"."},PhilippinesPeso:{code:"PHP",countries:[t.Philippines],decimal_digits:2,decimal_separator:",",name:"Philippines Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B1",symbol_native:"\u20B1",symbol_placement:"before",thousands_separator:"."},PolandZloty:{code:"PLN",countries:[t.Poland],decimal_digits:2,decimal_separator:",",name:"Poland Zloty",negative_sign:"-",positive_sign:"",rounding:0,symbol:"z\u0142",symbol_native:"z\u0142",symbol_placement:"before",thousands_separator:"."},QatarRial:{code:"QAR",countries:[t.Qatar],decimal_digits:2,decimal_separator:",",name:"Qatar Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},RomaniaNewLeu:{code:"RON",countries:[t.Romania],decimal_digits:2,decimal_separator:",",name:"Romania New Leu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"lei",symbol_native:"lei",symbol_placement:"before",thousands_separator:"."},RussiaRuble:{code:"RUB",countries:[t.RussianFederation],decimal_digits:2,decimal_separator:",",name:"Russia Ruble",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BD",symbol_native:"\u20BD",symbol_placement:"before",thousands_separator:"."},RwandaFranc:{code:"RWF",countries:[t.Rwanda],decimal_digits:0,decimal_separator:",",name:"Rwanda Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RF",symbol_native:"RF",symbol_placement:"before",thousands_separator:"."},SaudiArabiaRiyal:{code:"SAR",countries:[t.SaudiArabia],decimal_digits:2,decimal_separator:",",name:"Saudi Arabia Riyal",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},SerbiaDinar:{code:"RSD",countries:[t.Serbia],decimal_digits:0,decimal_separator:",",name:"Serbia Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0414\u0438\u043D.",symbol_native:"\u0414\u0438\u043D.",symbol_placement:"before",thousands_separator:"."},SeychellesRupee:{code:"SCR",countries:[t.Seychelles],decimal_digits:2,decimal_separator:",",name:"Seychelles Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},SingaporeDollar:{code:"SGD",countries:[t.Singapore],decimal_digits:2,decimal_separator:",",name:"Singapore Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SlovakiaKoruna:{code:"SKK",countries:[t.Slovakia],decimal_digits:2,decimal_separator:",",name:"Slovakia Koruna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Sk",symbol_native:"Sk",symbol_placement:"before",thousands_separator:"."},SloveniaTolar:{code:"SIT",countries:[t.Slovenia],decimal_digits:2,decimal_separator:",",name:"Slovenia Tolar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"SIT",symbol_native:"SIT",symbol_placement:"before",thousands_separator:"."},SolomonIslandsDollar:{code:"SBD",countries:[t.SolomonIslands],decimal_digits:2,decimal_separator:",",name:"Solomon Islands Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SomaliaShilling:{code:"SOS",countries:[t.Somalia],decimal_digits:0,decimal_separator:",",name:"Somalia Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"S",symbol_native:"S",symbol_placement:"before",thousands_separator:"."},SouthAfricaRand:{code:"ZAR",countries:[t.SouthAfrica],decimal_digits:2,decimal_separator:",",name:"South Africa Rand",negative_sign:"-",positive_sign:"",rounding:0,symbol:"R",symbol_native:"R",symbol_placement:"before",thousands_separator:"."},SouthKoreaWon:{code:"KRW",countries:[t.SouthKorea],decimal_digits:0,decimal_separator:",",name:"South Korea Won",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A9",symbol_native:"\u20A9",symbol_placement:"before",thousands_separator:"."},SriLankaRupee:{code:"LKR",countries:[t.SriLanka],decimal_digits:2,decimal_separator:",",name:"Sri Lanka Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},SudanPound:{code:"SDG",countries:[t.Sudan],decimal_digits:2,decimal_separator:",",name:"Sudan Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},SurinameDollar:{code:"SRD",countries:[t.Suriname],decimal_digits:2,decimal_separator:",",name:"Suriname Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SwazilandLilangeni:{code:"SZL",countries:[t.Swaziland],decimal_digits:2,decimal_separator:",",name:"Swaziland Lilangeni",negative_sign:"-",positive_sign:"",rounding:0,symbol:"E",symbol_native:"E",symbol_placement:"before",thousands_separator:"."},SwedenKrona:{code:"SEK",countries:[t.Sweden],decimal_digits:2,decimal_separator:",",name:"Sweden Krona",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},SwitzerlandFranc:{code:"CHF",countries:[t.Switzerland],decimal_digits:2,decimal_separator:",",name:"Switzerland Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CHF",symbol_native:"CHF",symbol_placement:"before",thousands_separator:"."},SyriaPound:{code:"SYP",countries:[t.Syria],decimal_digits:2,decimal_separator:",",name:"Syria Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},TaiwanNewDollar:{code:"TWD",countries:[t.Taiwan],decimal_digits:2,decimal_separator:",",name:"Taiwan New Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"NT$",symbol_native:"NT$",symbol_placement:"before",thousands_separator:"."},TajikistanSomoni:{code:"TJS",countries:[t.Tajikistan],decimal_digits:2,decimal_separator:",",name:"Tajikistan Somoni",negative_sign:"-",positive_sign:"",rounding:0,symbol:"TJS",symbol_native:"TJS",symbol_placement:"before",thousands_separator:"."},TanzaniaShilling:{code:"TZS",countries:[t.Tanzania],decimal_digits:2,decimal_separator:",",name:"Tanzania Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"TSh",symbol_native:"TSh",symbol_placement:"before",thousands_separator:"."},ThailandBaht:{code:"THB",countries:[t.Thailand],decimal_digits:2,decimal_separator:",",name:"Thailand Baht",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0E3F",symbol_native:"\u0E3F",symbol_placement:"before",thousands_separator:"."},TunisiaDinar:{code:"TND",countries:[t.Tunisia],decimal_digits:3,decimal_separator:",",name:"Tunisia Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u062A",symbol_native:"\u062F.\u062A",symbol_placement:"before",thousands_separator:"."},TurkeyLira:{code:"TRY",countries:[t.Turkey],decimal_digits:2,decimal_separator:",",name:"Turkey Lira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BA",symbol_native:"\u20BA",symbol_placement:"before",thousands_separator:"."},TurkmenistanManat:{code:"TMT",countries:[t.Turkmenistan],decimal_digits:2,decimal_separator:",",name:"Turkmenistan Manat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"m",symbol_native:"m",symbol_placement:"before",thousands_separator:"."},UgandaShilling:{code:"UGX",countries:[t.Uganda],decimal_digits:0,decimal_separator:",",name:"Uganda Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"USh",symbol_native:"USh",symbol_placement:"before",thousands_separator:"."},UkraineHryvnia:{code:"UAH",countries:[t.Ukraine],decimal_digits:2,decimal_separator:",",name:"Ukraine Hryvnia",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B4",symbol_native:"\u20B4",symbol_placement:"before",thousands_separator:"."},UnitedArabEmiratesDirham:{code:"AED",countries:[t.UnitedArabEmirates],decimal_digits:2,decimal_separator:",",name:"United Arab Emirates Dirham",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u0625",symbol_native:"\u062F.\u0625",symbol_placement:"before",thousands_separator:"."},UnitedKingdomPound:{code:"GBP",countries:[t.UnitedKingdom],decimal_digits:2,decimal_separator:",",name:"United Kingdom Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},UnitedStatesDollar:{code:"USD",countries:[t.UnitedStates],decimal_digits:2,decimal_separator:",",name:"United States Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},UruguayPeso:{code:"UYU",countries:[t.Uruguay],decimal_digits:2,decimal_separator:",",name:"Uruguay Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$U",symbol_native:"$U",symbol_placement:"before",thousands_separator:"."},UzbekistanSom:{code:"UZS",countries:[t.Uzbekistan],decimal_digits:2,decimal_separator:",",name:"Uzbekistan Som",negative_sign:"-",positive_sign:"",rounding:0,symbol:"UZS",symbol_native:"UZS",symbol_placement:"before",thousands_separator:"."},VanuatuVatu:{code:"VUV",countries:[t.Vanuatu],decimal_digits:0,decimal_separator:",",name:"Vanuatu Vatu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"VT",symbol_native:"VT",symbol_placement:"before",thousands_separator:"."},VenezuelaBolivar:{code:"VEF",countries:[t.Venezuela],decimal_digits:2,decimal_separator:",",name:"Venezuela Bolivar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Bs. F",symbol_native:"Bs. F",symbol_placement:"before",thousands_separator:"."},VietnamDong:{code:"VND",countries:[t.Vietnam],decimal_digits:0,decimal_separator:",",name:"Vietnam Dong",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AB",symbol_native:"\u20AB",symbol_placement:"before",thousands_separator:"."},YemenRial:{code:"YER",countries:[t.Yemen],decimal_digits:2,decimal_separator:",",name:"Yemen Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},ZambiaKwacha:{code:"ZMW",countries:[t.Zambia],decimal_digits:2,decimal_separator:",",name:"Zambia Kwacha",negative_sign:"-",positive_sign:"",rounding:0,symbol:"ZK",symbol_native:"ZK",symbol_placement:"before",thousands_separator:"."},ZimbabweDollar:{code:"ZWL",countries:[t.Zimbabwe],decimal_digits:2,decimal_separator:",",name:"Zimbabwe Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AB",symbol_native:"\u20AB",symbol_placement:"before",thousands_separator:"."}};var l=(a=>(a.Afrikaans="af",a.Albanian="sq",a.Amharic="am",a.Arabic="ar",a.Armenian="hy",a.Azerbaijani="az",a.Bashkir="ba",a.Basque="eu",a.Belarusian="be",a.Bengali="bn",a.Berber="ber",a.Bhutani="dz",a.Bihari="bh",a.Bislama="bi",a.Bosnian="bs",a.Breten="br",a.Bulgarian="bg",a.Burmese="my",a.Cantonese="yue",a.Catalan="ca",a.Chinese="zh",a.Chuvash="cv",a.Corsican="co",a.Croatian="hr",a.Czech="cs",a.Danish="da",a.Dari="prs",a.Divehi="dv",a.Dutch="nl",a.English="en",a.Esperanto="eo",a.Estonian="et",a.Faroese="fo",a.Farsi="fa",a.Filipino="fil",a.Finnish="fi",a.French="fr",a.Frisian="fy",a.Galician="gl",a.Georgian="ka",a.German="de",a.Greek="el",a.Greenlandic="kl",a.Gujarati="gu",a.Haitian="ht",a.Hausa="ha",a.Hebrew="he",a.Hindi="hi",a.Hungarian="hu",a.Icelandic="is",a.Igbo="ig",a.Indonesian="id",a.Irish="ga",a.Italian="it",a.Japanese="ja",a.Javanese="jv",a.Kannada="kn",a.Karelian="krl",a.Kazakh="kk",a.Khmer="km",a.Komi="kv",a.Konkani="kok",a.Korean="ko",a.Kurdish="ku",a.Kyrgyz="ky",a.Lao="lo",a.Latin="la",a.Latvian="lv",a.Lithuanian="lt",a.Luxembourgish="lb",a.Ossetian="os",a.Macedonian="mk",a.Malagasy="mg",a.Malay="ms",a.Malayalam="ml",a.Maltese="mt",a.Maori="mi",a.Marathi="mr",a.Mari="mhr",a.Mongolian="mn",a.Montenegrin="me",a.Nepali="ne",a.NorthernSotho="nso",a.Norwegian="no",a.NorwegianBokmal="nb",a.NorwegianNynorsk="nn",a.Oriya="or",a.Pashto="ps",a.Persian="fa",a.Polish="pl",a.Portuguese="pt",a.Punjabi="pa",a.Quechua="qu",a.Romanian="ro",a.Russian="ru",a.Sakha="sah",a.Sami="se",a.Samoan="sm",a.Sanskrit="sa",a.Scots="gd",a.Serbian="sr",a.SerbianCyrillic="sr-Cyrl",a.Sesotho="st",a.Shona="sn",a.Sindhi="sd",a.Sinhala="si",a.Slovak="sk",a.Slovenian="sl",a.Somali="so",a.Spanish="es",a.Sudanese="su",a.Sutu="sx",a.Swahili="sw",a.Swedish="sv",a.Syriac="syr",a.Tagalog="tl",a.Tajik="tg",a.Tamazight="tmh",a.Tamil="ta",a.Tatar="tt",a.Telugu="te",a.Thai="th",a.Tibetan="bo",a.Tsonga="ts",a.Tswana="tn",a.Turkish="tr",a.Turkmen="tk",a.Ukrainian="uk",a.Urdu="ur",a.Uzbek="uz",a.Vietnamese="vi",a.Welsh="cy",a.Xhosa="xh",a.Yiddish="yi",a.Yoruba="yo",a.Zulu="zu",a))(l||{}),e=(a=>(a.Afrikaans="af",a.AfrikaansSouthAfrica="af-ZA",a.Albanian="sq",a.AlbanianAlbania="sq-AL",a.Amharic="am",a.AmharicEthiopia="am-ET",a.Arabic="ar",a.ArabicAlgeria="ar-DZ",a.ArabicBahrain="ar-BH",a.ArabicEgypt="ar-EG",a.ArabicIraq="ar-IQ",a.ArabicJordan="ar-JO",a.ArabicKuwait="ar-KW",a.ArabicLebanon="ar-LB",a.ArabicLibya="ar-LY",a.ArabicMorocco="ar-MA",a.ArabicOman="ar-OM",a.ArabicQatar="ar-QA",a.ArabicSaudiArabia="ar-SA",a.ArabicSyria="ar-SY",a.ArabicTunisia="ar-TN",a.ArabicUnitedArabEmirates="ar-AE",a.ArabicYemen="ar-YE",a.Armenian="hy",a.ArmenianArmenia="hy-AM",a.Azerbaijani="az",a.AzerbaijaniAzerbaijan="az-AZ",a.AzerbaijaniCyrillicAzerbaijan="az-Cyrl-AZ",a.Bashkir="ba",a.Basque="eu",a.BasqueSpain="eu-ES",a.Belarusian="be",a.BelarusianBelarus="be-BY",a.Bengali="bn",a.BengaliBangladesh="bn-BD",a.BengaliIndia="bn-IN",a.Berber="ber",a.Bhutani="dz",a.BhutaniBhutan="dz-BT",a.Bosnian="bs",a.BosnianBosniaAndHerzegovina="bs-BA",a.Breton="br",a.Bulgarian="bg",a.BulgarianBosniaAndHerzegovina="bg-BG",a.BulgarianBulgaria="bg-BG",a.Burmese="my",a.BurmeseMyanmar="my-MM",a.Cantonese="yue",a.CantoneseHongKong="yue-HK",a.Catalan="ca",a.CatalanSpain="ca-ES",a.Chechen="ce",a.Cherokee="chr",a.Chinese="zh",a.ChineseSimplified="zh-Hans",a.ChineseSimplifiedChina="zh-Hans-CN",a.ChineseSimplifiedHongKong="zh-Hans-HK",a.ChineseSimplifiedMacau="zh-Hans-MO",a.ChineseSimplifiedSingapore="zh-Hans-SG",a.ChineseTraditional="zh-Hant",a.ChineseTraditionalHongKong="zh-Hant-HK",a.ChineseTraditionalMacau="zh-Hant-MO",a.ChineseTraditionalSingapore="zh-Hant-SG",a.ChineseTraditionalTaiwan="zh-Hant-TW",a.Chuvash="cv",a.CorsicanFrance="co-FR",a.Croatian="hr",a.CroatianBosniaAndHerzegovina="hr-BA",a.CroatianCroatia="hr-HR",a.Czech="cs",a.CzechCzechRepublic="cs-CZ",a.Danish="da",a.DanishDenmark="da-DK",a.Dari="prs",a.DariAfghanistan="prs-AF",a.Divehi="dv",a.DivehiMaldives="dv-MV",a.Dutch="nl",a.DutchBelgium="nl-BE",a.DutchNetherlands="nl-NL",a.English="en",a.EnglishAustralia="en-AU",a.EnglishBelgium="en-BE",a.EnglishBelize="en-BZ",a.EnglishCanada="en-CA",a.EnglishCaribbean="en-029",a.EnglishIreland="en-IE",a.EnglishJamaica="en-JM",a.EnglishNewZealand="en-NZ",a.EnglishPhilippines="en-PH",a.EnglishSingapore="en-SG",a.EnglishSouthAfrica="en-ZA",a.EnglishTrinidadAndTobago="en-TT",a.EnglishUnitedKingdom="en-GB",a.EnglishUnitedStates="en-US",a.EnglishZimbabwe="en-ZW",a.Esperanto="eo",a.Estonian="et",a.EstonianEstonia="et-EE",a.Faroese="fo",a.FaroeseFaroeIslands="fo-FO",a.Farsi="fa",a.FarsiIran="fa-IR",a.Filipino="fil",a.FilipinoPhilippines="fil-PH",a.Finnish="fi",a.FinnishFinland="fi-FI",a.French="fr",a.FrenchBelgium="fr-BE",a.FrenchCanada="fr-CA",a.FrenchFrance="fr-FR",a.FrenchLuxembourg="fr-LU",a.FrenchMonaco="fr-MC",a.FrenchReunion="fr-RE",a.FrenchSwitzerland="fr-CH",a.Frisian="fy",a.FrisianNetherlands="fy-NL",a.Galician="gl",a.GalicianSpain="gl-ES",a.Georgian="ka",a.GeorgianGeorgia="ka-GE",a.German="de",a.GermanAustria="de-AT",a.GermanBelgium="de-BE",a.GermanGermany="de-DE",a.GermanLiechtenstein="de-LI",a.GermanLuxembourg="de-LU",a.GermanSwitzerland="de-CH",a.Greenlandic="kl",a.GreenlandicGreenland="kl-GL",a.Greek="el",a.GreekGreece="el-GR",a.Gujarati="gu",a.GujaratiIndia="gu-IN",a.Haitian="ht",a.Hausa="ha",a.HausaGhana="ha-GH",a.HausaNiger="ha-NE",a.HausaNigeria="ha-NG",a.Hebrew="he",a.HebrewIsrael="he-IL",a.Hindi="hi",a.HindiIndia="hi-IN",a.Hungarian="hu",a.HungarianHungary="hu-HU",a.Icelandic="is",a.IcelandicIceland="is-IS",a.Igbo="ig",a.IgboNigeria="ig-NG",a.Indonesian="id",a.IndonesianIndonesia="id-ID",a.Irish="ga",a.IrishIreland="ga-IE",a.Italian="it",a.ItalianItaly="it-IT",a.ItalianSwitzerland="it-CH",a.Japanese="ja",a.JapaneseJapan="ja-JP",a.Javanese="jv",a.Kannada="kn",a.KannadaIndia="kn-IN",a.Karelian="krl",a.Kazakh="kk",a.KazakhKazakhstan="kk-KZ",a.Khmer="km",a.KhmerCambodia="km-KH",a.KinyarwandaRwanda="rw-RW",a.Komi="kv",a.Konkani="kok",a.KonkaniIndia="kok-IN",a.Korean="ko",a.KoreanSouthKorea="ko-KR",a.Kurdish="ku",a.KurdishIraq="ku-IQ",a.KurdishTurkey="ku-TR",a.Kyrgyz="ky",a.KyrgyzKyrgyzstan="ky-KG",a.Lao="lo",a.LaoLaos="lo-LA",a.Latin="la",a.Latvian="lv",a.LatvianLatvia="lv-LV",a.Lithuanian="lt",a.LithuanianLithuania="lt-LT",a.Luxembourgish="lb",a.LuxembourgishBelgium="lb-LU",a.LuxembourgishLuxembourg="lb-LU",a.Macedonian="mk",a.MacedonianNorthMacedonia="mk-MK",a.Malagasy="mg",a.Malay="ms",a.MalayBrunei="ms-BN",a.MalayIndia="ms-IN",a.MalayMalaysia="ms-MY",a.MalaySingapore="ms-SG",a.Malayalam="ml",a.MalayalamIndia="ml-IN",a.Maltese="mt",a.MalteseMalta="mt-MT",a.Maori="mi",a.MaoriNewZealand="mi-NZ",a.Marathi="mr",a.MarathiIndia="mr-IN",a.Mari="chm",a.Mongolian="mn",a.MongolianMongolia="mn-MN",a.Montenegrin="me",a.MontenegrinMontenegro="me-ME",a.Nepali="ne",a.NepaliNepal="ne-NP",a.NorthernSotho="ns",a.NorthernSothoSouthAfrica="ns-ZA",a.Norwegian="nb",a.NorwegianBokmalNorway="nb-NO",a.NorwegianNynorskNorway="nn-NO",a.Oriya="or",a.OriyaIndia="or-IN",a.Ossetian="os",a.Pashto="ps",a.PashtoAfghanistan="ps-AF",a.Persian="fa",a.PersianIran="fa-IR",a.Polish="pl",a.PolishPoland="pl-PL",a.Portuguese="pt",a.PortugueseBrazil="pt-BR",a.PortuguesePortugal="pt-PT",a.Punjabi="pa",a.PunjabiIndia="pa-IN",a.PunjabiPakistan="pa-PK",a.Quechua="qu",a.QuechuaBolivia="qu-BO",a.QuechuaEcuador="qu-EC",a.QuechuaPeru="qu-PE",a.Romanian="ro",a.RomanianRomania="ro-RO",a.Russian="ru",a.RussianKazakhstan="ru-KZ",a.RussianKyrgyzstan="ru-KG",a.RussianRussia="ru-RU",a.RussianUkraine="ru-UA",a.Sakha="sah",a.Sanskrit="sa",a.SanskritIndia="sa-IN",a.Sami="se",a.SamiNorway="se-NO",a.SamiSweden="se-SE",a.SamiFinland="se-FI",a.Samoan="sm",a.SamoanSamoa="sm-WS",a.Scots="gd",a.Serbian="sr",a.SerbianBosniaAndHerzegovina="sr-BA",a.SerbianSerbiaAndMontenegro="sr-SP",a.SerbianCyrillic="sr-SP-Cyrl",a.SerbianCyrillicBosniaAndHerzegovina="sr-Cyrl-BA",a.SerbianCyrillicSerbiaAndMontenegro="sr-Cyrl-SP",a.Sesotho="st",a.SesothoSouthAfrica="st-ZA",a.Shona="sn",a.ShonaZimbabwe="sn-ZW",a.Sindhi="sd",a.SindhiPakistan="sd-PK",a.Sinhala="si",a.SinhalaSriLanka="si-LK",a.Slovak="sk",a.SlovakSlovakia="sk-SK",a.Slovenian="sl",a.SlovenianSlovenia="sl-SI",a.Somali="so",a.SomaliSomalia="so-SO",a.Spanish="es",a.SpanishArgentina="es-AR",a.SpanishBolivia="es-BO",a.SpanishChile="es-CL",a.SpanishColombia="es-CO",a.SpanishCostaRica="es-CR",a.SpanishCuba="es-CU",a.SpanishDominicanRepublic="es-DO",a.SpanishEcuador="es-EC",a.SpanishEquatorialGuinea="es-GQ",a.SpanishElSalvador="es-SV",a.SpanishGuatemala="es-GT",a.SpanishHonduras="es-HN",a.SpanishMexico="es-MX",a.SpanishNicaragua="es-NI",a.SpanishPanama="es-PA",a.SpanishParaguay="es-PY",a.SpanishPeru="es-PE",a.SpanishPuertoRico="es-PR",a.SpanishSpain="es-ES",a.SpanishUnitedStates="es-US",a.SpanishUruguay="es-UY",a.SpanishVenezuela="es-VE",a.Sudanese="su",a.Sutu="st",a.SutuSouthAfrica="st-ZA",a.Swahili="sw",a.SwahiliKenya="sw-KE",a.Swedish="sv",a.SwedishFinland="sv-FI",a.SwedishSweden="sv-SE",a.Syriac="syr",a.SyriacSyria="syr-SY",a.Tajik="tg",a.TajikTajikistan="tg-TJ",a.Tagalog="tl",a.TagalogPhilippines="tl-PH",a.Tamazight="tmh",a.Tamil="ta",a.TamilIndia="ta-IN",a.Tatar="tt",a.Telugu="te",a.TeluguIndia="te-IN",a.Thai="th",a.ThaiThailand="th-TH",a.Tibetan="bo",a.TibetanBhutan="bo-BT",a.TibetanChina="bo-CN",a.TibetanIndia="bo-IN",a.Tsonga="ts",a.Tswana="tn",a.TswanaSouthAfrica="tn-ZA",a.Turkish="tr",a.TurkishTurkey="tr-TR",a.Turkmen="tk",a.Ukrainian="uk",a.UkrainianUkraine="uk-UA",a.Urdu="ur",a.UrduAfghanistan="ur-AF",a.UrduIndia="ur-IN",a.UrduPakistan="ur-PK",a.Uzbek="uz",a.UzbekCyrillic="uz-Cyrl-UZ",a.UzbekLatin="uz-Latn-UZ",a.UzbekUzbekistan="uz-UZ",a.Vietnamese="vi",a.VietnameseVietnam="vi-VN",a.Welsh="cy",a.WelshUnitedKingdom="cy-GB",a.Xhosa="xh",a.XhosaSouthAfrica="xh-ZA",a.Yiddish="yi",a.Yoruba="yo",a.YorubaNigeria="yo-NG",a.ZhuyinMandarinChina="yue-Hant-CN",a.Zulu="zu",a.ZuluSouthAfrica="zu-ZA",a))(e||{}),u=(a=>(a.AfricaAbidjan="Africa/Abidjan",a.AfricaAccra="Africa/Accra",a.AfricaAddisAbaba="Africa/Addis_Ababa",a.AfricaAlgiers="Africa/Algiers",a.AfricaAsmara="Africa/Asmara",a.AfricaBamako="Africa/Bamako",a.AfricaBangui="Africa/Bangui",a.AfricaBanjul="Africa/Banjul",a.AfricaBissau="Africa/Bissau",a.AfricaBlantyre="Africa/Blantyre",a.AfricaBrazzaville="Africa/Brazzaville",a.AfricaBujumbura="Africa/Bujumbura",a.AfricaCairo="Africa/Cairo",a.AfricaCasablanca="Africa/Casablanca",a.AfricaCeuta="Africa/Ceuta",a.AfricaConakry="Africa/Conakry",a.AfricaDakar="Africa/Dakar",a.AfricaDarEsSalaam="Africa/Dar_es_Salaam",a.AfricaDjibouti="Africa/Djibouti",a.AfricaDouala="Africa/Douala",a.AfricaElAaiun="Africa/El_Aaiun",a.AfricaFreetown="Africa/Freetown",a.AfricaGaborone="Africa/Gaborone",a.AfricaHarare="Africa/Harare",a.AfricaJohannesburg="Africa/Johannesburg",a.AfricaJuba="Africa/Juba",a.AfricaKampala="Africa/Kampala",a.AfricaKhartoum="Africa/Khartoum",a.AfricaKigali="Africa/Kigali",a.AfricaKinshasa="Africa/Kinshasa",a.AfricaLagos="Africa/Lagos",a.AfricaLibreville="Africa/Libreville",a.AfricaLome="Africa/Lome",a.AfricaLuanda="Africa/Luanda",a.AfricaLubumbashi="Africa/Lubumbashi",a.AfricaLusaka="Africa/Lusaka",a.AfricaMalabo="Africa/Malabo",a.AfricaMaputo="Africa/Maputo",a.AfricaMaseru="Africa/Maseru",a.AfricaMbabane="Africa/Mbabane",a.AfricaMogadishu="Africa/Mogadishu",a.AfricaMonrovia="Africa/Monrovia",a.AfricaNairobi="Africa/Nairobi",a.AfricaNdjamena="Africa/Ndjamena",a.AfricaNiamey="Africa/Niamey",a.AfricaNouakchott="Africa/Nouakchott",a.AfricaOuagadougou="Africa/Ouagadougou",a.AfricaPortoNovo="Africa/Porto-Novo",a.AfricaSaoTome="Africa/Sao_Tome",a.AfricaTripoli="Africa/Tripoli",a.AfricaTunis="Africa/Tunis",a.AfricaWindhoek="Africa/Windhoek",a.AmericaAdak="America/Adak",a.AmericaAnchorage="America/Anchorage",a.AmericaAnguilla="America/Anguilla",a.AmericaAntigua="America/Antigua",a.AmericaAraguaina="America/Araguaina",a.AmericaArgentinaBuenosAires="America/Argentina/Buenos_Aires",a.AmericaArgentinaCatamarca="America/Argentina/Catamarca",a.AmericaArgentinaCordoba="America/Argentina/Cordoba",a.AmericaArgentinaJujuy="America/Argentina/Jujuy",a.AmericaArgentinaLaRioja="America/Argentina/La_Rioja",a.AmericaArgentinaMendoza="America/Argentina/Mendoza",a.AmericaArgentinaRioGallegos="America/Argentina/Rio_Gallegos",a.AmericaArgentinaSalta="America/Argentina/Salta",a.AmericaArgentinaSanJuan="America/Argentina/San_Juan",a.AmericaArgentinaSanLuis="America/Argentina/San_Luis",a.AmericaArgentinaTucuman="America/Argentina/Tucuman",a.AmericaArgentinaUshuaia="America/Argentina/Ushuaia",a.AmericaAruba="America/Aruba",a.AmericaAsuncion="America/Asuncion",a.AmericaAtikokan="America/Atikokan",a.AmericaAtka="America/Atka",a.AmericaBahia="America/Bahia",a.AmericaBahiaBanderas="America/Bahia_Banderas",a.AmericaBarbados="America/Barbados",a.AmericaBelem="America/Belem",a.AmericaBelize="America/Belize",a.AmericaBlancSablon="America/Blanc-Sablon",a.AmericaBoaVista="America/Boa_Vista",a.AmericaBogota="America/Bogota",a.AmericaBoise="America/Boise",a.AmericaCambridgeBay="America/Cambridge_Bay",a.AmericaCampoGrande="America/Campo_Grande",a.AmericaCancun="America/Cancun",a.AmericaCaracas="America/Caracas",a.AmericaCayenne="America/Cayenne",a.AmericaCayman="America/Cayman",a.AmericaChicago="America/Chicago",a.AmericaChihuahua="America/Chihuahua",a.AmericaCoralHarbour="America/Coral_Harbour",a.AmericaCordoba="America/Cordoba",a.AmericaCostaRica="America/Costa_Rica",a.AmericaCreston="America/Creston",a.AmericaCuiaba="America/Cuiaba",a.AmericaCuracao="America/Curacao",a.AmericaDanmarkshavn="America/Danmarkshavn",a.AmericaDawson="America/Dawson",a.AmericaDawsonCreek="America/Dawson_Creek",a.AmericaDenver="America/Denver",a.AmericaDetroit="America/Detroit",a.AmericaDominica="America/Dominica",a.AmericaEdmonton="America/Edmonton",a.AmericaEirunepe="America/Eirunepe",a.AmericaElSalvador="America/El_Salvador",a.AmericaFortaleza="America/Fortaleza",a.AmericaGlaceBay="America/Glace_Bay",a.AmericaGodthab="America/Godthab",a.AmericaGooseBay="America/Goose_Bay",a.AmericaGrandTurk="America/Grand_Turk",a.AmericaGrenada="America/Grenada",a.AmericaGuadeloupe="America/Guadeloupe",a.AmericaGuatemala="America/Guatemala",a.AmericaGuayaquil="America/Guayaquil",a.AmericaGuyana="America/Guyana",a.AmericaHalifax="America/Halifax",a.AmericaHavana="America/Havana",a.AmericaHermosillo="America/Hermosillo",a.AmericaIndianaIndianapolis="America/Indiana/Indianapolis",a.AmericaIndianaKnox="America/Indiana/Knox",a.AmericaIndianaMarengo="America/Indiana/Marengo",a.AmericaIndianaPetersburg="America/Indiana/Petersburg",a.AmericaIndianaTellCity="America/Indiana/Tell_City",a.AmericaIndianaVevay="America/Indiana/Vevay",a.AmericaIndianaVincennes="America/Indiana/Vincennes",a.AmericaIndianaWinamac="America/Indiana/Winamac",a.AmericaInuvik="America/Inuvik",a.AmericaIqaluit="America/Iqaluit",a.AmericaJamaica="America/Jamaica",a.AmericaJuneau="America/Juneau",a.AmericaKentuckyLouisville="America/Kentucky/Louisville",a.AmericaKentuckyMonticello="America/Kentucky/Monticello",a.AmericaKralendijk="America/Kralendijk",a.AmericaLaPaz="America/La_Paz",a.AmericaLima="America/Lima",a.AmericaLosAngeles="America/Los_Angeles",a.AmericaLouisville="America/Louisville",a.AmericaLowerPrinces="America/Lower_Princes",a.AmericaMaceio="America/Maceio",a.AmericaManagua="America/Managua",a.AmericaManaus="America/Manaus",a.AmericaMarigot="America/Marigot",a.AmericaMartinique="America/Martinique",a.AmericaMatamoros="America/Matamoros",a.AmericaMazatlan="America/Mazatlan",a.AmericaMenominee="America/Menominee",a.AmericaMerida="America/Merida",a.AmericaMetlakatla="America/Metlakatla",a.AmericaMexicoCity="America/Mexico_City",a.AmericaMiquelon="America/Miquelon",a.AmericaMoncton="America/Moncton",a.AmericaMonterrey="America/Monterrey",a.AmericaMontevideo="America/Montevideo",a.AmericaMontserrat="America/Montserrat",a.AmericaMontreal="America/Montreal",a.AmericaNassau="America/Nassau",a.AmericaNewYork="America/New_York",a.AmericaNipigon="America/Nipigon",a.AmericaNome="America/Nome",a.AmericaNoronha="America/Noronha",a.AmericaNorthDakotaBeulah="America/North_Dakota/Beulah",a.AmericaNorthDakotaCenter="America/North_Dakota/Center",a.AmericaNorthDakotaNewSalem="America/North_Dakota/New_Salem",a.AmericaOjinaga="America/Ojinaga",a.AmericaPanama="America/Panama",a.AmericaPangnirtung="America/Pangnirtung",a.AmericaParamaribo="America/Paramaribo",a.AmericaPhoenix="America/Phoenix",a.AmericaPortAuPrince="America/Port-au-Prince",a.AmericaPortOfSpain="America/Port_of_Spain",a.AmericaPortoVelho="America/Porto_Velho",a.AmericaPuertoRico="America/Puerto_Rico",a.AmericaRainyRiver="America/Rainy_River",a.AmericaRankinInlet="America/Rankin_Inlet",a.AmericaRecife="America/Recife",a.AmericaRegina="America/Regina",a.AmericaResolute="America/Resolute",a.AmericaRioBranco="America/Rio_Branco",a.AmericaSantaIsabel="America/Santa_Isabel",a.AmericaSantarem="America/Santarem",a.AmericaSantiago="America/Santiago",a.AmericaSantoDomingo="America/Santo_Domingo",a.AmericaSaoPaulo="America/Sao_Paulo",a.AmericaScoresbysund="America/Scoresbysund",a.AmericaShiprock="America/Shiprock",a.AmericaSitka="America/Sitka",a.AmericaStBarthelemy="America/St_Barthelemy",a.AmericaStJohns="America/St_Johns",a.AmericaStKitts="America/St_Kitts",a.AmericaStLucia="America/St_Lucia",a.AmericaStThomas="America/St_Thomas",a.AmericaStVincent="America/St_Vincent",a.AmericaSwiftCurrent="America/Swift_Current",a.AmericaTegucigalpa="America/Tegucigalpa",a.AmericaThule="America/Thule",a.AmericaThunderBay="America/Thunder_Bay",a.AmericaTijuana="America/Tijuana",a.AmericaToronto="America/Toronto",a.AmericaTortola="America/Tortola",a.AmericaVancouver="America/Vancouver",a.AmericaWhitehorse="America/Whitehorse",a.AmericaWinnipeg="America/Winnipeg",a.AmericaYakutat="America/Yakutat",a.AmericaYellowknife="America/Yellowknife",a.AntarcticaCasey="Antarctica/Casey",a.AntarcticaDavis="Antarctica/Davis",a.AntarcticaDumontDUrville="Antarctica/DumontDUrville",a.AntarcticaMacquarie="Antarctica/Macquarie",a.AntarcticaMawson="Antarctica/Mawson",a.AntarcticaMcMurdo="Antarctica/McMurdo",a.AntarcticaPalmer="Antarctica/Palmer",a.AntarcticaRothera="Antarctica/Rothera",a.AntarcticaSyowa="Antarctica/Syowa",a.AntarcticaTroll="Antarctica/Troll",a.AntarcticaVostok="Antarctica/Vostok",a.ArcticLongyearbyen="Arctic/Longyearbyen",a.AsiaAden="Asia/Aden",a.AsiaAlmaty="Asia/Almaty",a.AsiaAmman="Asia/Amman",a.AsiaAnadyr="Asia/Anadyr",a.AsiaAqtau="Asia/Aqtau",a.AsiaAqtobe="Asia/Aqtobe",a.AsiaAshgabat="Asia/Ashgabat",a.AsiaBaghdad="Asia/Baghdad",a.AsiaBahrain="Asia/Bahrain",a.AsiaBaku="Asia/Baku",a.AsiaBangkok="Asia/Bangkok",a.AsiaBarnaul="Asia/Barnaul",a.AsiaBeirut="Asia/Beirut",a.AsiaBishkek="Asia/Bishkek",a.AsiaBrunei="Asia/Brunei",a.AsiaChita="Asia/Chita",a.AsiaChoibalsan="Asia/Choibalsan",a.AsiaColombo="Asia/Colombo",a.AsiaDamascus="Asia/Damascus",a.AsiaDhaka="Asia/Dhaka",a.AsiaDili="Asia/Dili",a.AsiaDubai="Asia/Dubai",a.AsiaDushanbe="Asia/Dushanbe",a.AsiaFamagusta="Asia/Famagusta",a.AsiaGaza="Asia/Gaza",a.AsiaHebron="Asia/Hebron",a.AsiaHoChiMinh="Asia/Ho_Chi_Minh",a.AsiaHongKong="Asia/Hong_Kong",a.AsiaHovd="Asia/Hovd",a.AsiaIrkutsk="Asia/Irkutsk",a.AsiaJakarta="Asia/Jakarta",a.AsiaJayapura="Asia/Jayapura",a.AsiaJerusalem="Asia/Jerusalem",a.AsiaKabul="Asia/Kabul",a.AsiaKamchatka="Asia/Kamchatka",a.AsiaKarachi="Asia/Karachi",a.AsiaKathmandu="Asia/Kathmandu",a.AsiaKhandyga="Asia/Khandyga",a.AsiaKolkata="Asia/Kolkata",a.AsiaKrasnoyarsk="Asia/Krasnoyarsk",a.AsiaKualaLumpur="Asia/Kuala_Lumpur",a.AsiaKuching="Asia/Kuching",a.AsiaKuwait="Asia/Kuwait",a.AsiaMacau="Asia/Macau",a.AsiaMagadan="Asia/Magadan",a.AsiaMakassar="Asia/Makassar",a.AsiaManila="Asia/Manila",a.AsiaMuscat="Asia/Muscat",a.AsiaNicosia="Asia/Nicosia",a.AsiaNovokuznetsk="Asia/Novokuznetsk",a.AsiaNovosibirsk="Asia/Novosibirsk",a.AsiaOmsk="Asia/Omsk",a.AsiaOral="Asia/Oral",a.AsiaPhnomPenh="Asia/Phnom_Penh",a.AsiaPontianak="Asia/Pontianak",a.AsiaPyongyang="Asia/Pyongyang",a.AsiaQatar="Asia/Qatar",a.AsiaQyzylorda="Asia/Qyzylorda",a.AsiaRangoon="Asia/Rangoon",a.AsiaRiyadh="Asia/Riyadh",a.AsiaSakhalin="Asia/Sakhalin",a.AsiaSamarkand="Asia/Samarkand",a.AsiaSeoul="Asia/Seoul",a.AsiaShanghai="Asia/Shanghai",a.AsiaSingapore="Asia/Singapore",a.AsiaSrednekolymsk="Asia/Srednekolymsk",a.AsiaTaipei="Asia/Taipei",a.AsiaTashkent="Asia/Tashkent",a.AsiaTbilisi="Asia/Tbilisi",a.AsiaTehran="Asia/Tehran",a.AsiaThimphu="Asia/Thimphu",a.AsiaTokyo="Asia/Tokyo",a.AsiaTomsk="Asia/Tomsk",a.AsiaUlaanbaatar="Asia/Ulaanbaatar",a.AsiaUrumqi="Asia/Urumqi",a.AsiaUstNera="Asia/Ust-Nera",a.AsiaVientiane="Asia/Vientiane",a.AsiaVladivostok="Asia/Vladivostok",a.AsiaYakutsk="Asia/Yakutsk",a.AsiaYekaterinburg="Asia/Yekaterinburg",a.AsiaYerevan="Asia/Yerevan",a.AtlanticAzores="Atlantic/Azores",a.AtlanticBermuda="Atlantic/Bermuda",a.AtlanticCanary="Atlantic/Canary",a.AtlanticCapeVerde="Atlantic/Cape_Verde",a.AtlanticFaroe="Atlantic/Faroe",a.AtlanticMadeira="Atlantic/Madeira",a.AtlanticReykjavik="Atlantic/Reykjavik",a.AtlanticSouthGeorgia="Atlantic/South_Georgia",a.AtlanticStHelena="Atlantic/St_Helena",a.AtlanticStanley="Atlantic/Stanley",a.AustraliaAdelaide="Australia/Adelaide",a.AustraliaBrisbane="Australia/Brisbane",a.AustraliaBrokenHill="Australia/Broken_Hill",a.AustraliaCanberra="Australia/Canberra",a.AustraliaCurrie="Australia/Currie",a.AustraliaDarwin="Australia/Darwin",a.AustraliaEucla="Australia/Eucla",a.AustraliaHobart="Australia/Hobart",a.AustraliaLindeman="Australia/Lindeman",a.AustraliaLordHowe="Australia/Lord_Howe",a.AustraliaMelbourne="Australia/Melbourne",a.AustraliaPerth="Australia/Perth",a.AustraliaSydney="Australia/Sydney",a.EuropeAmsterdam="Europe/Amsterdam",a.EuropeAndorra="Europe/Andorra",a.EuropeAthens="Europe/Athens",a.EuropeBelgrade="Europe/Belgrade",a.EuropeBerlin="Europe/Berlin",a.EuropeBratislava="Europe/Bratislava",a.EuropeBrussels="Europe/Brussels",a.EuropeBucharest="Europe/Bucharest",a.EuropeBudapest="Europe/Budapest",a.EuropeBusingen="Europe/Busingen",a.EuropeChisinau="Europe/Chisinau",a.EuropeCopenhagen="Europe/Copenhagen",a.EuropeDublin="Europe/Dublin",a.EuropeGibraltar="Europe/Gibraltar",a.EuropeGuernsey="Europe/Guernsey",a.EuropeHelsinki="Europe/Helsinki",a.EuropeIsleOfMan="Europe/Isle_of_Man",a.EuropeIstanbul="Europe/Istanbul",a.EuropeJersey="Europe/Jersey",a.EuropeKaliningrad="Europe/Kaliningrad",a.EuropeKiev="Europe/Kiev",a.EuropeKirov="Europe/Kirov",a.EuropeLisbon="Europe/Lisbon",a.EuropeLjubljana="Europe/Ljubljana",a.EuropeLondon="Europe/London",a.EuropeLuxembourg="Europe/Luxembourg",a.EuropeMadrid="Europe/Madrid",a.EuropeMalta="Europe/Malta",a.EuropeMariehamn="Europe/Mariehamn",a.EuropeMinsk="Europe/Minsk",a.EuropeMonaco="Europe/Monaco",a.EuropeMoscow="Europe/Moscow",a.EuropeOslo="Europe/Oslo",a.EuropeParis="Europe/Paris",a.EuropePodgorica="Europe/Podgorica",a.EuropePrague="Europe/Prague",a.EuropeRiga="Europe/Riga",a.EuropeRome="Europe/Rome",a.EuropeSamara="Europe/Samara",a.EuropeSanMarino="Europe/San_Marino",a.EuropeSarajevo="Europe/Sarajevo",a.EuropeSimferopol="Europe/Simferopol",a.EuropeSkopje="Europe/Skopje",a.EuropeSofia="Europe/Sofia",a.EuropeStockholm="Europe/Stockholm",a.EuropeTallinn="Europe/Tallinn",a.EuropeTirane="Europe/Tirane",a.EuropeUzhgorod="Europe/Uzhgorod",a.EuropeVaduz="Europe/Vaduz",a.EuropeVatican="Europe/Vatican",a.EuropeVienna="Europe/Vienna",a.EuropeVilnius="Europe/Vilnius",a.EuropeVolgograd="Europe/Volgograd",a.EuropeWarsaw="Europe/Warsaw",a.EuropeZagreb="Europe/Zagreb",a.EuropeZaporozhye="Europe/Zaporozhye",a.EuropeZurich="Europe/Zurich",a.GMT="GMT",a.IndianAntananarivo="Indian/Antananarivo",a.IndianChagos="Indian/Chagos",a.IndianChristmas="Indian/Christmas",a.IndianCocos="Indian/Cocos",a.IndianComoro="Indian/Comoro",a.IndianKerguelen="Indian/Kerguelen",a.IndianMahe="Indian/Mahe",a.IndianMaldives="Indian/Maldives",a.IndianMauritius="Indian/Mauritius",a.IndianMayotte="Indian/Mayotte",a.IndianReunion="Indian/Reunion",a.PacificApia="Pacific/Apia",a.PacificAuckland="Pacific/Auckland",a.PacificBougainville="Pacific/Bougainville",a.PacificChatham="Pacific/Chatham",a.PacificChuuk="Pacific/Chuuk",a.PacificEaster="Pacific/Easter",a.PacificEfate="Pacific/Efate",a.PacificEnderbury="Pacific/Enderbury",a.PacificFakaofo="Pacific/Fakaofo",a.PacificFiji="Pacific/Fiji",a.PacificFunafuti="Pacific/Funafuti",a.PacificGalapagos="Pacific/Galapagos",a.PacificGambier="Pacific/Gambier",a.PacificGuadalcanal="Pacific/Guadalcanal",a.PacificGuam="Pacific/Guam",a.PacificHonolulu="Pacific/Honolulu",a.PacificJohnston="Pacific/Johnston",a.PacificKiritimati="Pacific/Kiritimati",a.PacificKosrae="Pacific/Kosrae",a.PacificKwajalein="Pacific/Kwajalein",a.PacificMajuro="Pacific/Majuro",a.PacificMarquesas="Pacific/Marquesas",a.PacificMidway="Pacific/Midway",a.PacificNauru="Pacific/Nauru",a.PacificNiue="Pacific/Niue",a.PacificNorfolk="Pacific/Norfolk",a.PacificNoumea="Pacific/Noumea",a.PacificPagoPago="Pacific/Pago_Pago",a.PacificPalau="Pacific/Palau",a.PacificPitcairn="Pacific/Pitcairn",a.PacificPohnpei="Pacific/Pohnpei",a.PacificPonape="Pacific/Ponape",a.PacificPortMoresby="Pacific/Port_Moresby",a.PacificRarotonga="Pacific/Rarotonga",a.PacificSaipan="Pacific/Saipan",a.PacificSamoa="Pacific/Samoa",a.PacificTahiti="Pacific/Tahiti",a.PacificTarawa="Pacific/Tarawa",a.PacificTongatapu="Pacific/Tongatapu",a.PacificTruk="Pacific/Truk",a.PacificWake="Pacific/Wake",a.PacificWallis="Pacific/Wallis",a.PacificYap="Pacific/Yap",a))(u||{}),n=(a=>(a.UTC_MINUS_12="UTC-12",a.UTC_MINUS_11_30="UTC-11:30",a.UTC_MINUS_11="UTC-11",a.UTC_MINUS_10_30="UTC-10:30",a.UTC_MINUS_10="UTC-10",a.UTC_MINUS_9_30="UTC-9:30",a.UTC_MINUS_9="UTC-09",a.UTC_MINUS_8_45="UTC-8:45",a.UTC_MINUS_8="UTC-08",a.UTC_MINUS_7="UTC-07",a.UTC_MINUS_6_30="UTC-6:30",a.UTC_MINUS_6="UTC-06",a.UTC_MINUS_5_45="UTC-5:45",a.UTC_MINUS_5_30="UTC-5:30",a.UTC_MINUS_5="UTC-05",a.UTC_MINUS_4_30="UTC-4:30",a.UTC_MINUS_4="UTC-04",a.UTC_MINUS_3_30="UTC-3:30",a.UTC_MINUS_3="UTC-03",a.UTC_MINUS_2_30="UTC-2:30",a.UTC_MINUS_2="UTC-02",a.UTC_MINUS_1="UTC-01",a.UTC_0="UTC+00",a.UTC_PLUS_1="UTC+01",a.UTC_PLUS_2="UTC+02",a.UTC_PLUS_3="UTC+03",a.UTC_PLUS_3_30="UTC+3:30",a.UTC_PLUS_4="UTC+04",a.UTC_PLUS_4_30="UTC+4:30",a.UTC_PLUS_5="UTC+05",a.UTC_PLUS_5_30="UTC+5:30",a.UTC_PLUS_5_45="UTC+5:45",a.UTC_PLUS_6="UTC+06",a.UTC_PLUS_6_30="UTC+6:30",a.UTC_PLUS_7="UTC+07",a.UTC_PLUS_8="UTC+08",a.UTC_PLUS_8_45="UTC+8:45",a.UTC_PLUS_9="UTC+09",a.UTC_PLUS_9_30="UTC+9:30",a.UTC_PLUS_10="UTC+10",a.UTC_PLUS_10_30="UTC+10:30",a.UTC_PLUS_11="UTC+11",a.UTC_PLUS_11_30="UTC+11:30",a.UTC_PLUS_12="UTC+12",a.UTC_PLUS_12_45="UTC+12:45",a.UTC_PLUS_13="UTC+13",a.UTC_PLUS_13_45="UTC+13:45",a.UTC_PLUS_14="UTC+14",a))(n||{}),s=(a=>(a.AcreTime="ACT",a.AfghanistanTime="AFT",a.AIXCentralEuropeanTime="DFT",a.AlaskaDaylightTime="AKDT",a.AlaskaStandardTime="AKST",a.AlmaAtaTime="ALMT",a.AmazonSummerTime="AMST",a.AmazonTime="AMT",a.AnadyrTime="ANAT",a.AqtobeTime="AQTT",a.ArabiaStandardTime="AST",a.ArgentinaTime="ART",a.ArmeniaTime="AMT",a.ASEANCommonTime="ASEAN",a.AtlanticDaylightTime="ADT",a.AtlanticStandardTime="AST",a.AustralianCentralDaylightSavingTime="ACDT",a.AustralianCentralStandardTime="ACST",a.AustralianCentralWesternStandardTime="ACWST",a.AustralianEasternDaylightSavingTime="AEDT",a.AustralianEasternStandardTime="AEST",a.AustralianEasternTime="AET",a.AustralianWesternStandardTime="AWST",a.AzerbaijanTime="AZT",a.AzoresStandardTime="AZOT",a.AzoresSummerTime="AZOST",a.BakerIslandTime="BIT",a.BangladeshStandardTime="BST",a.BhutanTime="BTT",a.BoliviaTime="BOT",a.BougainvilleStandardTime="BST",a.BrasiliaSummerTime="BRST",a.BrasiliaTime="BRT",a.BritishIndianOceanTime="BIOT",a.BritishSummerTime="BST",a.BruneiTime="BNT",a.CapeVerdeTime="CVT",a.CentralAfricaTime="CAT",a.CentralDaylightTime="CDT",a.CentralEuropeanSummerTime="CEST",a.CentralEuropeanTime="CET",a.CentralIndonesiaTime="WITA",a.CentralStandardTime="CST",a.CentralTime="CT",a.CentralWesternStandardTime="CWST",a.ChamorroStandardTime="CHST",a.ChathamDaylightTime="CHADT",a.ChathamStandardTime="CHAST",a.ChileStandardTime="CLT",a.ChileSummerTime="CLST",a.ChinaStandardTime="CST",a.ChoibalsanStandardTime="CHOT",a.ChoibalsanSummerTime="CHOST",a.ChristmasIslandTime="CXT",a.ChuukTime="CHUT",a.ClipptertonIslandStandardTime="CIST",a.CocosIslandsTime="CCT",a.ColombiaSummerTime="COST",a.ColombiaTime="COT",a.CookIslandTime="CKT",a.CoordinatedUniversalTime="UTC",a.CubaDaylightTime="CDT",a.CubaStandardTime="CST",a.DavisTime="DAVT",a.DumontDUrvilleTime="DDUT",a.EastAfricaTime="EAT",a.EasterIslandStandardTime="EAST",a.EasterIslandSummerTime="EASST",a.EasternCaribbeanTime="ECT",a.EasternDaylightTime="EDT",a.EasternEuropeanSummerTime="EEST",a.EasternEuropeanTime="EET",a.EasternGreenlandSummerTime="EGST",a.EasternGreenlandTime="EGT",a.EasternIndonesianTime="WIT",a.EasternStandardTime="EST",a.EasternTime="ET",a.EcuadorTime="ECT",a.FalklandIslandsSummerTime="FKST",a.FalklandIslandsTime="FKT",a.FernandoDeNoronhaTime="FNT",a.FijiTime="FJT",a.FrenchGuianaTime="GFT",a.FrenchSouthernAndAntarcticTime="TFT",a.FurtherEasternEuropeanTime="FET",a.GalapagosTime="GALT",a.GambierIslandTime="GIT",a.GambierIslandsTime="GAMT",a.GeorgiaStandardTime="GET",a.GilbertIslandTime="GILT",a.GreenwichMeanTime="GMT",a.GulfStandardTime="GST",a.GuyanaTime="GYT",a.HawaiiAleutianDaylightTime="HDT",a.HawaiiAleutianStandardTime="HST",a.HeardAndMcDonaldIslandsTime="HMT",a.HeureAvanceeDEuropeCentraleTime="HAEC",a.HongKongTime="HKT",a.HovdSummerTime="HOVST",a.HovdTime="HOVT",a.IndianOceanTime="IOT",a.IndianStandardTime="IST",a.IndochinaTime="ICT",a.InternationalDayLineWestTime="IDLW",a.IranDaylightTime="IRDT",a.IranStandardTime="IRST",a.IrishStandardTime="IST",a.IrkutskSummerTime="IRKST",a.IrkutskTime="IRKT",a.IsraelDaylightTime="IDT",a.IsraelStandardTime="IST",a.JapanStandardTime="JST",a.KaliningradTime="KALT",a.KamchatkaTime="KAMT",a.KoreaStandardTime="KST",a.KosraeTime="KOST",a.KrasnoyarskSummerTime="KRAST",a.KrasnoyarskTime="KRAT",a.KyrgyzstanTime="KGT",a.LineIslandsTime="LINT",a.KazakhstanStandardTime="KAST",a.LordHoweStandardTime="LHST",a.LordHoweSummerTime="LHST",a.MacquarieIslandStationTime="MIST",a.MagadanTime="MAGT",a.MalaysiaStandardTime="MST",a.MalaysiaTime="MYT",a.MaldivesTime="MVT",a.MarquesasIslandsTime="MART",a.MarshallIslandsTime="MHT",a.MauritiusTime="MUT",a.MawsonStationTime="MAWT",a.MiddleEuropeanSummerTime="MEDT",a.MiddleEuropeanTime="MET",a.MoscowTime="MSK",a.MountainDaylightTime="MDT",a.MountainStandardTime="MST",a.MyanmarStandardTime="MMT",a.NepalTime="NCT",a.NauruTime="NRT",a.NewCaledoniaTime="NCT",a.NewZealandDaylightTime="NZDT",a.NewZealandStandardTime="NZST",a.NewfoundlandDaylightTime="NDT",a.NewfoundlandStandardTime="NST",a.NewfoundlandTime="NT",a.NiueTime="NUT",a.NorfolkIslandTime="NFT",a.NovosibirskTime="NOVT",a.OmskTime="OMST",a.OralTime="ORAT",a.PacificDaylightTime="PDT",a.PacificStandardTime="PST",a.PakistanStandardTime="PKT",a.PalauTime="PWT",a.PapuaNewGuineaTime="PGT",a.ParaguaySummerTime="PYST",a.ParaguayTime="PYT",a.PeruTime="PET",a.PhilippineStandardTime="PHST",a.PhilippineTime="PHT",a.PhoenixIslandTime="PHOT",a.PitcairnTime="PST",a.PohnpeiStandardTime="PONT",a.ReunionTime="RET",a.RotheraResearchStationTime="ROTT",a.SaintPierreAndMiquelonDaylightTime="PMDT",a.SaintPierreAndMiquelonStandardTime="PMST",a.SakhalinIslandTime="SAKT",a.SamaraTime="SAMT",a.SamoaDaylightTime="SDT",a.SamoaStandardTime="SST",a.SeychellesTime="SCT",a.ShowaStationTime="SYOT",a.SingaporeStandardTime="SST",a.SingaporeTime="SGT",a.SolomonIslandsTime="SBT",a.SouthAfricanStandardTime="SAST",a.SouthGeorgiaAndTheSouthSandwichIslandsTime="GST",a.SrednekolymskTime="SRET",a.SriLankaStandardTime="SLST",a.SurinameTime="SRT",a.TahitiTime="TAHT",a.TajikistanTime="TJT",a.ThailandStandardTime="THA",a.TimorLesteTime="TLT",a.TokelauTime="TKT",a.TongaTime="TOT",a.TurkeyTime="TRT",a.TurkmenistanTime="TMT",a.TuvaluTime="TVT",a.UlaanbaatarStandardTime="ULAT",a.UlaanbaatarSummerTime="ULAST",a.UruguayStandardTime="UYT",a.UruguaySummerTime="UYST",a.UzbekistanTime="UZT",a.VanuatuTime="VUT",a.VenezuelaStandardTime="VET",a.VladivostokTime="VLAT",a.VolgogradTime="VOLT",a.VostokStationTime="VOST",a.WakeIslandTime="WAKT",a.WestAfricaSummerTime="WAST",a.WestAfricaTime="WAT",a.WestGreenlandSummerTime="WGST",a.WestGreenlandTime="WGT",a.WestKazakhstanTime="WKT",a.WesternEuropeanSummerTime="WEDT",a.WesternEuropeanTime="WET",a.WesternIndonesianTime="WIT",a.WesternStandardTime="WST",a.YakutskTime="YAKT",a.YekaterinburgTime="YEKT",a))(s||{}),Lt={dst:{is:!1,uses:!0},id:"ACT",name:"Acre Time",offset:n.UTC_MINUS_5},wt={dst:{is:!1,uses:!0},id:"AFT",name:"Afghanistan Time",offset:n.UTC_PLUS_4_30},Gt={dst:{is:!1,uses:!0},id:"DFT",name:"AIX Central European Time",offset:n.UTC_PLUS_1},xt={dst:{is:!0,uses:!0},id:"AKDT",name:"Alaska Daylight Time",offset:n.UTC_MINUS_8},qt={dst:{is:!1,uses:!0},id:"AKST",name:"Alaska Standard Time",offset:n.UTC_MINUS_9},Kt={dst:{is:!1,uses:!0},id:"ALMT",name:"Alma-Ata Time",offset:n.UTC_PLUS_6},Ot={dst:{is:!1,uses:!0},id:"AMST",name:"Amazon Summer Time",offset:n.UTC_MINUS_3},jt={dst:{is:!1,uses:!0},id:"AMT",name:"Amazon Time",offset:n.UTC_MINUS_4},Ht={dst:{is:!1,uses:!0},id:"ANAT",name:"Anadyr Time",offset:n.UTC_PLUS_12},Wt={dst:{is:!1,uses:!0},id:"AQTT",name:"Aqtobe Time",offset:n.UTC_PLUS_5},Vt={dst:{is:!1,uses:!0},id:"AST",name:"Arabia Standard Time",offset:n.UTC_PLUS_3},Rt={dst:{is:!1,uses:!0},id:"ART",name:"Argentina Time",offset:n.UTC_MINUS_3},zt={dst:{is:!1,uses:!0},id:"AMT",name:"Armenia Time",offset:n.UTC_PLUS_4},Yt={dst:{is:!0,uses:!0},id:"ADT",name:"Atlantic Daylight Time",offset:n.UTC_MINUS_3},Jt={dst:{is:!1,uses:!0},id:"AST",name:"Atlantic Standard Time",offset:n.UTC_MINUS_4},Zt={dst:{is:!0,uses:!0},id:"ACDT",name:"Australian Central Daylight Saving Time",offset:n.UTC_PLUS_10_30},$t={dst:{is:!1,uses:!0},id:"ACST",name:"Australian Central Standard Time",offset:n.UTC_PLUS_9_30},Qt={dst:{is:!1,uses:!0},id:"ACWST",name:"Australian Central Western Standard Time",offset:n.UTC_PLUS_8_45},Ct={dst:{is:!0,uses:!0},id:"AEDT",name:"Australian Eastern Daylight Saving Time",offset:n.UTC_PLUS_11},Xt={dst:{is:!1,uses:!0},id:"AEST",name:"Australian Eastern Standard Time",offset:n.UTC_PLUS_10},al={dst:{is:!1,uses:!0},id:"AET",name:"Australian Eastern Time",offset:n.UTC_PLUS_10},el={dst:{is:!1,uses:!0},id:"AWST",name:"Australian Western Standard Time",offset:n.UTC_PLUS_8},il={dst:{is:!1,uses:!0},id:"AZT",name:"Azerbaijan Time",offset:n.UTC_PLUS_4},nl={dst:{is:!1,uses:!0},id:"AZOT",name:"Azores Standard Time",offset:n.UTC_MINUS_1},sl={dst:{is:!0,uses:!0},id:"AZOST",name:"Azores Summer Time",offset:n.UTC_0},ul={dst:{is:!1,uses:!0},id:"BIT",name:"Baker Island Time",offset:n.UTC_MINUS_12},rl={dst:{is:!1,uses:!0},id:"BST",name:"Bangladesh Standard Time",offset:n.UTC_PLUS_6},tl={dst:{is:!1,uses:!0},id:"BTT",name:"Bhutan Time",offset:n.UTC_PLUS_6},ll={dst:{is:!1,uses:!0},id:"BOT",name:"Bolivia Time",offset:n.UTC_MINUS_4},ol={dst:{is:!1,uses:!0},id:"BST",name:"Bougainville Standard Time",offset:n.UTC_PLUS_11},ml={dst:{is:!0,uses:!0},id:"BRST",name:"Brasilia Summer Time",offset:n.UTC_MINUS_2},cl={dst:{is:!1,uses:!0},id:"BRT",name:"Brasilia Time",offset:n.UTC_MINUS_3},Al={dst:{is:!1,uses:!0},id:"BIOT",name:"British Indian Ocean Time",offset:n.UTC_PLUS_6},fl={dst:{is:!0,uses:!0},id:"BST",name:"British Summer Time",offset:n.UTC_PLUS_1},dl={dst:{is:!1,uses:!0},id:"BNT",name:"Brunei Time",offset:n.UTC_PLUS_8},gl={dst:{is:!1,uses:!0},id:"CVT",name:"Cape Verde Time",offset:n.UTC_MINUS_1},hl={dst:{is:!1,uses:!0},id:"CAT",name:"Central Africa Time",offset:n.UTC_PLUS_2},Il={dst:{is:!0,uses:!0},id:"CDT",name:"Central Daylight Time",offset:n.UTC_MINUS_5},_l={dst:{is:!0,uses:!0},id:"CEST",name:"Central European Summer Time",offset:n.UTC_PLUS_2},pl={dst:{is:!1,uses:!0},id:"CET",name:"Central European Time",offset:n.UTC_PLUS_1},El={dst:{is:!1,uses:!0},id:"WITA",name:"Central Indonesia Time",offset:n.UTC_PLUS_8},Sl={dst:{is:!1,uses:!0},id:"CST",name:"Central Standard Time",offset:n.UTC_MINUS_6},Tl={dst:{is:!1,uses:!0},id:"CT",name:"Central Time",offset:n.UTC_MINUS_5},vl={dst:{is:!1,uses:!0},id:"CWST",name:"Central Western Standard Time",offset:n.UTC_PLUS_8_45},bl={dst:{is:!1,uses:!0},id:"CHST",name:"Chamorro Standard Time",offset:n.UTC_PLUS_10},Bl={dst:{is:!0,uses:!0},id:"CHADT",name:"Chatham Daylight Time",offset:n.UTC_PLUS_13_45},Ul={dst:{is:!1,uses:!0},id:"CHAST",name:"Chatham Standard Time",offset:n.UTC_PLUS_12_45},Nl={dst:{is:!1,uses:!0},id:"CLT",name:"Chile Standard Time",offset:n.UTC_MINUS_4},yl={dst:{is:!0,uses:!0},id:"CLST",name:"Chile Summer Time",offset:n.UTC_MINUS_3},Dl={dst:{is:!1,uses:!0},id:"CST",name:"China Standard Time",offset:n.UTC_PLUS_8},Pl={dst:{is:!1,uses:!0},id:"CHOT",name:"Choibalsan Standard Time",offset:n.UTC_PLUS_8},Fl={dst:{is:!0,uses:!0},id:"CHOST",name:"Choibalsan Summer Time",offset:n.UTC_PLUS_9},kl={dst:{is:!1,uses:!0},id:"CXT",name:"Christmas Island Time",offset:n.UTC_PLUS_7},Ml={dst:{is:!1,uses:!0},id:"CHUT",name:"Chuuk Time",offset:n.UTC_PLUS_10},Ll={dst:{is:!1,uses:!0},id:"CIST",name:"Clippterton Island Standard Time",offset:n.UTC_MINUS_8},wl={dst:{is:!1,uses:!0},id:"CCT",name:"Cocos Standard Time",offset:n.UTC_PLUS_6_30},Gl={dst:{is:!0,uses:!0},id:"COST",name:"Colombia Summer Time",offset:n.UTC_MINUS_4},xl={dst:{is:!1,uses:!0},id:"COT",name:"Colombia Time",offset:n.UTC_MINUS_5},ql={dst:{is:!1,uses:!0},id:"CKT",name:"Cook Island Time",offset:n.UTC_MINUS_10},Kl={dst:{is:!1,uses:!0},id:"UTC",name:"Coordinated Universal Time",offset:n.UTC_0},Ol={dst:{is:!0,uses:!0},id:"CDT",name:"Cuba Daylight Time",offset:n.UTC_MINUS_4},jl={dst:{is:!1,uses:!0},id:"CST",name:"Cuba Standard Time",offset:n.UTC_MINUS_5},Hl={dst:{is:!1,uses:!0},id:"DAVT",name:"Davis Time",offset:n.UTC_PLUS_7},Wl={dst:{is:!1,uses:!0},id:"DDUT",name:"Dumont D'Urville Time",offset:n.UTC_PLUS_10},Vl={dst:{is:!1,uses:!0},id:"EAT",name:"East Africa Time",offset:n.UTC_PLUS_3},Rl={dst:{is:!1,uses:!0},id:"EAST",name:"Easter Island Standard Time",offset:n.UTC_MINUS_6},zl={dst:{is:!0,uses:!0},id:"EASST",name:"Easter Island Summer Time",offset:n.UTC_MINUS_5},Yl={dst:{is:!1,uses:!0},id:"ECT",name:"Eastern Caribbean Time",offset:n.UTC_MINUS_4},Jl={dst:{is:!0,uses:!0},id:"EDT",name:"Eastern Daylight Time",offset:n.UTC_MINUS_4},Zl={dst:{is:!0,uses:!0},id:"EEST",name:"Eastern European Summer Time",offset:n.UTC_PLUS_3},$l={dst:{is:!1,uses:!0},id:"EET",name:"Eastern European Time",offset:n.UTC_PLUS_2},Ql={dst:{is:!0,uses:!0},id:"EGST",name:"Eastern Greenland Summer Time",offset:n.UTC_0},Cl={dst:{is:!1,uses:!0},id:"EGT",name:"Eastern Greenland Time",offset:n.UTC_MINUS_1},Xl={dst:{is:!1,uses:!0},id:"WIT",name:"Eastern Indonesian Time",offset:n.UTC_PLUS_9},ao={dst:{is:!1,uses:!0},id:"EST",name:"Eastern Standard Time",offset:n.UTC_MINUS_5},eo={dst:{is:!1,uses:!0},id:"ET",name:"Eastern Time",offset:n.UTC_MINUS_5},io={dst:{is:!1,uses:!0},id:"ECT",name:"Ecuador Time",offset:n.UTC_MINUS_5},no={dst:{is:!0,uses:!0},id:"FKST",name:"Falkland Islands Summer Time",offset:n.UTC_MINUS_3},so={dst:{is:!1,uses:!0},id:"FKT",name:"Falkland Islands Time",offset:n.UTC_MINUS_4},uo={dst:{is:!1,uses:!0},id:"FNT",name:"Fernando de Noronha Time",offset:n.UTC_MINUS_2},ro={dst:{is:!1,uses:!0},id:"FJT",name:"Fiji Time",offset:n.UTC_PLUS_12},to={dst:{is:!1,uses:!0},id:"GFT",name:"French Guiana Time",offset:n.UTC_MINUS_3},lo={dst:{is:!1,uses:!0},id:"TFT",name:"French Southern and Antarctic Time",offset:n.UTC_PLUS_5},oo={dst:{is:!1,uses:!0},id:"FET",name:"Further Eastern European Time",offset:n.UTC_PLUS_3},mo={dst:{is:!1,uses:!0},id:"GALT",name:"Galapagos Time",offset:n.UTC_MINUS_6},co={dst:{is:!1,uses:!0},id:"GIT",name:"Gambier Island Time",offset:n.UTC_MINUS_9},Ao={dst:{is:!1,uses:!0},id:"GAMT",name:"Gambier Islands Time",offset:n.UTC_MINUS_9},fo={dst:{is:!1,uses:!0},id:"GET",name:"Georgia Standard Time",offset:n.UTC_PLUS_4},go={dst:{is:!1,uses:!0},id:"GILT",name:"Gilbert Island Time",offset:n.UTC_PLUS_12},ho={dst:{is:!1,uses:!0},id:"GMT",name:"Greenwich Mean Time",offset:n.UTC_0},Io={dst:{is:!1,uses:!0},id:"GST",name:"Gulf Standard Time",offset:n.UTC_PLUS_4},_o={dst:{is:!1,uses:!0},id:"GYT",name:"Guyana Time",offset:n.UTC_MINUS_4},po={dst:{is:!0,uses:!0},id:"HDT",name:"Hawaii-Aleutian Daylight Time",offset:n.UTC_MINUS_9},Eo={dst:{is:!1,uses:!0},id:"HST",name:"Hawaii-Aleutian Standard Time",offset:n.UTC_MINUS_10},So={dst:{is:!1,uses:!0},id:"HMT",name:"Heard and McDonald Islands Time",offset:n.UTC_PLUS_5},To={dst:{is:!1,uses:!0},id:"HKT",name:"Hong Kong Time",offset:n.UTC_PLUS_8},vo={dst:{is:!0,uses:!0},id:"HOVST",name:"Hovd Summer Time",offset:n.UTC_PLUS_8},bo={dst:{is:!1,uses:!0},id:"HOVT",name:"Hovd Time",offset:n.UTC_PLUS_7},Bo={dst:{is:!1,uses:!0},id:"IOT",name:"Indian Ocean Time",offset:n.UTC_PLUS_3},Uo={dst:{is:!1,uses:!0},id:"IST",name:"Indian Standard Time",offset:n.UTC_PLUS_5_30},No={dst:{is:!1,uses:!0},id:"ICT",name:"Indochina Time",offset:n.UTC_PLUS_7},yo={dst:{is:!1,uses:!0},id:"IDLW",name:"International Day Line West Time",offset:n.UTC_MINUS_12},Do={dst:{is:!0,uses:!0},id:"IRDT",name:"Iran Daylight Time",offset:n.UTC_PLUS_4_30},Po={dst:{is:!1,uses:!0},id:"IRST",name:"Iran Standard Time",offset:n.UTC_PLUS_3_30},Fo={dst:{is:!1,uses:!0},id:"IST",name:"Irish Standard Time",offset:n.UTC_PLUS_1},ko={dst:{is:!1,uses:!0},id:"IRKT",name:"Irkutsk Time",offset:n.UTC_PLUS_8},Mo={dst:{is:!0,uses:!0},id:"IDT",name:"Israel Daylight Time",offset:n.UTC_PLUS_3},Lo={dst:{is:!1,uses:!0},id:"IST",name:"Israel Standard Time",offset:n.UTC_PLUS_2},wo={dst:{is:!1,uses:!0},id:"JST",name:"Japan Standard Time",offset:n.UTC_PLUS_9},Go={dst:{is:!1,uses:!0},id:"KALT",name:"Kaliningrad Time",offset:n.UTC_PLUS_2},xo={dst:{is:!1,uses:!0},id:"KAMT",name:"Kamchatka Time",offset:n.UTC_PLUS_12},qo={dst:{is:!1,uses:!0},id:"KST",name:"Korea Standard Time",offset:n.UTC_PLUS_9},Ko={dst:{is:!1,uses:!0},id:"KOST",name:"Kosrae Time",offset:n.UTC_PLUS_11},Oo={dst:{is:!1,uses:!0},id:"KRAT",name:"Krasnoyarsk Time",offset:n.UTC_PLUS_7},jo={dst:{is:!1,uses:!0},id:"KGT",name:"Kyrgyzstan Time",offset:n.UTC_PLUS_6},Ho={dst:{is:!1,uses:!0},id:"LINT",name:"Line Islands Time",offset:n.UTC_PLUS_14},Wo={dst:{is:!1,uses:!0},id:"LHST",name:"Lord Howe Standard Time",offset:n.UTC_PLUS_10_30},Vo={dst:{is:!1,uses:!0},id:"LHST",name:"Lord Howe Summer Time",offset:n.UTC_PLUS_11},Ro={dst:{is:!1,uses:!0},id:"MIST",name:"Macquarie Island Station Time",offset:n.UTC_PLUS_11},zo={dst:{is:!1,uses:!0},id:"MAGT",name:"Magadan Time",offset:n.UTC_PLUS_12},Yo={dst:{is:!1,uses:!0},id:"MST",name:"Malaysia Standard Time",offset:n.UTC_PLUS_8},Jo={dst:{is:!1,uses:!0},id:"MYT",name:"Malaysia Time",offset:n.UTC_PLUS_8},Zo={dst:{is:!1,uses:!0},id:"MVT",name:"Maldives Time",offset:n.UTC_PLUS_5},$o={dst:{is:!1,uses:!0},id:"MART",name:"Marquesas Islands Time",offset:n.UTC_PLUS_9_30},Qo={dst:{is:!1,uses:!0},id:"MHT",name:"Marshall Islands Time",offset:n.UTC_PLUS_12},Co={dst:{is:!1,uses:!0},id:"MUT",name:"Mauritius Time",offset:n.UTC_PLUS_4},Xo={dst:{is:!1,uses:!0},id:"MAWT",name:"Mawson Station Time",offset:n.UTC_PLUS_5},a0={dst:{is:!1,uses:!0},id:"MEDT",name:"Middle European Summer Time",offset:n.UTC_PLUS_2},e0={dst:{is:!1,uses:!0},id:"MET",name:"Middle European Time",offset:n.UTC_PLUS_1},i0={dst:{is:!1,uses:!0},id:"MSK",name:"Moscow Time",offset:n.UTC_PLUS_3},n0={dst:{is:!1,uses:!0},id:"MDT",name:"Mountain Daylight Time",offset:n.UTC_MINUS_6},s0={dst:{is:!1,uses:!0},id:"MST",name:"Mountain Standard Time",offset:n.UTC_MINUS_7},u0={dst:{is:!1,uses:!0},id:"MMT",name:"Myanmar Standard Time",offset:n.UTC_PLUS_6_30},r0={dst:{is:!1,uses:!0},id:"NCT",name:"Nepal Time",offset:n.UTC_PLUS_5_45},t0={dst:{is:!1,uses:!0},id:"NRT",name:"Nauru Time",offset:n.UTC_PLUS_12},l0={dst:{is:!1,uses:!0},id:"NCT",name:"New Caledonia Time",offset:n.UTC_PLUS_11},o0={dst:{is:!1,uses:!0},id:"NZDT",name:"New Zealand Daylight Time",offset:n.UTC_PLUS_13},m0={dst:{is:!1,uses:!0},id:"NZST",name:"New Zealand Standard Time",offset:n.UTC_PLUS_12},c0={dst:{is:!1,uses:!0},id:"NDT",name:"Newfoundland Daylight Time",offset:n.UTC_MINUS_2_30},A0={dst:{is:!1,uses:!0},id:"NT",name:"Newfoundland Time",offset:n.UTC_MINUS_3_30},f0={dst:{is:!1,uses:!0},id:"NUT",name:"Niue Time",offset:n.UTC_MINUS_11},d0={dst:{is:!1,uses:!0},id:"NFT",name:"Norfolk Island Time",offset:n.UTC_PLUS_11},g0={dst:{is:!1,uses:!0},id:"NOVT",name:"Novosibirsk Time",offset:n.UTC_PLUS_7},h0={dst:{is:!1,uses:!0},id:"OMST",name:"Omsk Time",offset:n.UTC_PLUS_6},I0={dst:{is:!1,uses:!0},id:"ORAT",name:"Oral Time",offset:n.UTC_PLUS_5},_0={dst:{is:!1,uses:!0},id:"PDT",name:"Pacific Daylight Time",offset:n.UTC_MINUS_7},p0={dst:{is:!1,uses:!0},id:"PST",name:"Pacific Standard Time",offset:n.UTC_MINUS_8},E0={dst:{is:!1,uses:!0},id:"PKT",name:"Pakistan Standard Time",offset:n.UTC_PLUS_5},S0={dst:{is:!1,uses:!0},id:"PWT",name:"Palau Time",offset:n.UTC_PLUS_9},T0={dst:{is:!1,uses:!0},id:"PGT",name:"Papua New Guinea Time",offset:n.UTC_PLUS_10},v0={dst:{is:!1,uses:!0},id:"PYST",name:"Paraguay Summer Time",offset:n.UTC_MINUS_3},b0={dst:{is:!1,uses:!0},id:"PYT",name:"Paraguay Time",offset:n.UTC_MINUS_4},B0={dst:{is:!1,uses:!0},id:"PET",name:"Peru Time",offset:n.UTC_MINUS_5},U0={dst:{is:!1,uses:!0},id:"PHST",name:"Philippine Standard Time",offset:n.UTC_PLUS_8},N0={dst:{is:!1,uses:!0},id:"PHT",name:"Philippine Time",offset:n.UTC_PLUS_8},y0={dst:{is:!1,uses:!0},id:"PHOT",name:"Phoenix Island Time",offset:n.UTC_PLUS_13},D0={dst:{is:!1,uses:!0},id:"PST",name:"Pitcairn Time",offset:n.UTC_MINUS_8},P0={dst:{is:!1,uses:!0},id:"PONT",name:"Pohnpei Standard Time",offset:n.UTC_PLUS_11},F0={dst:{is:!1,uses:!0},id:"RET",name:"Reunion Time",offset:n.UTC_PLUS_4},k0={dst:{is:!1,uses:!0},id:"ROTT",name:"Rothera Research Station Time",offset:n.UTC_MINUS_3},M0={dst:{is:!1,uses:!0},id:"PMDT",name:"Saint Pierre and Miquelon Daylight Time",offset:n.UTC_MINUS_2},L0={dst:{is:!1,uses:!0},id:"PMST",name:"Saint Pierre and Miquelon Standard Time",offset:n.UTC_MINUS_3},w0={dst:{is:!1,uses:!0},id:"SAKT",name:"Sakhalin Island Time",offset:n.UTC_PLUS_11},G0={dst:{is:!1,uses:!0},id:"SAMT",name:"Samara Time",offset:n.UTC_PLUS_4},x0={dst:{is:!1,uses:!0},id:"SDT",name:"Samoa Daylight Time",offset:n.UTC_MINUS_10},q0={dst:{is:!1,uses:!0},id:"SST",name:"Samoa Standard Time",offset:n.UTC_MINUS_11},K0={dst:{is:!1,uses:!0},id:"SCT",name:"Seychelles Time",offset:n.UTC_PLUS_4},O0={dst:{is:!1,uses:!0},id:"SYOT",name:"Showa Station Time",offset:n.UTC_PLUS_3},j0={dst:{is:!1,uses:!0},id:"SST",name:"Singapore Standard Time",offset:n.UTC_PLUS_8},H0={dst:{is:!1,uses:!0},id:"SGT",name:"Singapore Time",offset:n.UTC_PLUS_8},W0={dst:{is:!1,uses:!0},id:"SBT",name:"Solomon Islands Time",offset:n.UTC_PLUS_11},V0={dst:{is:!1,uses:!0},id:"SAST",name:"South African Standard Time",offset:n.UTC_PLUS_2},R0={dst:{is:!1,uses:!0},id:"GST",name:"South Georgia and the South Sandwich Islands Time",offset:n.UTC_MINUS_2},z0={dst:{is:!1,uses:!0},id:"SRET",name:"Srednekolymsk Time",offset:n.UTC_PLUS_11},Y0={dst:{is:!1,uses:!0},id:"SLST",name:"Sri Lanka Standard Time",offset:n.UTC_PLUS_5_30},J0={dst:{is:!1,uses:!0},id:"SRT",name:"Suriname Time",offset:n.UTC_MINUS_3},Z0={dst:{is:!1,uses:!0},id:"TAHT",name:"Tahiti Time",offset:n.UTC_MINUS_10},$0={dst:{is:!1,uses:!0},id:"TJT",name:"Tajikistan Time",offset:n.UTC_PLUS_5},Q0={dst:{is:!1,uses:!0},id:"THA",name:"Thailand Standard Time",offset:n.UTC_PLUS_7},C0={dst:{is:!1,uses:!0},id:"TLT",name:"Timor-Leste Time",offset:n.UTC_PLUS_9},X0={dst:{is:!1,uses:!0},id:"TKT",name:"Tokelau Time",offset:n.UTC_PLUS_13},am={dst:{is:!1,uses:!0},id:"TOT",name:"Tonga Time",offset:n.UTC_PLUS_13},em={dst:{is:!1,uses:!0},id:"TRT",name:"Turkey Time",offset:n.UTC_PLUS_3},im={dst:{is:!1,uses:!0},id:"TMT",name:"Turkmenistan Time",offset:n.UTC_PLUS_5},nm={dst:{is:!1,uses:!0},id:"TVT",name:"Tuvalu Time",offset:n.UTC_PLUS_12},sm={dst:{is:!1,uses:!0},id:"ULAT",name:"Ulaanbaatar Standard Time",offset:n.UTC_PLUS_8},um={dst:{is:!1,uses:!0},id:"ULAST",name:"Ulaanbaatar Summer Time",offset:n.UTC_PLUS_9},rm={dst:{is:!1,uses:!0},id:"UYT",name:"Uruguay Standard Time",offset:n.UTC_MINUS_3},tm={dst:{is:!1,uses:!0},id:"UYST",name:"Uruguay Summer Time",offset:n.UTC_MINUS_2},lm={dst:{is:!1,uses:!0},id:"UZT",name:"Uzbekistan Time",offset:n.UTC_PLUS_5},om={dst:{is:!1,uses:!0},id:"VUT",name:"Vanuatu Time",offset:n.UTC_PLUS_11},mm={dst:{is:!1,uses:!0},id:"VET",name:"Venezuela Standard Time",offset:n.UTC_MINUS_4},cm={dst:{is:!1,uses:!0},id:"VLAT",name:"Vladivostok Time",offset:n.UTC_PLUS_10},Am={dst:{is:!1,uses:!0},id:"VOLT",name:"Volgograd Time",offset:n.UTC_PLUS_4},fm={dst:{is:!1,uses:!0},id:"VOST",name:"Vostok Station Time",offset:n.UTC_PLUS_6},dm={dst:{is:!1,uses:!0},id:"WAKT",name:"Wake Island Time",offset:n.UTC_PLUS_12},gm={dst:{is:!1,uses:!0},id:"WAST",name:"West Africa Summer Time",offset:n.UTC_PLUS_2},hm={dst:{is:!1,uses:!0},id:"WAT",name:"West Africa Time",offset:n.UTC_PLUS_1},Im={dst:{is:!1,uses:!0},id:"WGST",name:"West Greenland Summer Time",offset:n.UTC_MINUS_2},_m={dst:{is:!1,uses:!0},id:"WGT",name:"West Greenland Time",offset:n.UTC_MINUS_3},pm={dst:{is:!1,uses:!0},id:"WKT",name:"West Kazakhstan Time",offset:n.UTC_PLUS_5},Em={dst:{is:!1,uses:!0},id:"WEDT",name:"Western European Summer Time",offset:n.UTC_PLUS_1},Sm={dst:{is:!1,uses:!0},id:"WET",name:"Western European Time",offset:n.UTC_0},Tm={dst:{is:!1,uses:!0},id:"WIT",name:"Western Indonesian Time",offset:n.UTC_PLUS_7},vm={dst:{is:!1,uses:!0},id:"WST",name:"Western Standard Time",offset:n.UTC_PLUS_8},bm={dst:{is:!1,uses:!0},id:"YAKT",name:"Yakutsk Time",offset:n.UTC_PLUS_9},Bm={dst:{is:!1,uses:!0},id:"YEKT",name:"Yekaterinburg Time",offset:n.UTC_PLUS_5},Sa=(a=>(a.Africa="Africa",a.Americas="Americas",a.Asia="Asia",a.Europe="Europe",a.Oceania="Oceania",a.Polar="Polar",a))(Sa||{}),Ta=(a=>(a.CentralAmerica="Central America",a.EasternAsia="Eastern Asia",a.EasternEurope="Eastern Europe",a.EasternAfrica="Eastern Africa",a.MiddleAfrica="Middle Africa",a.MiddleEast="Middle East",a.NorthernAfrica="Northern Africa",a.NorthernAmerica="Northern America",a.NorthernEurope="Northern Europe",a.Polynesia="Polynesia",a.SouthAmerica="South America",a.SouthernAfrica="Southern Africa",a.SouthernAsia="Southern Asia",a.SouthernEurope="Southern Europe",a.WesternAfrica="Western Africa",a.WesternAsia="Western Asia",a.WesternEurope="Western Europe",a.WesternAustralia="Western Australia",a))(Ta||{}),Um={Afghanistan:{i18n:{calling_codes:[93],currencies:[Y.AfghanistanAfghani],languages:[e.Pashto,e.Dari,e.Turkmen,e.Uzbek],tz:{offsets:[n.UTC_PLUS_4_30],regions:[u.AsiaKabul],timezones:[s.AfghanistanTime]}},id:t.Afghanistan,info:{flag:{emoji:"\u{1F1E6}\u{1F1EB}",emoji_unicode:"U+1F1E6 U+1F1EB",svg:"https://www.countryflags.io/af/flat/64.svg"},tld:[".af"]},iso:{alpha2:t.Afghanistan,alpha3:"AFG",numeric:"004"},name:{alt_spellings:["AF","Af\u0121\u0101nist\u0101n"],demonym:"Afghan",native:{endonym:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},official:"Islamic Republic of Afghanistan",short:"Afghanistan",translations:{[e.Afrikaans]:"Afghanistan",[e.Albanian]:"Shqip\xEBri",[e.Amharic]:"\u12A0\u134D\u130B\u1295",[e.Arabic]:"\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Basque]:"Afganist\xE1n",[e.Belarusian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Bengali]:"\u0986\u09AB\u0997\u09BE\u09A8\u09BF\u09B8\u09CD\u09A4\u09BE\u09A8",[e.Berber]:"\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F51\u0F7C\u0F53\u0F0B\u0F63\u0F7A\u0F0B\u0F66\u0F90\u0F51\u0F0B\u0F46\u0F0D",[e.Bosnian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Breton]:"Afganistan",[e.Bulgarian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Burmese]:"\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A",[e.Catalan]:"Afganistan",[e.Chinese]:"\u963F\u5BCC\u6C57",[e.Croatian]:"Afganistan",[e.Czech]:"Afganistan",[e.Danish]:"Afghanistan",[e.Dutch]:"Afghanistan",[e.English]:"Afghanistan",[e.Esperanto]:"Afganistan",[e.Estonian]:"Afganistan",[e.Finnish]:"Afghanistan",[e.French]:"Afghanistan",[e.Frisian]:"Afghanistan",[e.Galician]:"Afganist\xE1n",[e.Georgian]:"\u10D0\u10D5\u10E6\u10D0\u10DC\u10D4\u10D7\u10D8",[e.German]:"Afghanistan",[e.Greenlandic]:"Afghanistan",[e.Greek]:"\u0391\u03C6\u03B3\u03B1\u03BD\u03B9\u03C3\u03C4\u03AC\u03BD",[e.Gujarati]:"\u0A85\u0AAB\u0A97\u0ABE\u0AA8\u0ABF\u0AB8\u0ACD\u0AA4\u0ABE\u0AA8",[e.Haitian]:"Afghanistan",[e.Hausa]:"Afghanistan",[e.Hebrew]:"\u05D0\u05E4\u05D2\u05E0\u05D9\u05E1\u05D8\u05DF",[e.Hindi]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Hungarian]:"Afganistan",[e.Icelandic]:"Afghanistan",[e.Igbo]:"Afghanistan",[e.Indonesian]:"Afghanistan",[e.Irish]:"Afghanistan",[e.Italian]:"Afghanistan",[e.Japanese]:"\u30A2\u30D5\u30AC\u30CB\u30B9\u30BF\u30F3",[e.Javanese]:"Afghanistan",[e.Kannada]:"\u0C85\u0CAB\u0C97\u0CBE\u0CA8\u0CBF\u0CB8\u0CCD\u0CA4\u0CBE\u0CA8",[e.Kazakh]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Khmer]:"\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17B7\u1780",[e.Korean]:"\uC544\uD504\uAC00\uB2C8\uC2A4\uD0C4",[e.Kurdish]:"Afghanistan",[e.Kyrgyz]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Lao]:"\u0EAD\u0EB2\u0E9F\u0EB2\u0EA5\u0EBD\u0E99",[e.Latin]:"Afghanistan",[e.Latvian]:"Afghanistan",[e.Lithuanian]:"Afganistanas",[e.Luxembourgish]:"Afghanistan",[e.Macedonian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Malagasy]:"Afghanistan",[e.Malay]:"Afghanistan",[e.Malayalam]:"\u0D05\u0D2B\u0D17\u0D3E\u0D28\u0D3F\u0D38\u0D4D\u0D24\u0D3E\u0D28",[e.Maltese]:"Afghanistan",[e.Maori]:"Afghanistan",[e.Marathi]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Mongolian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Nepali]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Norwegian]:"Afghanistan",[e.Pashto]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Persian]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Polish]:"Afganistan",[e.Portuguese]:"Afghanistan",[e.Punjabi]:"Afghanistan",[e.Romanian]:"Afghanistan",[e.Polish]:"Afganistan",[e.Russian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Samoan]:"Afghanistan",[e.Sanskrit]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Scots]:"Afghanistan",[e.Serbian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Sesotho]:"Afghanistan",[e.Shona]:"Afghanistan",[e.Sindhi]:"Afghanistan",[e.Sinhala]:"\u0D86\u0D9C\u0DCA\u200D\u0DBB\u0DDC\u0D9A\u0DCA\u0D9A\u0DD2\u0DBA\u0DCF\u0DC0",[e.Slovak]:"Afganistan",[e.Slovenian]:"Afganistan",[e.Somali]:"Afghanistan",[e.Spanish]:"Afganist\xE1n",[e.Sudanese]:"Afghanistan",[e.Swahili]:"Afghanistan",[e.Swedish]:"Afghanistan",[e.Tagalog]:"Afghanistan",[e.Tajik]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Tatar]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Tamil]:"\u0B86\u0BAA\u0BCD\u0BAA\u0B95\u0BBE\u0BA9\u0BBF\u0BB8\u0BCD\u0BA4\u0BBE\u0BA9\u0BCD",[e.Telugu]:"\u0C06\u0C2B\u0C4D\u0C18\u0C28\u0C3F\u0C38\u0C4D\u0C24\u0C3E\u0C28\u0C4D",[e.Thai]:"\u0E2D\u0E31\u0E1F\u0E01\u0E32\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19",[e.Tibetan]:"\u0F68\u0F55\u0F0B\u0F42\u0F7A\u0F0B\u0F53\u0F72\u0F66\u0F72\u0F0B\u0F4F\u0F7A\u0F53\u0F66\u0F72\u0F0D",[e.Turkish]:"Afganistan",[e.Ukrainian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Urdu]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Uzbek]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Vietnamese]:"Afghanistan",[e.Welsh]:"Afghanistan",[e.Xhosa]:"Afghanistan",[e.Yiddish]:"Afghanistan",[e.Yoruba]:"Afghanistan",[e.Zulu]:"Afghanistan"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Kabul",total:341e5}},geography:{area:652230,region:Sa.Asia,sub_region:Ta.SouthernAsia},government:{capital:"Kabul",type:"Islamic Emirate"}}},Albania:{i18n:{calling_codes:[355],currencies:[Y.AlbaniaLek],languages:[e.Albanian,e.Greek,e.Turkish],tz:{offsets:[n.UTC_PLUS_1],regions:[u.EuropeBrussels],timezones:[s.CentralEuropeanTime]}},id:t.Albania,info:{flag:{emoji:"\u{1F1E6}\u{1F1F1}",emoji_unicode:"U+1F1E6 U+1F1F1",svg:"https://www.countryflags.io/al/flat/64.svg"},tld:[".al"]},iso:{alpha2:t.Albania,alpha3:"ALB",numeric:"008"},name:{alt_spellings:["AL","Shqip\xEBri","Shqip\xEBria","Shqipnia"],demonym:"Albanian",native:{endonym:"Shqip\xEBri"},official:"Republic of Albania",short:"Albania",translations:{[e.Afrikaans]:"Albania",[e.Albanian]:"Albania",[e.Amharic]:"\u12A0\u120D\u1263\u1295\u12EB",[e.Arabic]:"\u0623\u0644\u0628\u0627\u0646\u064A\u0627",[e.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Basque]:"Albania",[e.Belarusian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Bengali]:"\u0986\u09B2\u09AC\u09BE\u09A8\u09BF\u09AF\u09BC\u09BE",[e.Berber]:"\u0623\u0644\u0628\u0627\u0646\u064A\u0627",[e.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B",[e.Bosnian]:"Albanija",[e.Breton]:"Albania",[e.Bulgarian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Burmese]:"\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A",[e.Catalan]:"Alb\xE0nia",[e.Chinese]:"\u963F\u5C14\u5DF4\u5C3C\u4E9A",[e.Croatian]:"Albanija",[e.Czech]:"Alb\xE1nie",[e.Danish]:"Albanien",[e.Dutch]:"Albani\xEB",[e.English]:"Albania",[e.Esperanto]:"Albanio",[e.Estonian]:"Albaania",[e.Finnish]:"Albania",[e.French]:"Albanie",[e.Frisian]:"Albani\xEB",[e.Galician]:"Alb\xE2nia",[e.Georgian]:"\u10D0\u10DA\u10D1\u10D0\u10DC\u10D8\u10D0",[e.German]:"Albanien",[e.Greenlandic]:"Albania",[e.Greek]:"\u0391\u03BB\u03B2\u03B1\u03BD\u03AF\u03B1",[e.Gujarati]:"\u0A85\u0AB2\u0AAC\u0AA8\u0ABF\u0AAF\u0ABE",[e.Haitian]:"Albanais",[e.Hausa]:"Albania",[e.Hebrew]:"\u05D0\u05DC\u05D1\u05E0\u05D9\u05D4",[e.Hindi]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[e.Hungarian]:"Alb\xE1nia",[e.Icelandic]:"Alb\xFAnir",[e.Igbo]:"Albania",[e.Indonesian]:"Albania",[e.Irish]:"Alb\xE1in",[e.Italian]:"Albania",[e.Japanese]:"\u30A2\u30EB\u30D0\u30CB\u30A2",[e.Javanese]:"Albania",[e.Kannada]:"\u0C85\u0CB2\u0CCD\u0CAC\u0CBE\u0CA8\u0CBF\u0CAF\u0CBE",[e.Kazakh]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Khmer]:"\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17C1\u179F\u17CA\u17B8",[e.Korean]:"\uC54C\uBC14\uB2C8\uC544",[e.Kurdish]:"\u0622\u0644\u0628\u0627\u0646\u06CC\u0627",[e.Kyrgyz]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Lao]:"\u0EAD\u0EB2\u0EA5\u0EB2\u0E99\u0EB5",[e.Latin]:"Albania",[e.Latvian]:"Alb\u0101nija",[e.Lithuanian]:"Albanija",[e.Luxembourgish]:"Albani\xEB",[e.Macedonian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430",[e.Malagasy]:"Albania",[e.Malay]:"Albania",[e.Malayalam]:"\u0D05\u0D32\u0D4D\u0D2C\u0D3E\u0D28\u0D3F\u0D2F\u0D3E",[e.Maltese]:"Albania",[e.Maori]:"Albania",[e.Marathi]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[e.Mongolian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Nepali]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[e.Norwegian]:"Albania",[e.Pashto]:"\u0627\u0627\u0644\u0628\u0627\u0646\u06CC",[e.Persian]:"\u0622\u0644\u0628\u0627\u0646\u06CC",[e.Polish]:"Albania",[e.Portuguese]:"Alb\xE2nia",[e.Punjabi]:"\u0A05\u0A32\u0A2C\u0A28\u0A40\u0A06",[e.Romanian]:"Alb\u0103n",[e.Russian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Samoan]:"Albania",[e.Sanskrit]:"Albani",[e.Scots]:"Alb\xE0inia",[e.Serbian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430",[e.Sesotho]:"Albania",[e.Shona]:"Albania",[e.Sindhi]:"Albania",[e.Sinhala]:"\u0D87\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA",[e.Slovak]:"Alb\xE1nsko",[e.Slovenian]:"Albanija",[e.Somali]:"Albania",[e.Spanish]:"Albania",[e.Sudanese]:"Albania",[e.Swahili]:"Albania",[e.Swedish]:"Albanien",[e.Tagalog]:"Albania",[e.Tajik]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Tamil]:"\u0B85\u0BB2\u0BCD\u0BAA\u0BBE\u0BA9\u0BBF\u0BAF\u0BBE",[e.Tatar]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Telugu]:"\u0C05\u0C32\u0C4D\u0C2C\u0C3E\u0C28\u0C3F\u0C2F\u0C3E",[e.Thai]:"\u0E2D\u0E31\u0E25\u0E41\u0E1A\u0E19\u0E34\u0E19\u0E35",[e.Tibetan]:"\u0F68\u0F63\u0F0B\u0F56\u0F72\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F72",[e.Turkish]:"Albaniye",[e.Ukrainian]:"\u0410\u043B\u0431\u0430\u043D\u0456\u044F",[e.Urdu]:"\u0622\u0644\u0628\u0627\u0646\u06CC",[e.Uzbek]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Vietnamese]:"Albanie",[e.Welsh]:"Albania",[e.Xhosa]:"Albania",[e.Yiddish]:"\u05D0\u05DC\u05D1\u05E0\u05D9\u05E9",[e.Yoruba]:"Albania",[e.Zulu]:"Albania"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Tirana",total:2853e3}},geography:{area:28748,region:Sa.Europe,sub_region:Ta.SouthernEurope},government:{capital:"Tirana",type:"Republic"}}},Algeria:{i18n:{calling_codes:[213],currencies:[Y.AlgeriaDinar],languages:[e.Arabic,e.French,e.Berber,e.Tamazight],tz:{offsets:[n.UTC_PLUS_1,n.UTC_PLUS_2],regions:[u.AfricaAlgiers],timezones:[s.CentralEuropeanTime]}},id:t.Algeria,info:{flag:{emoji:"\u{1F1E9}\u{1F1FF}",emoji_unicode:"U+1F1E9 U+1F1FF",svg:"https://www.countryflags.io/dz/flat/64.svg"},tld:[".dz",".\u062C\u0632\u0627\u0626\u0631"]},iso:{alpha2:t.Algeria,alpha3:"DZA",numeric:"012"},name:{alt_spellings:["DZ","Dzayer","Alg\xE9rie"],demonym:"Algerian",native:{endonym:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631"},official:"People's Democratic Republic of Algeria",short:"Algeria",translations:{[e.Afrikaans]:"Algerije",[e.Albanian]:"Algeria",[e.Amharic]:"\u12A0\u120D\u1300\u122D\u1235",[e.Arabic]:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631",[e.Armenian]:"\u0531\u056C\u0563\u0578\u0580\u056B\u0561",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043B\u0436\u0438\u0440",[e.Basque]:"Algeria",[e.Belarusian]:"\u0410\u043B\u0436\u0438\u0440",[e.Bengali]:"\u0986\u09B2\u099C\u09C7\u09B0",[e.Berber]:"\u062C\u0632\u0627\u0626\u0631",[e.Bhutani]:"\u0F62\u0FAB\u0F7C\u0F44\u0F0B\u0F41",[e.Bosnian]:"Al\u017Eir",[e.Breton]:"Algeria",[e.Bulgarian]:"\u0410\u043B\u0436\u0438\u0440",[e.Burmese]:"\u1021\u102C\u101B\u1015\u103A",[e.Catalan]:"Alg\xE8ria",[e.Chinese]:"\u963F\u5C14\u53CA\u5229\u4E9A",[e.Croatian]:"Al\u017Eir",[e.Czech]:"Al\u017E\xEDrsko",[e.Danish]:"Algeriet",[e.Dutch]:"Algerije",[e.English]:"Algeria",[e.Esperanto]:"Al\u011Derio",[e.Estonian]:"Al\u017Eira",[e.Finnish]:"Algeria",[e.French]:"Alg\xE9rie",[e.Frisian]:"Algeri\xEB",[e.Galician]:"Alxeria",[e.Georgian]:"\u10D0\u10DA\u10D2\u10D8\u10E3\u10E0\u10D8",[e.German]:"Algerien",[e.Greenlandic]:"Algeria",[e.Greek]:"\u0391\u03BB\u03B3\u03B5\u03C1\u03AF\u03B1",[e.Gujarati]:"\u0A86\u0AB2\u0AC7\u0A97\u0AB0\u0ABF\u0AAF\u0ABE",[e.Haitian]:"Alg\xE9rie",[e.Hausa]:"Algeria",[e.Hebrew]:"\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4",[e.Hindi]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Hungarian]:"Alg\xE1r",[e.Icelandic]:"Alg\xFAra",[e.Igbo]:"Algeria",[e.Indonesian]:"Aljir",[e.Irish]:"Alg\xE9rie",[e.Italian]:"Algeria",[e.Japanese]:"\u30A2\u30EB\u30B8\u30A7\u30EA\u30A2",[e.Javanese]:"Aljir",[e.Kannada]:"\u0C86\u0CB2\u0CCD\u0C97\u0CC7\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD",[e.Kazakh]:"\u0410\u043B\u0436\u0438\u0440",[e.Khmer]:"\u17A2\u17B6\u179B\u17CB\u1794\u17B6\u1793\u17B8",[e.Korean]:"\uC54C\uC81C\uB9AC",[e.Kurdish]:"\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u062C\u0632\u0627\u06CC\u0631",[e.Kyrgyz]:"\u0410\u043B\u0436\u0438\u0440",[e.Lao]:"\u0EAD\u0EB2\u0EA5\u0EB2\u0E88\u0EB5\u0E99",[e.Latin]:"Algeria",[e.Latvian]:"Al\u017E\u012Brija",[e.Lithuanian]:"Al\u017Eyras",[e.Luxembourgish]:"Algeria",[e.Macedonian]:"\u0410\u043B\u0436\u0438\u0440",[e.Malagasy]:"Alg\xE9rie",[e.Malay]:"Aljir",[e.Malayalam]:"\u0D06\u0D32\u0D02\u0D17\u0D47\u0D30\u0D3F\u0D2F\u0D7B",[e.Maltese]:"Alg\xE9rie",[e.Maori]:"Algeria",[e.Marathi]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Mongolian]:"\u0410\u043B\u0436\u0438\u0440",[e.Nepali]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Norwegian]:"Algeria",[e.Pashto]:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631",[e.Persian]:"\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u0639\u0631\u0628",[e.Polish]:"Algieria",[e.Portuguese]:"Alg\xE9ria",[e.Punjabi]:"\u0A06\u0A32\u0A47\u0A17\u0A40\u0A06",[e.Romanian]:"Algeria",[e.Russian]:"\u0410\u043B\u0436\u0438\u0440",[e.Samoan]:"Algeria",[e.Sanskrit]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Scots]:"Algeria",[e.Serbian]:"\u0410\u043B\u0436\u0438\u0440",[e.Sesotho]:"Algeria",[e.Shona]:"Algeria",[e.Sindhi]:"Algeria",[e.Sinhala]:"\u0D86\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA",[e.Slovak]:"Al\u017E\xEDrsko",[e.Slovenian]:"Al\u017Eir",[e.Somali]:"Algeria",[e.Spanish]:"Algeria",[e.Sudanese]:"Aljir",[e.Swahili]:"Aljir",[e.Swedish]:"Algeriet",[e.Tagalog]:"Algeria",[e.Tajik]:"\u0410\u043B\u0436\u0438\u0440",[e.Tamil]:"\u0B86\u0BB2\u0BCD\u0B95\u0BC7\u0BB0\u0BBF\u0BAF\u0BBE",[e.Tatar]:"\u0410\u043B\u0436\u0438\u0440",[e.Telugu]:"\u0C06\u0C32\u0C4D\u0C17\u0C47\u0C30\u0C3F\u0C2F\u0C3E",[e.Thai]:"\u0E2D\u0E32\u0E23\u0E32\u0E01\u0E2D\u0E19",[e.Tibetan]:"\u0F68\u0F63\u0F9F\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F61\u0F72",[e.Turkish]:"Cezayir",[e.Ukrainian]:"\u0410\u043B\u0436\u0438\u0440",[e.Urdu]:"\u0622\u0644\u062C\u06CC\u0631",[e.Uzbek]:"\u0410\u043B\u0436\u0438\u0440",[e.Vietnamese]:"\u1EA2\u0301\u1EA1\u1EA3\u1EAD\u1EB5",[e.Welsh]:"Algeria",[e.Xhosa]:"Algeria",[e.Yiddish]:"\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4",[e.Yoruba]:"Algeria",[e.Zulu]:"Algeria"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Oran",total:371e5}},geography:{area:2381740,region:Sa.Africa,sub_region:Ta.NorthernAfrica},government:{capital:"Algiers",type:"Republic"}}},AmericanSamoa:{i18n:{calling_codes:[1684],currencies:[Y.AmericanSamoaTala],languages:[e.English,e.Samoan],tz:{offsets:[n.UTC_MINUS_11],regions:[u.PacificSamoa],timezones:[s.SamoaStandardTime]}},id:t.AmericanSamoa,info:{flag:{emoji:"\u{1F1E6}\u{1F1F8}",emoji_unicode:"U+1F1E6 U+1F1F8",svg:"https://www.countryflags.io/as/flat/64.svg"},tld:[".as"]},iso:{alpha2:t.AmericanSamoa,alpha3:"ASM",numeric:"016"},name:{alt_spellings:["AS","Amerika S\u0101moa","Amelika S\u0101moa","S\u0101moa Amelika"],demonym:"American Samoan",native:{endonym:"American Samoa"},official:"American Samoa",short:"American Samoa",translations:{[e.Afrikaans]:"Amerikaans Samoa",[e.Albanian]:"Samoa Amerikane",[e.Amharic]:"\u1233\u121E\u12A0\u122D",[e.Arabic]:"\u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629",[e.Armenian]:"\u054D\u0561\u0570\u0561\u0574\u0561\u056C\u056B\u0561",[e.Azerbaijani]:"Samoa Amerikana",[e.Bashkir]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0421\u0430\u043C\u043E\u0430",[e.Basque]:"Samoa Amerikana",[e.Belarusian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430",[e.Bengali]:"\u0986\u09AE\u09C7\u09B0\u09BF\u0995\u09BE\u09A8 \u09B8\u09BE\u09AE\u09CB\u09AF\u09BC\u09BE",[e.Berber]:"\u062C\u0632\u0631 \u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629",[e.Bhutani]:"\u0F68\u0F62\u0F92\u0FB1\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F58\u0F44\u0F66\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F66\u0F90\u0F56\u0F66\u0F0B\u0F62\u0F92\u0FB1\u0F74\u0F51\u0F0B\u0F46\u0F7A\u0F53\u0F0B\u0F54\u0F7C\u0F0D",[e.Bosnian]:"Ameri\u010Dka Samoa",[e.Breton]:"Samoa Amerikan",[e.Bulgarian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Burmese]:"\u1021\u1019\u1039\u1038\u1019\u101B\u102D\u102F\u1018\u102C\u101E\u102C",[e.Catalan]:"Samoa Americana",[e.Chinese]:"\u7F8E\u5C5E\u8428\u6469\u4E9A",[e.Croatian]:"Ameri\u010Dka Samoa",[e.Czech]:"Americk\xE1 Samoa",[e.Danish]:"Amerikansk Samoa",[e.Dutch]:"Amerikaans Samoa",[e.English]:"American Samoa",[e.Esperanto]:"Samoa Amerika",[e.Estonian]:"Ameerika Samoa",[e.Finnish]:"Amerikka Samoa",[e.French]:"American Samoa",[e.Frisian]:"Amerikaans Samoa",[e.Galician]:"Samoa Americana",[e.Georgian]:"\u10D0\u10DB\u10D4\u10E0\u10D8\u10D9\u10D8\u10E1 \u10E1\u10D0\u10DB\u10DD\u10D0",[e.German]:"Amerikanisch-Samoa",[e.Greenlandic]:"Amerikaans Samoa",[e.Greek]:"\u0391\u03BC\u03B5\u03C1\u03B9\u03BA\u03B1\u03BD\u03B9\u03BA\u03AE \u03A3\u03B1\u03BC\u03CC\u03B1",[e.Gujarati]:"\u0A86\u0AAE\u0AC7\u0AB0\u0ABF\u0A95\u0AA8 \u0AB8\u0ABE\u0AAE\u0ACB\u0AAF\u0ABE",[e.Haitian]:"Amerikaans Samoa",[e.Hausa]:"Amerikaans Samoa",[e.Hebrew]:"\u05D0\u05DE\u05E8\u05D9\u05E7\u05E0\u05D9\u05D4 \u05E1\u05DE\u05D5\u05D0\u05D4",[e.Hindi]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Hungarian]:"Amerikai Szamoa",[e.Icelandic]:"Amerikai Szamoa",[e.Igbo]:"Ikina Amerika",[e.Indonesian]:"Samoa Amerika",[e.Irish]:"Samoa Amerikana",[e.Italian]:"Samoa Americane",[e.Japanese]:"\u30A2\u30E1\u30EA\u30AB\u9818\u30B5\u30E2\u30A2",[e.Javanese]:"Samoa Amerika",[e.Kannada]:"\u0C85\u0CAE\u0CC7\u0CB0\u0CBF\u0C95\u0CA8\u0CCD \u0CB8\u0CAE\u0CCB\u0C86",[e.Kazakh]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[e.Khmer]:"\u17A2\u17B6\u1798\u17C9\u17B6\u179A\u17B8\u179F\u17D2\u178F\u1784\u17CB",[e.Korean]:"\uC544\uBA54\uB9AC\uCE74 \uC0AC\uBAA8\uC544",[e.Kurdish]:"Amerikaans Samoa",[e.Kyrgyz]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[e.Lao]:"\u0EAD\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94",[e.Latin]:"Samoa Amerikana",[e.Latvian]:"Amerikas Samoa",[e.Lithuanian]:"Amerikos Samoa",[e.Luxembourgish]:"Amerikaans Samoa",[e.Macedonian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Malagasy]:"Samoa Amerika",[e.Malay]:"Amerika Samo",[e.Malayalam]:"\u0D05\u0D2E\u0D47\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D28\u0D4D\u0D31\u0D4D \u0D38\u0D2E\u0D4B\u0D06",[e.Maltese]:"Samoa Amerika",[e.Maori]:"Samoa Amerika",[e.Marathi]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Mongolian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[e.Nepali]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Norwegian]:"Amerikansk Samoa",[e.Pashto]:"\u0627\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627",[e.Persian]:"\u0622\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627",[e.Polish]:"Samoa Ameryka\u0144skie",[e.Portuguese]:"Samoa Americana",[e.Punjabi]:"\u0A05\u0A2E\u0A30\u0A40\u0A15\u0A40 \u0A38\u0A3E\u0A2E\u0A4B\u0A06",[e.Romanian]:"Samoa americane",[e.Russian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430",[e.Samoan]:"Samoa Amerika",[e.Sanskrit]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Scots]:"Amerikaans Samoa",[e.Serbian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Sesotho]:"Amerikaans Samoa",[e.Shona]:"Amerikaans Samoa",[e.Sindhi]:"Amerikaans Samoa",[e.Sinhala]:"\u0D86\u0DBB\u0DCA\u0DA2\u0DD2\u0DB1\u0DCF\u0DB1\u0DD4 \u0DC3\u0DD0\u0DB8\u0DD0\u0DBD\u0DCA\u0DC0",[e.Slovak]:"Amerikaans Samoa",[e.Slovenian]:"Amerikaans Samoa",[e.Somali]:"Amerikaans Samoa",[e.Spanish]:"Samoa Americana",[e.Sudanese]:"Amerikaans Samoa",[e.Swahili]:"Amerikaans Samoa",[e.Swedish]:"Amerikansk Samoa",[e.Tagalog]:"Amerikaans Samoa",[e.Tajik]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[e.Tamil]:"\u0B85\u0BAE\u0BC6\u0BB0\u0BBF\u0B95\u0BCD \u0B9A\u0BAE\u0BCB\u0BB5\u0BBE",[e.Tatar]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[e.Telugu]:"\u0C05\u0C2E\u0C46\u0C30\u0C3F\u0C15\u0C4D \u0C38\u0C2E\u0C4B\u0C35\u0C3E",[e.Thai]:"\u0E2A\u0E2B\u0E23\u0E32\u0E0A\u0E2D\u0E32\u0E13\u0E32\u0E08\u0E31\u0E01\u0E23\u0E41\u0E2D\u0E1F\u0E23\u0E34\u0E01\u0E32",[e.Tibetan]:"\u0F68\u0F7A\u0F0B\u0F62\u0F72\u0F0B\u0F40\u0F0B\u0F68\u0F7A\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F74\u0F0B\u0F61\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F40",[e.Turkish]:"Amerikan Samoas\u0131",[e.Ukrainian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u044C\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Urdu]:"\u0627\u0645\u0631\u06CC\u06A9\u06CC \u0633\u0645\u0648\u0627",[e.Uzbek]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[e.Vietnamese]:"Amerikaans Samoa",[e.Welsh]:"Amerikaans Samoa",[e.Xhosa]:"Amerikaans Samoa",[e.Yiddish]:"Amerikaans Samoa",[e.Yoruba]:"Amerikaans Samoa",[e.Zulu]:"Amerikaans Samoa"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Pago Pago",total:558e3}},geography:{area:199,region:Sa.Oceania,sub_region:Ta.Polynesia},government:{capital:"Pago Pago",type:"Nonmetropolitan Territory of the US"}}},Andorra:{i18n:{calling_codes:[376],currencies:[Y.Euro],languages:[e.Catalan,e.Spanish],tz:{offsets:[n.UTC_PLUS_1,n.UTC_PLUS_2],regions:[u.EuropeAndorra],timezones:[s.CentralEuropeanTime]}},id:t.Andorra,info:{flag:{emoji:"\u{1F1E6}\u{1F1F4}",emoji_unicode:"U+1F1E6 U+1F1F4",svg:"https://www.countryflags.io/ad/flat/64.svg"},tld:[".ad"]},iso:{alpha2:t.Andorra,alpha3:"AND",numeric:"020"},name:{alt_spellings:["AD","Principality of Andorra","Principat d'Andorra"],demonym:"Andorran",native:{endonym:"Andorra"},official:"Principality of Andorra",short:"Andorra",translations:{[e.Afrikaans]:"Andorra",[e.Albanian]:"Andorra",[e.Amharic]:"\u12A0\u1295\u12F6\u122B",[e.Arabic]:"\u0623\u0646\u062F\u0648\u0631\u0627",[e.Armenian]:"\u0540\u0561\u0576\u0564\u0561\u0580\u0561\u057E\u0561\u0575\u0584",[e.Azerbaijani]:"Andorra",[e.Bashkir]:"\u0410\u043D\u0434\u043E\u0440\u0430",[e.Basque]:"Andorra",[e.Belarusian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Bengali]:"\u0985\u09A8\u09CD\u09A1\u09CB\u09B0\u09BE",[e.Berber]:"\u0623\u0646\u062F\u0648\u0631\u0627",[e.Bhutani]:"\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B",[e.Bosnian]:"Andora",[e.Breton]:"Andorra",[e.Bulgarian]:"\u0410\u043D\u0434\u043E\u0440\u0430",[e.Burmese]:"\u1021\u1014\u1039\u1010\u102C\u101B\u102D\u102F\u1038",[e.Catalan]:"Andorra",[e.Chinese]:"\u5B89\u9053\u5C14",[e.Croatian]:"Andora",[e.Czech]:"Andorra",[e.Danish]:"Andorra",[e.Dutch]:"Andorra",[e.English]:"Andorra",[e.Esperanto]:"Andora",[e.Estonian]:"Andorra",[e.Finnish]:"Andorra",[e.French]:"Andorra",[e.Frisian]:"Andorra",[e.Galician]:"Andorra",[e.Georgian]:"\u12A0\u1295\u12F6\u122B",[e.German]:"Andorra",[e.Greek]:"\u0391\u03BD\u03B4\u03CC\u03C1\u03B1",[e.Hebrew]:"\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4",[e.Hindi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Hungarian]:"Andorra",[e.Icelandic]:"Andorra",[e.Igbo]:"Andorra",[e.Indonesian]:"Andorra",[e.Irish]:"Andorra",[e.Italian]:"Andorra",[e.Japanese]:"\u30A2\u30F3\u30C9\u30E9",[e.Javanese]:"Andorra",[e.Kannada]:"\u0C85\u0C82\u0CA1\u0CCB\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD",[e.Kazakh]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Khmer]:"\u17A2\u1784\u17CB\u178A\u17B6\u179A\u17B6",[e.Korean]:"\uC548\uB3C4\uB77C",[e.Kurdish]:"Andorra",[e.Kyrgyz]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Lao]:"\u0EAD\u0EB1\u0E99\u0EC2\u0E94\u0EA3\u0EB2",[e.Latin]:"Andorra",[e.Latvian]:"Andora",[e.Lithuanian]:"Andora",[e.Luxembourgish]:"Andorra",[e.Macedonian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Malagasy]:"Andorra",[e.Malay]:"Andorra",[e.Malayalam]:"\u0D05\u0D02\u0D21\u0D4B\u0D30\u0D3F\u0D2F\u0D28\u0D4D",[e.Maltese]:"Andorra",[e.Maori]:"Andorra",[e.Marathi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Mongolian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Nepali]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Norwegian]:"Andorra",[e.Pashto]:"\u0622\u0646\u062F\u0648\u0631\u0627",[e.Persian]:"\u0622\u0646\u062F\u0648\u0631\u0627",[e.Polish]:"Andora",[e.Portuguese]:"Andorra",[e.Punjabi]:"\u0A05\u0A70\u0A21\u0A4B\u0A30\u0A3E",[e.Romanian]:"Andorra",[e.Russian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Samoan]:"Andorra",[e.Sanskrit]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Scots]:"Andorra",[e.Serbian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Sesotho]:"Andorra",[e.Shona]:"Andorra",[e.Sindhi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Sinhala]:"\u0D86\u0DB1\u0DCA\u0DAF\u0DDA",[e.Slovak]:"Andorra",[e.Slovenian]:"Andora",[e.Somali]:"Andorra",[e.Spanish]:"Andorra",[e.Sudanese]:"Andorra",[e.Swahili]:"Andorra",[e.Swedish]:"Andorra",[e.Tagalog]:"Andorra",[e.Tajik]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Tamil]:"\u0B85\u0BA9\u0BCB\u0BB0\u0BCD\u0B9F\u0BBE",[e.Tatar]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Telugu]:"\u0C05\u0C02\u0C21\u0C4B\u0C30\u0C4D\u0C30\u0C3E",[e.Thai]:"\u0E2D\u0E31\u0E19\u0E14\u0E2D\u0E23\u0E4C\u0E23\u0E32",[e.Tibetan]:"\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B",[e.Turkish]:"Andora",[e.Ukrainian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Urdu]:"\u0622\u0646\u062F\u0648\u0631\u0627",[e.Uzbek]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Vietnamese]:"Andorra",[e.Welsh]:"Andorra",[e.Xhosa]:"Andorra",[e.Yiddish]:"\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4",[e.Yoruba]:"Andorra",[e.Zulu]:"Andorra"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Andorra la Vella",total:78e3}},geography:{area:468,region:Sa.Europe,sub_region:Ta.SouthernEurope},government:{capital:"Andorra la Vella",type:"Constitutional Monarchy"}}},Angola:{i18n:{calling_codes:[244],currencies:[Y.AngolaKwanza],languages:[e.Portuguese,e.Spanish,e.French,e.Italian,e.German,e.English],tz:{offsets:[n.UTC_0,n.UTC_PLUS_1,n.UTC_PLUS_2],regions:[u.AfricaLuanda],timezones:[s.WestAfricaTime]}},id:t.Angola,info:{flag:{emoji:"\u{1F1E6}\u{1F1EC}",emoji_unicode:"U+1F1E6 U+1F1EC",svg:"https://www.countryflags.io/ao/flat/64.svg"},tld:[".ao"]},iso:{alpha2:t.Angola,alpha3:"AGO",numeric:"024"},name:{alt_spellings:["AO","Rep\xFAblica de Angola","\u0281\u025Bpublika de an"],demonym:"Angolan",native:{endonym:"Angola"},official:"Republic of Angola",short:"Angola",translations:{[e.Afrikaans]:"Angola",[e.Albanian]:"Ang\xF2la",[e.Amharic]:"\u12A0\u1295\u130E\u120A\u12EB",[e.Arabic]:"\u0623\u0646\u063A\u0648\u0644\u0627",[e.Armenian]:"\u0540\u0561\u0576\u0563\u0561\u056C\u0561\u056F\u0561",[e.Azerbaijani]:"Ang\u0259l",[e.Bashkir]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Basque]:"Angola",[e.Belarusian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Bengali]:"\u0985\u0999\u09CD\u0997\u09B2\u09BE",[e.Berber]:"Angola",[e.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42",[e.Bosnian]:"Angola",[e.Breton]:"Angola",[e.Bulgarian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Burmese]:"\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A",[e.Catalan]:"Angola",[e.Chinese]:"\u5B89\u54E5\u62C9",[e.Croatian]:"Angola",[e.Czech]:"Angola",[e.Danish]:"Angola",[e.Dutch]:"Angola",[e.English]:"Angola",[e.Esperanto]:"Angolo",[e.Estonian]:"Angola",[e.Finnish]:"Angola",[e.French]:"Angola",[e.Frisian]:"Angola",[e.Galician]:"Angola",[e.Georgian]:"\u10D0\u10DC\u10D2\u10DD\u10DA\u10D0",[e.German]:"Angola",[e.Greenlandic]:"Angola",[e.Greek]:"\u0391\u03B3\u03BA\u03CC\u03BB\u03B1",[e.Gujarati]:"\u0A85\u0A82\u0A97\u0ACB\u0AB2\u0ABE",[e.Haitian]:"Angola",[e.Hausa]:"Angola",[e.Hebrew]:"\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4",[e.Hindi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Hungarian]:"Angola",[e.Icelandic]:"Angola",[e.Igbo]:"Angola",[e.Indonesian]:"Angola",[e.Irish]:"Angola",[e.Italian]:"Angola",[e.Japanese]:"\u30A2\u30F3\u30B4\u30E9",[e.Javanese]:"Anggol",[e.Kannada]:"\u0C85\u0C82\u0C97\u0CCB\u0CB2\u0CBE",[e.Kazakh]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Khmer]:"\u17A2\u1784\u17CB\u1780\u17B6\u179B\u17A2\u1784\u17CB\u1782\u17D2\u179B\u17C1\u179F",[e.Korean]:"\uC559\uACE8\uB77C",[e.Kurdish]:"Angola",[e.Kyrgyz]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Lao]:"\u0EAD\u0EB0\u0E99\u0EB2\u0E94\u0EB2",[e.Latin]:"Angola",[e.Latvian]:"Angola",[e.Lithuanian]:"Angola",[e.Luxembourgish]:"Angola",[e.Macedonian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Malagasy]:"Angola",[e.Malay]:"Angola",[e.Malayalam]:"\u0D05\u0D02\u0D17\u0D4B\u0D33\u0D3E",[e.Maltese]:"Angola",[e.Maori]:"Angola",[e.Marathi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Mongolian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Nepali]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Norwegian]:"Angola",[e.Pashto]:"\u0627\u0646\u06AB\u0648\u0644\u0627",[e.Persian]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Polish]:"Angola",[e.Portuguese]:"Angola",[e.Punjabi]:"\u0A05\u0A19\u0A4D\u0A17\u0A4B\u0A32\u0A3E",[e.Romanian]:"Angole",[e.Russian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Samoan]:"Angola",[e.Sanskrit]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Scots]:"Angola",[e.Serbian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Sesotho]:"Angola",[e.Shona]:"Angola",[e.Sindhi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Sinhala]:"\u0D86\u0D9C\u0DBD\u0DD2\u0DBA\u0DCF\u0DC0",[e.Slovak]:"Angola",[e.Slovenian]:"Angola",[e.Somali]:"Angola",[e.Spanish]:"Angola",[e.Sudanese]:"Angola",[e.Swahili]:"Angola",[e.Swedish]:"Angola",[e.Tagalog]:"Angola",[e.Tajik]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Tamil]:"\u0B85\u0B99\u0BCD\u0B95\u0BCB\u0BB2\u0BBE",[e.Tatar]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Telugu]:"\u0C05\u0C02\u0C17\u0C4B\u0C32\u0C3E",[e.Thai]:"\u0E2D\u0E07\u0E04\u0E4C\u0E01\u0E32\u0E23\u0E2D\u0E32\u0E19\u0E32\u0E21\u0E34\u0E2A\u0E16\u0E32\u0E19",[e.Tibetan]:"\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B",[e.Turkish]:"Angola",[e.Ukrainian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Urdu]:"\u0627\u0646\u06AF\u0648\u0644\u0627",[e.Uzbek]:"Angola",[e.Vietnamese]:"Angola",[e.Xhosa]:"Angola",[e.Welsh]:"Angola",[e.Yiddish]:"\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4",[e.Yoruba]:"Angola",[e.Zulu]:"Angola"}}},Anguilla:{i18n:{calling_codes:[1264],currencies:[Y.DominicaDollar,Y.EastCaribbeanDollar,Y.Euro,Y.UnitedStatesDollar,Y.BritishPound],languages:[e.English,e.Spanish],tz:{offsets:[n.UTC_MINUS_4],regions:[u.AmericaAnguilla],timezones:[s.AtlanticStandardTime]}},id:t.Anguilla,info:{flag:{emoji:"\u{1F1E6}\u{1F1EC}",emoji_unicode:"U+1F1E6 U+1F1EC",svg:"https://www.countryflags.io/ai/flat/64.svg"},tld:[".ai"]},iso:{alpha2:t.Anguilla,alpha3:"AIA",numeric:"660"},name:{alt_spellings:["AI"],demonym:"Anguillian",native:{endonym:"Anguilla"},official:"Anguilla",short:"Anguilla",translations:{[e.Afrikaans]:"Anguilla",[e.Albanian]:"Anguilla",[e.Amharic]:"\u12A0\u1295\u1309\u120B",[e.Arabic]:"\u0623\u0646\u063A\u0648\u064A\u0644\u0627",[e.Armenian]:"\u0531\u0576\u0563\u056B\u056C\u0561",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Basque]:"Angila",[e.Belarusian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Bengali]:"\u0985\u0999\u09CD\u0997\u09C0\u09B2\u09BE",[e.Berber]:"\u0623\u0646\u063A\u0648\u064A\u0644\u0627",[e.Bhutani]:"\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B",[e.Bosnian]:"Angila",[e.Breton]:"Angila",[e.Bulgarian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Burmese]:"\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A",[e.Catalan]:"Angilla",[e.Chinese]:"\u5B89\u572D\u62C9",[e.Croatian]:"Angila",[e.Czech]:"Anguilla",[e.Danish]:"Anguilla",[e.Dutch]:"Anguilla",[e.English]:"Anguilla",[e.Esperanto]:"Angila",[e.Estonian]:"Anguilla",[e.Finnish]:"Anguilla",[e.French]:"Anguilla",[e.Frisian]:"Angila",[e.Galician]:"Anguilla",[e.Georgian]:"\u10D0\u10DC\u10D2\u10D8\u10DA\u10D0",[e.German]:"Anguilla",[e.Greenlandic]:"Anguilla",[e.Greek]:"\u0391\u03BD\u03B3\u03BA\u03C5\u03BB\u03AC",[e.Gujarati]:"\u0A85\u0A82\u0A97\u0ACD\u0AAF\u0ABE\u0AB2\u0ABE",[e.Haitian]:"Anguilla",[e.Hausa]:"Anguilla",[e.Hebrew]:"\u05D0\u05E0\u05D2\u05D5\u05D9\u05D0\u05DC\u05D4",[e.Hindi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Hungarian]:"Anguilla",[e.Icelandic]:"Anguilla",[e.Igbo]:"Anguilla",[e.Indonesian]:"Anguilla",[e.Irish]:"Anguilla",[e.Italian]:"Anguilla",[e.Japanese]:"\u30A2\u30F3\u30AE\u30E9",[e.Javanese]:"Anguilla",[e.Kannada]:"\u0C85\u0C82\u0C97\u0CCD\u0CB5\u0CC7\u0CB2\u0CBE",[e.Kazakh]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Khmer]:"\u17A2\u1784\u17CB\u1780\u17B6\u179A\u17A0\u17D2\u1782\u17B8\u1798",[e.Korean]:"\uC575\uADC8\uB77C",[e.Kurdish]:"Anguilla",[e.Kyrgyz]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Lao]:"\u0EAD\u0EB0\u0E99\u0EB0\u0E88\u0EB3",[e.Latin]:"Anguilla",[e.Latvian]:"Anguilla",[e.Lithuanian]:"Anguilla",[e.Luxembourgish]:"Angilla",[e.Macedonian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Malagasy]:"Angila",[e.Malay]:"Anguilla",[e.Malayalam]:"\u0D05\u0D02\u0D17\u0D4D\u0D35\u0D47\u0D32\u0D3E",[e.Maltese]:"Anguilla",[e.Maori]:"Anguilla",[e.Marathi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Mongolian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Nepali]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Norwegian]:"Anguilla",[e.Pashto]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Persian]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Polish]:"Anguilla",[e.Portuguese]:"Anguilla",[e.Punjabi]:"\u0A05\u0A02\u0A17\u0A40\u0A32\u0A3E",[e.Romanian]:"Anguilla",[e.Russian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Samoan]:"Anguilla",[e.Sanskrit]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Scots]:"Anguilla",[e.Serbian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Sesotho]:"Anguilla",[e.Shona]:"Anguilla",[e.Sindhi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Sinhala]:"\u0D86\u0D82\u0D9C\u0DD2\u0DBD\u0DCF\u0DC0",[e.Slovak]:"Anguilla",[e.Slovenian]:"Anguilla",[e.Somali]:"Anguilla",[e.Spanish]:"Anguilla",[e.Sudanese]:"Anguilla",[e.Swahili]:"Anguilla",[e.Swedish]:"Anguilla",[e.Tagalog]:"Anguilla",[e.Tajik]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Tamil]:"\u0B85\u0B99\u0BCD\u0B95\u0BC8\u0BB2\u0BBE",[e.Tatar]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Telugu]:"\u0C05\u0C02\u0C17\u0C4D\u0C35\u0C47\u0C32\u0C3E",[e.Thai]:"\u0E2D\u0E31\u0E07\u0E01\u0E32\u0E25\u0E32",[e.Tibetan]:"\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B",[e.Turkish]:"Anguilla",[e.Ukrainian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Urdu]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Uzbek]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Vietnamese]:"Anguilla",[e.Welsh]:"Anguilla",[e.Xhosa]:"Anguilla",[e.Yiddish]:"Anguilla",[e.Yoruba]:"Anguilla",[e.Zulu]:"Anguilla"}}},Antarctica:{i18n:{calling_codes:[672],currencies:[Y.UnitedStatesDollar,Y.Euro],languages:[e.English,e.Spanish,e.French,e.Portuguese,e.Italian,e.Dutch,e.German,e.Swedish,e.Norwegian,e.Danish,e.Finnish],tz:{offsets:[n.UTC_PLUS_1,n.UTC_PLUS_2],regions:[u.AntarcticaCasey,u.AntarcticaDavis,u.AntarcticaMcMurdo,u.AntarcticaPalmer,u.AntarcticaRothera],timezones:[s.AtlanticStandardTime,s.CentralTime,s.EasternTime,s.AtlanticStandardTime,s.AzoresStandardTime,s.NewfoundlandStandardTime]}},id:t.Antarctica,info:{flag:{emoji:"\u{1F1E6}\u{1F1F6}",emoji_unicode:"U+1F1E6 U+1F1F6",svg:"https://www.countryflags.io/aq/flat/64.svg"},tld:[".aq"]},iso:{alpha2:t.Antarctica,alpha3:"ATA",numeric:"010"},name:{alt_spellings:["AQ"],demonym:"Antarctican",native:{endonym:"Antarctica"},official:"Antarctica",short:"Antarctica",translations:{[e.Afrikaans]:"Antarctica",[e.Albanian]:"Antarktika",[e.Amharic]:"\u12A0\u1295\u1272\u120D\u12AB\u1293",[e.Arabic]:"\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[e.Armenian]:"\u0540\u0561\u0576\u0561\u0580\u0561\u057F\u056F\u0578",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Basque]:"Antarktika",[e.Belarusian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Bengali]:"\u0985\u09A8\u09CD\u09A4\u09B0\u09BE\u09B6\u09CD\u09AC\u09C0",[e.Berber]:"\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[e.Bhutani]:"\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B",[e.Bosnian]:"Antarktika",[e.Breton]:"Antarktika",[e.Bulgarian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Burmese]:"\u1021\u1014\u1039\u1010\u102C\u101B\u102E\u1038\u101A\u102C\u1038",[e.Catalan]:"Ant\xE0rtida",[e.Chinese]:"\u5357\u6781\u6D32",[e.Croatian]:"Antarktika",[e.Czech]:"Antarktida",[e.Danish]:"Antarktis",[e.Dutch]:"Antarctica",[e.English]:"Antarctica",[e.Esperanto]:"Antarktika",[e.Estonian]:"Antarktika",[e.Finnish]:"Antarktis",[e.French]:"Antarctica",[e.Frisian]:"Antarktis",[e.Galician]:"Ant\xE1rtida",[e.Georgian]:"\u10D0\u10DC\u10E2\u10D0\u10E0\u10E5\u10E2\u10D8\u10D9\u10D0",[e.German]:"Antarktis",[e.Greenlandic]:"Antarktis",[e.Greek]:"\u0391\u03BD\u03C4\u03B1\u03C1\u03BA\u03C4\u03B9\u03BA\u03AE",[e.Gujarati]:"\u0A85\u0AA8\u0ACD\u0AA4\u0AB0\u0ABE\u0AB6\u0ACD\u0AB5\u0AC0",[e.Haitian]:"Antarctica",[e.Hausa]:"Antarktika",[e.Hebrew]:"\u05D0\u05E0\u05D8\u05E8\u05E7\u05D8\u05D9\u05E7\u05D4",[e.Hindi]:"\u0905\u0928\u094D\u0924\u0930\u0915\u094D\u0937\u0947\u0924\u094D\u0930",[e.Hungarian]:"Antarktika",[e.Icelandic]:"Antarktis",[e.Igbo]:"Antarktika",[e.Indonesian]:"Antarktika",[e.Irish]:"Antarktika",[e.Italian]:"Antartide",[e.Japanese]:"\u5357\u6975",[e.Javanese]:"Antarktika",[e.Kannada]:"\u0C85\u0CA8\u0CCD\u0CA4\u0CB0\u0CBE\u0CB6\u0CCD\u0CB5\u0CBF",[e.Kazakh]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Khmer]:"\u17A2\u1784\u17CB\u179F\u17D2\u1780\u179A\u17A2\u17B6\u1798\u17C9\u17BB\u1799",[e.Korean]:"\uC564\uD2F0\uCE74\uD1A0\uB2C9",[e.Kurdish]:"Antarktika",[e.Kyrgyz]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Lao]:"\u0EAD\u0EB0\u0E99\u0EAD\u0EA5\u0EB2\u0E81\u0EB4\u0EAA\u0EB0",[e.Latin]:"Antarctica",[e.Latvian]:"Antarktika",[e.Lithuanian]:"Antarktis",[e.Luxembourgish]:"Antarktis",[e.Macedonian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Malagasy]:"Antarctica",[e.Malay]:"Antarktika",[e.Malayalam]:"\u0D05\u0D28\u0D4D\u0D24\u0D30\u0D3E\u0D36\u0D4D\u0D35\u0D3F",[e.Maltese]:"Antarktika",[e.Maori]:"Antarktika",[e.Marathi]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[e.Mongolian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Nepali]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[e.Norwegian]:"Antarktis",[e.Pashto]:"\u0627\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[e.Persian]:"\u0622\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627",[e.Polish]:"Antarktyka",[e.Portuguese]:"Ant\xE1rtida",[e.Punjabi]:"\u0A05\u0A28\u0A4D\u0A24\u0A30\u0A3E\u0A36\u0A3F\u0A15\u0A3E",[e.Romanian]:"Antarctica",[e.Russian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Samoan]:"Antarktika",[e.Sanskrit]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[e.Scots]:"Antarktika",[e.Serbian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Sesotho]:"Antarktika",[e.Shona]:"Antarktika",[e.Sindhi]:"Antarktika",[e.Sinhala]:"\u0D86\u0DB1\u0DCA\u0DA7\u0DCA\u0DA7\u0DD2\u0D9A\u0DCF\u0DC0",[e.Slovak]:"Antarktika",[e.Slovenian]:"Antarktika",[e.Somali]:"Antarktika",[e.Spanish]:"Ant\xE1rtida",[e.Sudanese]:"Antarktika",[e.Swahili]:"Antarktika",[e.Swedish]:"Antarktis",[e.Tagalog]:"Antarktika",[e.Tajik]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Tamil]:"\u0B85\u0BA9\u0BCD\u0BA4\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BBF\u0B95\u0BCD",[e.Tatar]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Telugu]:"\u0C05\u0C28\u0C4D\u0C24\u0C30\u0C3E\u0C36\u0C4D\u0C35\u0C3F\u0C15\u0C3E",[e.Thai]:"\u0E20\u0E39\u0E21\u0E34\u0E20\u0E32\u0E04\u0E2D\u0E32\u0E19\u0E31\u0E19\u0E15\u0E34\u0E01\u0E32",[e.Tibetan]:"\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72\u0F0B\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72",[e.Turkish]:"Antarktika",[e.Ukrainian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Urdu]:"\u0627\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627",[e.Uzbek]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Vietnamese]:"\u0110\u1EA5t Antarktik",[e.Welsh]:"Antarktika",[e.Xhosa]:"Antarktika",[e.Yiddish]:"Antarktika",[e.Yoruba]:"Antarktika",[e.Zulu]:"Antarktika"}}},Armenia:{i18n:{calling_codes:[374],currencies:[Y.ArmeniaDram],languages:[e.Armenian],tz:{offsets:[n.UTC_PLUS_4],regions:[u.AsiaJakarta],timezones:[s.ArmeniaTime]}},id:t.Armenia,info:{flag:{emoji:"\u{1F1E6}\u{1F1F2}",emoji_unicode:"U+1F1E6 U+1F1F2",svg:"https://www.countryflags.io/am/flat/64.svg"},tld:[".am"]},iso:{alpha2:t.Armenia,alpha3:"ARM",numeric:"051"},name:{alt_spellings:["AM","Hayastan","Republic of Armenia","\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"],demonym:"Armenian",native:{endonym:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"},official:"Republic of Armenia",short:"Armenia",translations:{[e.Afrikaans]:"Armeni\xEB",[e.Albanian]:"Armenia",[e.Amharic]:"\u12A0\u121B\u122D\u129B",[e.Arabic]:"\u0623\u0631\u0645\u064A\u0646\u064A\u0627",[e.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Basque]:"Arm\xE9nia",[e.Belarusian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Bengali]:"\u0986\u09B0\u09CD\u09AE\u09C7\u09A8\u09BF",[e.Berber]:"\u0623\u0631\u0645\u064A\u0646\u064A\u0627",[e.Bhutani]:"\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42",[e.Bosnian]:"Armenija",[e.Breton]:"Armeni\xEB",[e.Bulgarian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Burmese]:"\u1021\u102C\u1019\u1010\u102D\u1010\u1039",[e.Catalan]:"Arm\xE8nia",[e.Chinese]:"\u4E9A\u7F8E\u5C3C\u4E9A",[e.Croatian]:"Armenija",[e.Czech]:"Arm\xE9nie",[e.Danish]:"Armenien",[e.Dutch]:"Armeni\xEB",[e.English]:"Armenia",[e.Esperanto]:"Armenia",[e.Estonian]:"Armeenia",[e.Finnish]:"Armenia",[e.French]:"Armenia",[e.Frisian]:"Armeenia",[e.Galician]:"Arm\xE9nia",[e.Georgian]:"\u10D0\u10E0\u10DB\u10DD\u10DC\u10D8",[e.German]:"Armenien",[e.Greenlandic]:"Armenia",[e.Greek]:"\u0391\u03C1\u03BC\u03B5\u03BD\u03AF\u03B1",[e.Gujarati]:"\u0A85\u0AB0\u0ACD\u0AAE\u0AC7\u0AA8\u0ABF",[e.Haitian]:"Armenia",[e.Hausa]:"Armenia",[e.Hebrew]:"\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4",[e.Hindi]:"\u0905\u05E8\u05DE\u05E0\u093F\u092F\u093E",[e.Hungarian]:"\xD6rm\xE9nyorsz\xE1g",[e.Icelandic]:"Armenia",[e.Igbo]:"Armenia",[e.Indonesian]:"Armenia",[e.Irish]:"Armenia",[e.Italian]:"Armenia",[e.Japanese]:"\u30A2\u30EB\u30E1\u30CB\u30A2",[e.Javanese]:"Armenia",[e.Kannada]:"\u0C85\u0CB0\u0CCD\u0CAE\u0CC7\u0CA8\u0CBF",[e.Kazakh]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Khmer]:"\u17A2\u17B6\u1798\u17C9\u17C1\u179A\u17B8",[e.Korean]:"\uC544\uB974\uBA54\uB2C8\uC544",[e.Kurdish]:"Armenia",[e.Kyrgyz]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Lao]:"\u0EAD\u0EB2\u0EAB\u0EBC\u0E99\u0EB2",[e.Latin]:"Armenia",[e.Latvian]:"Armeenia",[e.Lithuanian]:"Arm\u0117nija",[e.Luxembourgish]:"Armenien",[e.Macedonian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430",[e.Malagasy]:"Armenia",[e.Malay]:"Armenia",[e.Malayalam]:"\u0D05\u0D30\u0D4D\u200D\u0D2E\u0D47\u0D28\u0D3F",[e.Maltese]:"Armenia",[e.Maori]:"Armenia",[e.Marathi]:"\u0905\u0930\u094D\u092E\u0947\u0928\u093F",[e.Mongolian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Nepali]:"\u0905\u0930\u094D\u092E\u0947\u0928\u093F",[e.Norwegian]:"Armenia",[e.Pashto]:"\u0622\u0631\u0645\u06CC\u0646\u06CC\u0627",[e.Persian]:"\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646",[e.Polish]:"Armenia",[e.Portuguese]:"Armenia",[e.Punjabi]:"\u0A05\u0A30\u0A2E\u0A40\u0A28\u0A40",[e.Romanian]:"Armenia",[e.Russian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Samoan]:"Armenia",[e.Sanskrit]:"Armenia",[e.Scots]:"Armenia",[e.Serbian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430",[e.Sesotho]:"Armenia",[e.Shona]:"Armenia",[e.Sindhi]:"Armenia",[e.Sinhala]:"\u0D86\u0DBB\u0DCA\u0DB8\u0DD3\u0DB1\u0DD2",[e.Slovak]:"Armenia",[e.Slovenian]:"Armenija",[e.Somali]:"Armenia",[e.Spanish]:"Armenia",[e.Sudanese]:"Armenia",[e.Swahili]:"Armenia",[e.Swedish]:"Armenien",[e.Tagalog]:"Armenia",[e.Tajik]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Tamil]:"\u0B85\u0BB0\u0BCD\u0BAE\u0BC7\u0BA9\u0BBF\u0BAF\u0BA9\u0BCD",[e.Tatar]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Telugu]:"\u0C05\u0C30\u0C4D\u0C2E\u0C47\u0C28\u0C3F",[e.Thai]:"\u0E2D\u0E32\u0E23\u0E4C\u0E40\u0E21\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19",[e.Tibetan]:"\u0F68\u0F62\u0F0B\u0F58\u0F7A\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F74\u0F0D",[e.Turkish]:"Ermenistan",[e.Ukrainian]:"\u0410\u0440\u043C\u0435\u043D\u0456\u044F",[e.Urdu]:"\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646",[e.Uzbek]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Vietnamese]:"Armenia",[e.Welsh]:"Armenia",[e.Xhosa]:"Armenia",[e.Yiddish]:"\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4",[e.Yoruba]:"Armenia",[e.Zulu]:"Armenia"}}},SomeCountry:{i18n:{calling_codes:[],currencies:[],languages:[],tz:{offsets:[],regions:[],timezones:[]}},id:t.AmericanSamoa,info:{flag:{emoji:"",emoji_unicode:"",svg:""},tld:[]},iso:{alpha2:t.AmericanSamoa,alpha3:"",numeric:""},name:{alt_spellings:[],demonym:"",native:{endonym:""},official:"",short:"",translations:{[e.Afrikaans]:"",[e.Albanian]:"",[e.Amharic]:"",[e.Arabic]:"",[e.Armenian]:"",[e.Azerbaijani]:"",[e.Bashkir]:"",[e.Basque]:"",[e.Belarusian]:"",[e.Bengali]:"",[e.Berber]:"",[e.Bhutani]:"",[e.Bosnian]:"",[e.Breton]:"",[e.Bulgarian]:"",[e.Burmese]:"",[e.Catalan]:"",[e.Chinese]:"",[e.Croatian]:"",[e.Czech]:"",[e.Danish]:"",[e.Dutch]:"",[e.English]:"",[e.Esperanto]:"",[e.Estonian]:"",[e.Finnish]:"",[e.French]:"",[e.Frisian]:"",[e.Galician]:"",[e.Georgian]:"",[e.German]:"",[e.Greenlandic]:"",[e.Greek]:"",[e.Gujarati]:"",[e.Haitian]:"",[e.Hausa]:"",[e.Hebrew]:"",[e.Hindi]:"",[e.Hungarian]:"",[e.Icelandic]:"",[e.Igbo]:"",[e.Indonesian]:"",[e.Irish]:"",[e.Italian]:"",[e.Japanese]:"",[e.Javanese]:"",[e.Kannada]:"",[e.Kazakh]:"",[e.Khmer]:"",[e.Korean]:"",[e.Kurdish]:"",[e.Kyrgyz]:"",[e.Lao]:"",[e.Latin]:"",[e.Latvian]:"",[e.Lithuanian]:"",[e.Luxembourgish]:"",[e.Macedonian]:"",[e.Malagasy]:"",[e.Malay]:"",[e.Malayalam]:"",[e.Maltese]:"",[e.Maori]:"",[e.Marathi]:"",[e.Mongolian]:"",[e.Nepali]:"",[e.Norwegian]:"",[e.Pashto]:"",[e.Persian]:"",[e.Polish]:"",[e.Portuguese]:"",[e.Punjabi]:"",[e.Romanian]:"",[e.Russian]:"",[e.Samoan]:"",[e.Sanskrit]:"",[e.Scots]:"",[e.Serbian]:"",[e.Sesotho]:"",[e.Shona]:"",[e.Sindhi]:"",[e.Sinhala]:"",[e.Slovak]:"",[e.Slovenian]:"",[e.Somali]:"",[e.Spanish]:"",[e.Sudanese]:"",[e.Swahili]:"",[e.Swedish]:"",[e.Tagalog]:"",[e.Tajik]:"",[e.Tamil]:"",[e.Tatar]:"",[e.Telugu]:"",[e.Thai]:"",[e.Tibetan]:"",[e.Turkish]:"",[e.Ukrainian]:"",[e.Urdu]:"",[e.Uzbek]:"",[e.Vietnamese]:"",[e.Welsh]:"",[e.Xhosa]:"",[e.Yiddish]:"",[e.Yoruba]:"",[e.Zulu]:""}}}},Nm={id:e.Afrikaans,language:{code:l.Afrikaans,name:"Afrikaans",native:"Afrikaans"},name:"Afrikaans",native_name:"Afrikaans",rtl:!1},ym={country:{code:t.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.AfrikaansSouthAfrica,language:{code:l.Afrikaans,name:"Afrikaans",native:"Afrikaans"},name:"Afrikaans (South Africa)",native_name:"Afrikaans (Suid-Afrika)",rtl:!1},Dm={id:e.Albanian,language:{code:l.Albanian,name:"Albanian",native:"Shqip"},name:"Albanian",native_name:"Shqip",rtl:!1},Pm={country:{code:t.Albania,name:"Albania",native:"Shqip\xEBria"},id:e.AlbanianAlbania,language:{code:l.Albanian,name:"Albanian",native:"Shqip"},name:"Albanian (Albania)",native_name:"Shqip (Shqip\xEBria)",rtl:!1},Fm={id:e.Amharic,language:{code:l.Amharic,name:"Amharic",native:"\u12A0\u121B\u122D\u129B"},name:"Amharic",native_name:"\u12A0\u121B\u122D\u129B",rtl:!1},km={country:{code:t.Ethiopia,name:"Ethiopia",native:"\u12A2\u1275\u12EE\u1335\u12EB"},id:e.AmharicEthiopia,language:{code:l.Amharic,name:"Amharic",native:"\u12A0\u121B\u122D\u129B"},name:"Amharic (Ethiopia)",native_name:"\u12A0\u121B\u122D\u129B (\u12A2\u1275\u12EE\u1335\u12EB)",rtl:!1},Mm={id:e.Arabic,language:{code:l.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629",rtl:!0},Lm={country:{code:t.Algeria,name:"Algeria",native:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631"},id:e.ArabicAlgeria,language:{code:l.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Algeria)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u062C\u0632\u0627\u0626\u0631)",rtl:!0},wm={country:{code:t.Bahrain,name:"Bahrain",native:"\u0627\u0644\u0628\u062D\u0631\u064A\u0646"},id:e.ArabicBahrain,language:{code:l.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Bahrain)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0628\u062D\u0631\u064A\u0646)",rtl:!0},Gm={country:{code:t.Egypt,name:"Egypt",native:"\u0645\u0635\u0631"},id:e.ArabicEgypt,language:{code:l.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Egypt)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0645\u0635\u0631)",rtl:!0},xm={country:{code:t.Iraq,name:"Iraq",native:"\u0627\u0644\u0639\u0631\u0627\u0642"},id:e.ArabicIraq,language:{code:l.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Iraq)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0639\u0631\u0627\u0642)",rtl:!0},qm={country:{code:t.Jordan,name:"Jordan",native:"\u0627\u0644\u0623\u0631\u062F\u0646"},id:e.ArabicJordan,language:{code:l.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Jordan)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0623\u0631\u062F\u0646)",rtl:!0},Km={country:{code:t.Kuwait,name:"Kuwait",native:"\u0627\u0644\u0643\u0648\u064A\u062A"},id:e.ArabicKuwait,language:{code:l.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Kuwait)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0643\u0648\u064A\u062A)",rtl:!0},Om={country:{code:t.Lebanon,name:"Lebanon",native:"\u0644\u0628\u0646\u0627\u0646"},id:e.ArabicLebanon,language:{code:l.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Lebanon)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u0628\u0646\u0627\u0646)",rtl:!0},jm={country:{code:t.Libya,name:"Libya",native:"\u0644\u064A\u0628\u064A\u0627"},id:e.ArabicLibya,language:{code:l.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Libya)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u064A\u0628\u064A\u0627)",rtl:!0},Hm={country:{code:t.Morocco,name:"Morocco",native:"\u0627\u0644\u0645\u063A\u0631\u0628"},id:e.ArabicMorocco,language:{code:l.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Morocco)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u063A\u0631\u0628)",rtl:!0},Wm={country:{code:t.Oman,name:"Oman",native:"\u0639\u0645\u0627\u0646"},id:e.ArabicOman,language:{code:l.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Oman)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0639\u0645\u0627\u0646)",rtl:!0},Vm={country:{code:t.Qatar,name:"Qatar",native:"\u0642\u0637\u0631"},id:e.ArabicQatar,language:{code:l.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Qatar)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0642\u0637\u0631)",rtl:!0},Rm={country:{code:t.SaudiArabia,name:"Saudi Arabia",native:"\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629"},id:e.ArabicSaudiArabia,language:{code:l.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Saudi Arabia)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629)",rtl:!0},zm={country:{code:t.Tunisia,name:"Tunisia",native:"\u062A\u0648\u0646\u0633"},id:e.ArabicTunisia,language:{code:l.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Tunisia)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u062A\u0648\u0646\u0633)",rtl:!0},Ym={country:{code:t.UnitedArabEmirates,name:"United Arab Emirates",native:"\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629"},id:e.ArabicUnitedArabEmirates,language:{code:l.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (United Arab Emirates)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629)",rtl:!0},Jm={country:{code:t.Yemen,name:"Yemen",native:"\u0627\u0644\u064A\u0645\u0646"},id:e.ArabicYemen,language:{code:l.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Yemen)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u064A\u0645\u0646)",rtl:!0},Zm={id:e.Armenian,language:{code:l.Armenian,name:"Armenian",native:"\u0540\u0561\u0575\u0565\u0580\u0565\u0576"},name:"Armenian",native_name:"\u0540\u0561\u0575\u0565\u0580\u0565\u0576",rtl:!1},$m={country:{code:t.Armenia,name:"Armenia",native:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"},id:e.ArmenianArmenia,language:{code:l.Armenian,name:"Armenian",native:"\u0570\u0561\u0575\u0565\u0580\u0565\u0576"},name:"Armenian (Armenia)",native_name:"\u0570\u0561\u0575\u0565\u0580\u0565\u0576 (\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576)",rtl:!1},Qm={id:e.Azerbaijani,language:{code:l.Azerbaijani,name:"Azeribaijani",native:"Az\u0259rbaycan"},name:"Azeri",native_name:"Az\u0259rbaycan",rtl:!1},Cm={country:{code:t.Azerbaijan,name:"Azerbaijan",native:"Az\u0259rbaycan"},id:e.AzerbaijaniAzerbaijan,language:{code:l.Azerbaijani,name:"Azerbaijani",native:"Az\u0259rbaycan"},name:"Azeri (Azerbaijan)",native_name:"Az\u0259rbaycan (Az\u0259rbaycan)",rtl:!1},Xm={id:e.Basque,language:{code:l.Basque,name:"Basque",native:"Euskara"},name:"Basque",native_name:"Euskara",rtl:!1},ac={country:{code:t.Spain,name:"Spain",native:"Espa\xF1a"},id:e.BasqueSpain,language:{code:l.Basque,name:"Basque",native:"Euskara"},name:"Basque (Spain)",native_name:"Euskara (Espa\xF1a)",rtl:!1},ec={id:e.Belarusian,language:{code:l.Belarusian,name:"Belarusian",native:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F"},name:"Belarusian",native_name:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F",rtl:!1},ic={country:{code:t.Belarus,name:"Belarus",native:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C"},id:e.BelarusianBelarus,language:{code:l.Belarusian,name:"Belarusian",native:"\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F"},name:"Belarusian (Belarus)",native_name:"\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F (\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C)",rtl:!1},nc={id:e.Bengali,language:{code:l.Bengali,name:"Bengali",native:"\u09AC\u09BE\u0982\u09B2\u09BE"},name:"Bengali",native_name:"\u09AC\u09BE\u0982\u09B2\u09BE",rtl:!1},sc={country:{code:t.Bangladesh,name:"Bangladesh",native:"\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6"},id:e.BengaliBangladesh,language:{code:l.Bengali,name:"Bengali",native:"\u09AC\u09BE\u0982\u09B2\u09BE"},name:"Bengali (Bangladesh)",native_name:"\u09AC\u09BE\u0982\u09B2\u09BE (\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6)",rtl:!1},uc={id:e.Bhutani,language:{code:l.Bhutani,name:"Bhutani",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Bhutani",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42",rtl:!1},rc={country:{code:t.Bhutan,name:"Bhutan",native:"\u0F60\u0F56\u0FB2\u0F74\u0F42"},id:e.BhutaniBhutan,language:{code:l.Bhutani,name:"Bhutani",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Bhutani (Bhutan)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42)",rtl:!1},tc={id:e.Bulgarian,language:{code:l.Bulgarian,name:"Bulgarian",native:"\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438"},name:"Bulgarian",native_name:"\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438",rtl:!1},lc={country:{code:t.Bulgaria,name:"Bulgaria",native:"\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F"},id:e.BulgarianBulgaria,language:{code:l.Bulgarian,name:"Bulgarian",native:"\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438"},name:"Bulgarian (Bulgaria)",native_name:"\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438 (\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F)",rtl:!1},oc={id:e.Burmese,language:{code:l.Burmese,name:"Burmese",native:"\u1017\u1019\u102C\u1005\u102C"},name:"Burmese",native_name:"\u1017\u1019\u102C\u1005\u102C",rtl:!1},mc={country:{code:t.Myanmar,name:"Myanmar",native:"\u1019\u103C\u1014\u103A\u1019\u102C"},id:e.BurmeseMyanmar,language:{code:l.Burmese,name:"Burmese",native:"\u1017\u1019\u102C\u1005\u102C"},name:"Burmese (Myanmar)",native_name:"\u1017\u1019\u102C\u1005\u102C (\u1019\u103C\u1014\u103A\u1019\u102C)",rtl:!1},cc={id:e.Cantonese,language:{code:l.Cantonese,name:"Cantonese",native:"\u5EE3\u6771\u8A71"},name:"Cantonese",native_name:"\u5EE3\u6771\u8A71",rtl:!1},Ac={country:{code:t.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:e.CantoneseHongKong,language:{code:l.Cantonese,name:"Cantonese",native:"\u5EE3\u6771\u8A71"},name:"Cantonese (Hong Kong)",native_name:"\u5EE3\u6771\u8A71 (\u9999\u6E2F)",rtl:!1},fc={id:e.Catalan,language:{code:l.Catalan,name:"Catalan",native:"Catal\xE0"},name:"Catalan",native_name:"Catal\xE0",rtl:!1},dc={country:{code:t.Spain,name:"Spain",native:"Espa\xF1a"},id:e.CatalanSpain,language:{code:l.Catalan,name:"Catalan",native:"Catal\xE0"},name:"Catalan (Spain)",native_name:"Catal\xE0 (Espanya)",rtl:!1},gc={id:e.ChineseSimplified,language:{code:l.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified)",native_name:"\u4E2D\u6587",rtl:!1},hc={country:{code:t.China,name:"China",native:"\u4E2D\u56FD"},id:e.ChineseSimplifiedChina,language:{code:l.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/China)",native_name:"\u4E2D\u6587 (\u4E2D\u56FD)",rtl:!1},Ic={country:{code:t.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:e.ChineseSimplifiedHongKong,language:{code:l.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Hong Kong)",native_name:"\u4E2D\u6587 (\u9999\u6E2F)",rtl:!1},_c={country:{code:t.Macau,name:"Macau",native:"\u6FB3\u9580"},id:e.ChineseSimplifiedMacau,language:{code:l.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Macau)",native_name:"\u4E2D\u6587 (\u6FB3\u9580)",rtl:!1},pc={country:{code:t.Singapore,name:"Singapore",native:"\u65B0\u52A0\u5761"},id:e.ChineseSimplifiedSingapore,language:{code:l.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Singapore)",native_name:"\u4E2D\u6587 (\u65B0\u52A0\u5761)",rtl:!1},Ec={id:e.ChineseTraditional,language:{code:l.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Traditional)",native_name:"\u4E2D\u6587",rtl:!1},Sc={country:{code:t.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:e.ChineseTraditionalHongKong,language:{code:l.Chinese,name:"Chinese (Traditional/Hong Kong)",native:"\u4E2D\u6587"},name:"Chinese (Hong Kong)",native_name:"\u4E2D\u6587 (\u9999\u6E2F)",rtl:!1},Tc={country:{code:t.Macau,name:"Macau",native:"\u6FB3\u9580"},id:e.ChineseTraditionalMacau,language:{code:l.Chinese,name:"Chinese (Traditional/Macau)",native:"\u4E2D\u6587"},name:"Chinese (Macau)",native_name:"\u4E2D\u6587 (\u6FB3\u9580)",rtl:!1},vc={country:{code:t.Singapore,name:"Singapore",native:"\u65B0\u52A0\u5761"},id:e.ChineseTraditionalSingapore,language:{code:l.Chinese,name:"Chinese (Traditional/Singapore)",native:"\u4E2D\u6587"},name:"Chinese (Singapore)",native_name:"\u4E2D\u6587 (\u65B0\u52A0\u5761)",rtl:!1},bc={id:e.Croatian,language:{code:l.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian",native_name:"Hrvatski",rtl:!1},Bc={country:{code:t.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"Bosna i Hercegovina"},id:e.CroatianBosniaAndHerzegovina,language:{code:l.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian (Bosnia and Herzegovina)",native_name:"Hrvatski (Bosna i Hercegovina)",rtl:!1},Uc={country:{code:t.Croatia,name:"Croatia",native:"Hrvatska"},id:e.CroatianCroatia,language:{code:l.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian (Croatia)",native_name:"Hrvatski (Hrvatska)",rtl:!1},Nc={id:e.Czech,language:{code:l.Czech,name:"Czech",native:"\u010Ce\u0161tina"},name:"Czech",native_name:"\u010Ce\u0161tina",rtl:!1},yc={country:{code:t.CzechRepublic,name:"Czech Republic",native:"\u010Cesk\xE1 republika"},id:e.CzechCzechRepublic,language:{code:l.Czech,name:"Czech",native:"\u010Ce\u0161tina"},name:"Czech (Czech Republic)",native_name:"\u010Ce\u0161tina (\u010Cesk\xE1 republika)",rtl:!1},Dc={id:e.Danish,language:{code:l.Danish,name:"Danish",native:"Dansk"},name:"Danish",native_name:"Dansk",rtl:!1},Pc={country:{code:t.Denmark,name:"Denmark",native:"Danmark"},id:e.DanishDenmark,language:{code:l.Danish,name:"Danish",native:"Dansk"},name:"Danish (Denmark)",native_name:"Dansk (Danmark)",rtl:!1},Fc={id:e.Divehi,language:{code:l.Divehi,name:"Divehi",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0"},name:"Divehi",native_name:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0",rtl:!0},kc={country:{code:t.Maldives,name:"Maldives",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC"},id:e.DivehiMaldives,language:{code:l.Divehi,name:"Divehi",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0"},name:"Divehi (Maldives)",native_name:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0 (\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC)",rtl:!0},Mc={id:e.Dutch,language:{code:l.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch",native_name:"Nederlands",rtl:!1},Lc={country:{code:t.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.DutchBelgium,language:{code:l.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch (Belgium)",native_name:"Nederlands (Belgi\xEB)",rtl:!1},wc={country:{code:t.Netherlands,name:"Netherlands",native:"Nederland"},id:e.DutchNetherlands,language:{code:l.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch (Netherlands)",native_name:"Nederlands (Nederland)",rtl:!1},Gc={id:e.English,language:{code:l.English,name:"English",native:"English"},name:"English",native_name:"English",rtl:!1},xc={country:{code:t.Australia,name:"Australia",native:"Australia"},id:e.EnglishAustralia,language:{code:l.English,name:"English",native:"English"},name:"English (Australia)",native_name:"English (Australia)",rtl:!1},qc={country:{code:t.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.EnglishBelgium,language:{code:l.English,name:"English",native:"English"},name:"English (Belgium)",native_name:"English (Belgi\xEB)",rtl:!1},Kc={country:{code:t.Canada,name:"Canada",native:"Canada"},id:e.EnglishCanada,language:{code:l.English,name:"English",native:"English"},name:"English (Canada)",native_name:"English (Canada)",rtl:!1},Oc={country:{code:t.Ireland,name:"Ireland",native:"\xC9ire"},id:e.EnglishIreland,language:{code:l.English,name:"English",native:"English"},name:"English (Ireland)",native_name:"English (\xC9ire)",rtl:!1},jc={country:{code:t.Jamaica,name:"Jamaica",native:"Jamaica"},id:e.EnglishJamaica,language:{code:l.English,name:"English",native:"English"},name:"English (Jamaica)",native_name:"English (Jamaica)",rtl:!1},Hc={country:{code:t.NewZealand,name:"New Zealand",native:"New Zealand"},id:e.EnglishNewZealand,language:{code:l.English,name:"English",native:"English"},name:"English (New Zealand)",native_name:"English (New Zealand)",rtl:!1},Wc={country:{code:t.Philippines,name:"Philippines",native:"Philippines"},id:e.EnglishPhilippines,language:{code:l.English,name:"English",native:"English"},name:"English (Philippines)",native_name:"English (Philippines)",rtl:!1},Vc={country:{code:t.Singapore,name:"Singapore",native:"Singapore"},id:e.EnglishSingapore,language:{code:l.English,name:"English",native:"English"},name:"English (Singapore)",native_name:"English (Singapore)",rtl:!1},Rc={country:{code:t.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.EnglishSouthAfrica,language:{code:l.English,name:"English",native:"English"},name:"English (South Africa)",native_name:"English (South Africa)",rtl:!1},zc={country:{code:t.TrinidadAndTobago,name:"Trinidad and Tobago",native:"Trinidad and Tobago"},id:e.EnglishTrinidadAndTobago,language:{code:l.English,name:"English",native:"English"},name:"English (Trinidad and Tobago)",native_name:"English (Trinidad and Tobago)",rtl:!1},Yc={country:{code:t.UnitedKingdom,name:"United Kingdom",native:"United Kingdom"},id:e.EnglishUnitedKingdom,language:{code:l.English,name:"English",native:"English"},name:"English (United Kingdom)",native_name:"English (United Kingdom)",rtl:!1},Jc={country:{code:t.UnitedStates,name:"United States",native:"United States"},id:e.EnglishUnitedStates,language:{code:l.English,name:"English",native:"English"},name:"English (United States)",native_name:"English (United States)",rtl:!1},Zc={country:{code:t.Zimbabwe,name:"Zimbabwe",native:"Zimbabwe"},id:e.EnglishZimbabwe,language:{code:l.English,name:"English",native:"English"},name:"English (Zimbabwe)",native_name:"English (Zimbabwe)",rtl:!1},$c={id:e.Esperanto,language:{code:l.Esperanto,name:"Esperanto",native:"Esperanto"},name:"Esperanto",native_name:"Esperanto",rtl:!1},Qc={id:e.Estonian,language:{code:l.Estonian,name:"Estonian",native:"Eesti"},name:"Estonian",native_name:"Eesti",rtl:!1},Cc={country:{code:t.Estonia,name:"Estonia",native:"Eesti"},id:e.EstonianEstonia,language:{code:l.Estonian,name:"Estonian",native:"Eesti"},name:"Estonian (Estonia)",native_name:"Eesti (Eesti)",rtl:!1},Xc={id:e.Faroese,language:{code:l.Faroese,name:"Faroese",native:"F\xF8royskt"},name:"Faroese",native_name:"F\xF8royskt",rtl:!1},aA={country:{code:t.FaroeIslands,name:"Faroe Islands",native:"F\xF8royar"},id:e.FaroeseFaroeIslands,language:{code:l.Faroese,name:"Faroese",native:"F\xF8royskt"},name:"Faroese (Faroe Islands)",native_name:"F\xF8royskt (F\xF8royar)",rtl:!1},eA={id:e.Farsi,language:{code:l.Farsi,name:"Farsi",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Farsi",native_name:"\u0641\u0627\u0631\u0633\u06CC",rtl:!0},iA={country:{code:t.Iran,name:"Iran",native:"\u0627\u06CC\u0631\u0627\u0646"},id:e.FarsiIran,language:{code:l.Farsi,name:"Farsi",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Farsi (Iran)",native_name:"\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)",rtl:!0},nA={id:e.Filipino,language:{code:l.Filipino,name:"Filipino",native:"Filipino"},name:"Filipino",native_name:"Filipino",rtl:!1},sA={country:{code:t.Philippines,name:"Philippines",native:"Pilipinas"},id:e.FilipinoPhilippines,language:{code:l.Filipino,name:"Filipino",native:"Filipino"},name:"Filipino (Philippines)",native_name:"Filipino (Pilipinas)",rtl:!1},uA={id:e.Finnish,language:{code:l.Finnish,name:"Finnish",native:"Suomi"},name:"Finnish",native_name:"Suomi",rtl:!1},rA={country:{code:t.Finland,name:"Finland",native:"Suomi"},id:e.FinnishFinland,language:{code:l.Finnish,name:"Finnish",native:"Suomi"},name:"Finnish (Finland)",native_name:"Suomi (Suomi)",rtl:!1},tA={id:e.French,language:{code:l.French,name:"French",native:"Fran\xE7ais"},name:"French",native_name:"Fran\xE7ais",rtl:!1},lA={country:{code:t.Belgium,name:"Belgium",native:"Belgique"},id:e.FrenchBelgium,language:{code:l.French,name:"French",native:"Fran\xE7ais"},name:"French (Belgium)",native_name:"Fran\xE7ais (Belgique)",rtl:!1},oA={country:{code:t.Canada,name:"Canada",native:"Canada"},id:e.FrenchCanada,language:{code:l.French,name:"French",native:"Fran\xE7ais"},name:"French (Canada)",native_name:"Fran\xE7ais (Canada)",rtl:!1},mA={country:{code:t.France,name:"France",native:"France"},id:e.FrenchFrance,language:{code:l.French,name:"French",native:"Fran\xE7ais"},name:"French (France)",native_name:"Fran\xE7ais (France)",rtl:!1},cA={country:{code:t.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:e.FrenchLuxembourg,language:{code:l.French,name:"French",native:"Fran\xE7ais"},name:"French (Luxembourg)",native_name:"Fran\xE7ais (Luxembourg)",rtl:!1},AA={country:{code:t.Monaco,name:"Monaco",native:"Monaco"},id:e.FrenchMonaco,language:{code:l.French,name:"French",native:"Fran\xE7ais"},name:"French (Monaco)",native_name:"Fran\xE7ais (Monaco)",rtl:!1},fA={country:{code:t.Reunion,name:"Reunion",native:"La R\xE9union"},id:e.FrenchReunion,language:{code:l.French,name:"French",native:"Fran\xE7ais"},name:"French (Reunion)",native_name:"Fran\xE7ais (La R\xE9union)",rtl:!1},dA={country:{code:t.Switzerland,name:"Switzerland",native:"Suisse"},id:e.FrenchSwitzerland,language:{code:l.French,name:"French",native:"Fran\xE7ais"},name:"French (Switzerland)",native_name:"Fran\xE7ais (Suisse)",rtl:!1},gA={id:e.Frisian,language:{code:l.Frisian,name:"Frisian",native:"Frysk"},name:"Frisian",native_name:"Frysk",rtl:!1},hA={country:{code:t.Netherlands,name:"Netherlands",native:"Nederland"},id:e.FrisianNetherlands,language:{code:l.Frisian,name:"Frisian",native:"Frysk"},name:"Frisian (Netherlands)",native_name:"Frysk (Nederland)",rtl:!1},IA={id:e.Galician,language:{code:l.Galician,name:"Galician",native:"Galego"},name:"Galician",native_name:"Galego",rtl:!1},_A={country:{code:t.Spain,name:"Spain",native:"Espa\xF1a"},id:e.GalicianSpain,language:{code:l.Galician,name:"Galician",native:"Galego"},name:"Galician (Spain)",native_name:"Galego (Espa\xF1a)",rtl:!1},pA={id:e.Georgian,language:{code:l.Georgian,name:"Georgian",native:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8"},name:"Georgian",native_name:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8",rtl:!1},EA={country:{code:t.Georgia,name:"Georgia",native:"\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD"},id:e.GeorgianGeorgia,language:{code:l.Georgian,name:"Georgian",native:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8"},name:"Georgian (Georgia)",native_name:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8 (\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD)",rtl:!1},SA={id:e.German,language:{code:l.German,name:"German",native:"Deutsch"},name:"German",native_name:"Deutsch",rtl:!1},TA={country:{code:t.Austria,name:"Austria",native:"\xD6sterreich"},id:e.GermanAustria,language:{code:l.German,name:"German",native:"Deutsch"},name:"German (Austria)",native_name:"Deutsch (\xD6sterreich)",rtl:!1},vA={country:{code:t.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.GermanBelgium,language:{code:l.German,name:"German",native:"Deutsch"},name:"German (Belgium)",native_name:"Deutsch (Belgi\xEB)",rtl:!1},bA={country:{code:t.Switzerland,name:"Switzerland",native:"Suisse"},id:e.GermanSwitzerland,language:{code:l.German,name:"German",native:"Deutsch"},name:"German (Switzerland)",native_name:"Deutsch (Suisse)",rtl:!1},BA={country:{code:t.Liechtenstein,name:"Liechtenstein",native:"Liechtenstein"},id:e.GermanLiechtenstein,language:{code:l.German,name:"German",native:"Deutsch"},name:"German (Liechtenstein)",native_name:"Deutsch (Liechtenstein)",rtl:!1},UA={country:{code:t.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:e.GermanLuxembourg,language:{code:l.German,name:"German",native:"Deutsch"},name:"German (Luxembourg)",native_name:"Deutsch (Luxembourg)",rtl:!1},NA={id:e.Greek,language:{code:l.Greek,name:"Greek",native:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC"},name:"Greek",native_name:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC",rtl:!1},yA={country:{code:t.Greece,name:"Greece",native:"\u0395\u03BB\u03BB\u03AC\u03B4\u03B1"},id:e.GreekGreece,language:{code:l.Greek,name:"Greek",native:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC"},name:"Greek (Greece)",native_name:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC (\u0395\u03BB\u03BB\u03AC\u03B4\u03B1)",rtl:!1},DA={id:e.Greenlandic,language:{code:l.Greenlandic,name:"Greenlandic",native:"Kalaallisut"},name:"Greenlandic",native_name:"Kalaallisut",rtl:!1},PA={country:{code:t.Greenland,name:"Greenland",native:"Kalaallit Nunaat"},id:e.GreenlandicGreenland,language:{code:l.Greenlandic,name:"Greenlandic",native:"Kalaallisut"},name:"Greenlandic (Greenland)",native_name:"Kalaallisut (Kalaallit Nunaat)",rtl:!1},FA={id:e.Gujarati,language:{code:l.Gujarati,name:"Gujarati",native:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0"},name:"Gujarati",native_name:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0",rtl:!1},kA={country:{code:t.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.GujaratiIndia,language:{code:l.Gujarati,name:"Gujarati",native:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0"},name:"Gujarati (India)",native_name:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0 (\u092D\u093E\u0930\u0924)",rtl:!1},MA={id:e.Hausa,language:{code:l.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E",rtl:!1},LA={country:{code:t.Ghana,name:"Ghana",native:"Ghana"},id:e.HausaGhana,language:{code:l.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Ghana)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Ghana)",rtl:!1},wA={country:{code:t.Niger,name:"Niger",native:"Niger"},id:e.HausaNiger,language:{code:l.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Niger)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Niger)",rtl:!1},GA={country:{code:t.Nigeria,name:"Nigeria",native:"Nigeria"},id:e.HausaNigeria,language:{code:l.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Nigeria)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Nigeria)",rtl:!1},xA={id:e.Hebrew,language:{code:l.Hebrew,name:"Hebrew",native:"\u05E2\u05D1\u05E8\u05D9\u05EA"},name:"Hebrew",native_name:"\u05E2\u05D1\u05E8\u05D9\u05EA",rtl:!0},qA={country:{code:t.Israel,name:"Hebrew",native:""},id:e.HebrewIsrael,language:{code:l.Hebrew,name:"Hebrew",native:""},name:"Hebrew (Israel)",native_name:"",rtl:!0},KA={id:e.Hindi,language:{code:l.Hindi,name:"Hindi",native:"\u0939\u093F\u0928\u094D\u0926\u0940"},name:"Hindi",native_name:"\u0939\u093F\u0928\u094D\u0926\u0940",rtl:!1},OA={country:{code:t.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.HindiIndia,language:{code:l.Hindi,name:"Hindi",native:"\u092D\u093E\u0930\u0924\u0940\u092F"},name:"Hindi (India)",native_name:"\u092D\u093E\u0930\u0924\u0940\u092F",rtl:!1},jA={id:e.Hungarian,language:{code:l.Hungarian,name:"Hungarian",native:"Magyar"},name:"Hungarian",native_name:"Magyar",rtl:!1},HA={country:{code:t.Hungary,name:"Hungary",native:"Magyarorsz\xE1g"},id:e.HungarianHungary,language:{code:l.Hungarian,name:"Hungarian",native:"Magyar"},name:"Hungarian (Hungary)",native_name:"Magyar (Magyarorsz\xE1g)",rtl:!1},WA={id:e.Icelandic,language:{code:l.Icelandic,name:"Icelandic",native:"\xCDslenska"},name:"Icelandic",native_name:"\xCDslenska",rtl:!1},VA={country:{code:t.Iceland,name:"Iceland",native:"\xCDsland"},id:e.IcelandicIceland,language:{code:l.Icelandic,name:"Icelandic",native:"\xCDslenska"},name:"Icelandic (Iceland)",native_name:"\xCDslenska (\xCDsland)",rtl:!1},RA={id:e.Igbo,language:{code:l.Igbo,name:"Igbo",native:"Igbo"},name:"Igbo",native_name:"Igbo",rtl:!1},zA={id:e.Indonesian,language:{code:l.Indonesian,name:"Indonesian",native:"Bahasa Indonesia"},name:"Indonesian",native_name:"Bahasa Indonesia",rtl:!1},YA={country:{code:t.Indonesia,name:"Indonesia",native:"Indonesia"},id:e.IndonesianIndonesia,language:{code:l.Indonesian,name:"Indonesian",native:"Bahasa Indonesia"},name:"Indonesian (Indonesia)",native_name:"Bahasa Indonesia (Indonesia)",rtl:!1},JA={id:e.Irish,language:{code:l.Irish,name:"Irish",native:"Gaeilge"},name:"Irish",native_name:"Gaeilge",rtl:!1},ZA={country:{code:t.Ireland,name:"Ireland",native:"\xC9ire"},id:e.IrishIreland,language:{code:l.Irish,name:"Irish",native:"Gaeilge"},name:"Irish (Ireland)",native_name:"Gaeilge (\xC9ire)",rtl:!1},$A={id:e.Italian,language:{code:l.Italian,name:"Italian",native:"Italiano"},name:"Italian",native_name:"Italiano",rtl:!1},QA={country:{code:t.Italy,name:"Italy",native:"Italia"},id:e.ItalianItaly,language:{code:l.Italian,name:"Italian",native:"Italiano"},name:"Italian (Italy)",native_name:"Italiano (Italia)",rtl:!1},CA={country:{code:t.Switzerland,name:"Switzerland",native:"Schweiz"},id:e.ItalianSwitzerland,language:{code:l.Italian,name:"Italian",native:"Italiano"},name:"Italian (Switzerland)",native_name:"Italiano (Svizzera)",rtl:!1},XA={id:e.Japanese,language:{code:l.Japanese,name:"Japanese",native:"\u65E5\u672C\u8A9E"},name:"Japanese",native_name:"\u65E5\u672C\u8A9E",rtl:!1},af={country:{code:t.Japan,name:"Japan",native:"\u65E5\u672C"},id:e.JapaneseJapan,language:{code:l.Japanese,name:"Japanese",native:"\u65E5\u672C\u8A9E"},name:"Japanese (Japan)",native_name:"\u65E5\u672C\u8A9E (\u65E5\u672C)",rtl:!1},ef={id:e.Kannada,language:{code:l.Kannada,name:"Kannada",native:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1"},name:"Kannada",native_name:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1",rtl:!1},nf={country:{code:t.India,name:"India",native:"\u0CAD\u0CBE\u0CB0\u0CA4"},id:e.KannadaIndia,language:{code:l.Kannada,name:"Kannada",native:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1"},name:"Kannada (India)",native_name:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1 (\u0CAD\u0CBE\u0CB0\u0CA4)",rtl:!1},sf={id:e.Kazakh,language:{code:l.Kazakh,name:"Kazakh",native:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456"},name:"Kazakh",native_name:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456",rtl:!1},uf={country:{code:t.Kazakhstan,name:"Kazakhstan",native:"\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D"},id:e.KazakhKazakhstan,language:{code:l.Kazakh,name:"Kazakh",native:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456"},name:"Kazakh (Kazakhstan)",native_name:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)",rtl:!1},rf={id:e.Khmer,language:{code:l.Khmer,name:"Khmer",native:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A"},name:"Khmer",native_name:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A",rtl:!1},tf={country:{code:t.Cambodia,name:"Cambodia",native:"\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6"},id:e.KhmerCambodia,language:{code:l.Khmer,name:"Khmer",native:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A"},name:"Khmer (Cambodia)",native_name:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A (\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6)",rtl:!1},lf={id:e.Konkani,language:{code:l.Konkani,name:"Konkani",native:"\u0915\u094B\u0902\u0915\u0923\u0940"},name:"Konkani",native_name:"\u0915\u094B\u0902\u0915\u0923\u0940",rtl:!1},of={country:{code:t.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.KonkaniIndia,language:{code:l.Konkani,name:"Konkani",native:"\u0915\u094B\u0902\u0915\u0923\u0940"},name:"Konkani (India)",native_name:"\u0915\u094B\u0902\u0915\u0923\u0940 (\u092D\u093E\u0930\u0924)",rtl:!1},mf={id:e.Korean,language:{code:l.Korean,name:"Korean",native:"\uD55C\uAD6D\uC5B4"},name:"Korean",native_name:"\uD55C\uAD6D\uC5B4",rtl:!1},cf={country:{code:t.SouthKorea,name:"South Korea",native:"\uB300\uD55C\uBBFC\uAD6D"},id:e.KoreanSouthKorea,language:{code:l.Korean,name:"Korean",native:"\uD55C\uAD6D\uC5B4"},name:"Korean (South Korea)",native_name:"\uD55C\uAD6D\uC5B4 (\uB300\uD55C\uBBFC\uAD6D)",rtl:!1},Af={id:e.Kurdish,language:{code:l.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish",native_name:"Kurd\xEE",rtl:!1},ff={country:{code:t.Iraq,name:"Iraq",native:"\u0627\u0644\u0639\u0631\u0627\u0642"},id:e.KurdishIraq,language:{code:l.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish (Iraq)",native_name:"Kurd\xEE (\u0627\u0644\u0639\u0631\u0627\u0642)",rtl:!1},df={country:{code:t.Turkey,name:"Turkey",native:"T\xFCrkiye"},id:e.KurdishTurkey,language:{code:l.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish (Turkey)",native_name:"Kurd\xEE (T\xFCrkiye)",rtl:!1},gf={id:e.Kyrgyz,language:{code:l.Kyrgyz,name:"Kyrgyz",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},name:"Kyrgyz",native_name:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430",rtl:!1},hf={country:{code:t.Kyrgyzstan,name:"Kyrgyzstan",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D"},id:e.KyrgyzKyrgyzstan,language:{code:l.Kyrgyz,name:"Kyrgyz",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},name:"Kyrgyz (Kyrgyzstan)",native_name:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430 (\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D)",rtl:!1},If={id:e.Lao,language:{code:l.Lao,name:"Lao",native:"\u0EA5\u0EB2\u0EA7"},name:"Lao",native_name:"\u0EA5\u0EB2\u0EA7",rtl:!1},_f={country:{code:t.Laos,name:"Laos",native:"\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95"},id:e.LaoLaos,language:{code:l.Lao,name:"Lao",native:"\u0EA5\u0EB2\u0EA7"},name:"Lao (Laos)",native_name:"\u0EA5\u0EB2\u0EA7 (\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95)",rtl:!1},pf={id:e.Latvian,language:{code:l.Latvian,name:"Latvian",native:"Latvie\u0161u"},name:"Latvian",native_name:"Latvie\u0161u",rtl:!1},Ef={country:{code:t.Latvia,name:"Latvia",native:"Latvija"},id:e.LatvianLatvia,language:{code:l.Latvian,name:"Latvian",native:"Latvie\u0161u"},name:"Latvian (Latvia)",native_name:"Latvie\u0161u (Latvija)",rtl:!1},Sf={id:e.Lithuanian,language:{code:l.Lithuanian,name:"Lithuanian",native:"Lietuvi\u0173"},name:"Lithuanian",native_name:"Lietuvi\u0173",rtl:!1},Tf={country:{code:t.Lithuania,name:"Lithuania",native:"Lietuva"},id:e.LithuanianLithuania,language:{code:l.Lithuanian,name:"Lithuanian",native:"Lietuvi\u0173"},name:"Lithuanian (Lithuania)",native_name:"Lietuvi\u0173 (Lietuva)",rtl:!1},vf={id:e.Luxembourgish,language:{code:l.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish",native_name:"L\xEBtzebuergesch",rtl:!1},bf={country:{code:t.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.LuxembourgishBelgium,language:{code:l.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish (Belgium)",native_name:"L\xEBtzebuergesch (Belgi\xEB)",rtl:!1},Bf={country:{code:t.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:e.LuxembourgishLuxembourg,language:{code:l.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish (Luxembourg)",native_name:"L\xEBtzebuergesch (Luxembourg)",rtl:!1},Uf={id:e.Macedonian,language:{code:l.Macedonian,name:"Macedonian",native:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438"},name:"Macedonian",native_name:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438",rtl:!1},Nf={country:{code:t.NorthMacedonia,name:"Macedonia",native:"\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430"},id:e.MacedonianNorthMacedonia,language:{code:l.Macedonian,name:"Macedonian",native:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438"},name:"Macedonian (North Macedonia)",native_name:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438 (\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430)",rtl:!1},yf={id:e.Malay,language:{code:l.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay",native_name:"Bahasa Melayu",rtl:!1},Df={country:{code:t.Brunei,name:"Brunei",native:"Negara Brunei Darussalam"},id:e.MalayBrunei,language:{code:l.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Brunei)",native_name:"Bahasa Melayu (Negara Brunei Darussalam)",rtl:!1},Pf={country:{code:t.Malaysia,name:"Malaysia",native:"Malaysia"},id:e.MalayMalaysia,language:{code:l.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Malaysia)",native_name:"Bahasa Melayu (Malaysia)",rtl:!1},Ff={country:{code:t.Singapore,name:"Singapore",native:"Singapore"},id:e.MalaySingapore,language:{code:l.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Singapore)",native_name:"Bahasa Melayu (Singapore)",rtl:!1},kf={country:{code:t.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.MalayIndia,language:{code:l.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (India)",native_name:"Bahasa Melayu (\u092D\u093E\u0930\u0924)",rtl:!1},Mf={id:e.Maltese,language:{code:l.Maltese,name:"Maltese",native:"Malti"},name:"Maltese",native_name:"Malti",rtl:!1},Lf={country:{code:t.Malta,name:"Malta",native:"Malta"},id:e.MalteseMalta,language:{code:l.Maltese,name:"Maltese",native:"Malti"},name:"Maltese (Malta)",native_name:"Malti (Malta)",rtl:!1},wf={id:e.Maori,language:{code:l.Maori,name:"Maori",native:"M\u0101ori"},name:"Maori",native_name:"M\u0101ori",rtl:!1},Gf={country:{code:t.NewZealand,name:"New Zealand",native:"New Zealand"},id:e.MaoriNewZealand,language:{code:l.Maori,name:"Maori",native:"M\u0101ori"},name:"Maori (New Zealand)",native_name:"M\u0101ori (New Zealand)",rtl:!1},xf={id:e.Marathi,language:{code:l.Marathi,name:"Marathi",native:"\u092E\u0930\u093E\u0920\u0940"},name:"Marathi",native_name:"\u092E\u0930\u093E\u0920\u0940",rtl:!1},qf={country:{code:t.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.MarathiIndia,language:{code:l.Marathi,name:"Marathi",native:"\u092E\u0930\u093E\u0920\u0940"},name:"Marathi (India)",native_name:"\u092E\u0930\u093E\u0920\u0940 (\u092D\u093E\u0930\u0924)",rtl:!1},Kf={id:e.Mongolian,language:{code:l.Mongolian,name:"Mongolian",native:"\u041C\u043E\u043D\u0433\u043E\u043B"},name:"Mongolian",native_name:"\u041C\u043E\u043D\u0433\u043E\u043B",rtl:!1},Of={country:{code:t.Mongolia,name:"Mongolia",native:"\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441"},id:e.MongolianMongolia,language:{code:l.Mongolian,name:"Mongolian",native:"\u041C\u043E\u043D\u0433\u043E\u043B"},name:"Mongolian (Mongolia)",native_name:"\u041C\u043E\u043D\u0433\u043E\u043B (\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441)",rtl:!1},jf={id:e.Montenegrin,language:{code:l.Montenegrin,name:"Montenegrin",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},name:"Montenegrin",native_name:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A",rtl:!1},Hf={country:{code:t.Montenegro,name:"Montenegro",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},id:e.MontenegrinMontenegro,language:{code:l.Montenegrin,name:"Montenegrin",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},name:"Montenegrin (Montenegro)",native_name:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A (\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A)",rtl:!1},Wf={id:e.Nepali,language:{code:l.Nepali,name:"Nepali",native:"\u0928\u0947\u092A\u093E\u0932\u0940"},name:"Nepali",native_name:"\u0928\u0947\u092A\u093E\u0932\u0940",rtl:!1},Vf={country:{code:t.Nepal,name:"Nepal",native:"\u0928\u0947\u092A\u093E\u0932"},id:e.NepaliNepal,language:{code:l.Nepali,name:"Nepali",native:"\u0928\u0947\u092A\u093E\u0932\u0940"},name:"Nepali (Nepal)",native_name:"\u0928\u0947\u092A\u093E\u0932\u0940 (\u0928\u0947\u092A\u093E\u0932)",rtl:!1},Rf={id:e.NorthernSotho,language:{code:l.NorthernSotho,name:"Northern Sotho",native:"Sesotho sa Leboa"},name:"Northern Sotho",native_name:"Sesotho sa Leboa",rtl:!1},zf={country:{code:t.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.NorthernSothoSouthAfrica,language:{code:l.NorthernSotho,name:"Northern Sotho",native:"Sesotho sa Leboa"},name:"Northern Sotho (South Africa)",native_name:"Sesotho sa Leboa (South Africa)",rtl:!1},Yf={id:e.Norwegian,language:{code:l.Norwegian,name:"Norwegian",native:"Norsk"},name:"Norwegian",native_name:"Norsk",rtl:!1},Jf={country:{code:t.Norway,name:"Norway",native:"Norge"},id:e.NorwegianBokmalNorway,language:{code:l.NorwegianBokmal,name:"Norwegian",native:"Norsk"},name:"Norwegian (Bokmal)",native_name:"Norsk (Bokm\xE5l)",rtl:!1},Zf={country:{code:t.Norway,name:"Norway",native:"Norge"},id:e.NorwegianNynorskNorway,language:{code:l.NorwegianNynorsk,name:"Norwegian",native:"Norsk"},name:"Norwegian (Nynorsk)",native_name:"Norsk (Nynorsk)",rtl:!1},$f={id:e.Oriya,language:{code:l.Oriya,name:"Oriya",native:"\u0B13\u0B21\u0B3C\u0B3F\u0B06"},name:"Oriya",native_name:"\u0B13\u0B21\u0B3C\u0B3F\u0B06",rtl:!1},Qf={country:{code:t.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:e.OriyaIndia,language:{code:l.Oriya,name:"Oriya",native:"\u0B13\u0B21\u0B3C\u0B3F\u0B06"},name:"Oriya (India)",native_name:"\u0B13\u0B21\u0B3C\u0B3F\u0B06 (\u0B2D\u0B3E\u0B30\u0B24)",rtl:!1},Cf={id:e.Pashto,language:{code:l.Pashto,name:"Pashto",native:"\u067E\u069A\u062A\u0648"},name:"Pashto",native_name:"\u067E\u069A\u062A\u0648",rtl:!0},Xf={country:{code:t.Afghanistan,name:"Afghanistan",native:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},id:e.PashtoAfghanistan,language:{code:l.Pashto,name:"Pashto",native:"\u067E\u069A\u062A\u0648"},name:"Pashto (Afghanistan)",native_name:"\u067E\u069A\u062A\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)",rtl:!0},ad={id:e.Persian,language:{code:l.Persian,name:"Persian",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Persian",native_name:"\u0641\u0627\u0631\u0633\u06CC",rtl:!0},ed={country:{code:t.Iran,name:"Iran",native:"\u0627\u06CC\u0631\u0627\u0646"},id:e.PersianIran,language:{code:l.Persian,name:"Persian",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Persian (Iran)",native_name:"\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)",rtl:!0},id={id:e.Polish,language:{code:l.Polish,name:"Polish",native:"Polski"},name:"Polish",native_name:"Polski",rtl:!1},nd={country:{code:t.Poland,name:"Poland",native:"Polska"},id:e.PolishPoland,language:{code:l.Polish,name:"Polish",native:"Polski"},name:"Polish (Poland)",native_name:"Polski (Polska)",rtl:!1},sd={id:e.Portuguese,language:{code:l.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese",native_name:"Portugu\xEAs",rtl:!1},ud={country:{code:t.Brazil,name:"Brazil",native:"Brasil"},id:e.PortugueseBrazil,language:{code:l.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese (Brazil)",native_name:"Portugu\xEAs (Brasil)",rtl:!1},rd={country:{code:t.Portugal,name:"Portugal",native:"Portugal"},id:e.PortuguesePortugal,language:{code:l.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese (Portugal)",native_name:"Portugu\xEAs (Portugal)",rtl:!1},td={id:e.Punjabi,language:{code:l.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40",rtl:!0},ld={country:{code:t.Pakistan,name:"Pakistan",native:"\u067E\u0627\u06A9\u0633\u062A\u0627\u0646"},id:e.PunjabiPakistan,language:{code:l.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi (Pakistan)",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)",rtl:!0},od={country:{code:t.India,name:"India",native:"\u0A2D\u0A3E\u0A30\u0A24"},id:e.PunjabiIndia,language:{code:l.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi (India)",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u0A2D\u0A3E\u0A30\u0A24)",rtl:!0},md={id:e.Quechua,language:{code:l.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua",native_name:"Runa Simi",rtl:!1},cd={country:{code:t.Bolivia,name:"Bolivia",native:"Bolivia"},id:e.QuechuaBolivia,language:{code:l.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Bolivia)",native_name:"Runa Simi (Bolivia)",rtl:!1},Ad={country:{code:t.Ecuador,name:"Ecuador",native:"Ecuador"},id:e.QuechuaEcuador,language:{code:l.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Ecuador)",native_name:"Runa Simi (Ecuador)",rtl:!1},fd={country:{code:t.Peru,name:"Peru",native:"Per\xFA"},id:e.QuechuaPeru,language:{code:l.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Peru)",native_name:"Runa Simi (Per\xFA)",rtl:!1},dd={id:e.Romanian,language:{code:l.Romanian,name:"Romanian",native:"Rom\xE2n\u0103"},name:"Romanian",native_name:"Rom\xE2n\u0103",rtl:!1},gd={country:{code:t.Romania,name:"Romania",native:"Rom\xE2nia"},id:e.RomanianRomania,language:{code:l.Romanian,name:"Romanian",native:"Rom\xE2n\u0103"},name:"Romanian (Romania)",native_name:"Rom\xE2n\u0103 (Rom\xE2nia)",rtl:!1},hd={id:e.Russian,language:{code:l.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439",rtl:!1},Id={country:{code:t.RussianFederation,name:"Russian Federation",native:"\u0420\u043E\u0441\u0441\u0438\u044F"},id:e.RussianRussia,language:{code:l.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Russia)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0420\u043E\u0441\u0441\u0438\u044F)",rtl:!1},_d={country:{code:t.Ukraine,name:"Ukraine",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0430"},id:e.RussianUkraine,language:{code:l.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Ukraine)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)",rtl:!1},pd={country:{code:t.Kazakhstan,name:"Kazakhstan",native:"\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D"},id:e.RussianKazakhstan,language:{code:l.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Kazakhstan)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)",rtl:!1},Ed={country:{code:t.Kyrgyzstan,name:"Kyrgyzstan",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},id:e.RussianKyrgyzstan,language:{code:l.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Kyrgyzstan)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430)",rtl:!1},Sd={id:e.Sanskrit,language:{code:l.Sanskrit,name:"Sanskrit",native:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D"},name:"Sanskrit",native_name:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D",rtl:!1},Td={country:{code:t.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.SanskritIndia,language:{code:l.Sanskrit,name:"Sanskrit",native:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D"},name:"Sanskrit (India)",native_name:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D (\u092D\u093E\u0930\u0924)",rtl:!1},vd={id:e.Sami,language:{code:l.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami",native_name:"S\xE1megiella",rtl:!1},bd={country:{code:t.Finland,name:"Finland",native:"Suomi"},id:e.SamiFinland,language:{code:l.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Finland)",native_name:"S\xE1megiella (Suomi)",rtl:!1},Bd={country:{code:t.Norway,name:"Norway",native:"Norge"},id:e.SamiNorway,language:{code:l.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Norway)",native_name:"S\xE1megiella (Norge)",rtl:!1},Ud={country:{code:t.Sweden,name:"Sweden",native:"Sverige"},id:e.SamiSweden,language:{code:l.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Sweden)",native_name:"S\xE1megiella (Sverige)",rtl:!1},Nd={id:e.Samoan,language:{code:l.Samoan,name:"Samoan",native:"Gagana fa\u2019a S\u0101moa"},name:"Samoan",native_name:"Gagana fa\u2019a S\u0101moa",rtl:!1},yd={country:{code:t.Samoa,name:"Samoa",native:"Samoa"},id:e.SamoanSamoa,language:{code:l.Samoan,name:"Samoan",native:"Gagana fa\u2019a S\u0101moa"},name:"Samoan (Samoa)",native_name:"Gagana fa\u2019a S\u0101moa (Samoa)",rtl:!1},Dd={id:e.Serbian,language:{code:l.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin)",native_name:"Srpski (Latinica)",rtl:!1},Pd={country:{code:t.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"Bosna i Hercegovina"},id:e.SerbianBosniaAndHerzegovina,language:{code:l.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin) (Bosnia and Herzegovina)",native_name:"Srpski (Latinica) (Bosna i Hercegovina)",rtl:!1},Fd={country:{code:t.SerbiaAndMontenegro,name:"Serbia and Montenegro",native:"Srbija i Crna Gora"},id:e.SerbianSerbiaAndMontenegro,language:{code:l.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin) (Serbia and Montenegro)",native_name:"Srpski (Latinica) (Srbija i Crna Gora)",rtl:!1},kd={id:e.SerbianCyrillic,language:{code:l.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430)",rtl:!1},Md={country:{code:t.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"\u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430"},id:e.SerbianCyrillicBosniaAndHerzegovina,language:{code:l.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic, Bosnia and Herzegovina)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430)",rtl:!1},Ld={country:{code:t.SerbiaAndMontenegro,name:"Serbia and Montenegro",native:"\u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430"},id:e.SerbianCyrillicSerbiaAndMontenegro,language:{code:l.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic, Serbia and Montenegro)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430)",rtl:!1},wd={id:e.Slovak,language:{code:l.Slovak,name:"Slovak",native:"Sloven\u010Dina"},name:"Slovak",native_name:"Sloven\u010Dina",rtl:!1},Gd={country:{code:t.Slovakia,name:"Slovakia",native:"Slovensko"},id:e.SlovakSlovakia,language:{code:l.Slovak,name:"Slovak",native:"Sloven\u010Dina"},name:"Slovak (Slovakia)",native_name:"Sloven\u010Dina (Slovensko)",rtl:!1},xd={id:e.Slovenian,language:{code:l.Slovenian,name:"Slovenian",native:"Sloven\u0161\u010Dina"},name:"Slovenian",native_name:"Sloven\u0161\u010Dina",rtl:!1},qd={country:{code:t.Slovenia,name:"Slovenia",native:"Slovenija"},id:e.SlovenianSlovenia,language:{code:l.Slovenian,name:"Slovenian",native:"Sloven\u0161\u010Dina"},name:"Slovenian (Slovenia)",native_name:"Sloven\u0161\u010Dina (Slovenija)",rtl:!1},Kd={id:e.Somali,language:{code:l.Somali,name:"Somali",native:"Soomaaliga"},name:"Somali",native_name:"Soomaaliga",rtl:!0},Od={country:{code:t.Somalia,name:"Somalia",native:"Soomaaliya"},id:e.SomaliSomalia,language:{code:l.Somali,name:"Somali",native:"Soomaaliga"},name:"Somali (Somalia)",native_name:"Soomaaliga (Soomaaliya)",rtl:!0},jd={id:e.Spanish,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish",native_name:"Espa\xF1ol",rtl:!1},Hd={country:{code:t.Argentina,name:"Argentina",native:"Argentina"},id:e.SpanishArgentina,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Argentina)",native_name:"Espa\xF1ol (Argentina)",rtl:!1},Wd={country:{code:t.Bolivia,name:"Bolivia",native:"Bolivia"},id:e.SpanishBolivia,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Bolivia)",native_name:"Espa\xF1ol (Bolivia)",rtl:!1},Vd={country:{code:t.Chile,name:"Chile",native:"Chile"},id:e.SpanishChile,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Chile)",native_name:"Espa\xF1ol (Chile)",rtl:!1},Rd={country:{code:t.Colombia,name:"Colombia",native:"Colombia"},id:e.SpanishColombia,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Colombia)",native_name:"Espa\xF1ol (Colombia)",rtl:!1},zd={country:{code:t.CostaRica,name:"Costa Rica",native:"Costa Rica"},id:e.SpanishCostaRica,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Costa Rica)",native_name:"Espa\xF1ol (Costa Rica)",rtl:!1},Yd={country:{code:t.Cuba,name:"Cuba",native:"Cuba"},id:e.SpanishCuba,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Cuba)",native_name:"Espa\xF1ol (Cuba)",rtl:!1},Jd={country:{code:t.DominicanRepublic,name:"Dominican Republic",native:"Rep\xFAblica Dominicana"},id:e.SpanishDominicanRepublic,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Dominican Republic)",native_name:"Espa\xF1ol (Rep\xFAblica Dominicana)",rtl:!1},Zd={country:{code:t.Ecuador,name:"Ecuador",native:"Ecuador"},id:e.SpanishEcuador,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Ecuador)",native_name:"Espa\xF1ol (Ecuador)",rtl:!1},$d={country:{code:t.ElSalvador,name:"El Salvador",native:"El Salvador"},id:e.SpanishElSalvador,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (El Salvador)",native_name:"Espa\xF1ol (El Salvador)",rtl:!1},Qd={country:{code:t.EquatorialGuinea,name:"Equatorial Guinea",native:"Guinea Ecuatorial"},id:e.SpanishEquatorialGuinea,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Equatorial Guinea)",native_name:"Espa\xF1ol (Guinea Ecuatorial)",rtl:!1},Cd={country:{code:t.Guatemala,name:"Guatemala",native:"Guatemala"},id:e.SpanishGuatemala,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Guatemala)",native_name:"Espa\xF1ol (Guatemala)",rtl:!1},Xd={country:{code:t.Honduras,name:"Honduras",native:"Honduras"},id:e.SpanishHonduras,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Honduras)",native_name:"Espa\xF1ol (Honduras)",rtl:!1},ag={country:{code:t.Mexico,name:"Mexico",native:"M\xE9xico"},id:e.SpanishMexico,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Mexico)",native_name:"Espa\xF1ol (M\xE9xico)",rtl:!1},eg={country:{code:t.Nicaragua,name:"Nicaragua",native:"Nicaragua"},id:e.SpanishNicaragua,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Nicaragua)",native_name:"Espa\xF1ol (Nicaragua)",rtl:!1},ig={country:{code:t.Panama,name:"Panama",native:"Panam\xE1"},id:e.SpanishPanama,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Panama)",native_name:"Espa\xF1ol (Panam\xE1)",rtl:!1},ng={country:{code:t.Paraguay,name:"Paraguay",native:"Paraguay"},id:e.SpanishParaguay,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Paraguay)",native_name:"Espa\xF1ol (Paraguay)",rtl:!1},sg={country:{code:t.Peru,name:"Peru",native:"Per\xFA"},id:e.SpanishPeru,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Peru)",native_name:"Espa\xF1ol (Per\xFA)",rtl:!1},ug={country:{code:t.PuertoRico,name:"Puerto Rico",native:"Puerto Rico"},id:e.SpanishPuertoRico,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Puerto Rico)",native_name:"Espa\xF1ol (Puerto Rico)",rtl:!1},rg={country:{code:t.Uruguay,name:"Uruguay",native:"Uruguay"},id:e.SpanishUruguay,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Uruguay)",native_name:"Espa\xF1ol (Uruguay)",rtl:!1},tg={country:{code:t.Venezuela,name:"Venezuela",native:"Venezuela"},id:e.SpanishVenezuela,language:{code:l.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Venezuela)",native_name:"Espa\xF1ol (Venezuela)",rtl:!1},lg={country:{code:t.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.SutuSouthAfrica,language:{code:l.Sutu,name:"Sutu",native:"Sesotho"},name:"Sutu (South Africa)",native_name:"Sesotho (Afrika Borwa)",rtl:!1},og={id:e.Swahili,language:{code:l.Swahili,name:"Swahili",native:"Kiswahili"},name:"Swahili",native_name:"Kiswahili",rtl:!1},mg={country:{code:t.Kenya,name:"Kenya",native:"Kenya"},id:e.SwahiliKenya,language:{code:l.Swahili,name:"Swahili",native:"Kiswahili"},name:"Swahili (Kenya)",native_name:"Kiswahili (Kenya)",rtl:!1},cg={id:e.Swedish,language:{code:l.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish",native_name:"Svenska",rtl:!1},Ag={country:{code:t.Finland,name:"Finland",native:"Suomi"},id:e.SwedishFinland,language:{code:l.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish (Finland)",native_name:"Svenska (Finland)",rtl:!1},fg={country:{code:t.Sweden,name:"Sweden",native:"Sverige"},id:e.SwedishSweden,language:{code:l.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish (Sweden)",native_name:"Svenska (Sverige)",rtl:!1},dg={id:e.Syriac,language:{code:l.Syriac,name:"Syriac",native:"\u0723\u0718\u072A\u071D\u071D\u0710"},name:"Syriac",native_name:"\u0723\u0718\u072A\u071D\u071D\u0710",rtl:!0},gg={country:{code:t.Syria,name:"Syria",native:"\u0633\u0648\u0631\u064A\u0627"},id:e.SyriacSyria,language:{code:l.Syriac,name:"Syriac",native:"\u0723\u0718\u072A\u071D\u071D\u0710"},name:"Syriac (Syria)",native_name:"\u0723\u0718\u072A\u071D\u071D\u0710 (\u0633\u0648\u0631\u064A\u0627)",rtl:!0},hg={id:e.Tajik,language:{code:l.Tajik,name:"Tajik",native:"\u0422\u043E\u04B7\u0438\u043A\u04E3"},name:"Tajik",native_name:"\u0422\u043E\u04B7\u0438\u043A\u04E3",rtl:!1},Ig={country:{code:t.Tajikistan,name:"Tajikistan",native:"\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D"},id:e.TajikTajikistan,language:{code:l.Tajik,name:"Tajik",native:"\u0422\u043E\u04B7\u0438\u043A\u04E3"},name:"Tajik (Tajikistan)",native_name:"\u0422\u043E\u04B7\u0438\u043A\u04E3 (\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D)",rtl:!1},_g={id:e.Tagalog,language:{code:l.Tagalog,name:"Tagalog",native:"Tagalog"},name:"Tagalog",native_name:"Tagalog",rtl:!1},pg={country:{code:t.Philippines,name:"Philippines",native:"Pilipinas"},id:e.TagalogPhilippines,language:{code:l.Tagalog,name:"Tagalog",native:"Tagalog"},name:"Tagalog (Philippines)",native_name:"Tagalog (Pilipinas)",rtl:!1},Eg={id:e.Tamil,language:{code:l.Tamil,name:"Tamil",native:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD"},name:"Tamil",native_name:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD",rtl:!1},Sg={country:{code:t.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:e.TamilIndia,language:{code:l.Tamil,name:"Tamil",native:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD"},name:"Tamil (India)",native_name:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)",rtl:!1},Tg={id:e.Telugu,language:{code:l.Telugu,name:"Telugu",native:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41"},name:"Telugu",native_name:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41",rtl:!1},vg={country:{code:t.India,name:"India",native:"\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02"},id:e.TeluguIndia,language:{code:l.Telugu,name:"Telugu",native:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41"},name:"Telugu (India)",native_name:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41 (\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02)",rtl:!1},bg={id:e.Thai,language:{code:l.Thai,name:"Thai",native:"\u0E44\u0E17\u0E22"},name:"Thai",native_name:"\u0E44\u0E17\u0E22",rtl:!1},Bg={country:{code:t.Thailand,name:"Thailand",native:"\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22"},id:e.ThaiThailand,language:{code:l.Thai,name:"Thai",native:"\u0E44\u0E17\u0E22"},name:"Thai (Thailand)",native_name:"\u0E44\u0E17\u0E22 (\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22)",rtl:!1},Ug={id:e.Tibetan,language:{code:l.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42",rtl:!1},Ng={country:{code:t.China,name:"China",native:"\u4E2D\u56FD"},id:e.TibetanChina,language:{code:l.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (China)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42)",rtl:!1},yg={country:{code:t.Bhutan,name:"Bhutan",native:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D"},id:e.TibetanBhutan,language:{code:l.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (Bhutan)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D)",rtl:!1},Dg={country:{code:t.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:e.TibetanIndia,language:{code:l.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (India)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)",rtl:!1},Pg={id:e.Tsonga,language:{code:l.Tsonga,name:"Tsonga",native:"Xitsonga"},name:"Tsonga",native_name:"Xitsonga",rtl:!1},Fg={id:e.Tswana,language:{code:l.Tswana,name:"Tswana",native:"Setswana"},name:"Tswana",native_name:"Setswana",rtl:!1},kg={country:{code:t.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.TswanaSouthAfrica,language:{code:l.Tswana,name:"Tswana",native:"Setswana"},name:"Tswana (South Africa)",native_name:"Setswana (South Africa)",rtl:!1},Mg={id:e.Turkish,language:{code:l.Turkish,name:"Turkish",native:"T\xFCrk\xE7e"},name:"Turkish",native_name:"T\xFCrk\xE7e",rtl:!1},Lg={country:{code:t.Turkey,name:"Turkey",native:"T\xFCrkiye"},id:e.TurkishTurkey,language:{code:l.Turkish,name:"Turkish",native:"T\xFCrk\xE7e"},name:"Turkish (Turkey)",native_name:"T\xFCrk\xE7e (T\xFCrkiye)",rtl:!1},wg={id:e.Ukrainian,language:{code:l.Ukrainian,name:"Ukrainian",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430"},name:"Ukrainian",native_name:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430",rtl:!1},Gg={country:{code:t.Ukraine,name:"Ukraine",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0430"},id:e.UkrainianUkraine,language:{code:l.Ukrainian,name:"Ukrainian",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430"},name:"Ukrainian (Ukraine)",native_name:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)",rtl:!1},xg={id:e.Urdu,language:{code:l.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu",native_name:"\u0627\u0631\u062F\u0648",rtl:!0},qg={country:{code:t.Afghanistan,name:"Afghanistan",native:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},id:e.UrduAfghanistan,language:{code:l.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (Afghanistan)",native_name:"\u0627\u0631\u062F\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)",rtl:!0},Kg={country:{code:t.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.UrduIndia,language:{code:l.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (India)",native_name:"\u0627\u0631\u062F\u0648 (\u092D\u093E\u0930\u0924)",rtl:!0},Og={country:{code:t.Pakistan,name:"Pakistan",native:"\u067E\u0627\u06A9\u0633\u062A\u0627\u0646"},id:e.UrduPakistan,language:{code:l.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (Pakistan)",native_name:"\u0627\u0631\u062F\u0648 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)",rtl:!0},jg={id:e.Uzbek,language:{code:l.Uzbek,name:"Uzbek",native:"O\u02BBzbekcha"},name:"Uzbek",native_name:"O\u02BBzbekcha",rtl:!1},Hg={country:{code:t.Uzbekistan,name:"Uzbekistan",native:"O\u02BBzbekiston"},id:e.UzbekUzbekistan,language:{code:l.Uzbek,name:"Uzbek",native:"O\u02BBzbekcha"},name:"Uzbek (Latin, Uzbekistan)",native_name:"O\u02BBzbekcha (O\u02BBzbekiston)",rtl:!1},Wg={country:{code:t.Uzbekistan,name:"Uzbekistan",native:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D"},id:e.UzbekCyrillic,language:{code:l.Uzbek,name:"Uzbek",native:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D"},name:"Uzbek (Cyrillic)",native_name:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D (\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D)",rtl:!1},Vg={id:e.Vietnamese,language:{code:l.Vietnamese,name:"Vietnamese",native:"Ti\u1EBFng Vi\u1EC7t"},name:"Vietnamese",native_name:"Ti\u1EBFng Vi\u1EC7t",rtl:!1},Rg={country:{code:t.Vietnam,name:"Vietnam",native:"Vi\u1EC7t Nam"},id:e.VietnameseVietnam,language:{code:l.Vietnamese,name:"Vietnamese",native:"Ti\u1EBFng Vi\u1EC7t"},name:"Vietnamese (Vietnam)",native_name:"Ti\u1EBFng Vi\u1EC7t (Vi\u1EC7t Nam)",rtl:!1},zg={id:e.Welsh,language:{code:l.Welsh,name:"Welsh",native:"Cymraeg"},name:"Welsh",native_name:"Cymraeg",rtl:!1},Yg={country:{code:t.UnitedKingdom,name:"United Kingdom",native:"United Kingdom"},id:e.WelshUnitedKingdom,language:{code:l.Welsh,name:"Welsh",native:"Cymraeg"},name:"Welsh (United Kingdom)",native_name:"Cymraeg (United Kingdom)",rtl:!1},Jg={id:e.Xhosa,language:{code:l.Xhosa,name:"Xhosa",native:"isiXhosa"},name:"Xhosa",native_name:"isiXhosa",rtl:!1},Zg={country:{code:t.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.XhosaSouthAfrica,language:{code:l.Xhosa,name:"Xhosa",native:"isiXhosa"},name:"Xhosa (South Africa)",native_name:"isiXhosa (South Africa)",rtl:!1},$g={id:e.Yiddish,language:{code:l.Yiddish,name:"Yiddish",native:"\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9"},name:"Yiddish",native_name:"\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9",rtl:!1},Qg={id:e.Yoruba,language:{code:l.Yoruba,name:"Yoruba",native:"Yor\xF9b\xE1"},name:"Yoruba",native_name:"Yor\xF9b\xE1",rtl:!1},Cg={country:{code:t.Nigeria,name:"Nigeria",native:"Nigeria"},id:e.YorubaNigeria,language:{code:l.Yoruba,name:"Yoruba",native:"Yor\xF9b\xE1"},name:"Yoruba (Nigeria)",native_name:"Yor\xF9b\xE1 (Nigeria)",rtl:!1},Xg={id:e.Zulu,language:{code:l.Zulu,name:"Zulu",native:"isiZulu"},name:"Zulu",native_name:"isiZulu",rtl:!1},ah={country:{code:t.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.ZuluSouthAfrica,language:{code:l.Zulu,name:"Zulu",native:"isiZulu"},name:"Zulu (South Africa)",native_name:"isiZulu (South Africa)",rtl:!1},eh={id:u.AfricaAbidjan,name:"Africa/Abidjan",offset:n.UTC_0,timezone:s.CoordinatedUniversalTime},ih={id:u.AfricaAccra,name:"Africa/Accra",offset:n.UTC_0,timezone:s.CoordinatedUniversalTime},nh={id:u.AfricaAddisAbaba,name:"Africa/Addis_Ababa",offset:n.UTC_PLUS_3,timezone:s.EastAfricaTime},sh={id:u.AfricaAlgiers,name:"Africa/Algiers",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},uh={id:u.AfricaAsmara,name:"Africa/Asmara",offset:n.UTC_PLUS_3,timezone:s.EastAfricaTime},rh={id:u.AfricaBamako,name:"Africa/Bamako",offset:n.UTC_0,timezone:s.CoordinatedUniversalTime},th={id:u.AfricaBangui,name:"Africa/Bangui",offset:n.UTC_PLUS_1,timezone:s.WestAfricaTime},lh={id:u.AfricaBanjul,name:"Africa/Banjul",offset:n.UTC_0,timezone:s.CoordinatedUniversalTime},oh={id:u.AfricaBissau,name:"Africa/Bissau",offset:n.UTC_0,timezone:s.CoordinatedUniversalTime},mh={id:u.AfricaBlantyre,name:"Africa/Blantyre",offset:n.UTC_PLUS_2,timezone:s.CentralAfricaTime},ch={id:u.AfricaBrazzaville,name:"Africa/Brazzaville",offset:n.UTC_PLUS_1,timezone:s.WestAfricaTime},Ah={id:u.AfricaBujumbura,name:"Africa/Bujumbura",offset:n.UTC_PLUS_2,timezone:s.CentralAfricaTime},fh={id:u.AfricaCairo,name:"Africa/Cairo",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},dh={id:u.AfricaCasablanca,name:"Africa/Casablanca",offset:n.UTC_PLUS_1,timezone:s.WesternEuropeanTime},gh={id:u.AfricaCeuta,name:"Africa/Ceuta",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},hh={id:u.AfricaConakry,name:"Africa/Conakry",offset:n.UTC_0,timezone:s.CoordinatedUniversalTime},Ih={id:u.AfricaDakar,name:"Africa/Dakar",offset:n.UTC_0,timezone:s.CoordinatedUniversalTime},_h={id:u.AfricaDarEsSalaam,name:"Africa/Dar_es_Salaam",offset:n.UTC_PLUS_3,timezone:s.EastAfricaTime},ph={id:u.AfricaDjibouti,name:"Africa/Djibouti",offset:n.UTC_PLUS_3,timezone:s.EastAfricaTime},Eh={id:u.AfricaDouala,name:"Africa/Douala",offset:n.UTC_PLUS_1,timezone:s.WestAfricaTime},Sh={id:u.AfricaElAaiun,name:"Africa/El_Aaiun",offset:n.UTC_PLUS_1,timezone:s.WestAfricaTime},Th={id:u.AfricaFreetown,name:"Africa/Freetown",offset:n.UTC_0,timezone:s.CoordinatedUniversalTime},vh={id:u.AfricaGaborone,name:"Africa/Gaborone",offset:n.UTC_PLUS_2,timezone:s.CentralAfricaTime},bh={id:u.AfricaHarare,name:"Africa/Harare",offset:n.UTC_PLUS_2,timezone:s.CentralAfricaTime},Bh={id:u.AfricaJohannesburg,name:"Africa/Johannesburg",offset:n.UTC_PLUS_2,timezone:s.SouthAfricanStandardTime},Uh={id:u.AfricaJuba,name:"Africa/Juba",offset:n.UTC_PLUS_3,timezone:s.EastAfricaTime},Nh={id:u.AfricaKampala,name:"Africa/Kampala",offset:n.UTC_PLUS_3,timezone:s.EastAfricaTime},yh={id:u.AfricaKhartoum,name:"Africa/Khartoum",offset:n.UTC_PLUS_2,timezone:s.EastAfricaTime},Dh={id:u.AfricaKigali,name:"Africa/Kigali",offset:n.UTC_PLUS_2,timezone:s.CentralAfricaTime},Ph={id:u.AfricaKinshasa,name:"Africa/Kinshasa",offset:n.UTC_PLUS_1,timezone:s.WestAfricaTime},Fh={id:u.AfricaLagos,name:"Africa/Lagos",offset:n.UTC_PLUS_1,timezone:s.WestAfricaTime},kh={id:u.AfricaLibreville,name:"Africa/Libreville",offset:n.UTC_PLUS_1,timezone:s.WestAfricaTime},Mh={id:u.AfricaLome,name:"Africa/Lome",offset:n.UTC_0,timezone:s.CoordinatedUniversalTime},Lh={id:u.AfricaLuanda,name:"Africa/Luanda",offset:n.UTC_PLUS_1,timezone:s.WestAfricaTime},wh={id:u.AfricaLubumbashi,name:"Africa/Lubumbashi",offset:n.UTC_PLUS_2,timezone:s.CentralAfricaTime},Gh={id:u.AfricaLusaka,name:"Africa/Lusaka",offset:n.UTC_PLUS_2,timezone:s.CentralAfricaTime},xh={id:u.AfricaMalabo,name:"Africa/Malabo",offset:n.UTC_PLUS_1,timezone:s.WestAfricaTime},qh={id:u.AfricaMaputo,name:"Africa/Maputo",offset:n.UTC_PLUS_2,timezone:s.CentralAfricaTime},Kh={id:u.AfricaMaseru,name:"Africa/Maseru",offset:n.UTC_PLUS_2,timezone:s.SouthAfricanStandardTime},Oh={id:u.AfricaMbabane,name:"Africa/Mbabane",offset:n.UTC_PLUS_2,timezone:s.SouthAfricanStandardTime},jh={id:u.AfricaMogadishu,name:"Africa/Mogadishu",offset:n.UTC_PLUS_3,timezone:s.EastAfricaTime},Hh={id:u.AfricaMonrovia,name:"Africa/Monrovia",offset:n.UTC_0,timezone:s.CoordinatedUniversalTime},Wh={id:u.AfricaNairobi,name:"Africa/Nairobi",offset:n.UTC_PLUS_3,timezone:s.EastAfricaTime},Vh={id:u.AfricaNdjamena,name:"Africa/Ndjamena",offset:n.UTC_PLUS_1,timezone:s.WestAfricaTime},Rh={id:u.AfricaNiamey,name:"Africa/Niamey",offset:n.UTC_PLUS_1,timezone:s.WestAfricaTime},zh={id:u.AfricaNouakchott,name:"Africa/Nouakchott",offset:n.UTC_0,timezone:s.GreenwichMeanTime},Yh={id:u.AfricaOuagadougou,name:"Africa/Ouagadougou",offset:n.UTC_0,timezone:s.CoordinatedUniversalTime},Jh={id:u.AfricaPortoNovo,name:"Africa/Porto-Novo",offset:n.UTC_PLUS_1,timezone:s.WestAfricaTime},Zh={id:u.AfricaSaoTome,name:"Africa/SaoTome",offset:n.UTC_0,timezone:s.CoordinatedUniversalTime},$h={id:u.AfricaTripoli,name:"Africa/Tripoli",offset:n.UTC_0,timezone:s.CoordinatedUniversalTime},Qh={id:u.AfricaTunis,name:"Africa/Tunis",offset:n.UTC_0,timezone:s.CoordinatedUniversalTime},Ch={id:u.AfricaWindhoek,name:"Africa/Windhoek",offset:n.UTC_PLUS_2,timezone:s.WestAfricaTime},Xh={id:u.AmericaAdak,name:"America/Adak",offset:n.UTC_PLUS_10,timezone:s.HawaiiAleutianStandardTime},aI={id:u.AmericaAnchorage,name:"America/Anchorage",offset:n.UTC_PLUS_9,timezone:s.AlaskaStandardTime},eI={id:u.AmericaAnguilla,name:"America/Anguilla",offset:n.UTC_0,timezone:s.AtlanticStandardTime},iI={id:u.AmericaAntigua,name:"America/Antigua",offset:n.UTC_0,timezone:s.AtlanticStandardTime},nI={id:u.AmericaAraguaina,name:"America/Araguaina",offset:n.UTC_MINUS_3,timezone:s.BrasiliaTime},sI={id:u.AmericaArgentinaBuenosAires,name:"America/Argentina/Buenos_Aires",offset:n.UTC_MINUS_3,timezone:s.ArgentinaTime},uI={id:u.AmericaArgentinaCatamarca,name:"America/Argentina/Catamarca",offset:n.UTC_MINUS_3,timezone:s.ArgentinaTime},rI={id:u.AmericaArgentinaCordoba,name:"America/Argentina/Cordoba",offset:n.UTC_MINUS_3,timezone:s.ArgentinaTime},tI={id:u.AmericaArgentinaJujuy,name:"America/Argentina/Jujuy",offset:n.UTC_MINUS_3,timezone:s.ArgentinaTime},lI={id:u.AmericaArgentinaLaRioja,name:"America/Argentina/La_Rioja",offset:n.UTC_MINUS_3,timezone:s.ArgentinaTime},oI={id:u.AmericaArgentinaMendoza,name:"America/Argentina/Mendoza",offset:n.UTC_MINUS_3,timezone:s.ArgentinaTime},mI={id:u.AmericaArgentinaRioGallegos,name:"America/Argentina/Rio_Gallegos",offset:n.UTC_MINUS_3,timezone:s.ArgentinaTime},cI={id:u.AmericaArgentinaSalta,name:"America/Argentina/Salta",offset:n.UTC_MINUS_3,timezone:s.ArgentinaTime},AI={id:u.AmericaArgentinaSanJuan,name:"America/Argentina/San_Juan",offset:n.UTC_MINUS_3,timezone:s.ArgentinaTime},fI={id:u.AmericaArgentinaSanLuis,name:"America/Argentina/San_Luis",offset:n.UTC_MINUS_3,timezone:s.ArgentinaTime},dI={id:u.AmericaArgentinaTucuman,name:"America/Argentina/Tucuman",offset:n.UTC_MINUS_3,timezone:s.ArgentinaTime},gI={id:u.AmericaArgentinaUshuaia,name:"America/Argentina/Ushuaia",offset:n.UTC_MINUS_3,timezone:s.ArgentinaTime},hI={id:u.AmericaAruba,name:"America/Aruba",offset:n.UTC_0,timezone:s.AtlanticStandardTime},II={id:u.AmericaAsuncion,name:"America/Asuncion",offset:n.UTC_MINUS_4,timezone:s.ParaguayTime},_I={id:u.AmericaAtikokan,name:"America/Atikokan",offset:n.UTC_0,timezone:s.EasternStandardTime},pI={id:u.AmericaAtka,name:"America/Atka",offset:n.UTC_MINUS_10,timezone:s.HawaiiAleutianStandardTime},EI={id:u.AmericaBahia,name:"America/Bahia",offset:n.UTC_MINUS_3,timezone:s.BrasiliaTime},SI={id:u.AmericaBahiaBanderas,name:"America/Bahia_Banderas",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},TI={id:u.AmericaBarbados,name:"America/Barbados",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},vI={id:u.AmericaBelem,name:"America/Belem",offset:n.UTC_MINUS_3,timezone:s.BrasiliaTime},bI={id:u.AmericaBelize,name:"America/Belize",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},BI={id:u.AmericaBlancSablon,name:"America/Blanc-Sablon",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},UI={id:u.AmericaBoaVista,name:"America/Boa_Vista",offset:n.UTC_MINUS_4,timezone:s.AmazonTime},NI={id:u.AmericaBogota,name:"America/Bogota",offset:n.UTC_MINUS_5,timezone:s.ColombiaTime},yI={id:u.AmericaBoise,name:"America/Boise",offset:n.UTC_MINUS_7,timezone:s.MountainStandardTime},DI={id:u.AmericaCambridgeBay,name:"America/Cambridge_Bay",offset:n.UTC_MINUS_7,timezone:s.MountainStandardTime},PI={id:u.AmericaCampoGrande,name:"America/Campo_Grande",offset:n.UTC_MINUS_4,timezone:s.AmazonTime},FI={id:u.AmericaCancun,name:"America/Cancun",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},kI={id:u.AmericaCaracas,name:"America/Caracas",offset:n.UTC_MINUS_4,timezone:s.VenezuelaStandardTime},MI={id:u.AmericaCayenne,name:"America/Cayenne",offset:n.UTC_MINUS_3,timezone:s.FrenchGuianaTime},LI={id:u.AmericaCayman,name:"America/Cayman",offset:n.UTC_0,timezone:s.AtlanticStandardTime},wI={id:u.AmericaChicago,name:"America/Chicago",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},GI={id:u.AmericaChihuahua,name:"America/Chihuahua",offset:n.UTC_MINUS_7,timezone:s.MountainStandardTime},xI={id:u.AmericaCoralHarbour,name:"America/Coral_Harbour",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},qI={id:u.AmericaCordoba,name:"America/Cordoba",offset:n.UTC_MINUS_3,timezone:s.ArgentinaTime},KI={id:u.AmericaCostaRica,name:"America/Costa_Rica",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},OI={id:u.AmericaCreston,name:"America/Creston",offset:n.UTC_MINUS_7,timezone:s.MountainStandardTime},jI={id:u.AmericaCuiaba,name:"America/Cuiaba",offset:n.UTC_MINUS_4,timezone:s.AmazonTime},HI={id:u.AmericaCuracao,name:"America/Curacao",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},WI={id:u.AmericaDanmarkshavn,name:"America/Danmarkshavn",offset:n.UTC_0,timezone:s.GreenwichMeanTime},VI={id:u.AmericaDawson,name:"America/Dawson",offset:n.UTC_MINUS_8,timezone:s.PacificStandardTime},RI={id:u.AmericaDawsonCreek,name:"America/Dawson_Creek",offset:n.UTC_MINUS_8,timezone:s.PacificStandardTime},zI={id:u.AmericaDenver,name:"America/Denver",offset:n.UTC_MINUS_7,timezone:s.MountainStandardTime},YI={id:u.AmericaDetroit,name:"America/Detroit",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},JI={id:u.AmericaDominica,name:"America/Dominica",offset:n.UTC_0,timezone:s.AtlanticStandardTime},ZI={id:u.AmericaEdmonton,name:"America/Edmonton",offset:n.UTC_MINUS_7,timezone:s.MountainStandardTime},$I={id:u.AmericaEirunepe,name:"America/Eirunepe",offset:n.UTC_MINUS_5,timezone:s.AcreTime},QI={id:u.AmericaElSalvador,name:"America/El_Salvador",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},CI={id:u.AmericaFortaleza,name:"America/Fortaleza",offset:n.UTC_MINUS_3,timezone:s.BrasiliaTime},XI={id:u.AmericaGlaceBay,name:"America/Glace_Bay",offset:n.UTC_0,timezone:s.AtlanticStandardTime},a_={id:u.AmericaGodthab,name:"America/Godthab",offset:n.UTC_MINUS_3,timezone:s.WestGreenlandTime},e_={id:u.AmericaGooseBay,name:"America/Goose_Bay",offset:n.UTC_0,timezone:s.AtlanticStandardTime},i_={id:u.AmericaGrandTurk,name:"America/Grand_Turk",offset:n.UTC_0,timezone:s.AtlanticStandardTime},n_={id:u.AmericaGrenada,name:"America/Grenada",offset:n.UTC_0,timezone:s.AtlanticStandardTime},s_={id:u.AmericaGuadeloupe,name:"America/Guadeloupe",offset:n.UTC_0,timezone:s.AtlanticStandardTime},u_={id:u.AmericaGuatemala,name:"America/Guatemala",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},r_={id:u.AmericaGuayaquil,name:"America/Guayaquil",offset:n.UTC_MINUS_5,timezone:s.EcuadorTime},t_={id:u.AmericaGuyana,name:"America/Guyana",offset:n.UTC_0,timezone:s.AtlanticStandardTime},l_={id:u.AmericaHalifax,name:"America/Halifax",offset:n.UTC_0,timezone:s.AtlanticStandardTime},o_={id:u.AmericaHavana,name:"America/Havana",offset:n.UTC_MINUS_5,timezone:s.CubaStandardTime},m_={id:u.AmericaHermosillo,name:"America/Hermosillo",offset:n.UTC_MINUS_7,timezone:s.MountainStandardTime},c_={id:u.AmericaIndianaIndianapolis,name:"America/Indiana/Indianapolis",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},A_={id:u.AmericaIndianaKnox,name:"America/Indiana/Knox",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},f_={id:u.AmericaIndianaMarengo,name:"America/Indiana/Marengo",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},d_={id:u.AmericaIndianaPetersburg,name:"America/Indiana/Petersburg",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},g_={id:u.AmericaIndianaTellCity,name:"America/Indiana/Tell_City",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},h_={id:u.AmericaIndianaVevay,name:"America/Indiana/Vevay",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},I_={id:u.AmericaIndianaVincennes,name:"America/Indiana/Vincennes",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},__={id:u.AmericaIndianaWinamac,name:"America/Indiana/Winamac",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},p_={id:u.AmericaInuvik,name:"America/Inuvik",offset:n.UTC_MINUS_7,timezone:s.MountainStandardTime},E_={id:u.AmericaIqaluit,name:"America/Iqaluit",offset:n.UTC_0,timezone:s.EasternStandardTime},S_={id:u.AmericaJamaica,name:"America/Jamaica",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},T_={id:u.AmericaJuneau,name:"America/Juneau",offset:n.UTC_MINUS_9,timezone:s.AlaskaStandardTime},v_={id:u.AmericaKentuckyLouisville,name:"America/Kentucky/Louisville",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},b_={id:u.AmericaKentuckyMonticello,name:"America/Kentucky/Monticello",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},B_={id:u.AmericaKralendijk,name:"America/Kralendijk",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},U_={id:u.AmericaLaPaz,name:"America/La_Paz",offset:n.UTC_MINUS_4,timezone:s.BoliviaTime},N_={id:u.AmericaLima,name:"America/Lima",offset:n.UTC_MINUS_5,timezone:s.PeruTime},y_={id:u.AmericaLosAngeles,name:"America/Los_Angeles",offset:n.UTC_MINUS_8,timezone:s.PacificStandardTime},D_={id:u.AmericaLouisville,name:"America/Louisville",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},P_={id:u.AmericaLowerPrinces,name:"America/Lower_Princes",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},F_={id:u.AmericaMaceio,name:"America/Maceio",offset:n.UTC_MINUS_3,timezone:s.BrasiliaTime},k_={id:u.AmericaManagua,name:"America/Managua",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},M_={id:u.AmericaManaus,name:"America/Manaus",offset:n.UTC_MINUS_4,timezone:s.AmazonTime},L_={id:u.AmericaMarigot,name:"America/Marigot",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},w_={id:u.AmericaMartinique,name:"America/Martinique",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},G_={id:u.AmericaMatamoros,name:"America/Matamoros",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},x_={id:u.AmericaMazatlan,name:"America/Mazatlan",offset:n.UTC_MINUS_7,timezone:s.MountainStandardTime},q_={id:u.AmericaMenominee,name:"America/Menominee",offset:n.UTC_MINUS_5,timezone:s.CentralStandardTime},K_={id:u.AmericaMerida,name:"America/Merida",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},O_={id:u.AmericaMetlakatla,name:"America/Metlakatla",offset:n.UTC_MINUS_9,timezone:s.AlaskaStandardTime},j_={id:u.AmericaMexicoCity,name:"America/Mexico_City",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},H_={id:u.AmericaMiquelon,name:"America/Miquelon",offset:n.UTC_MINUS_3,timezone:s.SaintPierreAndMiquelonStandardTime},W_={id:u.AmericaMoncton,name:"America/Moncton",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},V_={id:u.AmericaMonterrey,name:"America/Monterrey",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},R_={id:u.AmericaMontevideo,name:"America/Montevideo",offset:n.UTC_MINUS_3,timezone:s.UruguayStandardTime},z_={id:u.AmericaMontreal,name:"America/Montreal",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},Y_={id:u.AmericaMontserrat,name:"America/Montserrat",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},J_={id:u.AmericaNassau,name:"America/Nassau",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},Z_={id:u.AmericaNewYork,name:"America/New_York",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},$_={id:u.AmericaNipigon,name:"America/Nipigon",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},Q_={id:u.AmericaNome,name:"America/Nome",offset:n.UTC_MINUS_9,timezone:s.AlaskaStandardTime},C_={id:u.AmericaNoronha,name:"America/Noronha",offset:n.UTC_MINUS_2,timezone:s.FernandoDeNoronhaTime},X_={id:u.AmericaNorthDakotaBeulah,name:"America/North_Dakota/Beulah",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},a4={id:u.AmericaNorthDakotaCenter,name:"America/North_Dakota/Center",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},e4={id:u.AmericaNorthDakotaNewSalem,name:"America/North_Dakota/New_Salem",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},i4={id:u.AmericaOjinaga,name:"America/Ojinaga",offset:n.UTC_MINUS_7,timezone:s.MountainStandardTime},n4={id:u.AmericaPanama,name:"America/Panama",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},s4={id:u.AmericaPangnirtung,name:"America/Pangnirtung",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},u4={id:u.AmericaParamaribo,name:"America/Paramaribo",offset:n.UTC_MINUS_3,timezone:s.SurinameTime},r4={id:u.AmericaPhoenix,name:"America/Phoenix",offset:n.UTC_MINUS_7,timezone:s.MountainStandardTime},t4={id:u.AmericaPortAuPrince,name:"America/Port-au-Prince",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},l4={id:u.AmericaPortOfSpain,name:"America/Port_of_Spain",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},o4={id:u.AmericaPortoVelho,name:"America/Porto_Velho",offset:n.UTC_MINUS_4,timezone:s.AmazonTime},m4={id:u.AmericaPuertoRico,name:"America/Puerto_Rico",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},c4={id:u.AmericaRainyRiver,name:"America/Rainy_River",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},A4={id:u.AmericaRankinInlet,name:"America/Rankin_Inlet",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},f4={id:u.AmericaRecife,name:"America/Recife",offset:n.UTC_MINUS_3,timezone:s.BrasiliaTime},d4={id:u.AmericaRegina,name:"America/Regina",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},g4={id:u.AmericaResolute,name:"America/Resolute",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},h4={id:u.AmericaRioBranco,name:"America/Rio_Branco",offset:n.UTC_MINUS_5,timezone:s.AcreTime},I4={id:u.AmericaSantaIsabel,name:"America/Santa_Isabel",offset:n.UTC_MINUS_8,timezone:s.PacificStandardTime},_4={id:u.AmericaSantarem,name:"America/Santarem",offset:n.UTC_MINUS_3,timezone:s.BrasiliaTime},p4={id:u.AmericaSantiago,name:"America/Santiago",offset:n.UTC_MINUS_4,timezone:s.ChileStandardTime},E4={id:u.AmericaSantoDomingo,name:"America/Santo_Domingo",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},S4={id:u.AmericaSaoPaulo,name:"America/Sao_Paulo",offset:n.UTC_MINUS_3,timezone:s.BrasiliaTime},T4={id:u.AmericaScoresbysund,name:"America/Scoresbysund",offset:n.UTC_MINUS_1,timezone:s.EasternGreenlandTime},v4={id:u.AmericaShiprock,name:"America/Shiprock",offset:n.UTC_MINUS_7,timezone:s.MountainStandardTime},b4={id:u.AmericaSitka,name:"America/Sitka",offset:n.UTC_MINUS_9,timezone:s.AlaskaStandardTime},B4={id:u.AmericaStBarthelemy,name:"America/St_Barthelemy",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},U4={id:u.AmericaStJohns,name:"America/St_Johns",offset:n.UTC_MINUS_3,timezone:s.NewfoundlandStandardTime},N4={id:u.AmericaStKitts,name:"America/St_Kitts",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},y4={id:u.AmericaStLucia,name:"America/St_Lucia",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},D4={id:u.AmericaStThomas,name:"America/St_Thomas",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},P4={id:u.AmericaStVincent,name:"America/St_Vincent",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},F4={id:u.AmericaSwiftCurrent,name:"America/Swift_Current",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},k4={id:u.AmericaTegucigalpa,name:"America/Tegucigalpa",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},M4={id:u.AmericaThule,name:"America/Thule",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},L4={id:u.AmericaThunderBay,name:"America/Thunder_Bay",offset:n.UTC_MINUS_4,timezone:s.EasternStandardTime},w4={id:u.AmericaTijuana,name:"America/Tijuana",offset:n.UTC_MINUS_8,timezone:s.PacificStandardTime},G4={id:u.AmericaToronto,name:"America/Toronto",offset:n.UTC_MINUS_5,timezone:s.EasternStandardTime},x4={id:u.AmericaTortola,name:"America/Tortola",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},q4={id:u.AmericaVancouver,name:"America/Vancouver",offset:n.UTC_MINUS_8,timezone:s.PacificStandardTime},K4={id:u.AmericaWhitehorse,name:"America/Whitehorse",offset:n.UTC_MINUS_8,timezone:s.PacificStandardTime},O4={id:u.AmericaWinnipeg,name:"America/Winnipeg",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},j4={id:u.AmericaYakutat,name:"America/Yakutat",offset:n.UTC_MINUS_9,timezone:s.AlaskaStandardTime},H4={id:u.AmericaYellowknife,name:"America/Yellowknife",offset:n.UTC_MINUS_6,timezone:s.MountainStandardTime},W4={id:u.AntarcticaCasey,name:"Antarctica/Casey",offset:n.UTC_MINUS_8,timezone:s.WesternStandardTime},V4={id:u.AntarcticaDavis,name:"Antarctica/Davis",offset:n.UTC_MINUS_7,timezone:s.NewfoundlandStandardTime},R4={id:u.AntarcticaDumontDUrville,name:"Antarctica/DumontDUrville",offset:n.UTC_MINUS_10,timezone:s.CentralStandardTime},z4={id:u.AntarcticaMacquarie,name:"Antarctica/Macquarie",offset:n.UTC_MINUS_11,timezone:s.CentralStandardTime},Y4={id:u.AntarcticaMawson,name:"Antarctica/Mawson",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},J4={id:u.AntarcticaMcMurdo,name:"Antarctica/McMurdo",offset:n.UTC_MINUS_12,timezone:s.NewZealandStandardTime},Z4={id:u.AntarcticaPalmer,name:"Antarctica/Palmer",offset:n.UTC_MINUS_4,timezone:s.ChathamStandardTime},$4={id:u.AntarcticaRothera,name:"Antarctica/Rothera",offset:n.UTC_MINUS_3,timezone:s.RotheraResearchStationTime},Q4={id:u.AntarcticaSyowa,name:"Antarctica/Syowa",offset:n.UTC_MINUS_3,timezone:s.ShowaStationTime},C4={id:u.AntarcticaTroll,name:"Antarctica/Troll",offset:n.UTC_MINUS_2,timezone:s.CentralStandardTime},X4={id:u.AntarcticaVostok,name:"Antarctica/Vostok",offset:n.UTC_MINUS_6,timezone:s.CentralStandardTime},ap={id:u.ArcticLongyearbyen,name:"Arctic/Longyearbyen",offset:n.UTC_MINUS_1,timezone:s.CentralEuropeanTime},ep={id:u.AsiaAden,name:"Asia/Aden",offset:n.UTC_PLUS_3,timezone:s.ArabiaStandardTime},ip={id:u.AsiaAlmaty,name:"Asia/Almaty",offset:n.UTC_PLUS_6,timezone:s.AlmaAtaTime},np={id:u.AsiaAmman,name:"Asia/Amman",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},sp={id:u.AsiaAnadyr,name:"Asia/Anadyr",offset:n.UTC_PLUS_12,timezone:s.NewCaledoniaTime},up={id:u.AsiaAqtau,name:"Asia/Aqtau",offset:n.UTC_PLUS_5,timezone:s.AqtobeTime},rp={id:u.AsiaAqtobe,name:"Asia/Aqtobe",offset:n.UTC_PLUS_5,timezone:s.AqtobeTime},tp={id:u.AsiaAshgabat,name:"Asia/Ashgabat",offset:n.UTC_PLUS_5,timezone:s.TurkmenistanTime},lp={id:u.AsiaBaghdad,name:"Asia/Baghdad",offset:n.UTC_PLUS_3,timezone:s.ArabiaStandardTime},op={id:u.AsiaBahrain,name:"Asia/Bahrain",offset:n.UTC_PLUS_3,timezone:s.ArabiaStandardTime},mp={id:u.AsiaBaku,name:"Asia/Baku",offset:n.UTC_PLUS_4,timezone:s.AzerbaijanTime},cp={id:u.AsiaBangkok,name:"Asia/Bangkok",offset:n.UTC_PLUS_7,timezone:s.IndochinaTime},Ap={id:u.AsiaBarnaul,name:"Asia/Barnaul",offset:n.UTC_PLUS_7,timezone:s.KrasnoyarskTime},fp={id:u.AsiaBeirut,name:"Asia/Beirut",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},dp={id:u.AsiaBishkek,name:"Asia/Bishkek",offset:n.UTC_PLUS_6,timezone:s.KyrgyzstanTime},gp={id:u.AsiaBrunei,name:"Asia/Brunei",offset:n.UTC_PLUS_8,timezone:s.BruneiTime},hp={id:u.AsiaChita,name:"Asia/Chita",offset:n.UTC_PLUS_9,timezone:s.YakutskTime},Ip={id:u.AsiaChoibalsan,name:"Asia/Choibalsan",offset:n.UTC_PLUS_8,timezone:s.ChoibalsanStandardTime},_p={id:u.AsiaColombo,name:"Asia/Colombo",offset:n.UTC_PLUS_5,timezone:s.IndianStandardTime},pp={id:u.AsiaDamascus,name:"Asia/Damascus",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},Ep={id:u.AsiaDhaka,name:"Asia/Dhaka",offset:n.UTC_PLUS_6,timezone:s.BangladeshStandardTime},Sp={id:u.AsiaDili,name:"Asia/Dili",offset:n.UTC_PLUS_9,timezone:s.JapanStandardTime},Tp={id:u.AsiaDubai,name:"Asia/Dubai",offset:n.UTC_PLUS_4,timezone:s.GulfStandardTime},vp={id:u.AsiaDushanbe,name:"Asia/Dushanbe",offset:n.UTC_PLUS_5,timezone:s.TajikistanTime},bp={id:u.AsiaFamagusta,name:"Asia/Famagusta",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},Bp={id:u.AsiaGaza,name:"Asia/Gaza",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},Up={id:u.AsiaHebron,name:"Asia/Hebron",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},Np={id:u.AsiaHoChiMinh,name:"Asia/Ho_Chi_Minh",offset:n.UTC_PLUS_7,timezone:s.IndochinaTime},yp={id:u.AsiaHongKong,name:"Asia/Hong_Kong",offset:n.UTC_PLUS_8,timezone:s.HongKongTime},Dp={id:u.AsiaHovd,name:"Asia/Hovd",offset:n.UTC_PLUS_7,timezone:s.HovdTime},Pp={id:u.AsiaIrkutsk,name:"Asia/Irkutsk",offset:n.UTC_PLUS_8,timezone:s.IrkutskTime},Fp={id:u.AsiaJakarta,name:"Asia/Jakarta",offset:n.UTC_PLUS_7,timezone:s.WesternIndonesianTime},kp={id:u.AsiaJayapura,name:"Asia/Jayapura",offset:n.UTC_PLUS_9,timezone:s.JapanStandardTime},Mp={id:u.AsiaJerusalem,name:"Asia/Jerusalem",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},Lp={id:u.AsiaKabul,name:"Asia/Kabul",offset:n.UTC_PLUS_4,timezone:s.AfghanistanTime},wp={id:u.AsiaKamchatka,name:"Asia/Kamchatka",offset:n.UTC_PLUS_12,timezone:s.KamchatkaTime},Gp={id:u.AsiaKarachi,name:"Asia/Karachi",offset:n.UTC_PLUS_5,timezone:s.PakistanStandardTime},xp={id:u.AsiaKathmandu,name:"Asia/Kathmandu",offset:n.UTC_PLUS_5,timezone:s.NepalTime},qp={id:u.AsiaKhandyga,name:"Asia/Khandyga",offset:n.UTC_PLUS_9,timezone:s.YakutskTime},Kp={id:u.AsiaKolkata,name:"Asia/Kolkata",offset:n.UTC_PLUS_5,timezone:s.IndianStandardTime},Op={id:u.AsiaKrasnoyarsk,name:"Asia/Krasnoyarsk",offset:n.UTC_PLUS_7,timezone:s.KrasnoyarskTime},jp={id:u.AsiaKualaLumpur,name:"Asia/Kuala_Lumpur",offset:n.UTC_PLUS_8,timezone:s.MalaysiaStandardTime},Hp={id:u.AsiaKuching,name:"Asia/Kuching",offset:n.UTC_PLUS_8,timezone:s.MalaysiaStandardTime},Wp={id:u.AsiaKuwait,name:"Asia/Kuwait",offset:n.UTC_PLUS_3,timezone:s.ArabiaStandardTime},Vp={id:u.AsiaMacau,name:"Asia/Macau",offset:n.UTC_PLUS_8,timezone:s.ChinaStandardTime},Rp={id:u.AsiaMagadan,name:"Asia/Magadan",offset:n.UTC_PLUS_11,timezone:s.MagadanTime},zp={id:u.AsiaMakassar,name:"Asia/Makassar",offset:n.UTC_PLUS_8,timezone:s.MalaysiaTime},Yp={id:u.AsiaManila,name:"Asia/Manila",offset:n.UTC_PLUS_8,timezone:s.PhilippineTime},Jp={id:u.AsiaMuscat,name:"Asia/Muscat",offset:n.UTC_PLUS_4,timezone:s.GulfStandardTime},Zp={id:u.AsiaNovokuznetsk,name:"Asia/Novokuznetsk",offset:n.UTC_PLUS_6,timezone:s.NovosibirskTime},$p={id:u.AsiaNovosibirsk,name:"Asia/Novosibirsk",offset:n.UTC_PLUS_6,timezone:s.NovosibirskTime},Qp={id:u.AsiaOmsk,name:"Asia/Omsk",offset:n.UTC_PLUS_6,timezone:s.OmskTime},Cp={id:u.AsiaOral,name:"Asia/Oral",offset:n.UTC_PLUS_5,timezone:s.OralTime},Xp={id:u.AsiaPhnomPenh,name:"Asia/Phnom_Penh",offset:n.UTC_PLUS_7,timezone:s.IndochinaTime},aE={id:u.AsiaPontianak,name:"Asia/Pontianak",offset:n.UTC_PLUS_7,timezone:s.WesternIndonesianTime},eE={id:u.AsiaPyongyang,name:"Asia/Pyongyang",offset:n.UTC_PLUS_9,timezone:s.KoreaStandardTime},iE={id:u.AsiaQatar,name:"Asia/Qatar",offset:n.UTC_PLUS_3,timezone:s.ArabiaStandardTime},nE={id:u.AsiaQyzylorda,name:"Asia/Qyzylorda",offset:n.UTC_PLUS_5,timezone:s.WestKazakhstanTime},sE={id:u.AsiaRangoon,name:"Asia/Rangoon",offset:n.UTC_PLUS_6,timezone:s.MyanmarStandardTime},uE={id:u.AsiaRiyadh,name:"Asia/Riyadh",offset:n.UTC_PLUS_3,timezone:s.ArabiaStandardTime},rE={id:u.AsiaSakhalin,name:"Asia/Sakhalin",offset:n.UTC_PLUS_11,timezone:s.SakhalinIslandTime},tE={id:u.AsiaSamarkand,name:"Asia/Samarkand",offset:n.UTC_PLUS_5,timezone:s.UzbekistanTime},lE={id:u.AsiaSeoul,name:"Asia/Seoul",offset:n.UTC_PLUS_9,timezone:s.KoreaStandardTime},oE={id:u.AsiaShanghai,name:"Asia/Shanghai",offset:n.UTC_PLUS_8,timezone:s.ChinaStandardTime},mE={id:u.AsiaSingapore,name:"Asia/Singapore",offset:n.UTC_PLUS_8,timezone:s.SingaporeStandardTime},cE={id:u.AsiaSrednekolymsk,name:"Asia/Srednekolymsk",offset:n.UTC_PLUS_11,timezone:s.SrednekolymskTime},AE={id:u.AsiaTaipei,name:"Asia/Taipei",offset:n.UTC_PLUS_8,timezone:s.ChinaStandardTime},fE={id:u.AsiaTashkent,name:"Asia/Tashkent",offset:n.UTC_PLUS_5,timezone:s.UzbekistanTime},dE={id:u.AsiaTbilisi,name:"Asia/Tbilisi",offset:n.UTC_PLUS_4,timezone:s.GeorgiaStandardTime},gE={id:u.AsiaTehran,name:"Asia/Tehran",offset:n.UTC_PLUS_3,timezone:s.IranStandardTime},hE={id:u.AsiaThimphu,name:"Asia/Thimphu",offset:n.UTC_PLUS_6,timezone:s.BhutanTime},IE={id:u.AsiaTokyo,name:"Asia/Tokyo",offset:n.UTC_PLUS_9,timezone:s.JapanStandardTime},_E={id:u.AsiaTomsk,name:"Asia/Tomsk",offset:n.UTC_PLUS_6,timezone:s.KrasnoyarskTime},pE={id:u.AsiaUlaanbaatar,name:"Asia/Ulaanbaatar",offset:n.UTC_PLUS_8,timezone:s.UlaanbaatarStandardTime},EE={id:u.AsiaUrumqi,name:"Asia/Urumqi",offset:n.UTC_PLUS_8,timezone:s.ChinaStandardTime},SE={id:u.AsiaUstNera,name:"Asia/Ust-Nera",offset:n.UTC_PLUS_10,timezone:s.VladivostokTime},TE={id:u.AsiaVientiane,name:"Asia/Vientiane",offset:n.UTC_PLUS_7,timezone:s.IndochinaTime},vE={id:u.AsiaVladivostok,name:"Asia/Vladivostok",offset:n.UTC_PLUS_10,timezone:s.VladivostokTime},bE={id:u.AsiaYakutsk,name:"Asia/Yakutsk",offset:n.UTC_PLUS_9,timezone:s.YakutskTime},BE={id:u.AsiaYekaterinburg,name:"Asia/Yekaterinburg",offset:n.UTC_PLUS_5,timezone:s.YekaterinburgTime},UE={id:u.AsiaYerevan,name:"Asia/Yerevan",offset:n.UTC_PLUS_4,timezone:s.ArmeniaTime},NE={id:u.AtlanticAzores,name:"Atlantic/Azores",offset:n.UTC_MINUS_1,timezone:s.AzoresStandardTime},yE={id:u.AtlanticBermuda,name:"Atlantic/Bermuda",offset:n.UTC_MINUS_4,timezone:s.AtlanticStandardTime},DE={id:u.AtlanticCanary,name:"Atlantic/Canary",offset:n.UTC_MINUS_1,timezone:s.WesternEuropeanTime},PE={id:u.AtlanticCapeVerde,name:"Atlantic/Cape_Verde",offset:n.UTC_0,timezone:s.CapeVerdeTime},FE={id:u.AtlanticFaroe,name:"Atlantic/Faroe",offset:n.UTC_0,timezone:s.GreenwichMeanTime},kE={id:u.AtlanticMadeira,name:"Atlantic/Madeira",offset:n.UTC_0,timezone:s.WesternEuropeanTime},ME={id:u.AtlanticReykjavik,name:"Atlantic/Reykjavik",offset:n.UTC_0,timezone:s.GreenwichMeanTime},LE={id:u.AtlanticSouthGeorgia,name:"Atlantic/South_Georgia",offset:n.UTC_0,timezone:s.CoordinatedUniversalTime},wE={id:u.AtlanticStHelena,name:"Atlantic/St_Helena",offset:n.UTC_0,timezone:s.GreenwichMeanTime},GE={id:u.AtlanticStanley,name:"Atlantic/Stanley",offset:n.UTC_0,timezone:s.FalklandIslandsTime},xE={id:u.AustraliaAdelaide,name:"Australia/Adelaide",offset:n.UTC_PLUS_9_30,timezone:s.AustralianCentralStandardTime},qE={id:u.AustraliaBrisbane,name:"Australia/Brisbane",offset:n.UTC_PLUS_10,timezone:s.AustralianEasternStandardTime},KE={id:u.AustraliaBrokenHill,name:"Australia/Broken_Hill",offset:n.UTC_PLUS_9_30,timezone:s.AustralianCentralStandardTime},OE={id:u.AustraliaCanberra,name:"Australia/Canberra",offset:n.UTC_PLUS_10,timezone:s.AustralianEasternStandardTime},jE={id:u.AustraliaCurrie,name:"Australia/Currie",offset:n.UTC_PLUS_10,timezone:s.AustralianEasternStandardTime},HE={id:u.AustraliaDarwin,name:"Australia/Darwin",offset:n.UTC_PLUS_9_30,timezone:s.AustralianCentralStandardTime},WE={id:u.AustraliaEucla,name:"Australia/Eucla",offset:n.UTC_PLUS_8_45,timezone:s.AustralianCentralWesternStandardTime},VE={id:u.AustraliaHobart,name:"Australia/Hobart",offset:n.UTC_PLUS_10,timezone:s.AustralianEasternStandardTime},RE={id:u.AustraliaLindeman,name:"Australia/Lindeman",offset:n.UTC_PLUS_10,timezone:s.AustralianEasternStandardTime},zE={id:u.AustraliaLordHowe,name:"Australia/Lord_Howe",offset:n.UTC_PLUS_10_30,timezone:s.LordHoweStandardTime},YE={id:u.AustraliaMelbourne,name:"Australia/Melbourne",offset:n.UTC_PLUS_10,timezone:s.AustralianEasternStandardTime},JE={id:u.AustraliaPerth,name:"Australia/Perth",offset:n.UTC_PLUS_8,timezone:s.AustralianWesternStandardTime},ZE={id:u.AustraliaSydney,name:"Australia/Sydney",offset:n.UTC_PLUS_10,timezone:s.AustralianEasternStandardTime},$E={id:u.EuropeAmsterdam,name:"Europe/Amsterdam",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},QE={id:u.EuropeAndorra,name:"Europe/Andorra",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},CE={id:u.EuropeAthens,name:"Europe/Athens",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},XE={id:u.EuropeBelgrade,name:"Europe/Belgrade",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},aS={id:u.EuropeBerlin,name:"Europe/Berlin",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},eS={id:u.EuropeBratislava,name:"Europe/Bratislava",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},iS={id:u.EuropeBrussels,name:"Europe/Brussels",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},nS={id:u.EuropeBucharest,name:"Europe/Bucharest",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},sS={id:u.EuropeBudapest,name:"Europe/Budapest",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},uS={id:u.EuropeBusingen,name:"Europe/Busingen",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},rS={id:u.EuropeChisinau,name:"Europe/Chisinau",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},tS={id:u.EuropeCopenhagen,name:"Europe/Copenhagen",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},lS={id:u.EuropeDublin,name:"Europe/Dublin",offset:n.UTC_0,timezone:s.GreenwichMeanTime},oS={id:u.EuropeGibraltar,name:"Europe/Gibraltar",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},mS={id:u.EuropeGuernsey,name:"Europe/Guernsey",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},cS={id:u.EuropeHelsinki,name:"Europe/Helsinki",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},AS={id:u.EuropeIsleOfMan,name:"Europe/Isle_of_Man",offset:n.UTC_0,timezone:s.GreenwichMeanTime},fS={id:u.EuropeIstanbul,name:"Europe/Istanbul",offset:n.UTC_PLUS_3,timezone:s.EasternEuropeanTime},dS={id:u.EuropeJersey,name:"Europe/Jersey",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},gS={id:u.EuropeKaliningrad,name:"Europe/Kaliningrad",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},hS={id:u.EuropeKiev,name:"Europe/Kiev",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},IS={id:u.EuropeLisbon,name:"Europe/Lisbon",offset:n.UTC_0,timezone:s.GreenwichMeanTime},_S={id:u.EuropeLjubljana,name:"Europe/Ljubljana",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},pS={id:u.EuropeLondon,name:"Europe/London",offset:n.UTC_0,timezone:s.GreenwichMeanTime},ES={id:u.EuropeLuxembourg,name:"Europe/Luxembourg",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},SS={id:u.EuropeMadrid,name:"Europe/Madrid",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},TS={id:u.EuropeMalta,name:"Europe/Malta",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},vS={id:u.EuropeMariehamn,name:"Europe/Mariehamn",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},bS={id:u.EuropeMinsk,name:"Europe/Minsk",offset:n.UTC_PLUS_3,timezone:s.EasternEuropeanTime},BS={id:u.EuropeMonaco,name:"Europe/Monaco",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},US={id:u.EuropeMoscow,name:"Europe/Moscow",offset:n.UTC_PLUS_3,timezone:s.EasternEuropeanTime},NS={id:u.EuropeOslo,name:"Europe/Oslo",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},yS={id:u.EuropeParis,name:"Europe/Paris",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},DS={id:u.EuropePodgorica,name:"Europe/Podgorica",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},PS={id:u.EuropePrague,name:"Europe/Prague",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},FS={id:u.EuropeRiga,name:"Europe/Riga",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},kS={id:u.EuropeRome,name:"Europe/Rome",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},MS={id:u.EuropeSamara,name:"Europe/Samara",offset:n.UTC_PLUS_4,timezone:s.EasternEuropeanTime},LS={id:u.EuropeSanMarino,name:"Europe/San_Marino",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},wS={id:u.EuropeSarajevo,name:"Europe/Sarajevo",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},GS={id:u.EuropeSimferopol,name:"Europe/Simferopol",offset:n.UTC_PLUS_3,timezone:s.EasternEuropeanTime},xS={id:u.EuropeSkopje,name:"Europe/Skopje",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},qS={id:u.EuropeSofia,name:"Europe/Sofia",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},KS={id:u.EuropeStockholm,name:"Europe/Stockholm",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},OS={id:u.EuropeTallinn,name:"Europe/Tallinn",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},jS={id:u.EuropeTirane,name:"Europe/Tirane",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},HS={id:u.EuropeUzhgorod,name:"Europe/Uzhgorod",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},WS={id:u.EuropeVaduz,name:"Europe/Vaduz",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},VS={id:u.EuropeVatican,name:"Europe/Vatican",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},RS={id:u.EuropeVienna,name:"Europe/Vienna",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},zS={id:u.EuropeVilnius,name:"Europe/Vilnius",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},YS={id:u.EuropeVolgograd,name:"Europe/Volgograd",offset:n.UTC_PLUS_4,timezone:s.EasternEuropeanTime},JS={id:u.EuropeWarsaw,name:"Europe/Warsaw",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},ZS={id:u.EuropeZagreb,name:"Europe/Zagreb",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},$S={id:u.EuropeZaporozhye,name:"Europe/Zaporozhye",offset:n.UTC_PLUS_2,timezone:s.EasternEuropeanTime},QS={id:u.EuropeZurich,name:"Europe/Zurich",offset:n.UTC_PLUS_1,timezone:s.CentralEuropeanTime},CS={id:u.IndianAntananarivo,name:"Indian/Antananarivo",offset:n.UTC_PLUS_3,timezone:s.EastAfricaTime},XS={id:u.IndianChagos,name:"Indian/Chagos",offset:n.UTC_PLUS_6,timezone:s.IndianOceanTime},aT={id:u.IndianChristmas,name:"Indian/Christmas",offset:n.UTC_PLUS_7,timezone:s.ChristmasIslandTime},eT={id:u.IndianCocos,name:"Indian/Cocos",offset:n.UTC_PLUS_6,timezone:s.CocosIslandsTime},iT={id:u.IndianComoro,name:"Indian/Comoro",offset:n.UTC_PLUS_3,timezone:s.EastAfricaTime},nT={id:u.IndianKerguelen,name:"Indian/Kerguelen",offset:n.UTC_PLUS_5,timezone:s.FrenchSouthernAndAntarcticTime},sT={id:u.IndianMahe,name:"Indian/Mahe",offset:n.UTC_PLUS_4,timezone:s.SeychellesTime},uT={id:u.IndianMaldives,name:"Indian/Maldives",offset:n.UTC_PLUS_5,timezone:s.MaldivesTime},rT={id:u.IndianMauritius,name:"Indian/Mauritius",offset:n.UTC_PLUS_4,timezone:s.MauritiusTime},tT={id:u.IndianMayotte,name:"Indian/Mayotte",offset:n.UTC_PLUS_3,timezone:s.EastAfricaTime},lT={id:u.IndianReunion,name:"Indian/Reunion",offset:n.UTC_PLUS_4,timezone:s.ReunionTime},oT={id:u.PacificApia,name:"Pacific/Apia",offset:n.UTC_PLUS_13,timezone:s.SamoaStandardTime},mT={id:u.PacificAuckland,name:"Pacific/Auckland",offset:n.UTC_PLUS_13,timezone:s.NewZealandStandardTime},cT={id:u.PacificChatham,name:"Pacific/Chatham",offset:n.UTC_PLUS_13,timezone:s.ChathamStandardTime},AT={id:u.PacificEaster,name:"Pacific/Easter",offset:n.UTC_PLUS_6,timezone:s.EasterIslandStandardTime},fT={id:u.PacificEfate,name:"Pacific/Efate",offset:n.UTC_PLUS_11,timezone:s.VanuatuTime},dT={id:u.PacificEnderbury,name:"Pacific/Enderbury",offset:n.UTC_PLUS_13,timezone:s.TongaTime},gT={id:u.PacificFakaofo,name:"Pacific/Fakaofo",offset:n.UTC_PLUS_13,timezone:s.TongaTime},hT={id:u.PacificFiji,name:"Pacific/Fiji",offset:n.UTC_PLUS_12,timezone:s.FijiTime},IT={id:u.PacificFunafuti,name:"Pacific/Funafuti",offset:n.UTC_PLUS_12,timezone:s.TuvaluTime},_T={id:u.PacificGalapagos,name:"Pacific/Galapagos",offset:n.UTC_PLUS_6,timezone:s.GalapagosTime},pT={id:u.PacificGambier,name:"Pacific/Gambier",offset:n.UTC_PLUS_9,timezone:s.GambierIslandTime},ET={id:u.PacificGuadalcanal,name:"Pacific/Guadalcanal",offset:n.UTC_PLUS_11,timezone:s.SolomonIslandsTime},ST={id:u.PacificGuam,name:"Pacific/Guam",offset:n.UTC_PLUS_10,timezone:s.ChamorroStandardTime},TT={id:u.PacificHonolulu,name:"Pacific/Honolulu",offset:n.UTC_PLUS_10,timezone:s.HawaiiAleutianStandardTime},vT={id:u.PacificJohnston,name:"Pacific/Johnston",offset:n.UTC_PLUS_10,timezone:s.HawaiiAleutianStandardTime},bT={id:u.PacificKiritimati,name:"Pacific/Kiritimati",offset:n.UTC_PLUS_14,timezone:s.LineIslandsTime},BT={id:u.PacificKosrae,name:"Pacific/Kosrae",offset:n.UTC_PLUS_11,timezone:s.KosraeTime},UT={id:u.PacificKwajalein,name:"Pacific/Kwajalein",offset:n.UTC_PLUS_12,timezone:s.MarshallIslandsTime},NT={id:u.PacificMajuro,name:"Pacific/Majuro",offset:n.UTC_PLUS_12,timezone:s.MarshallIslandsTime},yT={id:u.PacificMarquesas,name:"Pacific/Marquesas",offset:n.UTC_PLUS_9,timezone:s.MarquesasIslandsTime},DT={id:u.PacificMidway,name:"Pacific/Midway",offset:n.UTC_PLUS_11,timezone:s.SamoaStandardTime},PT={id:u.PacificNauru,name:"Pacific/Nauru",offset:n.UTC_PLUS_12,timezone:s.NauruTime},FT={id:u.PacificNiue,name:"Pacific/Niue",offset:n.UTC_PLUS_11,timezone:s.NiueTime},kT={id:u.PacificNorfolk,name:"Pacific/Norfolk",offset:n.UTC_PLUS_11,timezone:s.NorfolkIslandTime},MT={id:u.PacificNoumea,name:"Pacific/Noumea",offset:n.UTC_PLUS_11,timezone:s.NewCaledoniaTime},LT={id:u.PacificPagoPago,name:"Pacific/Pago_Pago",offset:n.UTC_PLUS_11,timezone:s.SamoaStandardTime},wT={id:u.PacificPalau,name:"Pacific/Palau",offset:n.UTC_PLUS_9,timezone:s.PalauTime},GT={id:u.PacificPitcairn,name:"Pacific/Pitcairn",offset:n.UTC_PLUS_8,timezone:s.PitcairnTime},xT={id:u.PacificPonape,name:"Pacific/Ponape",offset:n.UTC_PLUS_11,timezone:s.PohnpeiStandardTime},qT={id:u.PacificPortMoresby,name:"Pacific/Port_Moresby",offset:n.UTC_PLUS_10,timezone:s.PapuaNewGuineaTime},KT={id:u.PacificRarotonga,name:"Pacific/Rarotonga",offset:n.UTC_PLUS_10,timezone:s.CookIslandTime},OT={id:u.PacificSaipan,name:"Pacific/Saipan",offset:n.UTC_PLUS_10,timezone:s.ChamorroStandardTime},jT={id:u.PacificTahiti,name:"Pacific/Tahiti",offset:n.UTC_PLUS_10,timezone:s.TahitiTime},HT={id:u.PacificTarawa,name:"Pacific/Tarawa",offset:n.UTC_PLUS_12,timezone:s.GilbertIslandTime},WT={id:u.PacificTongatapu,name:"Pacific/Tongatapu",offset:n.UTC_PLUS_13,timezone:s.TongaTime},VT={id:u.PacificChuuk,name:"Pacific/Chuuk",offset:n.UTC_PLUS_10,timezone:s.ChuukTime},RT={id:u.PacificPohnpei,name:"Pacific/Pohnpei",offset:n.UTC_PLUS_11,timezone:s.PohnpeiStandardTime},zT={id:u.PacificYap,name:"Pacific/Yap",offset:n.UTC_PLUS_10,timezone:s.ChuukTime};var V=(a=>(a.CJS="cjs",a.ESM="esm",a.IIFE="iife",a.UMD="umd",a))(V||{}),Fa=(a=>(a.ES5="es5",a.ES6="es6",a.ES2015="es2015",a.ES2016="es2016",a.ES2017="es2017",a.ES2018="es2018",a.ES2019="es2019",a.ES2020="es2020",a.ES2021="es2021",a.ES2022="es2022",a.ESNext="esnext",a.Latest="latest",a))(Fa||{}),va=(a=>(a.ESBuild="esbuild",a.Vite="vite",a))(va||{}),ka=(a=>(a.Browser="browser",a.Node="node",a))(ka||{});var sa=(a=>(a.DesktopApplication="desktop-application",a.MobileApplication="mobile-application",a.WebApplication="web-application",a.CLIApplication="cli-application",a.Library="library",a.WebService="web-service",a))(sa||{});var i=(a=>(a.Contains="contains",a.HasCharacterCount="has-character-count",a.HasNumberCount="has-number-count",a.HasLetterCount="has-letter-count",a.HasLowercaseCount="has-lowercase-count",a.HasSpacesCount="has-spaces-count",a.HasSymbolCount="has-symbol-count",a.HasUppercaseCount="has-uppercase-count",a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsAirport="is-airport",a.IsAlpha="is-alpha",a.IsAlphanumeric="is-alphanumeric",a.IsAlgorithmHash="is-algorithm-hash",a.IsAscii="is-ascii",a.IsBase64="is-base-64",a.IsBefore="is-before",a.IsBeforeOrAfter="is-before-or-after",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsBIC="is-bic",a.IsBitcoinAddress="is-bitcoin-address",a.IsBoolean="is-boolean",a.IsColor="is-color",a.IsComplexEnough="is-complex-enough",a.IsCountry="is-country",a.IsCreditCard="is-credit-card",a.IsCurrency="is-currency",a.IsDataURI="is-data-uri",a.IsDate="is-date",a.IsDateRange="is-date-range",a.IsDateTime="is-date-time",a.IsDayOfMonth="is-day-of-month",a.IsDecimal="is-decimal",a.IsDivisibleBy="is-divisible-by",a.IsDomainName="is-domain-name",a.IsEmailAddress="is-email-address",a.IsEthereumAddress="is-ethereum-address",a.IsEAN="is-ean",a.IsEIN="is-ein",a.IsEqual="is-equal",a.IsEvenNumber="is-even-number",a.IsFloat="is-float",a.IsIBAN="is-iban",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsHSLColor="is-hsl-color",a.IsHexColor="is-hex-color",a.IsHexadecimal="is-hexadecimal",a.IsIdentityCardCode="is-identity-card-code",a.IsIMEI="is-imei",a.IsInIPAddressRange="is-in-ip-address-range",a.IsInList="is-in-list",a.IsInTheLast="is-in-the-last",a.IsInteger="is-integer",a.IsIPAddress="is-ip-address",a.IsIPAddressRange="is-ip-address-range",a.IsISBN="is-isbn",a.IsISIN="is-isin",a.IsISMN="is-ismn",a.IsISRC="is-isrc",a.IsISSN="is-issn",a.IsISO4217="is-iso-4217",a.IsISO8601="is-iso-8601",a.IsISO31661Alpha2="is-iso-31661-alpha-2",a.IsISO31661Alpha3="is-iso-31661-alpha-3",a.IsJSON="is-json",a.IsLanguage="is-language",a.IsLatitude="is-latitude",a.IsLongitude="is-longitude",a.IsLengthEqual="is-length-equal",a.IsLengthGreaterThan="is-length-greater-than",a.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",a.IsLengthLessThan="is-length-less-than",a.IsLengthLessThanOrEqual="is-length-less-than-or-equal",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsLicensePlateNumber="is-license-plate-number",a.IsLowercase="is-lowercase",a.IsOctal="is-octal",a.IsMACAddress="is-mac-address",a.IsMD5="is-md5",a.IsMagnetURI="is-magnet-uri",a.IsMarkdown="is-markdown",a.IsMimeType="is-mime-type",a.IsMonth="is-month",a.IsNegativeNumber="is-negative-number",a.IsNotDate="is-not-date",a.IsNotEqual="is-not-equal",a.IsNotInIPAddressRange="is-not-in-ip-address-range",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsNotRegexMatch="is-not-regex-match",a.IsNotToday="is-not-today",a.IsNumber="is-number",a.IsNumeric="is-numeric",a.IsOddNumber="is-odd-number",a.IsPassportNumber="is-passport-number",a.IsPhoneNumber="is-phone-number",a.IsPort="is-port",a.IsPositiveNumber="is-positive-number",a.IsPostalCode="is-postal-code",a.IsProvince="is-province",a.IsRGBColor="is-rgb-color",a.IsRegexMatch="is-regex-match",a.IsRequired="is-required",a.IsSemanticVersion="is-semantic-version",a.IsSlug="is-slug",a.IsSSN="is-ssn",a.IsState="is-state",a.IsStreetAddress="is-street-address",a.IsString="is-string",a.IsStrongPassword="is-strong-password",a.IsTags="is-tags",a.IsTaxIDNumber="is-tax-id-number",a.IsThisMonth="is-this-month",a.IsThisQuarter="is-this-quarter",a.IsThisWeek="is-this-week",a.IsThisWeekend="is-this-weekend",a.IsThisYear="is-this-year",a.IsTime="is-time",a.IsTimeOfDay="is-time-of-day",a.IsTimeRange="is-time-range",a.IsToday="is-today",a.IsURL="is-url",a.IsUUID="is-uuid",a.IsUppercase="is-uppercase",a.IsUsernameAvailable="is-username-available",a.IsValidStreetAddress="is-valid-street-address",a.IsVATIDNumber="is-vat-id-number",a.IsWeekday="is-weekday",a.IsWeekend="is-weekend",a.IsYear="is-year",a))(i||{});var uu=(a=>(a[a.IsHSLColor=i.IsHSLColor]="IsHSLColor",a[a.IsHexColor=i.IsHexColor]="IsHexColor",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsRGBColor=i.IsRGBColor]="IsRGBColor",a[a.IsString=i.IsString]="IsString",a))(uu||{}),ru=(a=>(a[a.IsAlgorithmHash=i.IsAlgorithmHash]="IsAlgorithmHash",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(ru||{}),tu=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsSemanticVersion=i.IsSemanticVersion]="IsSemanticVersion",a[a.IsString=i.IsString]="IsString",a))(tu||{}),lu=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a[a.IsUUID=i.IsUUID]="IsUUID",a))(lu||{}),ou=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsMD5=i.IsMD5]="IsMD5",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(ou||{}),mu=(a=>(a[a.IsBoolean=i.IsBoolean]="IsBoolean",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(mu||{}),cu=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsAfterOrEqual=i.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=i.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsDate=i.IsDate]="IsDate",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotDate=i.IsNotDate]="IsNotDate",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNotToday=i.IsNotToday]="IsNotToday",a[a.IsThisWeek=i.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=i.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=i.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=i.IsThisYear]="IsThisYear",a[a.IsToday=i.IsToday]="IsToday",a[a.IsWeekend=i.IsWeekend]="IsWeekend",a))(cu||{}),Au=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=i.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsDate=i.IsDate]="IsDate",a[a.IsDateRange=i.IsDateRange]="IsDateRange",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(Au||{}),fu=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsAfterOrEqual=i.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=i.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsDate=i.IsDate]="IsDate",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotDate=i.IsNotDate]="IsNotDate",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNotToday=i.IsNotToday]="IsNotToday",a[a.IsThisWeek=i.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=i.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=i.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=i.IsThisYear]="IsThisYear",a[a.IsToday=i.IsToday]="IsToday",a[a.IsWeekend=i.IsWeekend]="IsWeekend",a))(fu||{}),du=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsAfterOrEqual=i.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=i.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsDayOfMonth=i.IsDayOfMonth]="IsDayOfMonth",a[a.IsEvenNumber=i.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=i.IsInteger]="IsInteger",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsOddNumber=i.IsOddNumber]="IsOddNumber",a[a.IsToday=i.IsToday]="IsToday",a[a.IsWeekday=i.IsWeekday]="IsWeekday",a[a.IsWeekend=i.IsWeekend]="IsWeekend",a))(du||{}),gu=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsAfterOrEqual=i.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=i.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsEvenNumber=i.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=i.IsInteger]="IsInteger",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMonth=i.IsMonth]="IsMonth",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsOddNumber=i.IsOddNumber]="IsOddNumber",a[a.IsThisMonth=i.IsThisMonth]="IsThisMonth",a))(gu||{}),hu=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsAfterOrEqual=i.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=i.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsTime=i.IsTime]="IsTime",a))(hu||{}),Iu=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=i.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsTime=i.IsTime]="IsTime",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsTimeRange=i.IsTimeRange]="IsTimeRange",a))(Iu||{}),_u=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=i.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsTimeOfDay=i.IsTimeOfDay]="IsTimeOfDay",a[a.IsTimeRange=i.IsTimeRange]="IsTimeRange",a))(_u||{}),pu=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsAfterOrEqual=i.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=i.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsEvenNumber=i.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsOddNumber=i.IsOddNumber]="IsOddNumber",a[a.IsWeekday=i.IsWeekday]="IsWeekday",a[a.IsWeekend=i.IsWeekend]="IsWeekend",a))(pu||{}),Eu=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsAfterOrEqual=i.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=i.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsEvenNumber=i.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=i.IsInteger]="IsInteger",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsOddNumber=i.IsOddNumber]="IsOddNumber",a[a.IsThisYear=i.IsThisYear]="IsThisYear",a[a.IsYear=i.IsYear]="IsYear",a))(Eu||{}),Su=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsHexadecimal=i.IsHexadecimal]="IsHexadecimal",a[a.IsLengthEqual=i.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=i.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=i.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=i.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=i.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(Su||{}),Tu=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsJSON=i.IsJSON]="IsJSON",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(Tu||{}),vu=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsMarkdown=i.IsMarkdown]="IsMarkdown",a[a.IsString=i.IsString]="IsString",a))(vu||{}),bu=(a=>(a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsCurrency=i.IsCurrency]="IsCurrency",a[a.IsDecimal=i.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=i.IsDivisibleBy]="IsDivisibleBy",a[a.IsEvenNumber=i.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=i.IsFloat]="IsFloat",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=i.IsInteger]="IsInteger",a[a.IsISO8601=i.IsISO8601]="IsISO8601",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNegativeNumber=i.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsOddNumber=i.IsOddNumber]="IsOddNumber",a[a.IsPositiveNumber=i.IsPositiveNumber]="IsPositiveNumber",a))(bu||{}),Bu=(a=>(a[a.IsBitcoinAddress=i.IsBitcoinAddress]="IsBitcoinAddress",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(Bu||{}),Uu=(a=>(a[a.IsEthereumAddress=i.IsEthereumAddress]="IsEthereumAddress",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(Uu||{}),Nu=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsJSON=i.IsJSON]="IsJSON",a[a.IsLanguage=i.IsLanguage]="IsLanguage",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(Nu||{}),yu=(a=>(a[a.IsAlpha=i.IsAlpha]="IsAlpha",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(yu||{}),Du=(a=>(a[a.IsAlpha=i.IsAlpha]="IsAlpha",a[a.IsCountry=i.IsCountry]="IsCountry",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(Du||{}),Pu=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsFloat=i.IsFloat]="IsFloat",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumeric=i.IsNumeric]="IsNumeric",a))(Pu||{}),Fu=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsFloat=i.IsFloat]="IsFloat",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumeric=i.IsNumeric]="IsNumeric",a))(Fu||{}),ku=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsPostalCode=i.IsPostalCode]="IsPostalCode",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(ku||{}),Mu=(a=>(a[a.IsAlpha=i.IsAlpha]="IsAlpha",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsProvince=i.IsProvince]="IsProvince",a[a.IsString=i.IsString]="IsString",a))(Mu||{}),Lu=(a=>(a[a.IsAlpha=i.IsAlpha]="IsAlpha",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsState=i.IsState]="IsState",a[a.IsString=i.IsString]="IsString",a))(Lu||{}),wu=(a=>(a[a.IsAlphanumeric=i.IsAlphanumeric]="IsAlphanumeric",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a[a.IsStreetAddress=i.IsStreetAddress]="IsStreetAddress",a))(wu||{}),Gu=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(Gu||{}),xu=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(xu||{}),qu=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsDataURI=i.IsDataURI]="IsDataURI",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(qu||{}),Ku=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsDomainName=i.IsDomainName]="IsDomainName",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(Ku||{}),Ou=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEmailAddress=i.IsEmailAddress]="IsEmailAddress",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(Ou||{}),ju=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsIPAddress=i.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=i.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=i.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(ju||{}),Hu=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsIPAddressRange=i.IsIPAddressRange]="IsIPAddressRange",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=i.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(Hu||{}),Wu=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=i.IsInteger]="IsInteger",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(Wu||{}),Vu=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsMACAddress=i.IsMACAddress]="IsMACAddress",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(Vu||{}),Ru=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsMagnetURI=i.IsMagnetURI]="IsMagnetURI",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(Ru||{}),zu=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsMimeType=i.IsMimeType]="IsMimeType",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(zu||{}),Yu=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a[a.IsSlug=i.IsSlug]="IsSlug",a))(Yu||{}),Ju=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a[a.IsURL=i.IsURL]="IsURL",a))(Ju||{}),Zu=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsAfterOrEqual=i.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=i.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsDecimal=i.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=i.IsDivisibleBy]="IsDivisibleBy",a[a.IsEAN=i.IsEAN]="IsEAN",a[a.IsEIN=i.IsEIN]="IsEIN",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsEvenNumber=i.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=i.IsFloat]="IsFloat",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInt=i.IsInteger]="IsInt",a[a.IsISBN=i.IsISBN]="IsISBN",a[a.IsISMN=i.IsISMN]="IsISMN",a[a.IsISSN=i.IsISSN]="IsISSN",a[a.IsLatitude=i.IsLatitude]="IsLatitude",a[a.IsLongitude=i.IsLongitude]="IsLongitude",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMACAddress=i.IsMACAddress]="IsMACAddress",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsNegativeNumber=i.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsOddNumber=i.IsOddNumber]="IsOddNumber",a[a.IsPassportNumber=i.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=i.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=i.IsPort]="IsPort",a[a.IsPositiveNumber=i.IsPositiveNumber]="IsPositiveNumber",a[a.IsPostalCode=i.IsPostalCode]="IsPostalCode",a[a.IsSemanticVersion=i.IsSemanticVersion]="IsSemanticVersion",a[a.IsSSN=i.IsSSN]="IsSSN",a[a.IsTaxIDNumber=i.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsUUID=i.IsUUID]="IsUUID",a[a.IsVATIDNumber=i.IsVATIDNumber]="IsVATIDNumber",a))(Zu||{}),$u=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsFloat=i.IsFloat]="IsFloat",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsNumeric=i.IsNumeric]="IsNumeric",a))($u||{}),Qu=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInteger=i.IsInteger]="IsInteger",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsNumeric=i.IsNumeric]="IsNumeric",a))(Qu||{}),Cu=(a=>(a[a.IsCreditCard=i.IsCreditCard]="IsCreditCard",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsLengthEqual=i.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=i.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=i.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=i.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=i.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsRegexMatch=i.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=i.IsNotRegexMatch]="IsNotRegexMatch",a))(Cu||{}),Xu=(a=>(a[a.isEmailAddress=i.IsEmailAddress]="isEmailAddress",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsLengthEqual=i.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=i.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=i.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=i.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=i.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsRegexMatch=i.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=i.IsNotRegexMatch]="IsNotRegexMatch",a))(Xu||{}),ar=(a=>(a[a.IsLicensePlateNumber=i.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=i.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsString=i.IsString]="IsString",a[a.IsRegexMatch=i.IsRegexMatch]="IsRegexMatch",a))(ar||{}),er=(a=>(a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsPassportNumber=i.IsPassportNumber]="IsPassportNumber",a[a.IsString=i.IsString]="IsString",a[a.IsRegexMatch=i.IsRegexMatch]="IsRegexMatch",a))(er||{}),ir=(a=>(a[a.IsComplexEnough=i.IsComplexEnough]="IsComplexEnough",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=i.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsLengthGreaterThan=i.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=i.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=i.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=i.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsStrongPassword=i.IsStrongPassword]="IsStrongPassword",a[a.IsString=i.IsString]="IsString",a[a.IsRegexMatch=i.IsRegexMatch]="IsRegexMatch",a))(ir||{}),nr=(a=>(a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=i.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsPhoneNumber=i.IsPhoneNumber]="IsPhoneNumber",a[a.IsRegexMatch=i.IsRegexMatch]="IsRegexMatch",a))(nr||{}),sr=(a=>(a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsSSN=i.IsSSN]="IsSSN",a[a.IsString=i.IsString]="IsString",a[a.IsRegexMatch=i.IsRegexMatch]="IsRegexMatch",a))(sr||{}),ur=(a=>(a[a.IsAirport=i.IsAirport]="IsAirport",a[a.IsAlpha=i.IsAlpha]="IsAlpha",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(ur||{}),rr=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsBIC=i.IsBIC]="IsBIC",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(rr||{}),tr=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEAN=i.IsEAN]="IsEAN",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(tr||{}),lr=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEIN=i.IsEIN]="IsEIN",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(lr||{}),or=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsIBAN=i.IsIBAN]="IsIBAN",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(or||{}),mr=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsISBN=i.IsISBN]="IsISBN",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(mr||{}),cr=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsISIN=i.IsISIN]="IsISIN",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(cr||{}),Ar=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsISMN=i.IsISMN]="IsISMN",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(Ar||{}),fr=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsISSN=i.IsISSN]="IsISSN",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(fr||{}),dr=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a[a.IsTaxIDNumber=i.IsTaxIDNumber]="IsTaxIDNumber",a))(dr||{}),gr=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a[a.IsVATIDNumber=i.IsVATIDNumber]="IsVATIDNumber",a))(gr||{}),hr=(a=>(a[a.Contains=i.Contains]="Contains",a[a.HasNumberCount=i.HasNumberCount]="HasNumberCount",a[a.HasLowercaseCount=i.HasLowercaseCount]="HasLowercaseCount",a[a.HasLetterCount=i.HasLetterCount]="HasLetterCount",a[a.HasSpacesCount=i.HasSpacesCount]="HasSpacesCount",a[a.HasSymbolCount=i.HasSymbolCount]="HasSymbolCount",a[a.HasUppercaseCount=i.HasUppercaseCount]="HasUppercaseCount",a[a.IsAlpha=i.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=i.IsAlphanumeric]="IsAlphanumeric",a[a.IsAscii=i.IsAscii]="IsAscii",a[a.IsBase64=i.IsBase64]="IsBase64",a[a.IsColor=i.IsColor]="IsColor",a[a.IsComplexEnough=i.IsComplexEnough]="IsComplexEnough",a[a.IsCreditCard=i.IsCreditCard]="IsCreditCard",a[a.IsDataURI=i.IsDataURI]="IsDataURI",a[a.IsDomainName=i.IsDomainName]="IsDomainName",a[a.IsEmailAddress=i.IsEmailAddress]="IsEmailAddress",a[a.IsEthereumAddress=i.IsEthereumAddress]="IsEthereumAddress",a[a.IsEAN=i.IsEAN]="IsEAN",a[a.IsEIN=i.IsEIN]="IsEIN",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsIBAN=i.IsIBAN]="IsIBAN",a[a.IsHSLColor=i.IsHSLColor]="IsHSLColor",a[a.IsHexColor=i.IsHexColor]="IsHexColor",a[a.IsHexadecimal=i.IsHexadecimal]="IsHexadecimal",a[a.IsIdentityCardCode=i.IsIdentityCardCode]="IsIdentityCardCode",a[a.IsIMEI=i.IsIMEI]="IsIMEI",a[a.IsInList=i.IsInList]="IsInList",a[a.IsIPAddress=i.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=i.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsISBN=i.IsISBN]="IsISBN",a[a.IsISIN=i.IsISIN]="IsISIN",a[a.IsISMN=i.IsISMN]="IsISMN",a[a.IsISRC=i.IsISRC]="IsISRC",a[a.IsISSN=i.IsISSN]="IsISSN",a[a.IsLanguage=i.IsLanguage]="IsLanguage",a[a.IsLatitude=i.IsLatitude]="IsLatitude",a[a.IsLongitude=i.IsLongitude]="IsLongitude",a[a.IsLengthEqual=i.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=i.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=i.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=i.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=i.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsLicensePlateNumber=i.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsLowercase=i.IsLowercase]="IsLowercase",a[a.IsOctal=i.IsOctal]="IsOctal",a[a.IsMACAddress=i.IsMACAddress]="IsMACAddress",a[a.IsMD5=i.IsMD5]="IsMD5",a[a.IsMagnetURI=i.IsMagnetURI]="IsMagnetURI",a[a.IsMarkdown=i.IsMarkdown]="IsMarkdown",a[a.IsMimeType=i.IsMimeType]="IsMimeType",a[a.IsMonth=i.IsMonth]="IsMonth",a[a.IsNotInIPAddressRange=i.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=i.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsNumeric=i.IsNumeric]="IsNumeric",a[a.IsPassportNumber=i.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=i.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=i.IsPort]="IsPort",a[a.IsPostalCode=i.IsPostalCode]="IsPostalCode",a[a.IsProvince=i.IsProvince]="IsProvince",a[a.IsRegexMatch=i.IsRegexMatch]="IsRegexMatch",a[a.IsSemanticVersion=i.IsSemanticVersion]="IsSemanticVersion",a[a.IsSlug=i.IsSlug]="IsSlug",a[a.IsSSN=i.IsSSN]="IsSSN",a[a.IsState=i.IsState]="IsState",a[a.IsStreetAddress=i.IsStreetAddress]="IsStreetAddress",a[a.IsString=i.IsString]="IsString",a[a.IsTaxIDNumber=i.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsURL=i.IsURL]="IsURL",a[a.IsUUID=i.IsUUID]="IsUUID",a[a.IsUppercase=i.IsUppercase]="IsUppercase",a[a.IsVATIDNumber=i.IsVATIDNumber]="IsVATIDNumber",a[a.IsWeekday=i.IsWeekday]="IsWeekday",a[a.IsWeekend=i.IsWeekend]="IsWeekend",a[a.IsYear=i.IsYear]="IsYear",a))(hr||{}),Ir=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsAlpha=i.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=i.IsAlphanumeric]="IsAlphanumeric",a[a.IsInList=i.IsInList]="IsInList",a[a.IsMarkdown=i.IsMarkdown]="IsMarkdown",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNumeric=i.IsNumeric]="IsNumeric",a[a.IsLowercase=i.IsLowercase]="IsLowercase",a[a.IsString=i.IsString]="IsString",a[a.IsUppercase=i.IsUppercase]="IsUppercase",a))(Ir||{});var oa=(a=>(a.Ava="ava",a.Jest="jest",a))(oa||{}),ae=(a=>(a.Clover="clover",a.Cobertura="cobertura",a.HTML="html",a.JSONSummary="json-summary",a.JSON="json",a.Lcov="lcov",a.Lcovonly="lcovonly",a.None="none",a.TeamCity="teamcity",a.TextLcov="text-lcov",a.TextSummary="text-summary",a.Text="text",a))(ae||{});import ee from"path";function yi(a){switch(a){case V.CJS:return".cjs";case V.ESM:return".mjs";case V.IIFE:return".iife.js";case V.UMD:return".umd.js";default:return".js"}}function Di(a){switch(a){case"cjs":case"commonjs":return".cjs";case"es":case"esm":case"module":return".mjs";case"iife":return".iife.js";case"umd":return".umd.js";default:return`unknown-${a}.js`}}import _r,{emptyDir as pr}from"fs-extra";import Pi from"node:path";async function Fi(a){if(!a)throw new Error("Directory must be provided");if(a==="/")throw new Error("Cannot empty root directory");try{await pr(a)}catch{throw new Error(`Could not empty directory: ${a}`)}}async function ki(a){if(!a)throw new Error("File path must be provided");try{return Pi.join(Pi.resolve(),".srclaunch","config.json"),await _r.readFile(a)}catch{throw new Error(`Could not read file: ${a}`)}}async function ra({bundle:a=!0,format:o=V.ESM,input:c,minify:d=!0,output:g,platform:_=ka.Browser,sourcemap:E=!0,splitting:I=!0,target:S=Fa.ESNext,treeShaking:B=!0,types:K=!0}){try{let q=[ee.join(ee.resolve(),c?.directory??"src",c?.file??"index.ts"),...c?.files?c.files.map(P=>ee.join(ee.resolve(),c?.directory??"src",P)):[]];g?.clean&&await Fi(g?.directory??"dist");let j=await Er({bundle:Boolean(a),entryPoints:q,external:typeof a=="object"?a.exclude:[],format:o,minify:d,outdir:I?g?.directory??"dist":void 0,outfile:I?void 0:`${g?.directory??"dist"}/${g?.file??"index"}${yi(o)}`,platform:_,sourcemap:E,splitting:o==="esm"&&I,target:S,treeShaking:B});j.warnings&&j.warnings.forEach(P=>{console.warn(P.text)}),j.errors&&j.errors.forEach(P=>{console.error(P.text)}),K&&(console.info("Building types..."),await Xa({input:c,types:K,output:g})),console.info(`Finished building to ${o.toLocaleUpperCase()} format.`)}catch(q){console.error(q)}}import{build as Sr}from"vite";import Tr from"@vitejs/plugin-react";import Ma from"node:path";async function La({assets:a,bundle:o,format:c=V.ESM,formats:d,input:g,library:_=!1,optimize:E,manifest:I=!0,minify:S=!0,output:B,platform:K=ka.Browser,rootDir:q,sourcemap:j=!0,target:P=Fa.ESNext,types:Q=!0,webApp:H}){try{console.info(`Compiling and bundling to ${d&&d.length>0?`${d.join(", ").toLocaleUpperCase()} formats...`:`${c.toLocaleUpperCase()} format...`}`);let C=d&&d.length>0?d?.map(aa=>aa===V.ESM?"es":aa):[c===V.ESM?"es":c];await Sr({build:{assetsDir:a?.directory?Ma.join(Ma.resolve(),a?.directory):void 0,emptyOutDir:B?.clean??!0,outDir:B?.directory??"dist",lib:Boolean(_)?{entry:Ma.join(Ma.resolve(),g?.directory??"src",g?.file??"index.ts"),formats:C,name:_&&typeof _=="object"?_?.name:void 0,fileName:aa=>`${B?.file??"index"}${Di(aa)}`}:!1,manifest:I,minify:S,rollupOptions:{external:typeof o=="object"?o.exclude??[]:[]},sourcemap:j,ssrManifest:I&&H?.ssr,target:P},configFile:!1,envPrefix:"SRCLAUNCH_",optimizeDeps:{exclude:E?.exclude??[],include:E?.include??[]},plugins:H?.react?[Tr()]:[],root:q??Ma.resolve()}),Q&&(console.info("Building types..."),await Xa({input:g,types:Q,output:B})),console.info(`Finished building to ${d&&d.length>0?`${d.join(", ").toLocaleUpperCase()} formats.`:`${c.toLocaleUpperCase()} format.`}`)}catch(C){console.error(`Error occurred while building: ${C.name}`,C)}}var Mi=new T({name:"build",description:"Commands for building various types of projects",run:async({config:a,flags:o})=>{let c=a.build;if(!c)throw new Error("Missing build configuration");let d=0;if(typeof c=="object"&&!Array.isArray(c))switch(c.tool){case va.Vite:await La({...c,library:a.type===sa.Library||a.type===sa.CLIApplication?{name:a.name}:!1});return;case va.ESBuild:default:let g=c.formats??[c.format??V.ESM];for(let _ of g){let E=c.output?.clean??d===0,I=c.types??d===0;await ra({...c,output:{...c.output,clean:E},format:_,types:I}),d=d+1}}else if(Array.isArray(c))for(let g of c)switch(g.tool){case va.Vite:await La({...g,library:a.type===sa.Library||a.type===sa.CLIApplication?{name:a.name}:!1});break;case va.ESBuild:default:let _=g?.formats??[g.format??V.ESM];for(let E of _){let I=g.output?.clean??d===0,S=g.types??d===0;await ra({...g,output:{...g.output,clean:I},format:E,types:S}),d=d+1}}},commands:[new T({name:"esbuild",description:"Compiles and optionally bundles a package using esbuild",run:async({config:a,flags:o})=>{let c=a.build;if(!c)throw new Error("Missing build configuration");let d=0;if(typeof c=="object"&&!Array.isArray(c))if(c.formats&&c.formats?.length>0)for(let g of c.formats){let _=c.output?.clean??d===0,E=c.types??d===0;await ra({...c,output:{...c.output,clean:_},format:g,types:E}),d=d=1}else await ra(c);else if(Array.isArray(c)&&c)for(let g of c)if(g.formats&&g.formats?.length>0)for(let _ of g.formats){let E=(g.output?.clean||Boolean(o.clean))??d===0,I=g.types??d===0;await ra({...g,output:{directory:"dist",file:"index",...g.output,clean:E},format:_,types:I}),d=d=1}else{let _=(g.output?.clean||Boolean(o.clean))&&d===0,E=g.types??d===0;await ra({...g,output:{directory:"dist",file:"index",...g.output,clean:_},types:E})}}}),new T({name:"vite",description:"Compiles and bundles a package using Vite",run:async({config:a,flags:o})=>{let c=a.build;if(!c)throw new Error("Missing build configuration");if(typeof c=="object"&&!Array.isArray(c))await La({...c,library:a.type===sa.Library||a.type===sa.CLIApplication?{name:a.name}:!1});else if(Array.isArray(c)&&c)for(let d of c)await La({...d,library:a.type===sa.Library||a.type===sa.CLIApplication?{name:a.name}:!1})},type:"project"}),new T({name:"types",description:"Builds Typescript definitions",run:async({config:a,flags:o})=>{}}),new T({name:"help",description:"Shows help for build commands",run:async()=>{console.info("Available build commands are: lib, web-app, web-service, types, and help")},type:"project"})]});import Cr from"simple-git";import{render as Xr}from"ink";var Ga=fa(ma(),1);import{Box as tn,Spacer as Zr,Text as $r,useInput as Qr}from"ink";var re=fa(ma(),1);import{Box as Kr}from"ink";var zi=({children:a,...o})=>{let[c,d]=(0,re.useState)({columns:process.stdout.columns,rows:process.stdout.rows});return(0,re.useEffect)(()=>{function g(){d({columns:process.stdout.columns,rows:process.stdout.rows})}return process.stdout.on("resize",g),process.stdout.write("\x1B[?1049h"),()=>{process.stdout.off("resize",g),process.stdout.write("\x1B[?1049l")}},[]),React.createElement(Kr,{width:c.columns,height:c.rows,...o},a)};var G=fa(ma(),1);import{Box as da,Text as Wr,useFocus as Vr,useFocusManager as Rr}from"ink";var Yi=fa(ma(),1);import{Box as Or,Text as xe,useFocus as jr}from"ink";var Hr=({label:a,onFocus:o,status:c})=>{let{isFocused:d}=jr();return(0,Yi.useEffect)(()=>{d&&o()},[d,o]),React.createElement(Or,{height:1},React.createElement(xe,{backgroundColor:d?"cyanBright":void 0,color:d?"#000000":"grayBright"},c&&React.createElement(xe,{color:(()=>{switch(c){case"started":return"#82d800";case"starting":case"init":return"#ffcc00";case"error":return"#cc5222";default:return"#ffcc00"}})()}," \u25CF"),React.createElement(xe,null," ",a," ")))},Ji=Hr;var Zi=({children:a,title:o,...c})=>{let{enableFocus:d,focusNext:g}=Rr(),[_,E]=(0,G.useState)(0),{isFocused:I}=Vr({autoFocus:!0});return(0,G.useEffect)(()=>{d()},[d]),(0,G.useEffect)(()=>{I&&g()},[I,g]),(0,G.useEffect)(()=>{G.default.Children.forEach(a,(S,B)=>{S?.props?.initial&&E(B)})},[a]),G.default.createElement(da,{flexGrow:1,flexDirection:"column",...c},G.default.createElement(da,{flexDirection:"row",height:1},G.default.createElement(da,{paddingLeft:1,flexGrow:1},G.default.Children.map(a,(S,B)=>G.default.createElement(da,{marginRight:2},G.default.createElement(Ji,{onFocus:()=>E(B),label:S?.props?.label,status:S?.props?.status})))),o&&G.default.createElement(da,{alignItems:"flex-end",paddingRight:1},G.default.createElement(Wr,null,o))),G.default.createElement(da,{flexGrow:1,flexDirection:"column",borderStyle:"round",borderColor:"black",width:"100%"},G.default.Children.map(a,(S,B)=>G.default.createElement(da,{display:_===B?"flex":"none",flexDirection:"column"},G.default.Children.map(S,K=>G.default.createElement(G.default.Fragment,null,K))))))},Ba=({children:a})=>G.default.createElement(G.default.Fragment,null,a);import{Box as te,Text as ta}from"ink";var $i=()=>React.createElement(te,{flexGrow:1},React.createElement(te,{borderStyle:"round",borderColor:"blue",flexDirection:"column",width:30,padding:1,paddingLeft:2},React.createElement(te,null,React.createElement(ta,null,"Change type")),React.createElement(te,null,React.createElement(ta,null,"New Feature"),React.createElement(ta,null,"Bugfix"),React.createElement(ta,null,"Documentation"),React.createElement(ta,null,"Formatting"),React.createElement(ta,null,"Refactor"),React.createElement(ta,null,"Performance"),React.createElement(ta,null,"Testing"),React.createElement(ta,null,"Chore"))));var Xi=fa(ma(),1);import{Box as Ci}from"ink";var R=fa(ma(),1);import{Box as Ua,measureElement as Qi,Text as qe,useInput as zr}from"ink";var le=({items:a})=>{let[o,c]=(0,R.useState)(0),[d,g]=(0,R.useState)(0),[_,E]=(0,R.useState)([]),[I,S]=(0,R.useState)(!1),[B,K]=(0,R.useState)(!0),[q,j]=(0,R.useState)(1),[P,Q]=(0,R.useState)(0);zr((F,k)=>{k.upArrow?(o>0&&c(o-1),K(o>=a.length-1)):k.downArrow&&(_.length>o+1&&c(o+1),K(o>=a.length-1))});let H=(0,R.createRef)();(0,R.useEffect)(()=>{let F=Math.ceil(d/_.length*100);j(F),S(_.length>=d)},[_.length,d]),(0,R.useEffect)(()=>{if(H.current){let F=Qi(H.current)?.height;g(F??20)}},[a]),(0,R.useEffect)(()=>{if(H.current){let F=Qi(H.current)?.height;g(F??20)}},[]),(0,R.useEffect)(()=>{d&&E(a.map((F,k)=>{let ca=k<d&&o<d||k<=o&&k>=o-d;return{key:k,message:F,visible:ca}}))},[a,o,d]);let C=F=>F===o?"\u276F\xA0":"\xA0\xA0";(0,R.useEffect)(()=>{B&&c(a.length-1)},[a.length,B]),(0,R.useEffect)(()=>{let F=Math.floor(o/_.length*100);Q(F)},[o,_.length]);let aa=F=>F.indexOf("src/")===0?React.createElement(qe,{color:"magenta"},F):React.createElement(qe,{color:"lightGrey"},F);return React.createElement(Ua,{flexDirection:"row",minHeight:"100%",minWidth:"100%"},React.createElement(Ua,{flexDirection:"column",flexGrow:1,ref:H},React.createElement(Ua,{flexDirection:"column",flexGrow:1},_.map((F,k)=>F.visible?React.createElement(qe,{key:k},!F.visible&&"X ",C(k),aa(F.message.toString())):null))),I&&React.createElement(Ua,{alignItems:"stretch",borderStyle:"round",flexGrow:0,width:1,minHeight:"100%",flexDirection:"column"},React.createElement(Ua,{flexGrow:0,height:`${P}%`}),React.createElement(Ua,{borderStyle:"round",flexGrow:0,width:1,height:`${q}%`,marginLeft:-1})))};var an=()=>{let[a,o]=(0,Xi.useState)([]),c=d=>{o(g=>[...g,d])};return React.createElement(Ci,{flexGrow:1},React.createElement(Ci,{flexGrow:1,borderStyle:"round",borderColor:"gray",marginLeft:1},React.createElement(le,{items:a})))};import{Box as Yr}from"ink";var en=()=>React.createElement(Yr,{flexGrow:1});var sn=fa(ma(),1);import{Box as nn}from"ink";var un=()=>{let[a,o]=(0,sn.useState)([]),c=d=>{o(g=>[...g,d])};return React.createElement(nn,{flexGrow:1},React.createElement(nn,{flexGrow:1,borderStyle:"round",borderColor:"gray",marginLeft:1},React.createElement(le,{items:a})))};import{Box as Jr}from"ink";var rn=()=>React.createElement(Jr,{flexGrow:1});var ln=({initialTab:a,cliVersion:o})=>{let[c,d]=(0,Ga.useState)([]),[g,_]=(0,Ga.useState)(void 0),E=I=>{d(S=>[...S,I])};return Qr(async(I,S)=>{if(I==="q")throw E("Quitting"),new Error("Quitting");S.leftArrow}),(0,Ga.useEffect)(()=>{(async()=>{E(""),g&&E(g)})()},[]),React.createElement(zi,{borderStyle:"round",borderColor:"lightgrey",flexDirection:"column"},React.createElement(Zi,null,React.createElement(Ba,{initial:a==="Overview",label:"Overview"},React.createElement(rn,null)),React.createElement(Ba,{initial:a==="Build",label:"Build"},React.createElement(un,null)),React.createElement(Ba,{initial:a==="Tests",label:"Tests"},React.createElement(an,null)),React.createElement(Ba,{initial:a==="Changes",label:"Changes"},React.createElement($i,null)),React.createElement(Ba,{initial:a==="Release",label:"Release"},React.createElement(en,null))),React.createElement(tn,{flexDirection:"row"},React.createElement(Zr,null),React.createElement(tn,{alignItems:"flex-end",paddingRight:1},React.createElement($r,null,o))))};var on=new T({name:"changesets",description:"Manage changesets",commands:[new T({name:"add",description:"Create a changeset",run:async({cli:a,config:o,flags:c})=>{let d=c.message;if(c.interactive){let{waitUntilExit:g}=Xr(React.createElement(ln,{initialTab:"Changes",cliVersion:a.pkg.version,flags:c}));await g()}else try{let g=Cr(),_=await g.add(".");console.log("addResult",_);let E=await g.commit(d);console.log("commitResult",E)}catch(g){console.error("commit err",g)}},type:"project"}),new T({name:"list",description:"List changesets",run:async({config:a,flags:o})=>{},type:"project"}),new T({name:"help",description:"Show help for changesets",run:async()=>{console.info("Available changesets commands are: create, list")},type:"project"})]});var mn=new T({name:"dev",description:"Development environment commands",commands:[new T({name:"start",description:"Launches the local development environment.",run:async({cli:a,flags:o})=>{},type:"project"}),new T({name:"help",description:"Shows help for dev commands",run:async()=>{console.info("Available dev commands are: start, help")},type:"project"})]});var cn=new T({name:"help",description:"Shows help for commands",run:async({cli:a})=>{a.showHelp()}});var An=new T({name:"infrastructure",description:"Manage infrastructure",commands:[new T({name:"deploy",description:"Deploy infrastructure",run:async({config:a,flags:o})=>{},type:"workspace"}),new T({name:"help",description:"Shows help for infrastructure commands",run:async()=>{console.info("Available infrastructure commands are: deploy, help")},type:"workspace"})]});import Na from"fs-extra";import xa from"node:path";function fn(a,o="srclaunch"){try{let c="",d="",g="export default {",_=`.${o==="srclaunch"||o==="sequelize"?"ts":"json"}`;for(let E of a){let I=E.split(_)[0];o==="json"?d+=`import ${I} from './${I}.json';
`:o==="sequelize"?(d+=`import ${I}Init, { ${I} } from './${I}';
`,g+=`${I}: ${I}Init,`):d+=`import { ${I} } from './${I}.js';
`,c+=`  ${I},
`}return o==="sequelize"&&(g+="};"),`${d}
export {
${c}};
${o==="sequelize"?g:""}
`}catch(c){console.error(c)}}async function dn(a,o){try{let c=xa.join(xa.resolve(),o,"src");await Na.emptyDir(c);let d=await Na.readdir(a);for(let I of d){let S=await Na.readFile(xa.join(a,I),"utf8");if(!S.includes("fields: {"))throw new Error(`${I} is missing the fields property.`);let K=`
    created_date: {
      label: 'Created Date',
      required: false,
      type: Primitives.DateTime,
    },
    updated_date: {
      label: 'Updated Date',
      required: false,
      type: Primitives.DateTime,
    },
  `,q=S.indexOf("relationships:")+15,j=S.indexOf("}",q)+1,P=S.slice(q,j);if(P){let H=P.indexOf("belongsTo:")+10,C=P.indexOf("]",H)+1,aa=P.slice(H,C);if(aa){let F=aa.replace(/'/g,'"').replace(/ {2}|\r\n|\n|\r/g,"").replace(/\s/g,"").replace(",]","]"),k=JSON.parse(F);for(let X of k)K+=`
        ${X}Id: {
          label: '${X}',
          required: false,
          type: Primitives.UUID
        },
        `}}let Q=S.replace("fields: {",`fields: {
        ${K}`);await Na.writeFile(xa.join(c,I),Q,"utf8")}let _=(await Na.readdir(c)).filter(I=>I.slice(-3)===".ts"&&I.split(".ts")[0]!=="index"),E=fn(_,"srclaunch");await Na.writeFile(xa.join(c,"index.ts"),E,"utf8")}catch(c){throw console.error(c),c}}import na from"fs-extra";import $ from"node:path";function gn(){return`import { ModelProps, Primitives } from "@srclaunch/types";

  export const Document: ModelProps = {
    fields: {
      name: {
        label: "Name",
        type: Primitives.String,
        required: true,
      },
      description: {
        label: "Description",
        type: Primitives.String,
        required: true,
      }
    },
    name: "Document",
    relationships: {
      belongsTo: ["Organization", "Invoice", "User"],
    },
  };
  `}function hn(){return`import { ModelProps, Primitives } from "@srclaunch/types";

  export const Invoice: ModelProps = {
    fields: {
      amount: {
        label: "Amount",
        type: Primitives.Number,
        required: true,
      },
      currency: {
        label: "Currency",
        type: Primitives.CurrencyCode,
        required: true,
      },
      date: {
        label: "Date",
        type: Primitives.Date,
        required: true,
      },
      due_date: {
        label: "Due Date",
        type: Primitives.Date,
        required: true,
      },
      notes: {
        label: "Notes",
        type: Primitives.String,
      },
      status: {
        label: "Status",
        type: Primitives.String,
        required: true,
      },
    },
    name: "Invoice",
    relationships: {
      belongsTo: ["Organization", "Payment", "User"],
    },
  };`}function In(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const Organization: ModelProps = {
  fields: {
    description: {
      label: "Description",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
  },
  name: "Organization",
  relationships: {},
};`}function _n(){return`import { ModelProps, Primitives } from "@srclaunch/types";

  export const Payment: ModelProps = {
    fields: {
      amount: {
        label: "Amount",
        type: Primitives.Number,
        required: true,
      },
      currency: {
        label: "Currency",
        type: Primitives.CurrencyCode,
        required: true,
      },
      date: {
        label: "Date",
        type: Primitives.Date,
        required: true,
      },
      failure_reason: {
        label: "Failure Reason",
        type: Primitives.Menu,
        menu: [
          {
            label: 'Insufficient Funds',
            value: 'insufficient-funds',
          },
          {
            label: 'Invalid Amount',
            value: 'invalid-amount',
          },
          {
            label: 'Invalid Currency',
            value: 'invalid-currency',
          },
          {
            label: 'Invalid Card',
            value: 'invalid-card',
          },
          {
            label: 'Invalid Card Expiry',
            value: 'invalid-card-expiry',
          },
          {
            label: 'Invalid Card Number',
            value: 'invalid-card-number',
          },
          {
            label: 'Invalid Card Security Code',
            value: 'invalid-card-security-code',
          },
          {
            label: 'Invalid Card Holder',
            value: 'invalid-card-holder',
          },
          {
            label: 'Invalid Card Address',
            value: 'invalid-card-address',
          },
        ]
      },
      notes: {
        label: "Notes",
        type: Primitives.String,
        required: true,
      },
      status: {
        label: "Status",
        type: Primitives.Menu,
        required: true,
        menu: [
          {
            label: "Paid",
            value: "paid",
          },
          {
            label: "Failure",
            value: "failure",
          },
          {
            label: "Pending",
            value: "pending",
          },
        ],
      }
    },
    name: "Payment",
    relationships: {
      belongsTo: ["Organization", "User"],
    },
  };`}function pn(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const PaymentMethod: ModelProps = {
  fields: {
    default: {
      label: "Default",
      type: Primitives.Boolean,
    },
    masked_number: {
      label: "Number",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
    type: {
      label: "Type",
      menu: [
        {
          label: "Bank Transfer",
          value: "bank-transfer",
        },
        {
          label: "Credit Card",
          value: "credit-card",
        },
        {
          label: "Crypto",
          value: "crypto",
        },
      ],
      type: Primitives.Menu,
    },
  },
  name: "PaymentMethod",
  relationships: {
    belongsTo: ["Organization", "Payment", "Team", "User"],
  },
};`}function En(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const Person: ModelProps = {
  fields: {
    analytics: {
      label: "Analytics",
      type: Primitives.JSON,
    },
    billing: {
      label: "Billing Details",
      type: Primitives.JSON,
    },
  },
  name: "Person",
  relationships: {
    hasMany: ["Event"],
    hasOne: ["User"],
  },
};`}function Sn(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const Subscription: ModelProps = {
  fields: {
    status: {
      label: "Status",
      menu: [
        {
          label: "Active",
          value: "active",
        },
        {
          label: "Expired",
          value: "expired",
        },
        {
          label: "Canceled",
          value: "canceled",
        },
      ],
      type: Primitives.Menu,
    },
    cancel_date: {
      label: "Cancel date",
      type: Primitives.DateTime,
    },
    expiration_date: {
      label: "Expiration date",
      type: Primitives.DateTime,
    },
    renewal_date: {
      label: "Renewal date",
      type: Primitives.DateTime,
    },
    start_date: {
      label: "Start date",
      type: Primitives.DateTime,
    },
  },
  name: "Subscription",
  relationships: {
    belongsTo: ["Organization", "Product", "Team", "User"],
  },
};`}function Tn(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const Team: ModelProps = {
  fields: {
    description: {
      label: "Description",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
  },
  name: "Team",
  relationships: {
    belongsTo: ["Organization"],
  },
};`}function vn(){return`import {
  CurrencyCode,
  LanguageCode,
  LocaleCode,
  ModelProps,
  Primitives,
} from "@srclaunch/types";

export const User: ModelProps = {
  description: "A user that signs into the application",
  fields: {
    access: {
      label: "Access Details",
      type: Primitives.JSON,
    },
    cognito_id: {
      label: "Cognito ID",
      type: Primitives.String,
    },
    membership: {
      label: "Membership",
      type: Primitives.JSON,
    },
    onboarding: {
      label: "Onboarding",
      type: Primitives.JSON,
    },
    preferences: {
      defaultValue: {
        accessibility: {
          outlines: false,
        },
        localization: {
          currency: CurrencyCode.UnitedStatesDollar,
          language: LanguageCode.English,
          locale: LocaleCode.EnglishUnitedStates,
        },
        look_and_feel: {
          theme: "light",
        },
      },
      label: "Preferences",
      type: Primitives.JSON,
    },
  },
  name: "User",
  relationships: {
    belongsTo: ["Person", "Team"]
  },
};`}function bn(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const UserGroup: ModelProps = {
  fields: {
    description: {
      label: "Description",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
  },
  name: "UserGroup",
  relationships: {
    belongsTo: ["Organization", "Team"],
  },
};`}function Bn(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const UserRole: ModelProps = {
  fields: {
    description: {
      label: "Description",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
  },
  name: "UserRole",
  relationships: {
    belongsTo: ["Organization", "Team"],
  },
};`}async function Un(){try{let a=$.join($.resolve(),".applab/dependencies/models"),o=$.join(a,"src");await na.writeFile($.join(o,"Organization.ts"),In(),"utf8"),await na.writeFile($.join(o,"Team.ts"),Tn(),"utf8"),await na.writeFile($.join(o,"Document.ts"),gn(),"utf8"),await na.writeFile($.join(o,"Payment.ts"),_n(),"utf8"),await na.writeFile($.join(o,"Invoice.ts"),hn(),"utf8"),await na.writeFile($.join(o,"PaymentMethod.ts"),pn(),"utf8"),await na.writeFile($.join(o,"Person.ts"),En(),"utf8"),await na.writeFile($.join(o,"Subscription.ts"),Sn(),"utf8"),await na.writeFile($.join(o,"User.ts"),vn(),"utf8"),await na.writeFile($.join(o,"UserGroup.ts"),bn(),"utf8"),await na.writeFile($.join(o,"UserRole.ts"),Bn(),"utf8")}catch(a){console.error(a)}}async function Nn(a,{dependencies:o}){console.info("Building Core Object dependencies..."),console.info("Adding out of box Core Objects..."),await Un(),console.info("Building SrcLaunch models..."),await dn(a,o.models.path),await ra({format:V.ESM,rootDir:o.models.path})}import st from"fs-extra";import ut from"path";async function yn(){let a=ut.join("models"),o=st.readdirSync(a).filter(c=>c.slice(-3)===".ts"&&c.split(".ts")[0]!=="index");console.info(o.map(c=>c.split(".ts")[0]).toString())}import rt from"fs-extra";import Ke from"node:path";async function Dn(){try{let a=Ke.join(Ke.resolve(),"dependencies/models");await rt.emptyDir(Ke.join(a,"src"))}catch(a){console.error(a)}}import Pn from"path";var Fn=new T({name:"",description:"",commands:[new T({name:"clean",description:"",run:async({config:a,flags:o})=>{await Dn()},type:"workspace"}),new T({name:"create",description:"",run:async({config:a,flags:o})=>{},type:"workspace"}),new T({name:"build",description:"",run:async({config:a,flags:o})=>{await Nn(Pn.join(Pn.resolve(),a.models?.path??"models"),{dependencies:a.dependencies})},type:"workspace"}),new T({name:"list",description:"",run:async({config:a,flags:o})=>{await yn()},type:"workspace"}),new T({name:"help",description:"Shows help for model commands",run:async()=>{console.info("Available model commands are: clean, build, list, and help.")},type:"workspace"})]});var kn=new T({name:"preview",description:"Creates a preview of the production build with currently pending changesets",commands:[new T({name:"start",description:"Builds a preview of the production build, and serves locally on the port provided in the project configuration file",run:async()=>{},type:"project"}),new T({name:"help",description:"Shows help for preview commands",run:async()=>{console.info("Available preview commands are: help")},type:"project"})]});var Mn=new T({name:"projects",description:"Manage projects",commands:[new T({name:"create",description:"Create a new SrcLaunch project",run:async({config:a,flags:o})=>{},type:"workspace"}),new T({name:"help",description:"Shows help for projects commands",run:async()=>{console.info("Available projects commands are: create, help")},type:"workspace"})]});import mt from"standard-version";import ct from"simple-git";var Ln=new T({name:"release",description:"Create a release",run:async({config:a})=>{try{let o=ct(),c=await(await o.branchLocal()).current;console.log("currentBranch",c);let d=await(await o.getRemotes()).find(_=>_.name==="origin");console.log("currentRepo",d),await mt({noVerify:!0,infile:"CHANGELOG.md",silent:!1});let g=await o.push(d?.name??"origin",c,{"--follow-tags":null});console.log("result",g)}catch(o){console.error("err",o)}},type:"project",commands:[new T({name:"help",description:"Shows help for release commands",run:async()=>{console.info("Available release commands are: create, help")},type:"project"})]});var wn=new T({name:"serve",description:"Commands for serving an application or service",run:async({config:a,flags:o})=>{},type:"project",commands:[new T({name:"web-app",description:"Serves a Web application project",run:async({config:a,flags:o})=>{},type:"project"}),new T({name:"web-service",description:"Serves a Web service project",run:async({config:a,flags:o})=>{},type:"project"}),new T({name:"help",description:"Shows help for serve commands",run:async()=>{console.info("Available serve commands are: web-app, web-service, help")},type:"project"})]});import{spawn as dt}from"child_process";var ia={concurrency:void 0,coverage:{directory:"coverage",thresholds:{global:{branches:0,functions:0,lines:0,statements:0}},reporters:[ae.Lcov,ae.JSONSummary]},fail:{fast:!0,noTests:!1},files:{exclude:[],include:["src/__tests__/**/*","src/tests/**/*","src/**/*.test.ts","src/**/*.spec.ts","src/**/*.spec.tsx","src/**/*.test.js","src/**/*.spec.js","src/**/*.spec.jsx"]},tool:oa.Ava,verbose:!0};import{chunksToLinesAsync as f3,streamWrite as d3,streamEnd as g3,onExit as gt}from"@rauschma/stringio";async function qa({config:a,match:o,watch:c}){try{let d=["--all"],g=["--color"],_=a?.concurrency?["--concurrency",a.concurrency.toString()]:[],E=a?.files?.exclude??ia.files.exclude,S=[...a?.files?.include??ia.files.include,...E.map(H=>`!${H}`)].join(" "),B=a?.fail?.fast?["--fail-fast"]:[],K=o?[`--match='${o.toString()}'`]:[],q=a?.verbose?["--verbose"]:[a.verbose?"--verbose":""],j=c?["--watch"]:[],P=[S,...d,...g,..._,...B,...K,...q,...j],Q=dt("ava",P,{stdio:[process.stdin,process.stdout,process.stderr]});await gt(Q)}catch(d){console.error("ERR; ",d)}}import{Report as ht}from"c8";import{emptyDir as It,ensureDir as _t}from"fs-extra";import pt from"path";async function Ka(a){try{let o=pt.join(process.cwd(),a.coverage?.directory??"coverage");await _t(o),await It(o);let c=new ht({all:!0,exclude:a.files?.include??ia.files.include,reportsDirectory:o,src:["src"],tempDirectory:o,reporter:a.coverage?.reporters??ia.coverage.reporters});return await c.run(),c}catch(o){throw o}}import{run as Et}from"jest-cli";import Gn from"path";async function Oa({config:a,match:o,watch:c}){try{let d={bail:a?.fail?.fast??ia.fail.fast,coveragePathIgnorePatterns:a.files?.include??ia.files.include,extensionsToTreatAsEsm:[".ts",".tsx"],failWithoutAssertions:a?.fail?.noTests??ia.fail.noTests,match:o,maxConcurrency:a.concurrency??5,rootDir:Gn.resolve(process.cwd()),testPathIgnorePatterns:a.files?.exclude??ia.files.exclude,testMatch:a.files?.include??ia.files.include,verbose:a.verbose??!0,watch:c??!1};await Et(d,Gn.resolve())}catch(d){console.error(d)}}var xn=new T({name:"test",description:"Commands for running tests",run:async({config:a,flags:o})=>{if(typeof a.test=="object"&&!Array.isArray(a.test)){switch(a.test.tool){case oa.Jest:await Oa({config:a.test,match:o.match,watch:o.watch});return;case oa.Ava:default:await qa({config:a.test,match:o.match,watch:o.watch})}(a.test.coverage||o.coverage)&&await Ka(a.test)}else if(Array.isArray(a.test))for(let c of a.test){switch(c.tool){case oa.Jest:await Oa({config:c,match:o.match,watch:o.watch});return;case oa.Ava:default:await qa({config:c,match:o.match,watch:o.watch})}(c.coverage||o.coverage)&&await Ka(c)}},commands:[new T({name:"node",description:"Run tests using Ava",run:async({config:a,flags:o})=>{if(typeof a.test=="object"&&!Array.isArray(a.test))await qa({config:a.test,match:o.match,watch:o.watch});else if(Array.isArray(a.test))for(let c of a.test)await qa({config:c,match:o.match,watch:o.watch})}}),new T({name:"react",description:"Runs tests using Jest",run:async({config:a,flags:o})=>{if(typeof a.test=="object"&&!Array.isArray(a.test))await Oa({config:a.test,match:o.match,watch:o.watch});else if(Array.isArray(a.test))for(let c of a.test)await Oa({config:c,match:o.match,watch:o.watch})},type:"project"}),new T({name:"coverage",description:"Generates coverage reports",run:async({config:a,flags:o})=>{if(typeof a.test=="object"&&!Array.isArray(a.test))await Ka(a.test);else if(Array.isArray(a.test))for(let c of a.test)await Ka(c)},type:"project"}),new T({name:"help",description:"Shows help for test commands",run:async()=>{console.info("Available test commands are: ava, jest")},type:"project"})]});import oe from"node:path";async function qn(){try{try{return(await import(oe.join(oe.resolve(),"./.srclaunch/config.js"))).default}catch{let o=oe.join(oe.resolve(),".srclaunch","config.json");try{let c=await ki(o);return await JSON.parse(c.toString())}catch(c){throw new Error(`Could not read config file: ${o}. ${c.message}`)}}}catch{throw new Error("Please run this command from a SrcLaunch project or workspace directory.")}}var bt=`
Usage
  $ srclaunch <command>

Commands
  build - Build SrcLaunch project if srclaunch.config.json is found in the current directory
  models
    * build - Build models into Sequelize models, Typescript definitions and JSON
  test - Run tests and collect coverage

To view information for a specific command add "help" after the command name, for example:
  $ srclaunch build help
`,me=Tt(bt,{importMeta:import.meta});async function Bt(){try{let a=me.input,o=me.flags,c=await qn();vt({pkg:me.pkg}).notify(),await Pe({cli:me,command:a,commands:[Mi,on,mn,cn,An,Fn,kn,Mn,Ln,wn,xn],config:c,flags:o})}catch(a){console.error(a)}}var H3=Bt();export{ea as CommandType,me as cli,H3 as default,bt as helpMessage,Bt as main};
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
//# sourceMappingURL=index.mjs.map
