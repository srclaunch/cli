{
  "version": 3,
  "sources": ["../node_modules/react/cjs/react.production.min.js", "../node_modules/react/cjs/react.development.js", "../node_modules/react/index.js", "../src/index.ts", "../src/lib/command.ts", "../src/lib/build/esbuild.ts", "../src/lib/build/types.ts", "../node_modules/@srclaunch/types/src/activity/index.ts", "../node_modules/@srclaunch/types/src/business/commerce/payment-method/index.ts", "../node_modules/@srclaunch/types/src/business/commerce/subscription/index.ts", "../node_modules/@srclaunch/types/src/communications/chat.ts", "../node_modules/@srclaunch/types/src/communications/medium.ts", "../node_modules/@srclaunch/types/src/engineering/logging/level.ts", "../node_modules/@srclaunch/types/src/engineering/networking/http/index.ts", "../node_modules/@srclaunch/types/src/i18n/locale/country.ts", "../node_modules/@srclaunch/types/src/i18n/currency/index.ts", "../node_modules/@srclaunch/types/src/i18n/language/index.ts", "../node_modules/@srclaunch/types/src/i18n/locale/index.ts", "../node_modules/@srclaunch/types/src/i18n/time/region.ts", "../node_modules/@srclaunch/types/src/i18n/time/timezone.ts", "../node_modules/@srclaunch/types/src/i18n/time/timezones.ts", "../node_modules/@srclaunch/types/src/i18n/locale/region.ts", "../node_modules/@srclaunch/types/src/i18n/locale/countries.ts", "../node_modules/@srclaunch/types/src/i18n/locale/locales.ts", "../node_modules/@srclaunch/types/src/i18n/time/regions.ts", "../node_modules/@srclaunch/types/src/srclaunch/analytics/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/analytics/web/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/build.ts", "../node_modules/@srclaunch/types/src/srclaunch/data/data-point/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/data/model/defaults.ts", "../node_modules/@srclaunch/types/src/srclaunch/data/model/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/data/primitive/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/deployment.ts", "../node_modules/@srclaunch/types/src/srclaunch/environment.ts", "../node_modules/@srclaunch/types/src/srclaunch/infrastructure.ts", "../node_modules/@srclaunch/types/src/srclaunch/onboarding/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/pipeline.ts", "../node_modules/@srclaunch/types/src/srclaunch/platform.ts", "../node_modules/@srclaunch/types/src/srclaunch/problem.ts", "../node_modules/@srclaunch/types/src/srclaunch/project.ts", "../node_modules/@srclaunch/types/src/srclaunch/queue.ts", "../node_modules/@srclaunch/types/src/srclaunch/routing.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/appearance/color.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/application.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/boolean.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/date.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/format.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/i18n/currency.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/i18n/language.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/i18n/locale.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/menu.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/network.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/number.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/pii.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/places/transportation/airport.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/standards.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/condition/primitive/string.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/rules/validation/form/index.ts", "../node_modules/@srclaunch/types/src/srclaunch/test.ts", "../node_modules/@srclaunch/types/src/srclaunch/user/authentication/verification.ts", "../node_modules/@srclaunch/types/src/srclaunch/user/role.ts", "../src/lib/build/formats.ts", "../src/lib/file-system.ts", "../node_modules/chalk/source/vendor/ansi-styles/index.js", "../node_modules/chalk/source/vendor/supports-color/index.js", "../node_modules/chalk/source/utilities.js", "../node_modules/chalk/source/index.js", "../src/lib/build/vite.ts", "../src/commands/build.ts", "../src/commands/changesets.tsx", "../src/containers/AppContainer.tsx", "../src/components/FullScreen.tsx", "../src/components/Tabs.tsx", "../src/components/Button.tsx", "../src/pages/Changes.tsx", "../src/pages/Tests.tsx", "../src/components/Scrollable.tsx", "../src/pages/Release.tsx", "../src/pages/Build.tsx", "../src/pages/Overview.tsx", "../src/commands/dev.tsx", "../src/commands/help.ts", "../src/commands/infrastructure.ts", "../src/lib/models/build/outputs/srclaunch.ts", "../src/lib/models/build/exports.ts", "../src/lib/models/build/stubs/index.ts", "../src/lib/models/build/stubs/models.ts", "../src/lib/models/build/index.ts", "../src/lib/models/list.ts", "../src/lib/models/build/clean.ts", "../src/commands/models.ts", "../src/commands/preview.ts", "../src/commands/projects.ts", "../src/commands/release.ts", "../node_modules/@srclaunch/node-environment/node_modules/@srclaunch/types/dist/index.mjs", "../node_modules/@srclaunch/node-environment/src/index.ts", "../src/lib/run/vite.ts", "../src/commands/run.ts", "../src/lib/test/ava.ts", "../src/lib/test/index.ts", "../src/lib/test/coverage.ts", "../src/lib/test/jest.ts", "../src/commands/test.ts", "../src/lib/config.ts"],
  "sourcesContent": ["/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.1.0\";\n", "/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var ReactVersion = '18.1.0';\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\n// ATTENTION\n\nvar REACT_ELEMENT_TYPE =  Symbol.for('react.element');\nvar REACT_PORTAL_TYPE =  Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE =  Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE =  Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE =  Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE =  Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE =  Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE =  Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE =  Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE =  Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE =  Symbol.for('react.memo');\nvar REACT_LAZY_TYPE =  Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE =  Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL =  Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  transition: null\n};\n\nvar ReactCurrentActQueue = {\n  current: null,\n  // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n  isBatchingLegacy: false,\n  didScheduleLegacyUpdate: false\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar ReactDebugCurrentFrame = {};\nvar currentExtraStackFrame = null;\nfunction setExtraStackFrame(stack) {\n  {\n    currentExtraStackFrame = stack;\n  }\n}\n\n{\n  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n    {\n      currentExtraStackFrame = stack;\n    }\n  }; // Stack implementation injected by the current renderer.\n\n\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentExtraStackFrame) {\n      stack += currentExtraStackFrame;\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner\n};\n\n{\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar assign = Object.assign;\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {\n    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n  }\n\n  var propName; // Original props are copied\n\n  var props = assign({}, element.props); // Reserved names are extracted\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = key.replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getElementKey(element, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    {\n      checkKeyStringCoercion(element.key);\n    }\n\n    return escape('' + element.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    var _child = children;\n    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n\n    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n\n    if (isArray(mappedChild)) {\n      var escapedChildKey = '';\n\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n\n      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n        return c;\n      });\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        {\n          // The `if` statement here prevents auto-disabling of the safe\n          // coercion ESLint rule, so we must manually disable it below.\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n            checkKeyStringCoercion(mappedChild.key);\n          }\n        }\n\n        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n        // eslint-disable-next-line react-internal/safe-string-coercion\n        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);\n      }\n\n      array.push(mappedChild);\n    }\n\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n      var iterableChildren = children;\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(iterableChildren);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n      }\n    } else if (type === 'object') {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      var childrenString = String(children);\n      throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  var count = 0;\n  mapIntoArray(children, result, '', '', function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  var n = 0;\n  mapChildren(children, function () {\n    n++; // Don't return anything\n  });\n  return n;\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  mapChildren(children, function () {\n    forEachFunc.apply(this, arguments); // Don't return anything.\n  }, forEachContext);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  return mapChildren(children, function (child) {\n    return child;\n  }) || [];\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    throw new Error('React.Children.only expected to receive a single React element child.');\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue) {\n  // TODO: Second argument used to be an optional `calculateChangedBits`\n  // function. Warn to reserve for future use?\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null,\n    // Add these to use same hidden class in VM as ServerContext\n    _defaultValue: null,\n    _globalName: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n  var hasWarnedAboutDisplayNameOnConsumer = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      },\n      displayName: {\n        get: function () {\n          return context.displayName;\n        },\n        set: function (displayName) {\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\n            warn('Setting `displayName` on Context.Consumer has no effect. ' + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n\n            hasWarnedAboutDisplayNameOnConsumer = true;\n          }\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nvar Uninitialized = -1;\nvar Pending = 0;\nvar Resolved = 1;\nvar Rejected = 2;\n\nfunction lazyInitializer(payload) {\n  if (payload._status === Uninitialized) {\n    var ctor = payload._result;\n    var thenable = ctor(); // Transition to the next state.\n    // This might throw either because it's missing or throws. If so, we treat it\n    // as still uninitialized and try again next time. Which is the same as what\n    // happens if the ctor or any wrappers processing the ctor throws. This might\n    // end up fixing it if the resolution was a concurrency bug.\n\n    thenable.then(function (moduleObject) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var resolved = payload;\n        resolved._status = Resolved;\n        resolved._result = moduleObject;\n      }\n    }, function (error) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var rejected = payload;\n        rejected._status = Rejected;\n        rejected._result = error;\n      }\n    });\n\n    if (payload._status === Uninitialized) {\n      // In case, we're still uninitialized, then we're waiting for the thenable\n      // to resolve. Set it as pending in the meantime.\n      var pending = payload;\n      pending._status = Pending;\n      pending._result = thenable;\n    }\n  }\n\n  if (payload._status === Resolved) {\n    var moduleObject = payload._result;\n\n    {\n      if (moduleObject === undefined) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\\n\\n\" + 'Did you accidentally put curly braces around the import?', moduleObject);\n      }\n    }\n\n    {\n      if (!('default' in moduleObject)) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n      }\n    }\n\n    return moduleObject.default;\n  } else {\n    throw payload._result;\n  }\n}\n\nfunction lazy(ctor) {\n  var payload = {\n    // We use these fields to store the result.\n    _status: Uninitialized,\n    _result: ctor\n  };\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes; // $FlowFixMe\n\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.forwardRef((props, ref) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!render.name && !render.displayName) {\n          render.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.memo((props) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!type.name && !type.displayName) {\n          type.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  {\n    if (dispatcher === null) {\n      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n    }\n  } // Will result in a null access error if accessed outside render phase. We\n  // intentionally don't throw our own error because this is in a hot path.\n  // Also helps ensure this is inlined.\n\n\n  return dispatcher;\n}\nfunction useContext(Context) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    // TODO: add a more generic warning for invalid values.\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useInsertionEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useInsertionEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\nfunction useTransition() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\nfunction useDeferredValue(value) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value);\n}\nfunction useId() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useId();\n}\nfunction useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher$1.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher$1.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      setExtraStackFrame(stack);\n    } else {\n      setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n  }\n\n  {\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nfunction startTransition(scope, options) {\n  var prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = {};\n  var currentTransition = ReactCurrentBatchConfig.transition;\n\n  {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  try {\n    scope();\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        var updatedFibersCount = currentTransition._updatedFibers.size;\n\n        if (updatedFibersCount > 10) {\n          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n        }\n\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nvar didWarnAboutMessageChannel = false;\nvar enqueueTaskImpl = null;\nfunction enqueueTask(task) {\n  if (enqueueTaskImpl === null) {\n    try {\n      // read require off the module object to get around the bundlers.\n      // we don't want them to detect a require and bundle a Node polyfill.\n      var requireString = ('require' + Math.random()).slice(0, 7);\n      var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n      // version of setImmediate, bypassing fake timers if any.\n\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n    } catch (_err) {\n      // we're in a browser\n      // we can't use regular timers because they may still be faked\n      // so we try MessageChannel+postMessage instead\n      enqueueTaskImpl = function (callback) {\n        {\n          if (didWarnAboutMessageChannel === false) {\n            didWarnAboutMessageChannel = true;\n\n            if (typeof MessageChannel === 'undefined') {\n              error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n            }\n          }\n        }\n\n        var channel = new MessageChannel();\n        channel.port1.onmessage = callback;\n        channel.port2.postMessage(undefined);\n      };\n    }\n  }\n\n  return enqueueTaskImpl(task);\n}\n\nvar actScopeDepth = 0;\nvar didWarnNoAwaitAct = false;\nfunction act(callback) {\n  {\n    // `act` calls can be nested, so we track the depth. This represents the\n    // number of `act` scopes on the stack.\n    var prevActScopeDepth = actScopeDepth;\n    actScopeDepth++;\n\n    if (ReactCurrentActQueue.current === null) {\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\n      // will detect the queue and use it instead of Scheduler.\n      ReactCurrentActQueue.current = [];\n    }\n\n    var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n    var result;\n\n    try {\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n      // set to `true` while the given callback is executed, not for updates\n      // triggered during an async event, because this is how the legacy\n      // implementation of `act` behaved.\n      ReactCurrentActQueue.isBatchingLegacy = true;\n      result = callback(); // Replicate behavior of original `act` implementation in legacy mode,\n      // which flushed updates immediately after the scope function exits, even\n      // if it's an async function.\n\n      if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {\n        var queue = ReactCurrentActQueue.current;\n\n        if (queue !== null) {\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n          flushActQueue(queue);\n        }\n      }\n    } catch (error) {\n      popActScope(prevActScopeDepth);\n      throw error;\n    } finally {\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n    }\n\n    if (result !== null && typeof result === 'object' && typeof result.then === 'function') {\n      var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait\n      // for it to resolve before exiting the current scope.\n\n      var wasAwaited = false;\n      var thenable = {\n        then: function (resolve, reject) {\n          wasAwaited = true;\n          thenableResult.then(function (returnValue) {\n            popActScope(prevActScopeDepth);\n\n            if (actScopeDepth === 0) {\n              // We've exited the outermost act scope. Recursively flush the\n              // queue until there's no remaining work.\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }, function (error) {\n            // The callback threw an error.\n            popActScope(prevActScopeDepth);\n            reject(error);\n          });\n        }\n      };\n\n      {\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\n          // eslint-disable-next-line no-undef\n          Promise.resolve().then(function () {}).then(function () {\n            if (!wasAwaited) {\n              didWarnNoAwaitAct = true;\n\n              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');\n            }\n          });\n        }\n      }\n\n      return thenable;\n    } else {\n      var returnValue = result; // The callback is not an async function. Exit the current scope\n      // immediately, without awaiting.\n\n      popActScope(prevActScopeDepth);\n\n      if (actScopeDepth === 0) {\n        // Exiting the outermost act scope. Flush the queue.\n        var _queue = ReactCurrentActQueue.current;\n\n        if (_queue !== null) {\n          flushActQueue(_queue);\n          ReactCurrentActQueue.current = null;\n        } // Return a thenable. If the user awaits it, we'll flush again in\n        // case additional work was scheduled by a microtask.\n\n\n        var _thenable = {\n          then: function (resolve, reject) {\n            // Confirm we haven't re-entered another `act` scope, in case\n            // the user does something weird like await the thenable\n            // multiple times.\n            if (ReactCurrentActQueue.current === null) {\n              // Recursively flush the queue until there's no remaining work.\n              ReactCurrentActQueue.current = [];\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }\n        };\n        return _thenable;\n      } else {\n        // Since we're inside a nested `act` scope, the returned thenable\n        // immediately resolves. The outer scope will flush the queue.\n        var _thenable2 = {\n          then: function (resolve, reject) {\n            resolve(returnValue);\n          }\n        };\n        return _thenable2;\n      }\n    }\n  }\n}\n\nfunction popActScope(prevActScopeDepth) {\n  {\n    if (prevActScopeDepth !== actScopeDepth - 1) {\n      error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');\n    }\n\n    actScopeDepth = prevActScopeDepth;\n  }\n}\n\nfunction recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n  {\n    var queue = ReactCurrentActQueue.current;\n\n    if (queue !== null) {\n      try {\n        flushActQueue(queue);\n        enqueueTask(function () {\n          if (queue.length === 0) {\n            // No additional work was scheduled. Finish.\n            ReactCurrentActQueue.current = null;\n            resolve(returnValue);\n          } else {\n            // Keep flushing work until there's none left.\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n          }\n        });\n      } catch (error) {\n        reject(error);\n      }\n    } else {\n      resolve(returnValue);\n    }\n  }\n}\n\nvar isFlushing = false;\n\nfunction flushActQueue(queue) {\n  {\n    if (!isFlushing) {\n      // Prevent re-entrance.\n      isFlushing = true;\n      var i = 0;\n\n      try {\n        for (; i < queue.length; i++) {\n          var callback = queue[i];\n\n          do {\n            callback = callback(true);\n          } while (callback !== null);\n        }\n\n        queue.length = 0;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        queue = queue.slice(i + 1);\n        throw error;\n      } finally {\n        isFlushing = false;\n      }\n    }\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.startTransition = startTransition;\nexports.unstable_act = act;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useDeferredValue = useDeferredValue;\nexports.useEffect = useEffect;\nexports.useId = useId;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useInsertionEffect = useInsertionEffect;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.useSyncExternalStore = useSyncExternalStore;\nexports.useTransition = useTransition;\nexports.version = ReactVersion;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n", "import meow, { AnyFlags, TypedFlags } from 'meow';\nimport updateNotifier, { Package } from 'update-notifier';\nimport * as buildCommands from './commands/build.js';\nimport * as changesetCommands from './commands/changesets.js';\nimport * as devCommands from './commands/dev.js';\nimport * as helpCommands from './commands/help.js';\nimport * as infrastructureCommands from './commands/infrastructure.js';\nimport * as modelCommands from './commands/models.js';\nimport * as previewCommands from './commands/preview.js';\nimport * as projectCommands from './commands/projects.js';\nimport * as releaseCommands from './commands/release.js';\nimport * as runCommands from './commands/run.js';\nimport * as testCommands from './commands/test.js';\n\nimport { getSrcLaunchConfig } from './lib/config.js';\nimport { Command, CommandType, handleCommand } from './lib/command.js';\nimport { Project } from '@srclaunch/types';\nimport { InteractiveModeFlag } from './lib/flags.js';\n\nexport type { Command };\nexport { CommandType };\n\nexport const helpMessage = `\nUsage\n  $ srclaunch <command>\n\nCommands\n  build - Build SrcLaunch project if srclaunch.config.json is found in the current directory\n  models\n    * build - Build models into Sequelize models, Typescript definitions and JSON\n  test - Run tests and collect coverage\n\nTo view information for a specific command add \"help\" after the command name, for example:\n  $ srclaunch build help\n`;\n\nexport const cli = meow(helpMessage, {\n  importMeta: import.meta,\n});\n\nexport async function main() {\n  try {\n    const command = cli.input;\n    const flags = cli.flags as TypedFlags<InteractiveModeFlag>;\n    const config = await getSrcLaunchConfig();\n\n    updateNotifier({ pkg: cli.pkg as Package }).notify();\n\n    await handleCommand({\n      cli,\n      command,\n      commands: [\n        buildCommands.default,\n        changesetCommands.default,\n        devCommands.default,\n        helpCommands.default,\n        infrastructureCommands.default,\n        modelCommands.default,\n        previewCommands.default,\n        projectCommands.default,\n        releaseCommands.default,\n        runCommands.default,\n        testCommands.default,\n      ] as Command<any, TypedFlags<AnyFlags> & Record<string, unknown>>[],\n      config,\n      flags,\n    });\n  } catch (error) {\n    // const { waitUntilExit } = render(\n    //   // <FullScreen>\n    //   <Text>{err.message}</Text>,\n    //   // </FullScreen>,\n    // );\n    // await waitUntilExit();\n    console.error(error);\n  }\n}\n\nexport default main();\n", "import { Project } from '@srclaunch/types';\nimport { AnyFlag, AnyFlags, Flag, Result, TypedFlags } from 'meow';\n\nexport enum CommandType {\n  Project = 'project',\n  Workspace = 'workspace',\n}\n\nexport type RunArguments<C, F> = {\n  cli: Result<AnyFlags>;\n  config: C;\n  flags: F;\n};\n\nexport type RunFunction<\n  C,\n  F = TypedFlags<AnyFlags> & Record<string, unknown>,\n> = (args: RunArguments<C, F>) => Promise<void>;\n\nexport type CommandConstructorArgs<\n  C,\n  F = TypedFlags<AnyFlags> & Record<string, unknown>,\n> = {\n  description: string;\n  flags?: F;\n  name: string;\n  run?: RunFunction<C, F>;\n  commands?: Command<C, F>[];\n  type?: CommandType;\n};\n\nexport class Command<C, F = TypedFlags<AnyFlags> & Record<string, unknown>> {\n  flags?: F;\n  name: string;\n  private runFunction?: RunFunction<\n    C,\n    TypedFlags<AnyFlags> & Record<string, unknown>\n  >;\n  commands: CommandConstructorArgs<\n    C,\n    TypedFlags<AnyFlags> & Record<string, unknown>\n  >['commands'];\n  type: CommandType = CommandType.Project;\n\n  constructor(options: CommandConstructorArgs<C, F>) {\n    this.name = options.name;\n    this.commands = options.commands as CommandConstructorArgs<\n      C,\n      TypedFlags<AnyFlags> & Record<string, unknown>\n    >['commands'];\n    this.flags = options.flags;\n    this.type = options.type ?? CommandType.Project;\n    this.runFunction = options.run as RunFunction<\n      C,\n      TypedFlags<AnyFlags> & Record<string, unknown>\n    >;\n  }\n\n  public async run({\n    cli,\n    config,\n    flags,\n  }: RunArguments<\n    C,\n    TypedFlags<AnyFlags> & Record<string, unknown>\n  >): Promise<void> {\n    if (this.runFunction) {\n      return await this.runFunction({\n        cli,\n        config,\n        flags,\n      });\n    }\n  }\n}\n\nexport async function handleCommand({\n  cli,\n  config,\n  command,\n  commands,\n  flags,\n}: {\n  cli: Result<AnyFlags>;\n  command: string[];\n  commands?: Command<any, TypedFlags<AnyFlags> & Record<string, unknown>>[];\n  config: Record<string, unknown>;\n  flags: TypedFlags<AnyFlags> & Record<string, unknown>;\n}): Promise<void> {\n  if (!command || command.length === 0 || !command[0]) {\n    console.error('No command specified');\n    return;\n  }\n\n  if (!commands) {\n    console.error('No commands specified');\n    return;\n  }\n\n  const commandName = command[0];\n  const matchingCommand = commands.find(cmd => cmd.name === commandName);\n\n  if (!matchingCommand) {\n    console.error(`Unknown command ${commandName}`);\n    return;\n  }\n\n  if (command.length === 1) {\n    matchingCommand.run({\n      cli,\n      config,\n      flags,\n    });\n  } else if (command.length > 1) {\n    handleCommand({\n      cli,\n      config,\n      command: command.slice(1),\n      commands: matchingCommand?.commands,\n      flags,\n    });\n  }\n}\n", "import { build as buildCommand, Format } from 'esbuild';\nimport { build as buildTypes } from './types.js';\nimport {\n  BuildFormat,\n  BuildOptions,\n  BuildPlatform,\n  BuildTarget,\n  BundleOptions,\n  ESBuildOptions,\n} from '@srclaunch/types';\nimport path from 'path';\nimport { getFormatFileExtension } from './formats.js';\nimport { emptyDirectory } from '../file-system.js';\nimport chalk from 'chalk';\n\nexport async function build({\n  bundle = true,\n  format = BuildFormat.ESM,\n  input,\n  minify = true,\n  output,\n  platform = BuildPlatform.Browser,\n  sourcemap = true,\n  splitting = true,\n  target = BuildTarget.ESNext,\n  treeShaking = true,\n  types = true,\n}: ESBuildOptions) {\n  try {\n    const entryPoints = [\n      ...[\n        path.join(\n          path.resolve(),\n          input?.directory ?? 'src',\n          input?.file ?? 'index.ts',\n        ),\n      ],\n      ...(input?.files\n        ? input.files.map(f =>\n            path.join(path.resolve(), input?.directory ?? 'src', f),\n          )\n        : []),\n    ];\n\n    if (output?.clean) {\n      console.info('Cleaning output directory...');\n      await emptyDirectory(output?.directory ?? 'dist');\n    }\n\n    const result = await buildCommand({\n      bundle: Boolean(bundle),\n      entryPoints: entryPoints,\n      external: typeof bundle === 'object' ? (bundle.exclude as string[]) : [],\n      format: format as Format,\n      minify,\n      outdir: splitting ? output?.directory ?? 'dist' : undefined,\n      outfile: splitting\n        ? undefined\n        : `${output?.directory ?? 'dist'}/${\n            output?.file ?? 'index'\n          }${getFormatFileExtension(format)}`,\n      platform,\n      sourcemap,\n      splitting: format === 'esm' && splitting,\n      target,\n      treeShaking,\n    });\n\n    if (result.warnings) {\n      result.warnings.forEach(warning => {\n        console.warn(warning.text);\n      });\n    }\n\n    if (result.errors) {\n      result.errors.forEach(error => {\n        console.error(error.text);\n      });\n    }\n\n    if (types) {\n      await buildTypes({ input, types, output });\n      console.info(`${chalk.green('\u2714')} compiled types`);\n    }\n\n    console.info(\n      `${chalk.green('\u2714')} bundled to ${chalk.bold(\n        format.toLocaleUpperCase(),\n      )} format`,\n    );\n  } catch (err: any) {\n    console.error(err);\n  }\n}\n", "import ts, { Program } from 'typescript';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport { BuildOptions } from '@srclaunch/types';\n\nexport type TypesBuildOptions = Pick<\n  BuildOptions,\n  'input' | 'types' | 'output'\n>;\n\nexport async function build({ input, types, output }: TypesBuildOptions) {\n  const configPath = typeof types === 'object' ? types.configPath : undefined;\n\n  const tsConfigContents = configPath\n    ? await fs.readFile(path.join(path.resolve(), configPath), 'utf8')\n    : null;\n  const tsConfig = tsConfigContents\n    ? await JSON.parse(tsConfigContents.toString())\n    : {\n        extends: '@srclaunch/dx/tsconfig.ui.json',\n        include: [path.join(path.resolve(), input?.directory ?? 'src')],\n      };\n  const tsConfigUpdatedWithPath = {\n    ...tsConfig,\n    compilerOptions: {\n      ...tsConfig.compilerOptions,\n      declarationDir: path.join(path.resolve(), output?.directory ?? 'dist'),\n      listEmittedFiles: true,\n      rootDir: path.join(path.resolve(), input?.directory ?? 'src'),\n    },\n  };\n  const { options: tsOptions } = ts.parseJsonConfigFileContent(\n    tsConfigUpdatedWithPath,\n    ts.sys,\n    path.join(path.resolve()),\n  );\n  const srcFiles = await fs.readdir(\n    path.join(path.resolve(), input?.directory ?? 'src'),\n  );\n  const buildFiles = srcFiles\n    .filter(f => f.endsWith('.ts') || f.endsWith('.tsx'))\n    .map(file => {\n      return path.join(path.resolve(), input?.directory ?? 'src', file);\n    });\n  const program: Program = ts.createProgram(buildFiles, tsOptions);\n  const emitResult = program.emit();\n  const allDiagnostics = ts\n    .getPreEmitDiagnostics(program)\n    .concat(emitResult.diagnostics);\n\n  for (const diagnostic of allDiagnostics) {\n    if (diagnostic.file) {\n      const { line, character } = diagnostic.file.getLineAndCharacterOfPosition(\n        diagnostic.start!,\n      );\n      const message = ts.flattenDiagnosticMessageText(\n        diagnostic.messageText,\n        '\\n',\n      );\n      console.log(\n        `${diagnostic.file.fileName} (${line + 1},${\n          character + 1\n        }): ${message}`,\n      );\n    } else {\n      console.log(\n        `${ts.flattenDiagnosticMessageText(diagnostic.messageText, '\\n')}`,\n      );\n    }\n  }\n}\n", "import { Image } from '../';\n\nexport type Activity = {\n  readonly who?: {\n    readonly image?: Image;\n    readonly name?: string;\n    readonly to?: string;\n  };\n  readonly what?: {\n    readonly image?: Image;\n    readonly label?: string;\n    readonly name?: Activities;\n    readonly to?: string;\n  };\n  readonly when?: string;\n  readonly where?: string;\n  readonly why?: string;\n  readonly how?: string;\n};\n\nexport enum Activities {\n  Comment = 'comment',\n  Create = 'create',\n  Delete = 'delete',\n  Edit = 'edit',\n  Invoice = 'invoice',\n  Message = 'message',\n  PageView = 'pageView',\n  Paid = 'paid',\n  Payment = 'payment',\n  Purchase = 'purchase',\n  Referral = 'referral',\n  Renewal = 'renewal',\n  Signup = 'signup',\n  Subscription = 'subscription',\n  Upgrade = 'upgrade',\n}\n", "export enum PaymentIntentStatus {\n  RequiresPaymentMethod = 'requires_payment_method',\n  RequiresConfirmation = 'requires_confirmation',\n  RequiresAction = 'requires_action',\n  Processing = 'processing',\n  RequiresCapture = 'requires_capture',\n  Canceled = 'canceled',\n  Succeeded = 'succeeded',\n}\n\nexport type PaymentMethod = {\n  id: string;\n  stripe_id: string;\n  brand: string;\n  country: string;\n  last_four_digits: string;\n  exp_month: number;\n  exp_year: number;\n  three_d_secure_usage_supported: boolean;\n};\n", "import { Person } from '../../../people/person';\nimport { PaymentMethod } from '../payment-method';\nimport { Product } from '../product/index';\n\nexport enum SubscriptionStatus {\n  Incomplete = 'incomplete',\n  IncompleteExpired = 'incomplete_expired',\n  Trialing = 'trialing',\n  Active = 'active',\n  PastDue = 'past_due',\n  Canceled = 'canceled',\n  Unpaid = 'unpaid',\n}\n\nexport enum SubscriptionPlanDuration {\n  Monthly = 'monthly',\n  Quarterly = 'quarterly',\n  Yearly = 'yearly',\n  Lifetime = 'lifetime',\n}\n\nexport type Subscription = {\n  active: boolean;\n  end_date: Date;\n  canceled: boolean;\n  renewal_date: Date;\n  id: string;\n  product_id: Product['id'];\n  plan_duration: SubscriptionPlanDuration;\n  trial_membership_active: boolean;\n  trial_membership_end_date: Date;\n  status: SubscriptionStatus;\n  payment_method_id: PaymentMethod['id'];\n  person_id: Person['id'];\n};\n", "import { ISO8601String } from \"../i18n/date\";\nimport { Person } from '../people/person'\n\nexport enum ChatMessageStatus {\n  Delivered = \"delivered\",\n  Read = \"read\",\n  Sending = \"sending\",\n  Sent = \"sent\",\n}\n\n\n\nexport enum ChatMessageType {\n  Audio = \"audio\",\n  File = \"file\",\n  Image = \"image\",\n  Text = \"text\",\n  Video = \"video\",\n}\n\nexport enum ChatMessageAttachmentType {\n  Audio = \"audio\",\n  File = \"file\",\n  Image = \"image\",\n  Video = \"video\",\n}\n\nexport enum ChatMessageReactionType {\n  Angry = \"angry\",\n  Laugh = \"laugh\",\n  Like = \"like\",\n  Love = \"love\",\n  Sad = \"sad\",\n  Wow = \"wow\",\n  Wink = \"wink\",\n  Yay = \"yay\",\n}\n\n\nexport type ChatMessage = {\n  // The message attachments.\n  attachments?: {\n    // The attachment type.\n    type: ChatMessageAttachmentType;\n\n    // The attachment URL.\n    url: string;\n  }[];\n\n  // The message text.\n  body: string;\n\n  // The time the message was sent.\n  date: ISO8601String;\n\n  // Unique identifier for the message.\n  id?: string;\n\n  // The message reactions.\n  reactions?: {\n    // The reaction type.\n    type: ChatMessageReactionType;\n  }[];\n\n  recipients?: Person[];\n\n\n  // The message status.\n  status?: ChatMessageStatus;\n\n  // Subject of the message.\n  subject?: string;\n \n  // The user who sent the message.\n  sender?: {\n    avatar?: string;\n    id: string;\n    name: string;\n  };\n\n\n  \n  // The type of message.\n  type?: ChatMessageType;\n};\n\n\n", "export enum CommunicationMedium {\n  Email = 'email',\n  PhoneNumber = 'phone_number',\n}\n", "/*\n  This is a decent start, but I should make the log level TSDoc's more clear\n  of the intention and expected result from using each level.\n*/\nexport enum LogLevel {\n  /**\n   * Analytics (Business/Web) related events.\n   */\n  Analytics = 'analytics',\n  /**\n   * Exception that needs urgent review by engineers.\n   */\n  Critical = 'critical',\n  /**\n   * Logging used by developers to temporarily debug an issue.\n   */\n  Debug = 'debug',\n  /**\n   * A runtime exception that does not require immediate attention.\n   */\n  Exception = 'exception',\n  /**\n   * An HTTP request/response event. Default is 'info' level.\n   */\n  Http = 'http',\n  /**\n   * Used for logging general information regarding application processes.\n   */\n  Info = 'info',\n  /**\n   * Used to warn about possible issues.\n   */\n  Warning = 'warning',\n}\n", "// import { ExceptionObject } from '@srclaunch/exceptions';\n\nexport type HttpRequestHost = string;\nexport type HttpRequestResource = string;\nexport type HttpRequestBody = Record<string, unknown> | string | unknown | null;\n\nexport enum HttpRequestMethod {\n  Delete = 'delete',\n  Get = 'get',\n  Head = 'head',\n  Patch = 'patch',\n  Post = 'post',\n  Put = 'put',\n}\n\nexport type HttpRequestHeaders = Record<string, string>;\n\nexport type HttpResponseBody<T> = T & (Record<string, unknown> | unknown);\n\nexport type HttpResponseHeaders = Record<string, string>;\n\nexport enum HttpResponseCode {\n  CONTINUE = 100,\n  SWITCHING_PROTOCOLS = 101,\n  PROCESSING = 102,\n  OK = 200,\n  CREATED = 201,\n  ACCEPTED = 202,\n  NON_AUTHORITATIVE_INFORMATION = 203,\n  NO_CONTENT = 204,\n  RESET_CONTENT = 205,\n  PARTIAL_CONTENT = 206,\n  MULTI_STATUS = 207,\n  ALREADY_REPORTED = 208,\n  IM_USED = 226,\n  MULTIPLE_CHOICES = 300,\n  MOVED_PERMANENTLY = 301,\n  FOUND = 302,\n  SEE_OTHER = 303,\n  NOT_MODIFIED = 304,\n  USE_PROXY = 305,\n  SWITCH_PROXY = 306,\n  TEMPORARY_REDIRECT = 307,\n  PERMANENT_REDIRECT = 308,\n  BAD_REQUEST = 400,\n  UNAUTHORIZED = 401,\n  PAYMENT_REQUIRED = 402,\n  FORBIDDEN = 403,\n  NOT_FOUND = 404,\n  METHOD_NOT_ALLOWED = 405,\n  NOT_ACCEPTABLE = 406,\n  PROXY_AUTHENTICATION_REQUIRED = 407,\n  REQUEST_TIMEOUT = 408,\n  CONFLICT = 409,\n  GONE = 410,\n  LENGTH_REQUIRED = 411,\n  PRECONDITION_FAILED = 412,\n  PAYLOAD_TOO_LARGE = 413,\n  URI_TOO_LONG = 414,\n  UNSUPPORTED_MEDIA_TYPE = 415,\n  RANGE_NOT_SATISFIABLE = 416,\n  EXPECTATION_FAILED = 417,\n  I_AM_A_TEAPOT = 418,\n  MISDIRECTED_REQUEST = 421,\n  UNPROCESSABLE_ENTITY = 422,\n  LOCKED = 423,\n  FAILED_DEPENDENCY = 424,\n  TOO_EARLY = 425,\n  UPGRADE_REQUIRED = 426,\n  PRECONDITION_REQUIRED = 428,\n  TOO_MANY_REQUESTS = 429,\n  REQUEST_HEADER_FIELDS_TOO_LARGE = 431,\n  UNAVAILABLE_FOR_LEGAL_REASONS = 451,\n  INTERNAL_SERVER_ERROR = 500,\n  NOT_IMPLEMENTED = 501,\n  BAD_GATEWAY = 502,\n  SERVICE_UNAVAILABLE = 503,\n  GATEWAY_TIMEOUT = 504,\n  HTTP_VERSION_NOT_SUPPORTED = 505,\n  VARIANT_ALSO_NEGOTIATES = 506,\n  INSUFFICIENT_STORAGE = 507,\n  LOOP_DETECTED = 508,\n  BANDWIDTH_LIMIT_EXCEEDED = 509,\n  NOT_EXTENDED = 510,\n  NETWORK_AUTHENTICATION_REQUIRED = 511,\n}\n\nexport type HttpRequest = {\n  readonly body?: HttpRequestBody;\n  readonly details?: {\n    readonly date?: string;\n    readonly duration?: number;\n    readonly id?: string;\n    readonly response?: {\n      readonly id?: string;\n    };\n    readonly size?: number;\n  };\n  readonly headers?: HttpRequestHeaders;\n  readonly host?: HttpRequestHost;\n  readonly method: HttpRequestMethod;\n  readonly resource: HttpRequestResource;\n};\n\nexport type HttpResponse<T = Record<string, unknown>> = {\n  readonly body?: HttpResponseBody<T>;\n  readonly details?: {\n    readonly date?: string;\n    readonly duration?: number;\n    readonly id?: string;\n    readonly request?: {\n      readonly id?: string;\n    };\n    readonly size?: number;\n  };\n  readonly headers?: HttpResponseHeaders;\n  readonly status?: {\n    readonly code: HttpResponseCode;\n  };\n};\n", "import { TimezoneRegions } from '../time/region';\nimport { TimezoneOffset } from '../time/timezone';\nimport { Timezones } from '../time/timezones';\nimport { CurrencyCode } from './../currency/index';\nimport { LocaleCode } from '.';\n\nexport enum CountryCode {\n  Afghanistan = 'AF',\n  Albania = 'AL',\n  Algeria = 'DZ',\n  AmericanSamoa = 'AS',\n  Andorra = 'AD',\n  Angola = 'AO',\n  Anguilla = 'AI',\n  Antarctica = 'AQ',\n  AntiguaAndBarbuda = 'AG',\n  Argentina = 'AR',\n  Armenia = 'AM',\n  Aruba = 'AW',\n  Australia = 'AU',\n  Austria = 'AT',\n  Azerbaijan = 'AZ',\n  Bahamas = 'BS',\n  Bahrain = 'BH',\n  Bangladesh = 'BD',\n  Barbados = 'BB',\n  Belarus = 'BY',\n  Belgium = 'BE',\n  Belize = 'BZ',\n  Benin = 'BJ',\n  Bermuda = 'BM',\n  Bhutan = 'BT',\n  Bolivia = 'BO',\n  BosniaAndHerzegovina = 'BA',\n  Botswana = 'BW',\n  BouvetIsland = 'BV',\n  Brazil = 'BR',\n  BritishIndianOceanTerritory = 'IO',\n  Brunei = 'BN',\n  Bulgaria = 'BG',\n  BurkinaFaso = 'BF',\n  Burundi = 'BI',\n  Cambodia = 'KH',\n  Cameroon = 'CM',\n  Canada = 'CA',\n  CapeVerde = 'CV',\n  CaymanIslands = 'KY',\n  CentralAfricanRepublic = 'CF',\n  Chad = 'TD',\n  Chile = 'CL',\n  China = 'CN',\n  ChristmasIsland = 'CX',\n  CocosKeelingIslands = 'CC',\n  Colombia = 'CO',\n  Comoros = 'KM',\n  Congo = 'CG',\n  CongoTheDemocraticRepublicOfThe = 'CD',\n  CookIslands = 'CK',\n  CostaRica = 'CR',\n  CoteDIvoire = 'CI',\n  Croatia = 'HR',\n  Cuba = 'CU',\n  Cyprus = 'CY',\n  CzechRepublic = 'CZ',\n  Denmark = 'DK',\n  Djibouti = 'DJ',\n  Dominica = 'DM',\n  DominicanRepublic = 'DO',\n  Ecuador = 'EC',\n  Egypt = 'EG',\n  ElSalvador = 'SV',\n  EquatorialGuinea = 'GQ',\n  Eritrea = 'ER',\n  Estonia = 'EE',\n  Ethiopia = 'ET',\n  FalklandIslands = 'FK',\n  FaroeIslands = 'FO',\n  Fiji = 'FJ',\n  Finland = 'FI',\n  France = 'FR',\n  FrenchGuiana = 'GF',\n  FrenchPolynesia = 'PF',\n  FrenchSouthernTerritories = 'TF',\n  Gabon = 'GA',\n  Gambia = 'GM',\n  Georgia = 'GE',\n  Germany = 'DE',\n  Ghana = 'GH',\n  Gibraltar = 'GI',\n  Greece = 'GR',\n  Greenland = 'GL',\n  Grenada = 'GD',\n  Guadeloupe = 'GP',\n  Guam = 'GU',\n  Guatemala = 'GT',\n  Guernsey = 'GG',\n  Guinea = 'GN',\n  GuineaBissau = 'GW',\n  Guyana = 'GY',\n  Haiti = 'HT',\n  HeardIslandMcdonaldIslands = 'HM',\n  HolySeeVaticanCityState = 'VA',\n  Honduras = 'HN',\n  HongKong = 'HK',\n  Hungary = 'HU',\n  Iceland = 'IS',\n  India = 'IN',\n  Indonesia = 'ID',\n  Iran = 'IR',\n  Iraq = 'IQ',\n  Ireland = 'IE',\n  IsleOfMan = 'IM',\n  Israel = 'IL',\n  Italy = 'IT',\n  Jamaica = 'JM',\n  Japan = 'JP',\n  Jersey = 'JE',\n  Jordan = 'JO',\n  Kazakhstan = 'KZ',\n  Kenya = 'KE',\n  Kiribati = 'KI',\n  Kuwait = 'KW',\n  Kyrgyzstan = 'KG',\n  Laos = 'LA',\n  Latvia = 'LV',\n  Lebanon = 'LB',\n  Lesotho = 'LS',\n  Liberia = 'LR',\n  Libya = 'LY',\n  Liechtenstein = 'LI',\n  Lithuania = 'LT',\n  Luxembourg = 'LU',\n  Macau = 'MO',\n  Madagascar = 'MG',\n  Malawi = 'MW',\n  Malaysia = 'MY',\n  Maldives = 'MV',\n  Mali = 'ML',\n  Malta = 'MT',\n  MarshallIslands = 'MH',\n  Martinique = 'MQ',\n  Mauritania = 'MR',\n  Mauritius = 'MU',\n  Mayotte = 'YT',\n  Mexico = 'MX',\n  MicronesiaFederatedStatesOf = 'FM',\n  Moldova = 'MD',\n  Monaco = 'MC',\n  Mongolia = 'MN',\n  Montenegro = 'ME',\n  Montserrat = 'MS',\n  Morocco = 'MA',\n  Mozambique = 'MZ',\n  Myanmar = 'MM',\n  Namibia = 'NA',\n  Nauru = 'NR',\n  Nepal = 'NP',\n  Netherlands = 'NL',\n  NetherlandsAntilles = 'AN',\n  NewCaledonia = 'NC',\n  NewZealand = 'NZ',\n  NorthKorea = 'KP',\n  Nicaragua = 'NI',\n  Niger = 'NE',\n  Nigeria = 'NG',\n  Niue = 'NU',\n  NorfolkIsland = 'NF',\n  NorthMacedonia = 'MK',\n  NorthernMarianaIslands = 'MP',\n  Norway = 'NO',\n  Oman = 'OM',\n  Pakistan = 'PK',\n  Palau = 'PW',\n  PalestinianTerritoryOccupied = 'PS',\n  Panama = 'PA',\n  PapuaNewGuinea = 'PG',\n  Paraguay = 'PY',\n  Peru = 'PE',\n  Philippines = 'PH',\n  Pitcairn = 'PN',\n  Poland = 'PL',\n  Portugal = 'PT',\n  PuertoRico = 'PR',\n  Qatar = 'QA',\n  Reunion = 'RE',\n  Romania = 'RO',\n  RussianFederation = 'RU',\n  Rwanda = 'RW',\n  SaintBarthelemy = 'BL',\n  SaintHelena = 'SH',\n  SaintKittsAndNevis = 'KN',\n  SaintLucia = 'LC',\n  SaintMartin = 'MF',\n  SaintPierreAndMiquelon = 'PM',\n  SaintVincentAndTheGrenadines = 'VC',\n  Samoa = 'WS',\n  SanMarino = 'SM',\n  SaoTomeAndPrincipe = 'ST',\n  SaudiArabia = 'SA',\n  Senegal = 'SN',\n  Serbia = 'RS',\n  SerbiaAndMontenegro = 'CS',\n  Seychelles = 'SC',\n  SierraLeone = 'SL',\n  Singapore = 'SG',\n  Slovakia = 'SK',\n  Slovenia = 'SI',\n  SolomonIslands = 'SB',\n  Somalia = 'SO',\n  SouthAfrica = 'ZA',\n  SouthGeorgiaAndTheSouthSandwichIslands = 'GS',\n  SouthKorea = 'KR',\n  Spain = 'ES',\n  SriLanka = 'LK',\n  Sudan = 'SD',\n  Suriname = 'SR',\n  SvalbardAndJanMayen = 'SJ',\n  Swaziland = 'SZ',\n  Sweden = 'SE',\n  Switzerland = 'CH',\n  Syria = 'SY',\n  Taiwan = 'TW',\n  Tajikistan = 'TJ',\n  Tanzania = 'TZ',\n  Thailand = 'TH',\n  TimorLeste = 'TL',\n  Togo = 'TG',\n  Tokelau = 'TK',\n  Tonga = 'TO',\n  TrinidadAndTobago = 'TT',\n  Tunisia = 'TN',\n  Turkey = 'TR',\n  Turkmenistan = 'TM',\n  TurksAndCaicosIslands = 'TC',\n  Tuvalu = 'TV',\n  Uganda = 'UG',\n  Ukraine = 'UA',\n  UnitedArabEmirates = 'AE',\n  UnitedKingdom = 'GB',\n  UnitedStates = 'US',\n  UnitedStatesMinorOutlyingIslands = 'UM',\n  Uruguay = 'UY',\n  Uzbekistan = 'UZ',\n  Vanuatu = 'VU',\n  Venezuela = 'VE',\n  Vietnam = 'VN',\n  VirginIslandsBritish = 'VG',\n  VirginIslandsUS = 'VI',\n  WallisAndFutuna = 'WF',\n  WesternSahara = 'EH',\n  Yemen = 'YE',\n  Zambia = 'ZM',\n  Zimbabwe = 'ZW',\n}\n\nexport type CountrySubdivision = {\n  // code: CountrySubdivisionCode;\n  name: string;\n  capital: string;\n  population: number;\n};\n\nexport type Country = {\n  i18n: {\n    calling_codes: number[];\n    currencies: CurrencyCode[];\n    languages: LocaleCode[];\n    tz: {\n      offsets: TimezoneOffset[];\n      regions: TimezoneRegions[];\n      timezones: Timezones[];\n    };\n  };\n  id: CountryCode;\n  info: {\n    flag: {\n      emoji: string;\n      emoji_unicode: string;\n      svg: string;\n    };\n    tld: string[];\n  };\n  iso: {\n    alpha2: CountryCode;\n    alpha3: string;\n    numeric: string;\n  };\n  name: {\n    alt_spellings: string[];\n    demonym: string;\n    native: {\n      endonym: string;\n    };\n    official: string;\n    short: string;\n    translations: {\n      [lang: string]: string;\n    };\n  };\n  statistics?: {\n    demographics: {\n      age: {\n        distribution: { age: string; percentage: number }[];\n        median_age: number;\n      };\n      population: {\n        largest_city: string;\n        total: number;\n      };\n    };\n    geography: {\n      area: number;\n      region: string;\n      sub_region: string;\n    };\n    government: {\n      capital: string;\n      type: string;\n    };\n  };\n};\n", "import { CountryCode } from '../locale/country.js';\n\n/**\n * ISO-4217 Currency Codes\n */\nexport enum CurrencyCode {\n  AfghanistanAfghani = 'AFN',\n  AlbaniaLek = 'ALL',\n  ArmeniaDram = 'AMD',\n  AlgeriaDinar = 'DZD',\n  AmericanSamoaTala = 'WST',\n  AngolaKwanza = 'AOA',\n  ArgentinaPeso = 'ARS',\n  AustraliaDollar = 'AUD',\n  ArubaFlorin = 'AWG',\n  AzerbaijanNewManat = 'AZN',\n  BosniaAndHerzegovinaConvertibleMark = 'BAM',\n  BahrainDinar = 'BHD',\n  BarbadosDollar = 'BBD',\n  BangladeshTaka = 'BDT',\n  BelgiumFranc = 'BGN',\n  BermudaDollar = 'BMD',\n  BruneiDollar = 'BND',\n  BoliviaBoliviano = 'BOB',\n  BrazilReal = 'BRL',\n  BahamasDollar = 'BSD',\n  BhutanNgultrum = 'BTN',\n  BotswanaPula = 'BWP',\n  BelarusRuble = 'BYN',\n  BelizeDollar = 'BZD',\n  BulgariaLev = 'BGN',\n  BurundiFranc = 'BIF',\n  BritishPound = 'GBP',\n  CanadaDollar = 'CAD',\n  CambodiaRiel = 'KHR',\n  ComorosFranc = 'KMF',\n  CaymanIslandsDollar = 'KYD',\n  ChilePeso = 'CLP',\n  ChinaYuan = 'CNY',\n  ColombiaPeso = 'COP',\n  CostaRicaColon = 'CRC',\n  CroatiaKuna = 'HRK',\n  CubaConvertiblePeso = 'CUC',\n  CubaPeso = 'CUP',\n  CapeVerdeEscudo = 'CVE',\n  CyprusPound = 'CYP',\n  CzechRepublicKoruna = 'CZK',\n  DjiboutiFranc = 'DJF',\n  DenmarkKrone = 'DKK',\n  DominicaDollar = 'XCD',\n  DominicanRepublicPeso = 'DOP',\n  EastCaribbeanDollar = 'XCD',\n  EgyptPound = 'EGP',\n  ElSalvadorColon = 'SVC',\n  EquatorialGuineaEkwele = 'GQE',\n  EritreaNakfa = 'ERN',\n  EstoniaKroon = 'EEK',\n  EthiopiaBirr = 'ETB',\n  Euro = 'EUR',\n  FijiDollar = 'FJD',\n  FalklandIslandsPound = 'FKP',\n  GambiaDalasi = 'GMD',\n  GabonFranc = 'GMD',\n  GeorgiaLari = 'GEL',\n  GhanaCedi = 'GHS',\n  GibraltarPound = 'GIP',\n  GuatemalaQuetzal = 'GTQ',\n  GuernseyPound = 'GGP',\n  GuineaBissauPeso = 'GWP',\n  GuyanaDollar = 'GYD',\n  HongKongDollar = 'HKD',\n  HondurasLempira = 'HNL',\n  HaitiGourde = 'HTG',\n  HungaryForint = 'HUF',\n  IndonesiaRupiah = 'IDR',\n  IsleOfManPound = 'IMP',\n  IsraelNewShekel = 'ILS',\n  IndiaRupee = 'INR',\n  IraqDinar = 'IQD',\n  IranRial = 'IRR',\n  IcelandKrona = 'ISK',\n  JamaicaDollar = 'JMD',\n  JapanYen = 'JPY',\n  JerseyPound = 'JEP',\n  JordanDinar = 'JOD',\n  KazakhstanTenge = 'KZT',\n  KenyaShilling = 'KES',\n  KyrgyzstanSom = 'KGS',\n  NorthKoreaWon = 'KPW',\n  SouthKoreaWon = 'KRW',\n  KuwaitDinar = 'KWD',\n  LaosKip = 'LAK',\n  LebanonPound = 'LBP',\n  LiberiaDollar = 'LRD',\n  LesothoLoti = 'LSL',\n  LibyanDinar = 'LYD',\n  LithuaniaLitas = 'LTL',\n  LatviaLats = 'LVL',\n  LibyaDinar = 'LYD',\n  MacauPataca = 'MOP',\n  MaldivesRufiyaa = 'MVR',\n  MalawiKwacha = 'MWK',\n  MaltaLira = 'MTL',\n  MauritiusRupee = 'MUR',\n  MongoliaTughrik = 'MNT',\n  MoroccoDirham = 'MAD',\n  MoldovaLeu = 'MDL',\n  MozambiqueMetical = 'MZN',\n  MadagascarAriary = 'MGA',\n  MacedoniaDenar = 'MKD',\n  MexicoPeso = 'MXN',\n  MalaysiaRinggit = 'MYR',\n  MyanmarKyat = 'MMK',\n  MicronesiaFederatedStatesDollar = 'USD',\n  NicaraguaCordoba = 'NIO',\n  NamibiaDollar = 'NAD',\n  NetherlandsAntillesGuilder = 'ANG',\n  NewCaledoniaFranc = 'XPF',\n  NigeriaNaira = 'NGN',\n  NicaraguaCordobaOro = 'NIO',\n  NigerCFAFranc = 'XOF',\n  NorwayKrone = 'NOK',\n  NepalRupee = 'NPR',\n  NewZealandDollar = 'NZD',\n  OmanRial = 'OMR',\n  PanamaBalboa = 'PAB',\n  PeruNuevoSol = 'PEN',\n  PapuaNewGuineaKina = 'PGK',\n  PhilippinesPeso = 'PHP',\n  PakistanRupee = 'PKR',\n  PeruNuevo = 'PEN',\n  PolandZloty = 'PLN',\n  ParaguayGuarani = 'PYG',\n  QatarRial = 'QAR',\n  RomaniaNewLeu = 'RON',\n  SerbiaDinar = 'RSD',\n  SriLankaRupee = 'LKR',\n  RussiaRuble = 'RUB',\n  RwandaFranc = 'RWF',\n  SaudiArabiaRiyal = 'SAR',\n  SlovakiaKoruna = 'SKK',\n  SloveniaTolar = 'SIT',\n  SolomonIslandsDollar = 'SBD',\n  SeychellesRupee = 'SCR',\n  SudanPound = 'SDG',\n  SwedenKrona = 'SEK',\n  SingaporeDollar = 'SGD',\n  SaintHelenaPound = 'SHP',\n  SierraLeoneLeone = 'SLL',\n  SomaliaShilling = 'SOS',\n  SurinameDollar = 'SRD',\n  SintMaartenPound = 'SXD',\n  SyriaPound = 'SYP',\n  SwazilandLilangeni = 'SZL',\n  SwitzerlandFranc = 'CHF',\n  ThailandBaht = 'THB',\n  TajikistanSomoni = 'TJS',\n  TurkmenistanManat = 'TMT',\n  TunisiaDinar = 'TND',\n  TongaPaanga = 'TOP',\n  TurkeyLira = 'TRY',\n  TrinidadAndTobagoDollar = 'TTD',\n  TaiwanNewDollar = 'TWD',\n  TanzaniaShilling = 'TZS',\n  UnitedArabEmiratesDirham = 'AED',\n  UkraineHryvnia = 'UAH',\n  UgandaShilling = 'UGX',\n  UnitedKingdomPound = 'GBP',\n  UnitedStatesDollar = 'USD',\n  UruguayPeso = 'UYU',\n  UzbekistanSom = 'UZS',\n  VenezuelaBolivar = 'VEF',\n  VietnamDong = 'VND',\n  VanuatuVatu = 'VUV',\n  SamoaTala = 'WST',\n  YemenRial = 'YER',\n  SouthAfricaRand = 'ZAR',\n  ZambiaKwacha = 'ZMW',\n  ZimbabweDollar = 'ZWL',\n}\n\nexport type Currency = {\n  code: CurrencyCode;\n  countries: CountryCode[];\n  symbol: string;\n  decimal_digits: number;\n  rounding: number;\n  name: string;\n  symbol_native: string;\n  decimal_separator: string;\n  thousands_separator: string;\n  positive_sign: string;\n  negative_sign: string;\n  symbol_placement: string;\n};\n\nexport const Currencies: Record<string, Currency> = {\n  AfghanistanAfghani: {\n    code: CurrencyCode.AfghanistanAfghani,\n    countries: [CountryCode.Afghanistan],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Afghan Afghani',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u060B',\n    symbol_native: '\u060B',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  AlbaniaLek: {\n    code: CurrencyCode.AlbaniaLek,\n    countries: [CountryCode.Albania],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Albanian Lek',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Lek',\n    symbol_native: 'Lek',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  AlgeriaDinar: {\n    code: CurrencyCode.AlgeriaDinar,\n    countries: [CountryCode.Algeria],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Algerian Dinar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u062F.\u062C',\n    symbol_native: '\u062F.\u062C',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  ArgentinaPeso: {\n    code: CurrencyCode.ArgentinaPeso,\n    countries: [CountryCode.Argentina],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Argentine Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  ArmeniaDram: {\n    code: CurrencyCode.ArmeniaDram,\n    countries: [CountryCode.Armenia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Armenian Dram',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u0564\u0580.',\n    symbol_native: '\u0564\u0580.',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  ArubaFlorin: {\n    code: CurrencyCode.ArubaFlorin,\n    countries: [CountryCode.Aruba],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Aruban Florin',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u0192',\n    symbol_native: '\u0192',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  AustraliaDollar: {\n    code: CurrencyCode.AustraliaDollar,\n    countries: [CountryCode.Australia],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Australian Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  AzerbaijanManat: {\n    code: CurrencyCode.AzerbaijanNewManat,\n    countries: [CountryCode.Azerbaijan],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Azerbaijani Manat',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u043C\u0430\u043D',\n    symbol_native: '\u043C\u0430\u043D',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BahrainDinar: {\n    code: CurrencyCode.BahrainDinar,\n    countries: [CountryCode.Bahrain],\n    decimal_digits: 3,\n    decimal_separator: '.',\n    name: 'Bahraini Dinar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '.\u062F.\u0628',\n    symbol_native: '.\u062F.\u0628',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BangladeshTaka: {\n    code: CurrencyCode.BangladeshTaka,\n    countries: [CountryCode.Bangladesh],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Bangladeshi Taka',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u09F3',\n    symbol_native: '\u09F3',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BarbadosDollar: {\n    code: CurrencyCode.BarbadosDollar,\n    countries: [CountryCode.Barbados],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Barbadian Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BelarusRuble: {\n    code: CurrencyCode.BelarusRuble,\n    countries: [CountryCode.Belarus],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Belarusian Ruble',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Br',\n    symbol_native: 'Br',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  BelizeDollar: {\n    code: CurrencyCode.BelizeDollar,\n    countries: [CountryCode.Belize],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Belize Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'BZ$',\n    symbol_native: 'BZ$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BermudaDollar: {\n    code: CurrencyCode.BermudaDollar,\n    countries: [CountryCode.Bermuda],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Bermudian Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BoliviaBoliviano: {\n    code: CurrencyCode.BoliviaBoliviano,\n    countries: [CountryCode.Bolivia],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Bolivian Boliviano',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$b',\n    symbol_native: '$b',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BosniaAndHerzegovinaConvertibleMarka: {\n    code: CurrencyCode.BosniaAndHerzegovinaConvertibleMark,\n    countries: [CountryCode.BosniaAndHerzegovina],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Bosnia and Herzegovina Convertible Marka',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'KM',\n    symbol_native: 'KM',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  BotswanaPula: {\n    code: CurrencyCode.BotswanaPula,\n    countries: [CountryCode.Botswana],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Botswana Pula',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'P',\n    symbol_native: 'P',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BrazilReal: {\n    code: CurrencyCode.BrazilReal,\n    countries: [CountryCode.Brazil],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Brazilian Real',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'R$',\n    symbol_native: 'R$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  BruneiDollar: {\n    code: CurrencyCode.BruneiDollar,\n    countries: [CountryCode.Brunei],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Brunei Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  BulgariaLev: {\n    code: CurrencyCode.BulgariaLev,\n    countries: [CountryCode.Bulgaria],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Bulgarian Lev',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u043B\u0432',\n    symbol_native: '\u043B\u0432',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  BurundiFranc: {\n    code: CurrencyCode.BurundiFranc,\n    countries: [CountryCode.Burundi],\n    decimal_digits: 0,\n    decimal_separator: '.',\n    name: 'Burundian Franc',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'FBu',\n    symbol_native: 'FBu',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  CambodiaRiel: {\n    code: CurrencyCode.CambodiaRiel,\n    countries: [CountryCode.Cambodia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Cambodian Riel',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u17DB',\n    symbol_native: '\u17DB',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  CanadaDollar: {\n    code: CurrencyCode.CanadaDollar,\n    countries: [CountryCode.Canada],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Canadian Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  CapeVerdeEscudo: {\n    code: CurrencyCode.CapeVerdeEscudo,\n    countries: [CountryCode.CapeVerde],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Cape Verde Escudo',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Esc',\n    symbol_native: 'Esc',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  CaymanIslandsDollar: {\n    code: CurrencyCode.CaymanIslandsDollar,\n    countries: [CountryCode.CaymanIslands],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Cayman Islands Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  ChilePeso: {\n    code: CurrencyCode.ChilePeso,\n    countries: [CountryCode.Chile],\n    decimal_digits: 0,\n    decimal_separator: '.',\n    name: 'Chilean Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  ChinaYuanRenminbi: {\n    code: CurrencyCode.ChinaYuan,\n    countries: [CountryCode.China],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Chinese Yuan',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A5',\n    symbol_native: '\u00A5',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  ColombiaPeso: {\n    code: CurrencyCode.ColombiaPeso,\n    countries: [CountryCode.Colombia],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Colombian Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  ComorosFranc: {\n    code: CurrencyCode.ComorosFranc,\n    countries: [CountryCode.Comoros],\n    decimal_digits: 0,\n    decimal_separator: '.',\n    name: 'Comoros Franc',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'CF',\n    symbol_native: 'CF',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  CostaRicaColon: {\n    code: CurrencyCode.CostaRicaColon,\n    countries: [CountryCode.CostaRica],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Costa Rican Colon',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A1',\n    symbol_native: '\u20A1',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  CroatiaKuna: {\n    code: CurrencyCode.CroatiaKuna,\n    countries: [CountryCode.Croatia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Croatian Kuna',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'kn',\n    symbol_native: 'kn',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  CubaConvertiblePeso: {\n    code: CurrencyCode.CubaConvertiblePeso,\n    countries: [CountryCode.Cuba],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Cuba Convertible Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  CubaPeso: {\n    code: CurrencyCode.CubaPeso,\n    countries: [CountryCode.Cuba],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Cuba Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  CyprusPound: {\n    code: CurrencyCode.CyprusPound,\n    countries: [CountryCode.Cyprus],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Cyprus Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  CzechRepublicKoruna: {\n    code: CurrencyCode.CzechRepublicKoruna,\n    countries: [CountryCode.CzechRepublic],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Czech Republic Koruna',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'K\u010D',\n    symbol_native: 'K\u010D',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  DenmarkKrone: {\n    code: CurrencyCode.DenmarkKrone,\n    countries: [CountryCode.Denmark],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Denmark Krone',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'kr',\n    symbol_native: 'kr',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  DjiboutiFranc: {\n    code: CurrencyCode.DjiboutiFranc,\n    countries: [CountryCode.Djibouti],\n    decimal_digits: 0,\n    decimal_separator: '.',\n    name: 'Djibouti Franc',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Fdj',\n    symbol_native: 'Fdj',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  DominicanRepublicPeso: {\n    code: CurrencyCode.DominicanRepublicPeso,\n    countries: [CountryCode.DominicanRepublic],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Dominican Republic Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'RD$',\n    symbol_native: 'RD$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  EastCaribbeanDollar: {\n    code: CurrencyCode.EastCaribbeanDollar,\n    countries: [\n      CountryCode.AntiguaAndBarbuda,\n      CountryCode.Dominica,\n      CountryCode.Grenada,\n      CountryCode.SaintKittsAndNevis,\n      CountryCode.SaintLucia,\n      CountryCode.SaintVincentAndTheGrenadines,\n    ],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'East Caribbean Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  EgyptPound: {\n    code: CurrencyCode.EgyptPound,\n    countries: [CountryCode.Egypt],\n    decimal_digits: 2,\n    decimal_separator: '.',\n    name: 'Egypt Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  ElSalvadorColon: {\n    code: CurrencyCode.ElSalvadorColon,\n    countries: [CountryCode.ElSalvador],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'El Salvador Colon',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A1',\n    symbol_native: '\u20A1',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  EquatorialGuineaEkwele: {\n    code: CurrencyCode.EquatorialGuineaEkwele,\n    countries: [CountryCode.EquatorialGuinea],\n    decimal_digits: 0,\n    decimal_separator: '.',\n    name: 'Equatorial Guinea Ekwele',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'GQE',\n    symbol_native: 'GQE',\n    symbol_placement: 'before',\n    thousands_separator: ',',\n  },\n  EritreaNakfa: {\n    code: CurrencyCode.EritreaNakfa,\n    countries: [CountryCode.Eritrea],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Eritrea Nakfa',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Nfk',\n    symbol_native: 'Nfk',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  EstoniaKroon: {\n    code: CurrencyCode.EstoniaKroon,\n    countries: [CountryCode.Estonia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Estonia Kroon',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'kr',\n    symbol_native: 'kr',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  EthiopiaBirr: {\n    code: CurrencyCode.EthiopiaBirr,\n    countries: [CountryCode.Ethiopia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Ethiopia Birr',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Br',\n    symbol_native: 'Br',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  Euro: {\n    code: CurrencyCode.Euro,\n    countries: [\n      CountryCode.Andorra,\n      CountryCode.Austria,\n      CountryCode.Belgium,\n      CountryCode.Cyprus,\n      CountryCode.Estonia,\n      CountryCode.Finland,\n      CountryCode.France,\n      CountryCode.Germany,\n      CountryCode.Greece,\n      CountryCode.Ireland,\n      CountryCode.Italy,\n      CountryCode.Latvia,\n      CountryCode.Lithuania,\n      CountryCode.Luxembourg,\n      CountryCode.Malta,\n      CountryCode.Monaco,\n      CountryCode.Netherlands,\n      CountryCode.Portugal,\n      CountryCode.Spain,\n      CountryCode.Sweden,\n      CountryCode.UnitedKingdom,\n    ],\n\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Euro',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20AC',\n    symbol_native: '\u20AC',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  FalklandIslandsPound: {\n    code: CurrencyCode.FalklandIslandsPound,\n    countries: [CountryCode.FalklandIslands],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Equatorial Guinea Ekwele',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  FijiDollar: {\n    code: CurrencyCode.FijiDollar,\n    countries: [CountryCode.Fiji],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Fiji Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  GambiaDalasi: {\n    code: CurrencyCode.GambiaDalasi,\n    countries: [CountryCode.Gambia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Gambia Dalasi',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'D',\n    symbol_native: 'D',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  GeorgiaLari: {\n    code: CurrencyCode.GeorgiaLari,\n    countries: [CountryCode.Georgia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Georgia Lari',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20BE',\n    symbol_native: '\u20BE',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  GhanaCedi: {\n    code: CurrencyCode.GhanaCedi,\n    countries: [CountryCode.Ghana],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Ghana Cedi',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20B5',\n    symbol_native: '\u20B5',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  GibraltarPound: {\n    code: CurrencyCode.GibraltarPound,\n    countries: [CountryCode.Gibraltar],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Gibraltar Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  GuatemalaQuetzal: {\n    code: CurrencyCode.GuatemalaQuetzal,\n    countries: [CountryCode.Guatemala],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Guatemala Quetzal',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Q',\n    symbol_native: 'Q',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  GuernseyPound: {\n    code: CurrencyCode.GuernseyPound,\n    countries: [CountryCode.Guernsey],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Guernsey Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  GuineaBissauPeso: {\n    code: CurrencyCode.GuineaBissauPeso,\n    countries: [CountryCode.GuineaBissau],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Guinea-Bissau Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20B5',\n    symbol_native: '\u20B5',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  GuyanaDollar: {\n    code: CurrencyCode.GuyanaDollar,\n    countries: [CountryCode.Guyana],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Guyana Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  HaitiGourde: {\n    code: CurrencyCode.HaitiGourde,\n    countries: [CountryCode.Haiti],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Haiti Gourde',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'G',\n    symbol_native: 'G',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  HondurasLempira: {\n    code: CurrencyCode.HondurasLempira,\n    countries: [CountryCode.Honduras],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Honduras Lempira',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'L',\n    symbol_native: 'L',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  HongKongDollar: {\n    code: CurrencyCode.HongKongDollar,\n    countries: [CountryCode.HongKong],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Hong Kong Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  HungaryForint: {\n    code: CurrencyCode.HungaryForint,\n    countries: [CountryCode.Hungary],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Hungary Forint',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Ft',\n    symbol_native: 'Ft',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  IcelandKrona: {\n    code: CurrencyCode.IcelandKrona,\n    countries: [CountryCode.Iceland],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Iceland Krona',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'kr',\n    symbol_native: 'kr',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  IndianRupee: {\n    code: CurrencyCode.IndiaRupee,\n    countries: [CountryCode.India, CountryCode.Bhutan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Indian Rupee',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20B9',\n    symbol_native: '\u20B9',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  IndonesiaRupiah: {\n    code: CurrencyCode.IndonesiaRupiah,\n    countries: [CountryCode.Indonesia],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Indonesia Rupiah',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Rp',\n    symbol_native: 'Rp',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  IranRial: {\n    code: CurrencyCode.IranRial,\n    countries: [CountryCode.Iran],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Iran Rial',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\uFDFC',\n    symbol_native: '\uFDFC',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  IsleOfManPound: {\n    code: CurrencyCode.IsleOfManPound,\n    countries: [CountryCode.IsleOfMan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Isle of Man Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\uFDFC',\n    symbol_native: '\uFDFC',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  IsraeliShekel: {\n    code: CurrencyCode.IsraelNewShekel,\n    countries: [CountryCode.Israel],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Israeli Shekel',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20AA',\n    symbol_native: '\u20AA',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  JamaicaDollar: {\n    code: CurrencyCode.JamaicaDollar,\n    countries: [CountryCode.Jamaica],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Jamaica Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'J$',\n    symbol_native: 'J$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  JapanYen: {\n    code: CurrencyCode.JapanYen,\n    countries: [CountryCode.Japan],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Japan Yen',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A5',\n    symbol_native: '\uFFE5',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  JerseyPound: {\n    code: CurrencyCode.JerseyPound,\n    countries: [CountryCode.Jersey],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Jersey Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  JordanDinar: {\n    code: CurrencyCode.JordanDinar,\n    countries: [CountryCode.Jordan],\n    decimal_digits: 3,\n    decimal_separator: ',',\n    name: 'Jordan Dinar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'JD',\n    symbol_native: 'JD',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  KazakhstanTenge: {\n    code: CurrencyCode.KazakhstanTenge,\n    countries: [CountryCode.Kazakhstan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Kazakhstan Tenge',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20B8',\n    symbol_native: '\u20B8',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  KenyaShilling: {\n    code: CurrencyCode.KenyaShilling,\n    countries: [CountryCode.Kenya],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Kenya Shilling',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'KSh',\n    symbol_native: 'KSh',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  KuwaitDinar: {\n    code: CurrencyCode.KuwaitDinar,\n    countries: [CountryCode.Kuwait],\n    decimal_digits: 3,\n    decimal_separator: ',',\n    name: 'Kuwait Dinar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'KD',\n    symbol_native: 'KD',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  KyrgyzstanSom: {\n    code: CurrencyCode.KyrgyzstanSom,\n    countries: [CountryCode.Kyrgyzstan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Kyrgyzstan Som',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'KGS',\n    symbol_native: 'KGS',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  LaosKip: {\n    code: CurrencyCode.LaosKip,\n    countries: [CountryCode.Laos],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Laos Kip',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20AD',\n    symbol_native: '\u20AD',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  LatviaLats: {\n    code: CurrencyCode.LatviaLats,\n    countries: [CountryCode.Latvia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Latvia Lat',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Ls',\n    symbol_native: 'Ls',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  LebanonPound: {\n    code: CurrencyCode.LebanonPound,\n    countries: [CountryCode.Lebanon],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Lebanon Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  LesothoLoti: {\n    code: CurrencyCode.LesothoLoti,\n    countries: [CountryCode.Lesotho],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Lesotho Loti',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'M',\n    symbol_native: 'M',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  LiberiaDollar: {\n    code: CurrencyCode.LiberiaDollar,\n    countries: [CountryCode.Liberia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Liberia Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  LibyanDinar: {\n    code: CurrencyCode.LibyanDinar,\n    countries: [CountryCode.Libya],\n    decimal_digits: 3,\n    decimal_separator: ',',\n    name: 'Libyan Dinar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'LD',\n    symbol_native: 'LD',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  LithuaniaLitas: {\n    code: CurrencyCode.LithuaniaLitas,\n    countries: [CountryCode.Lithuania],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Lithuania Litas',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Lt',\n    symbol_native: 'Lt',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MacauPataca: {\n    code: CurrencyCode.MacauPataca,\n    countries: [CountryCode.Macau],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Macau Pataca',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'MOP$',\n    symbol_native: 'MOP$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MacedoniaDenar: {\n    code: CurrencyCode.MacedoniaDenar,\n    countries: [CountryCode.NorthMacedonia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Macedonia Denar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u0434\u0435\u043D',\n    symbol_native: '\u0434\u0435\u043D',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MadagascarAriary: {\n    code: CurrencyCode.MadagascarAriary,\n    countries: [CountryCode.Madagascar],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Madagascar Ariary',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Ar',\n    symbol_native: 'Ar',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MalawiKwacha: {\n    code: CurrencyCode.MalawiKwacha,\n    countries: [CountryCode.Malawi],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Malawi Kwacha',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'MK',\n    symbol_native: 'MK',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MalaysiaRinggit: {\n    code: CurrencyCode.MalaysiaRinggit,\n    countries: [CountryCode.Malaysia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Malaysia Ringgit',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'RM',\n    symbol_native: 'RM',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MaldivesRufiyaa: {\n    code: CurrencyCode.MaldivesRufiyaa,\n    countries: [CountryCode.Maldives],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Maldives Rufiyaa',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Rf',\n    symbol_native: 'Rf',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MaltaLira: {\n    code: CurrencyCode.MaltaLira,\n    countries: [CountryCode.Malta],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Malta Lira',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Lm',\n    symbol_native: 'Lm',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MauritiusRupee: {\n    code: CurrencyCode.MauritiusRupee,\n    countries: [CountryCode.Mauritius],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Mauritius Rupee',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A8',\n    symbol_native: '\u20A8',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MexicoPeso: {\n    code: CurrencyCode.MexicoPeso,\n    countries: [CountryCode.Mexico],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Mexico Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MoldovaLeu: {\n    code: CurrencyCode.MoldovaLeu,\n    countries: [CountryCode.Moldova],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Moldova Leu',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'L',\n    symbol_native: 'L',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MongoliaTughrik: {\n    code: CurrencyCode.MongoliaTughrik,\n    countries: [CountryCode.Mongolia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Mongolia Tughrik',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20AE',\n    symbol_native: '\u20AE',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MoroccoDirham: {\n    code: CurrencyCode.MoroccoDirham,\n    countries: [CountryCode.Morocco],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Morocco Dirham',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'DH',\n    symbol_native: 'DH',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MozambiqueMetical: {\n    code: CurrencyCode.MozambiqueMetical,\n    countries: [CountryCode.Mozambique],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Mozambique Metical',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'MT',\n    symbol_native: 'MT',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  MyanmarKyat: {\n    code: CurrencyCode.MyanmarKyat,\n    countries: [CountryCode.Myanmar],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Myanmar Kyat',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'K',\n    symbol_native: 'K',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NamibiaDollar: {\n    code: CurrencyCode.NamibiaDollar,\n    countries: [CountryCode.Namibia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Namibia Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NepalRupee: {\n    code: CurrencyCode.NepalRupee,\n    countries: [CountryCode.Nepal],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Nepal Rupee',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A8',\n    symbol_native: '\u20A8',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NetherlandsAntillesGuilder: {\n    code: CurrencyCode.NetherlandsAntillesGuilder,\n    countries: [CountryCode.NetherlandsAntilles],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Netherlands Antilles Guilder',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u0192',\n    symbol_native: '\u0192',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NewCaledoniaFranc: {\n    code: CurrencyCode.NewCaledoniaFranc,\n    countries: [CountryCode.NewCaledonia],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'New Caledonia Franc',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A3',\n    symbol_native: '\u20A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NewZealandDollar: {\n    code: CurrencyCode.NewZealandDollar,\n    countries: [CountryCode.NewZealand],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'New Zealand Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NicaraguaCordoba: {\n    code: CurrencyCode.NicaraguaCordoba,\n    countries: [CountryCode.Nicaragua],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Nicaragua Cordoba',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'C$',\n    symbol_native: 'C$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NigerCFAFranc: {\n    code: CurrencyCode.NigerCFAFranc,\n    countries: [CountryCode.Niger],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Niger CFA Franc',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'CFA',\n    symbol_native: 'CFA',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NigeriaNaira: {\n    code: CurrencyCode.NigeriaNaira,\n    countries: [CountryCode.Nigeria],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Nigeria Naira',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A6',\n    symbol_native: '\u20A6',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NorthKoreaWon: {\n    code: CurrencyCode.NorthKoreaWon,\n    countries: [CountryCode.NorthKorea],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'North Korea Won',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A9',\n    symbol_native: '\u20A9',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  NorwayKrone: {\n    code: CurrencyCode.NorwayKrone,\n    countries: [CountryCode.Norway],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Norway Krone',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'kr',\n    symbol_native: 'kr',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  OmanRial: {\n    code: CurrencyCode.OmanRial,\n    countries: [CountryCode.Oman],\n    decimal_digits: 3,\n    decimal_separator: ',',\n    name: 'Oman Rial',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\uFDFC',\n    symbol_native: '\uFDFC',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  PakistanRupee: {\n    code: CurrencyCode.PakistanRupee,\n    countries: [CountryCode.Pakistan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Pakistan Rupee',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A8',\n    symbol_native: '\u20A8',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  PanamaBalboa: {\n    code: CurrencyCode.PanamaBalboa,\n    countries: [CountryCode.Panama],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Panama Balboa',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'B/.',\n    symbol_native: 'B/.',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  ParaguayGuarani: {\n    code: CurrencyCode.ParaguayGuarani,\n    countries: [CountryCode.Paraguay],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Paraguay Guarani',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Gs',\n    symbol_native: 'Gs',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  PeruvianNuevo: {\n    code: CurrencyCode.PeruNuevo,\n    countries: [CountryCode.Peru],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Peruvian Nuevo',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'S/.',\n    symbol_native: 'S/.',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  PhilippinesPeso: {\n    code: CurrencyCode.PhilippinesPeso,\n    countries: [CountryCode.Philippines],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Philippines Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20B1',\n    symbol_native: '\u20B1',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  PolandZloty: {\n    code: CurrencyCode.PolandZloty,\n    countries: [CountryCode.Poland],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Poland Zloty',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'z\u0142',\n    symbol_native: 'z\u0142',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  QatarRial: {\n    code: CurrencyCode.QatarRial,\n    countries: [CountryCode.Qatar],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Qatar Rial',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\uFDFC',\n    symbol_native: '\uFDFC',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  RomaniaNewLeu: {\n    code: CurrencyCode.RomaniaNewLeu,\n    countries: [CountryCode.Romania],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Romania New Leu',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'lei',\n    symbol_native: 'lei',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  RussiaRuble: {\n    code: CurrencyCode.RussiaRuble,\n    countries: [CountryCode.RussianFederation],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Russia Ruble',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20BD',\n    symbol_native: '\u20BD',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  RwandaFranc: {\n    code: CurrencyCode.RwandaFranc,\n    countries: [CountryCode.Rwanda],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Rwanda Franc',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'RF',\n    symbol_native: 'RF',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SaudiArabiaRiyal: {\n    code: CurrencyCode.SaudiArabiaRiyal,\n    countries: [CountryCode.SaudiArabia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Saudi Arabia Riyal',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\uFDFC',\n    symbol_native: '\uFDFC',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SerbiaDinar: {\n    code: CurrencyCode.SerbiaDinar,\n    countries: [CountryCode.Serbia],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Serbia Dinar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u0414\u0438\u043D.',\n    symbol_native: '\u0414\u0438\u043D.',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SeychellesRupee: {\n    code: CurrencyCode.SeychellesRupee,\n    countries: [CountryCode.Seychelles],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Seychelles Rupee',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A8',\n    symbol_native: '\u20A8',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SingaporeDollar: {\n    code: CurrencyCode.SingaporeDollar,\n    countries: [CountryCode.Singapore],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Singapore Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SlovakiaKoruna: {\n    code: CurrencyCode.SlovakiaKoruna,\n    countries: [CountryCode.Slovakia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Slovakia Koruna',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Sk',\n    symbol_native: 'Sk',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SloveniaTolar: {\n    code: CurrencyCode.SloveniaTolar,\n    countries: [CountryCode.Slovenia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Slovenia Tolar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'SIT',\n    symbol_native: 'SIT',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SolomonIslandsDollar: {\n    code: CurrencyCode.SolomonIslandsDollar,\n    countries: [CountryCode.SolomonIslands],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Solomon Islands Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SomaliaShilling: {\n    code: CurrencyCode.SomaliaShilling,\n    countries: [CountryCode.Somalia],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Somalia Shilling',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'S',\n    symbol_native: 'S',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SouthAfricaRand: {\n    code: CurrencyCode.SouthAfricaRand,\n    countries: [CountryCode.SouthAfrica],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'South Africa Rand',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'R',\n    symbol_native: 'R',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SouthKoreaWon: {\n    code: CurrencyCode.SouthKoreaWon,\n    countries: [CountryCode.SouthKorea],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'South Korea Won',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A9',\n    symbol_native: '\u20A9',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SriLankaRupee: {\n    code: CurrencyCode.SriLankaRupee,\n    countries: [CountryCode.SriLanka],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Sri Lanka Rupee',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20A8',\n    symbol_native: '\u20A8',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SudanPound: {\n    code: CurrencyCode.SudanPound,\n    countries: [CountryCode.Sudan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Sudan Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SurinameDollar: {\n    code: CurrencyCode.SurinameDollar,\n    countries: [CountryCode.Suriname],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Suriname Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SwazilandLilangeni: {\n    code: CurrencyCode.SwazilandLilangeni,\n    countries: [CountryCode.Swaziland],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Swaziland Lilangeni',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'E',\n    symbol_native: 'E',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SwedenKrona: {\n    code: CurrencyCode.SwedenKrona,\n    countries: [CountryCode.Sweden],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Sweden Krona',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'kr',\n    symbol_native: 'kr',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SwitzerlandFranc: {\n    code: CurrencyCode.SwitzerlandFranc,\n    countries: [CountryCode.Switzerland],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Switzerland Franc',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'CHF',\n    symbol_native: 'CHF',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  SyriaPound: {\n    code: CurrencyCode.SyriaPound,\n    countries: [CountryCode.Syria],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Syria Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  TaiwanNewDollar: {\n    code: CurrencyCode.TaiwanNewDollar,\n    countries: [CountryCode.Taiwan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Taiwan New Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'NT$',\n    symbol_native: 'NT$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  TajikistanSomoni: {\n    code: CurrencyCode.TajikistanSomoni,\n    countries: [CountryCode.Tajikistan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Tajikistan Somoni',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'TJS',\n    symbol_native: 'TJS',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  TanzaniaShilling: {\n    code: CurrencyCode.TanzaniaShilling,\n    countries: [CountryCode.Tanzania],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Tanzania Shilling',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'TSh',\n    symbol_native: 'TSh',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  ThailandBaht: {\n    code: CurrencyCode.ThailandBaht,\n    countries: [CountryCode.Thailand],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Thailand Baht',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u0E3F',\n    symbol_native: '\u0E3F',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  TunisiaDinar: {\n    code: CurrencyCode.TunisiaDinar,\n    countries: [CountryCode.Tunisia],\n    decimal_digits: 3,\n    decimal_separator: ',',\n    name: 'Tunisia Dinar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u062F.\u062A',\n    symbol_native: '\u062F.\u062A',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  TurkeyLira: {\n    code: CurrencyCode.TurkeyLira,\n    countries: [CountryCode.Turkey],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Turkey Lira',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20BA',\n    symbol_native: '\u20BA',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  TurkmenistanManat: {\n    code: CurrencyCode.TurkmenistanManat,\n    countries: [CountryCode.Turkmenistan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Turkmenistan Manat',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'm',\n    symbol_native: 'm',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  UgandaShilling: {\n    code: CurrencyCode.UgandaShilling,\n    countries: [CountryCode.Uganda],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Uganda Shilling',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'USh',\n    symbol_native: 'USh',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  UkraineHryvnia: {\n    code: CurrencyCode.UkraineHryvnia,\n    countries: [CountryCode.Ukraine],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Ukraine Hryvnia',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20B4',\n    symbol_native: '\u20B4',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  UnitedArabEmiratesDirham: {\n    code: CurrencyCode.UnitedArabEmiratesDirham,\n    countries: [CountryCode.UnitedArabEmirates],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'United Arab Emirates Dirham',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u062F.\u0625',\n    symbol_native: '\u062F.\u0625',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  UnitedKingdomPound: {\n    code: CurrencyCode.UnitedKingdomPound,\n    countries: [CountryCode.UnitedKingdom],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'United Kingdom Pound',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u00A3',\n    symbol_native: '\u00A3',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  UnitedStatesDollar: {\n    code: CurrencyCode.UnitedStatesDollar,\n    countries: [CountryCode.UnitedStates],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'United States Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$',\n    symbol_native: '$',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  UruguayPeso: {\n    code: CurrencyCode.UruguayPeso,\n    countries: [CountryCode.Uruguay],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Uruguay Peso',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '$U',\n    symbol_native: '$U',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  UzbekistanSom: {\n    code: CurrencyCode.UzbekistanSom,\n    countries: [CountryCode.Uzbekistan],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Uzbekistan Som',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'UZS',\n    symbol_native: 'UZS',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  VanuatuVatu: {\n    code: CurrencyCode.VanuatuVatu,\n    countries: [CountryCode.Vanuatu],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Vanuatu Vatu',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'VT',\n    symbol_native: 'VT',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  VenezuelaBolivar: {\n    code: CurrencyCode.VenezuelaBolivar,\n    countries: [CountryCode.Venezuela],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Venezuela Bolivar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'Bs. F',\n    symbol_native: 'Bs. F',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  VietnamDong: {\n    code: CurrencyCode.VietnamDong,\n    countries: [CountryCode.Vietnam],\n    decimal_digits: 0,\n    decimal_separator: ',',\n    name: 'Vietnam Dong',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20AB',\n    symbol_native: '\u20AB',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  YemenRial: {\n    code: CurrencyCode.YemenRial,\n    countries: [CountryCode.Yemen],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Yemen Rial',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\uFDFC',\n    symbol_native: '\uFDFC',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  ZambiaKwacha: {\n    code: CurrencyCode.ZambiaKwacha,\n    countries: [CountryCode.Zambia],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Zambia Kwacha',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: 'ZK',\n    symbol_native: 'ZK',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n  ZimbabweDollar: {\n    code: CurrencyCode.ZimbabweDollar,\n    countries: [CountryCode.Zimbabwe],\n    decimal_digits: 2,\n    decimal_separator: ',',\n    name: 'Zimbabwe Dollar',\n    negative_sign: '-',\n    positive_sign: '',\n    rounding: 0,\n    symbol: '\u20AB',\n    symbol_native: '\u20AB',\n    symbol_placement: 'before',\n    thousands_separator: '.',\n  },\n};\n\nexport enum CryptoCurrency {\n  Bitcoin = 'BTC',\n  Ethereum = 'ETH',\n  Litecoin = 'LTC',\n  Ripple = 'XRP',\n  Dash = 'DASH',\n  Zcash = 'ZEC',\n  Dogecoin = 'DOGE',\n  Monero = 'XMR',\n  BitcoinCash = 'BCH',\n  EOS = 'EOS',\n  Binance = 'BNB',\n  Stellar = 'XLM',\n  Cardano = 'ADA',\n  IOTA = 'IOTA',\n  Tezos = 'XTZ',\n  NEO = 'NEO',\n  TRON = 'TRX',\n  EOSClassic = 'EOSC',\n  Ontology = 'ONT',\n  VeChain = 'VEN',\n  QTUM = 'QTUM',\n  Lisk = 'LSK',\n  Waves = 'WAVES',\n  OmiseGO = 'OMG',\n  Zilliqa = 'ZIL',\n  BitcoinGold = 'BTG',\n  Decred = 'DCR',\n  Stratis = 'STRAT',\n  Populous = 'PPT',\n  Augur = 'REP',\n  Golem = 'GNT',\n  Siacoin = 'SC',\n  BasicAttentionToken = 'BAT',\n  ZCoin = 'XZC',\n  StratisHedged = 'SNT',\n  VeChainHedged = 'VEN',\n  PowerLedger = 'POWR',\n  WavesHedged = 'WAVE',\n  ZilliqaHedged = 'ZRX',\n  BitcoinDiamond = 'BCD',\n  DigiByte = 'DGB',\n  DigiByteHedged = 'DGB',\n  Bytecoin = 'BCN',\n  BytecoinHedged = 'BCN',\n}\n", "export enum LanguageCode {\n  Afrikaans = 'af',\n  Albanian = 'sq',\n  Amharic = 'am',\n  Arabic = 'ar',\n  Armenian = 'hy',\n  Azerbaijani = 'az',\n  Bashkir = 'ba',\n  Basque = 'eu',\n  Belarusian = 'be',\n  Bengali = 'bn',\n  Berber = 'ber',\n  Bhutani = 'dz',\n  Bihari = 'bh',\n  Bislama = 'bi',\n  Bosnian = 'bs',\n  Breten = 'br',\n  Bulgarian = 'bg',\n  Burmese = 'my',\n  Cantonese = 'yue',\n  Catalan = 'ca',\n  Chinese = 'zh',\n  Chuvash = 'cv',\n  Corsican = 'co',\n  Croatian = 'hr',\n  Czech = 'cs',\n  Danish = 'da',\n  Dari = 'prs',\n  Divehi = 'dv',\n  Dutch = 'nl',\n  English = 'en',\n  Esperanto = 'eo',\n  Estonian = 'et',\n  Faroese = 'fo',\n  Farsi = 'fa',\n  Filipino = 'fil',\n  Finnish = 'fi',\n  French = 'fr',\n  Frisian = 'fy',\n  Galician = 'gl',\n  Georgian = 'ka',\n  German = 'de',\n  Greek = 'el',\n  Greenlandic = 'kl',\n  Gujarati = 'gu',\n  Haitian = 'ht',\n  Hausa = 'ha',\n  Hebrew = 'he',\n  Hindi = 'hi',\n  Hungarian = 'hu',\n  Icelandic = 'is',\n  Igbo = 'ig',\n  Indonesian = 'id',\n  Irish = 'ga',\n  Italian = 'it',\n  Japanese = 'ja',\n  Javanese = 'jv',\n  Kannada = 'kn',\n  Karelian = 'krl',\n  Kazakh = 'kk',\n  Khmer = 'km',\n  Komi = 'kv',\n  Konkani = 'kok',\n  Korean = 'ko',\n  Kurdish = 'ku',\n  Kyrgyz = 'ky',\n  Lao = 'lo',\n  Latin = 'la',\n  Latvian = 'lv',\n  Lithuanian = 'lt',\n  Luxembourgish = 'lb',\n  Ossetian = 'os',\n  Macedonian = 'mk',\n  Malagasy = 'mg',\n  Malay = 'ms',\n  Malayalam = 'ml',\n  Maltese = 'mt',\n  Maori = 'mi',\n  Marathi = 'mr',\n  Mari = 'mhr',\n  Mongolian = 'mn',\n  Montenegrin = 'me',\n  Nepali = 'ne',\n  NorthernSotho = 'nso',\n  Norwegian = 'no',\n  NorwegianBokmal = 'nb',\n  NorwegianNynorsk = 'nn',\n  Oriya = 'or',\n  Pashto = 'ps',\n  Persian = 'fa',\n  Polish = 'pl',\n  Portuguese = 'pt',\n  Punjabi = 'pa',\n  Quechua = 'qu',\n  Romanian = 'ro',\n  Russian = 'ru',\n  Sakha = 'sah',\n  Sami = 'se',\n  Samoan = 'sm',\n  Sanskrit = 'sa',\n  Scots = 'gd',\n  Serbian = 'sr',\n  SerbianCyrillic = 'sr-Cyrl',\n  Sesotho = 'st',\n  Shona = 'sn',\n  Sindhi = 'sd',\n  Sinhala = 'si',\n  Slovak = 'sk',\n  Slovenian = 'sl',\n  Somali = 'so',\n  Spanish = 'es',\n  Sudanese = 'su',\n  Sutu = 'sx',\n  Swahili = 'sw',\n  Swedish = 'sv',\n  Syriac = 'syr',\n  Tagalog = 'tl',\n  Tajik = 'tg',\n  Tamazight = 'tmh',\n  Tamil = 'ta',\n  Tatar = 'tt',\n  Telugu = 'te',\n  Thai = 'th',\n  Tibetan = 'bo',\n  Tsonga = 'ts',\n  Tswana = 'tn',\n  Turkish = 'tr',\n  Turkmen = 'tk',\n  Ukrainian = 'uk',\n  Urdu = 'ur',\n  Uzbek = 'uz',\n  Vietnamese = 'vi',\n  Welsh = 'cy',\n  Xhosa = 'xh',\n  Yiddish = 'yi',\n  Yoruba = 'yo',\n  Zulu = 'zu',\n}\n\nexport type Language = {\n  code: LanguageCode;\n  name: string;\n  native_name: string;\n};\n", "import { LanguageCode } from '../language';\nimport { CountryCode } from './country';\n\n/**\n * Locale code in form of `[language]-[region]-[variant]`\n *\n * @example\n * ```\n * const localeCode: Locale.EnglishUnitedStates = 'en-US'\n * ```\n *\n */\nexport enum LocaleCode {\n  Afrikaans = 'af',\n  AfrikaansSouthAfrica = 'af-ZA',\n  Albanian = 'sq',\n  AlbanianAlbania = 'sq-AL',\n  Amharic = 'am',\n  AmharicEthiopia = 'am-ET',\n  Arabic = 'ar',\n  ArabicAlgeria = 'ar-DZ',\n  ArabicBahrain = 'ar-BH',\n  ArabicEgypt = 'ar-EG',\n  ArabicIraq = 'ar-IQ',\n  ArabicJordan = 'ar-JO',\n  ArabicKuwait = 'ar-KW',\n  ArabicLebanon = 'ar-LB',\n  ArabicLibya = 'ar-LY',\n  ArabicMorocco = 'ar-MA',\n  ArabicOman = 'ar-OM',\n  ArabicQatar = 'ar-QA',\n  ArabicSaudiArabia = 'ar-SA',\n  ArabicSyria = 'ar-SY',\n  ArabicTunisia = 'ar-TN',\n  ArabicUnitedArabEmirates = 'ar-AE',\n  ArabicYemen = 'ar-YE',\n  Armenian = 'hy',\n  ArmenianArmenia = 'hy-AM',\n  Azerbaijani = 'az',\n  AzerbaijaniAzerbaijan = 'az-AZ',\n  AzerbaijaniCyrillicAzerbaijan = 'az-Cyrl-AZ',\n  Bashkir = 'ba',\n  Basque = 'eu',\n  BasqueSpain = 'eu-ES',\n  Belarusian = 'be',\n  BelarusianBelarus = 'be-BY',\n  Bengali = 'bn',\n  BengaliBangladesh = 'bn-BD',\n  BengaliIndia = 'bn-IN',\n  Berber = 'ber',\n  Bhutani = 'dz',\n  BhutaniBhutan = 'dz-BT',\n  Bosnian = 'bs',\n  BosnianBosniaAndHerzegovina = 'bs-BA',\n  Breton = 'br',\n  Bulgarian = 'bg',\n  BulgarianBosniaAndHerzegovina = 'bg-BG',\n  BulgarianBulgaria = 'bg-BG',\n  Burmese = 'my',\n  BurmeseMyanmar = 'my-MM',\n  Cantonese = 'yue',\n  CantoneseHongKong = 'yue-HK',\n  Catalan = 'ca',\n  CatalanSpain = 'ca-ES',\n  Chechen = 'ce',\n  Cherokee = 'chr',\n  Chinese = 'zh',\n  ChineseSimplified = 'zh-Hans',\n  ChineseSimplifiedChina = 'zh-Hans-CN',\n  ChineseSimplifiedHongKong = 'zh-Hans-HK',\n  ChineseSimplifiedMacau = 'zh-Hans-MO',\n  ChineseSimplifiedSingapore = 'zh-Hans-SG',\n  ChineseTraditional = 'zh-Hant',\n  ChineseTraditionalHongKong = 'zh-Hant-HK',\n  ChineseTraditionalMacau = 'zh-Hant-MO',\n  ChineseTraditionalSingapore = 'zh-Hant-SG',\n  ChineseTraditionalTaiwan = 'zh-Hant-TW',\n  Chuvash = 'cv',\n  CorsicanFrance = 'co-FR',\n  Croatian = 'hr',\n  CroatianBosniaAndHerzegovina = 'hr-BA',\n  CroatianCroatia = 'hr-HR',\n  Czech = 'cs',\n  CzechCzechRepublic = 'cs-CZ',\n  Danish = 'da',\n  DanishDenmark = 'da-DK',\n  Dari = 'prs',\n  DariAfghanistan = 'prs-AF',\n  Divehi = 'dv',\n  DivehiMaldives = 'dv-MV',\n  Dutch = 'nl',\n  DutchBelgium = 'nl-BE',\n  DutchNetherlands = 'nl-NL',\n  English = 'en',\n  EnglishAustralia = 'en-AU',\n  EnglishBelgium = 'en-BE',\n  EnglishBelize = 'en-BZ',\n  EnglishCanada = 'en-CA',\n  EnglishCaribbean = 'en-029',\n  EnglishIreland = 'en-IE',\n  EnglishJamaica = 'en-JM',\n  EnglishNewZealand = 'en-NZ',\n  EnglishPhilippines = 'en-PH',\n  EnglishSingapore = 'en-SG',\n  EnglishSouthAfrica = 'en-ZA',\n  EnglishTrinidadAndTobago = 'en-TT',\n  EnglishUnitedKingdom = 'en-GB',\n  EnglishUnitedStates = 'en-US',\n  EnglishZimbabwe = 'en-ZW',\n  Esperanto = 'eo',\n  Estonian = 'et',\n  EstonianEstonia = 'et-EE',\n  Faroese = 'fo',\n  FaroeseFaroeIslands = 'fo-FO',\n  Farsi = 'fa',\n  FarsiIran = 'fa-IR',\n  Filipino = 'fil',\n  FilipinoPhilippines = 'fil-PH',\n  Finnish = 'fi',\n  FinnishFinland = 'fi-FI',\n  French = 'fr',\n  FrenchBelgium = 'fr-BE',\n  FrenchCanada = 'fr-CA',\n  FrenchFrance = 'fr-FR',\n  FrenchLuxembourg = 'fr-LU',\n  FrenchMonaco = 'fr-MC',\n  FrenchReunion = 'fr-RE',\n  FrenchSwitzerland = 'fr-CH',\n  Frisian = 'fy',\n  FrisianNetherlands = 'fy-NL',\n  Galician = 'gl',\n  GalicianSpain = 'gl-ES',\n  Georgian = 'ka',\n  GeorgianGeorgia = 'ka-GE',\n  German = 'de',\n  GermanAustria = 'de-AT',\n  GermanBelgium = 'de-BE',\n  GermanGermany = 'de-DE',\n  GermanLiechtenstein = 'de-LI',\n  GermanLuxembourg = 'de-LU',\n  GermanSwitzerland = 'de-CH',\n  Greenlandic = 'kl',\n  GreenlandicGreenland = 'kl-GL',\n  Greek = 'el',\n  GreekGreece = 'el-GR',\n  Gujarati = 'gu',\n  GujaratiIndia = 'gu-IN',\n  Haitian = 'ht',\n  Hausa = 'ha',\n  HausaGhana = 'ha-GH',\n  HausaNiger = 'ha-NE',\n  HausaNigeria = 'ha-NG',\n  Hebrew = 'he',\n  HebrewIsrael = 'he-IL',\n  Hindi = 'hi',\n  HindiIndia = 'hi-IN',\n  Hungarian = 'hu',\n  HungarianHungary = 'hu-HU',\n  Icelandic = 'is',\n  IcelandicIceland = 'is-IS',\n  Igbo = 'ig',\n  IgboNigeria = 'ig-NG',\n  Indonesian = 'id',\n  IndonesianIndonesia = 'id-ID',\n  Irish = 'ga',\n  IrishIreland = 'ga-IE',\n  Italian = 'it',\n  ItalianItaly = 'it-IT',\n  ItalianSwitzerland = 'it-CH',\n  Japanese = 'ja',\n  JapaneseJapan = 'ja-JP',\n  Javanese = 'jv',\n  Kannada = 'kn',\n  KannadaIndia = 'kn-IN',\n  Karelian = 'krl',\n  Kazakh = 'kk',\n  KazakhKazakhstan = 'kk-KZ',\n  Khmer = 'km',\n  KhmerCambodia = 'km-KH',\n  KinyarwandaRwanda = 'rw-RW',\n  Komi = 'kv',\n  Konkani = 'kok',\n  KonkaniIndia = 'kok-IN',\n  Korean = 'ko',\n  KoreanSouthKorea = 'ko-KR',\n  Kurdish = 'ku',\n  KurdishIraq = 'ku-IQ',\n  KurdishTurkey = 'ku-TR',\n  Kyrgyz = 'ky',\n  KyrgyzKyrgyzstan = 'ky-KG',\n  Lao = 'lo',\n  LaoLaos = 'lo-LA',\n  Latin = 'la',\n  Latvian = 'lv',\n  LatvianLatvia = 'lv-LV',\n  Lithuanian = 'lt',\n  LithuanianLithuania = 'lt-LT',\n  Luxembourgish = 'lb',\n  LuxembourgishBelgium = 'lb-LU',\n  LuxembourgishLuxembourg = 'lb-LU',\n  Macedonian = 'mk',\n  MacedonianNorthMacedonia = 'mk-MK',\n  Malagasy = 'mg',\n  Malay = 'ms',\n  MalayBrunei = 'ms-BN',\n  MalayIndia = 'ms-IN',\n  MalayMalaysia = 'ms-MY',\n  MalaySingapore = 'ms-SG',\n  Malayalam = 'ml',\n  MalayalamIndia = 'ml-IN',\n  Maltese = 'mt',\n  MalteseMalta = 'mt-MT',\n  Maori = 'mi',\n  MaoriNewZealand = 'mi-NZ',\n  Marathi = 'mr',\n  MarathiIndia = 'mr-IN',\n  Mari = 'chm',\n  Mongolian = 'mn',\n  MongolianMongolia = 'mn-MN',\n  Montenegrin = 'me',\n  MontenegrinMontenegro = 'me-ME',\n  Nepali = 'ne',\n  NepaliNepal = 'ne-NP',\n  NorthernSotho = 'ns',\n  NorthernSothoSouthAfrica = 'ns-ZA',\n  Norwegian = 'nb',\n  NorwegianBokmalNorway = 'nb-NO',\n  NorwegianNynorskNorway = 'nn-NO',\n  Oriya = 'or',\n  OriyaIndia = 'or-IN',\n  Ossetian = 'os',\n  Pashto = 'ps',\n  PashtoAfghanistan = 'ps-AF',\n  Persian = 'fa',\n  PersianIran = 'fa-IR',\n  Polish = 'pl',\n  PolishPoland = 'pl-PL',\n  Portuguese = 'pt',\n  PortugueseBrazil = 'pt-BR',\n  PortuguesePortugal = 'pt-PT',\n  Punjabi = 'pa',\n  PunjabiIndia = 'pa-IN',\n  PunjabiPakistan = 'pa-PK',\n  Quechua = 'qu',\n  QuechuaBolivia = 'qu-BO',\n  QuechuaEcuador = 'qu-EC',\n  QuechuaPeru = 'qu-PE',\n  Romanian = 'ro',\n  RomanianRomania = 'ro-RO',\n  Russian = 'ru',\n  RussianKazakhstan = 'ru-KZ',\n  RussianKyrgyzstan = 'ru-KG',\n  RussianRussia = 'ru-RU',\n  RussianUkraine = 'ru-UA',\n  Sakha = 'sah',\n  Sanskrit = 'sa',\n  SanskritIndia = 'sa-IN',\n  Sami = 'se',\n  SamiNorway = 'se-NO',\n  SamiSweden = 'se-SE',\n  SamiFinland = 'se-FI',\n  Samoan = 'sm',\n  SamoanSamoa = 'sm-WS',\n  Scots = 'gd',\n  Serbian = 'sr',\n  SerbianBosniaAndHerzegovina = 'sr-BA',\n  SerbianSerbiaAndMontenegro = 'sr-SP',\n  SerbianCyrillic = 'sr-SP-Cyrl',\n  SerbianCyrillicBosniaAndHerzegovina = 'sr-Cyrl-BA',\n  SerbianCyrillicSerbiaAndMontenegro = 'sr-Cyrl-SP',\n  Sesotho = 'st',\n  SesothoSouthAfrica = 'st-ZA',\n  Shona = 'sn',\n  ShonaZimbabwe = 'sn-ZW',\n  Sindhi = 'sd',\n  SindhiPakistan = 'sd-PK',\n  Sinhala = 'si',\n  SinhalaSriLanka = 'si-LK',\n  Slovak = 'sk',\n  SlovakSlovakia = 'sk-SK',\n  Slovenian = 'sl',\n  SlovenianSlovenia = 'sl-SI',\n  Somali = 'so',\n  SomaliSomalia = 'so-SO',\n  Spanish = 'es',\n  SpanishArgentina = 'es-AR',\n  SpanishBolivia = 'es-BO',\n  SpanishChile = 'es-CL',\n  SpanishColombia = 'es-CO',\n  SpanishCostaRica = 'es-CR',\n  SpanishCuba = 'es-CU',\n  SpanishDominicanRepublic = 'es-DO',\n  SpanishEcuador = 'es-EC',\n  SpanishEquatorialGuinea = 'es-GQ',\n  SpanishElSalvador = 'es-SV',\n  SpanishGuatemala = 'es-GT',\n  SpanishHonduras = 'es-HN',\n  SpanishMexico = 'es-MX',\n  SpanishNicaragua = 'es-NI',\n  SpanishPanama = 'es-PA',\n  SpanishParaguay = 'es-PY',\n  SpanishPeru = 'es-PE',\n  SpanishPuertoRico = 'es-PR',\n  SpanishSpain = 'es-ES',\n  SpanishUnitedStates = 'es-US',\n  SpanishUruguay = 'es-UY',\n  SpanishVenezuela = 'es-VE',\n  Sudanese = 'su',\n  Sutu = 'st',\n  SutuSouthAfrica = 'st-ZA',\n  Swahili = 'sw',\n  SwahiliKenya = 'sw-KE',\n  Swedish = 'sv',\n  SwedishFinland = 'sv-FI',\n  SwedishSweden = 'sv-SE',\n  Syriac = 'syr',\n  SyriacSyria = 'syr-SY',\n  Tajik = 'tg',\n  TajikTajikistan = 'tg-TJ',\n  Tagalog = 'tl',\n  TagalogPhilippines = 'tl-PH',\n  Tamazight = 'tmh',\n  Tamil = 'ta',\n  TamilIndia = 'ta-IN',\n  Tatar = 'tt',\n  Telugu = 'te',\n  TeluguIndia = 'te-IN',\n  Thai = 'th',\n  ThaiThailand = 'th-TH',\n  Tibetan = 'bo',\n  TibetanBhutan = 'bo-BT',\n  TibetanChina = 'bo-CN',\n  TibetanIndia = 'bo-IN',\n  Tsonga = 'ts',\n  Tswana = 'tn',\n  TswanaSouthAfrica = 'tn-ZA',\n  Turkish = 'tr',\n  TurkishTurkey = 'tr-TR',\n  Turkmen = 'tk',\n  Ukrainian = 'uk',\n  UkrainianUkraine = 'uk-UA',\n  Urdu = 'ur',\n  UrduAfghanistan = 'ur-AF',\n  UrduIndia = 'ur-IN',\n  UrduPakistan = 'ur-PK',\n  Uzbek = 'uz',\n  UzbekCyrillic = 'uz-Cyrl-UZ',\n  UzbekLatin = 'uz-Latn-UZ',\n  UzbekUzbekistan = 'uz-UZ',\n  Vietnamese = 'vi',\n  VietnameseVietnam = 'vi-VN',\n  Welsh = 'cy',\n  WelshUnitedKingdom = 'cy-GB',\n  Xhosa = 'xh',\n  XhosaSouthAfrica = 'xh-ZA',\n  Yiddish = 'yi',\n  Yoruba = 'yo',\n  YorubaNigeria = 'yo-NG',\n  ZhuyinMandarinChina = 'yue-Hant-CN',\n  Zulu = 'zu',\n  ZuluSouthAfrica = 'zu-ZA',\n}\n\nexport type Locale = {\n  country?: {\n    code: CountryCode;\n    name: string;\n    native: string;\n  };\n  id: LocaleCode;\n  language: {\n    code: LanguageCode;\n    name: string;\n    native: string;\n  };\n  name: string;\n  native_name: string;\n  rtl: boolean;\n};\n", "import { TimezoneOffset } from './timezone';\nimport { Timezones } from './timezones';\n\nexport enum TimezoneRegions {\n  AfricaAbidjan = 'Africa/Abidjan',\n  AfricaAccra = 'Africa/Accra',\n  AfricaAddisAbaba = 'Africa/Addis_Ababa',\n  AfricaAlgiers = 'Africa/Algiers',\n  AfricaAsmara = 'Africa/Asmara',\n  AfricaBamako = 'Africa/Bamako',\n  AfricaBangui = 'Africa/Bangui',\n  AfricaBanjul = 'Africa/Banjul',\n  AfricaBissau = 'Africa/Bissau',\n  AfricaBlantyre = 'Africa/Blantyre',\n  AfricaBrazzaville = 'Africa/Brazzaville',\n  AfricaBujumbura = 'Africa/Bujumbura',\n  AfricaCairo = 'Africa/Cairo',\n  AfricaCasablanca = 'Africa/Casablanca',\n  AfricaCeuta = 'Africa/Ceuta',\n  AfricaConakry = 'Africa/Conakry',\n  AfricaDakar = 'Africa/Dakar',\n  AfricaDarEsSalaam = 'Africa/Dar_es_Salaam',\n  AfricaDjibouti = 'Africa/Djibouti',\n  AfricaDouala = 'Africa/Douala',\n  AfricaElAaiun = 'Africa/El_Aaiun',\n  AfricaFreetown = 'Africa/Freetown',\n  AfricaGaborone = 'Africa/Gaborone',\n  AfricaHarare = 'Africa/Harare',\n  AfricaJohannesburg = 'Africa/Johannesburg',\n  AfricaJuba = 'Africa/Juba',\n  AfricaKampala = 'Africa/Kampala',\n  AfricaKhartoum = 'Africa/Khartoum',\n  AfricaKigali = 'Africa/Kigali',\n  AfricaKinshasa = 'Africa/Kinshasa',\n  AfricaLagos = 'Africa/Lagos',\n  AfricaLibreville = 'Africa/Libreville',\n  AfricaLome = 'Africa/Lome',\n  AfricaLuanda = 'Africa/Luanda',\n  AfricaLubumbashi = 'Africa/Lubumbashi',\n  AfricaLusaka = 'Africa/Lusaka',\n  AfricaMalabo = 'Africa/Malabo',\n  AfricaMaputo = 'Africa/Maputo',\n  AfricaMaseru = 'Africa/Maseru',\n  AfricaMbabane = 'Africa/Mbabane',\n  AfricaMogadishu = 'Africa/Mogadishu',\n  AfricaMonrovia = 'Africa/Monrovia',\n  AfricaNairobi = 'Africa/Nairobi',\n  AfricaNdjamena = 'Africa/Ndjamena',\n  AfricaNiamey = 'Africa/Niamey',\n  AfricaNouakchott = 'Africa/Nouakchott',\n  AfricaOuagadougou = 'Africa/Ouagadougou',\n  AfricaPortoNovo = 'Africa/Porto-Novo',\n  AfricaSaoTome = 'Africa/Sao_Tome',\n  AfricaTripoli = 'Africa/Tripoli',\n  AfricaTunis = 'Africa/Tunis',\n  AfricaWindhoek = 'Africa/Windhoek',\n  AmericaAdak = 'America/Adak',\n  AmericaAnchorage = 'America/Anchorage',\n  AmericaAnguilla = 'America/Anguilla',\n  AmericaAntigua = 'America/Antigua',\n  AmericaAraguaina = 'America/Araguaina',\n  AmericaArgentinaBuenosAires = 'America/Argentina/Buenos_Aires',\n  AmericaArgentinaCatamarca = 'America/Argentina/Catamarca',\n  AmericaArgentinaCordoba = 'America/Argentina/Cordoba',\n  AmericaArgentinaJujuy = 'America/Argentina/Jujuy',\n  AmericaArgentinaLaRioja = 'America/Argentina/La_Rioja',\n  AmericaArgentinaMendoza = 'America/Argentina/Mendoza',\n  AmericaArgentinaRioGallegos = 'America/Argentina/Rio_Gallegos',\n  AmericaArgentinaSalta = 'America/Argentina/Salta',\n  AmericaArgentinaSanJuan = 'America/Argentina/San_Juan',\n  AmericaArgentinaSanLuis = 'America/Argentina/San_Luis',\n  AmericaArgentinaTucuman = 'America/Argentina/Tucuman',\n  AmericaArgentinaUshuaia = 'America/Argentina/Ushuaia',\n  AmericaAruba = 'America/Aruba',\n  AmericaAsuncion = 'America/Asuncion',\n  AmericaAtikokan = 'America/Atikokan',\n  AmericaAtka = 'America/Atka',\n  AmericaBahia = 'America/Bahia',\n  AmericaBahiaBanderas = 'America/Bahia_Banderas',\n  AmericaBarbados = 'America/Barbados',\n  AmericaBelem = 'America/Belem',\n  AmericaBelize = 'America/Belize',\n  AmericaBlancSablon = 'America/Blanc-Sablon',\n  AmericaBoaVista = 'America/Boa_Vista',\n  AmericaBogota = 'America/Bogota',\n  AmericaBoise = 'America/Boise',\n  AmericaCambridgeBay = 'America/Cambridge_Bay',\n  AmericaCampoGrande = 'America/Campo_Grande',\n  AmericaCancun = 'America/Cancun',\n  AmericaCaracas = 'America/Caracas',\n  AmericaCayenne = 'America/Cayenne',\n  AmericaCayman = 'America/Cayman',\n  AmericaChicago = 'America/Chicago',\n  AmericaChihuahua = 'America/Chihuahua',\n  AmericaCoralHarbour = 'America/Coral_Harbour',\n  AmericaCordoba = 'America/Cordoba',\n  AmericaCostaRica = 'America/Costa_Rica',\n  AmericaCreston = 'America/Creston',\n  AmericaCuiaba = 'America/Cuiaba',\n  AmericaCuracao = 'America/Curacao',\n  AmericaDanmarkshavn = 'America/Danmarkshavn',\n  AmericaDawson = 'America/Dawson',\n  AmericaDawsonCreek = 'America/Dawson_Creek',\n  AmericaDenver = 'America/Denver',\n  AmericaDetroit = 'America/Detroit',\n  AmericaDominica = 'America/Dominica',\n  AmericaEdmonton = 'America/Edmonton',\n  AmericaEirunepe = 'America/Eirunepe',\n  AmericaElSalvador = 'America/El_Salvador',\n  AmericaFortaleza = 'America/Fortaleza',\n  AmericaGlaceBay = 'America/Glace_Bay',\n  AmericaGodthab = 'America/Godthab',\n  AmericaGooseBay = 'America/Goose_Bay',\n  AmericaGrandTurk = 'America/Grand_Turk',\n  AmericaGrenada = 'America/Grenada',\n  AmericaGuadeloupe = 'America/Guadeloupe',\n  AmericaGuatemala = 'America/Guatemala',\n  AmericaGuayaquil = 'America/Guayaquil',\n  AmericaGuyana = 'America/Guyana',\n  AmericaHalifax = 'America/Halifax',\n  AmericaHavana = 'America/Havana',\n  AmericaHermosillo = 'America/Hermosillo',\n  AmericaIndianaIndianapolis = 'America/Indiana/Indianapolis',\n  AmericaIndianaKnox = 'America/Indiana/Knox',\n  AmericaIndianaMarengo = 'America/Indiana/Marengo',\n  AmericaIndianaPetersburg = 'America/Indiana/Petersburg',\n  AmericaIndianaTellCity = 'America/Indiana/Tell_City',\n  AmericaIndianaVevay = 'America/Indiana/Vevay',\n  AmericaIndianaVincennes = 'America/Indiana/Vincennes',\n  AmericaIndianaWinamac = 'America/Indiana/Winamac',\n  AmericaInuvik = 'America/Inuvik',\n  AmericaIqaluit = 'America/Iqaluit',\n  AmericaJamaica = 'America/Jamaica',\n  AmericaJuneau = 'America/Juneau',\n  AmericaKentuckyLouisville = 'America/Kentucky/Louisville',\n  AmericaKentuckyMonticello = 'America/Kentucky/Monticello',\n  AmericaKralendijk = 'America/Kralendijk',\n  AmericaLaPaz = 'America/La_Paz',\n  AmericaLima = 'America/Lima',\n  AmericaLosAngeles = 'America/Los_Angeles',\n  AmericaLouisville = 'America/Louisville',\n  AmericaLowerPrinces = 'America/Lower_Princes',\n  AmericaMaceio = 'America/Maceio',\n  AmericaManagua = 'America/Managua',\n  AmericaManaus = 'America/Manaus',\n  AmericaMarigot = 'America/Marigot',\n  AmericaMartinique = 'America/Martinique',\n  AmericaMatamoros = 'America/Matamoros',\n  AmericaMazatlan = 'America/Mazatlan',\n  AmericaMenominee = 'America/Menominee',\n  AmericaMerida = 'America/Merida',\n  AmericaMetlakatla = 'America/Metlakatla',\n  AmericaMexicoCity = 'America/Mexico_City',\n  AmericaMiquelon = 'America/Miquelon',\n  AmericaMoncton = 'America/Moncton',\n  AmericaMonterrey = 'America/Monterrey',\n  AmericaMontevideo = 'America/Montevideo',\n  AmericaMontserrat = 'America/Montserrat',\n  AmericaMontreal = 'America/Montreal',\n  AmericaNassau = 'America/Nassau',\n  AmericaNewYork = 'America/New_York',\n  AmericaNipigon = 'America/Nipigon',\n  AmericaNome = 'America/Nome',\n  AmericaNoronha = 'America/Noronha',\n  AmericaNorthDakotaBeulah = 'America/North_Dakota/Beulah',\n  AmericaNorthDakotaCenter = 'America/North_Dakota/Center',\n  AmericaNorthDakotaNewSalem = 'America/North_Dakota/New_Salem',\n  AmericaOjinaga = 'America/Ojinaga',\n  AmericaPanama = 'America/Panama',\n  AmericaPangnirtung = 'America/Pangnirtung',\n  AmericaParamaribo = 'America/Paramaribo',\n  AmericaPhoenix = 'America/Phoenix',\n  AmericaPortAuPrince = 'America/Port-au-Prince',\n  AmericaPortOfSpain = 'America/Port_of_Spain',\n  AmericaPortoVelho = 'America/Porto_Velho',\n  AmericaPuertoRico = 'America/Puerto_Rico',\n  AmericaRainyRiver = 'America/Rainy_River',\n  AmericaRankinInlet = 'America/Rankin_Inlet',\n  AmericaRecife = 'America/Recife',\n  AmericaRegina = 'America/Regina',\n  AmericaResolute = 'America/Resolute',\n  AmericaRioBranco = 'America/Rio_Branco',\n  AmericaSantaIsabel = 'America/Santa_Isabel',\n  AmericaSantarem = 'America/Santarem',\n  AmericaSantiago = 'America/Santiago',\n  AmericaSantoDomingo = 'America/Santo_Domingo',\n  AmericaSaoPaulo = 'America/Sao_Paulo',\n  AmericaScoresbysund = 'America/Scoresbysund',\n  AmericaShiprock = 'America/Shiprock',\n  AmericaSitka = 'America/Sitka',\n  AmericaStBarthelemy = 'America/St_Barthelemy',\n  AmericaStJohns = 'America/St_Johns',\n  AmericaStKitts = 'America/St_Kitts',\n  AmericaStLucia = 'America/St_Lucia',\n  AmericaStThomas = 'America/St_Thomas',\n  AmericaStVincent = 'America/St_Vincent',\n  AmericaSwiftCurrent = 'America/Swift_Current',\n  AmericaTegucigalpa = 'America/Tegucigalpa',\n  AmericaThule = 'America/Thule',\n  AmericaThunderBay = 'America/Thunder_Bay',\n  AmericaTijuana = 'America/Tijuana',\n  AmericaToronto = 'America/Toronto',\n  AmericaTortola = 'America/Tortola',\n  AmericaVancouver = 'America/Vancouver',\n  AmericaWhitehorse = 'America/Whitehorse',\n  AmericaWinnipeg = 'America/Winnipeg',\n  AmericaYakutat = 'America/Yakutat',\n  AmericaYellowknife = 'America/Yellowknife',\n  AntarcticaCasey = 'Antarctica/Casey',\n  AntarcticaDavis = 'Antarctica/Davis',\n  AntarcticaDumontDUrville = 'Antarctica/DumontDUrville',\n  AntarcticaMacquarie = 'Antarctica/Macquarie',\n  AntarcticaMawson = 'Antarctica/Mawson',\n  AntarcticaMcMurdo = 'Antarctica/McMurdo',\n  AntarcticaPalmer = 'Antarctica/Palmer',\n  AntarcticaRothera = 'Antarctica/Rothera',\n  AntarcticaSyowa = 'Antarctica/Syowa',\n  AntarcticaTroll = 'Antarctica/Troll',\n  AntarcticaVostok = 'Antarctica/Vostok',\n  ArcticLongyearbyen = 'Arctic/Longyearbyen',\n  AsiaAden = 'Asia/Aden',\n  AsiaAlmaty = 'Asia/Almaty',\n  AsiaAmman = 'Asia/Amman',\n  AsiaAnadyr = 'Asia/Anadyr',\n  AsiaAqtau = 'Asia/Aqtau',\n  AsiaAqtobe = 'Asia/Aqtobe',\n  AsiaAshgabat = 'Asia/Ashgabat',\n  AsiaBaghdad = 'Asia/Baghdad',\n  AsiaBahrain = 'Asia/Bahrain',\n  AsiaBaku = 'Asia/Baku',\n  AsiaBangkok = 'Asia/Bangkok',\n  AsiaBarnaul = 'Asia/Barnaul',\n  AsiaBeirut = 'Asia/Beirut',\n  AsiaBishkek = 'Asia/Bishkek',\n  AsiaBrunei = 'Asia/Brunei',\n  AsiaChita = 'Asia/Chita',\n  AsiaChoibalsan = 'Asia/Choibalsan',\n  AsiaColombo = 'Asia/Colombo',\n  AsiaDamascus = 'Asia/Damascus',\n  AsiaDhaka = 'Asia/Dhaka',\n  AsiaDili = 'Asia/Dili',\n  AsiaDubai = 'Asia/Dubai',\n  AsiaDushanbe = 'Asia/Dushanbe',\n  AsiaFamagusta = 'Asia/Famagusta',\n  AsiaGaza = 'Asia/Gaza',\n  AsiaHebron = 'Asia/Hebron',\n  AsiaHoChiMinh = 'Asia/Ho_Chi_Minh',\n  AsiaHongKong = 'Asia/Hong_Kong',\n  AsiaHovd = 'Asia/Hovd',\n  AsiaIrkutsk = 'Asia/Irkutsk',\n  AsiaJakarta = 'Asia/Jakarta',\n  AsiaJayapura = 'Asia/Jayapura',\n  AsiaJerusalem = 'Asia/Jerusalem',\n  AsiaKabul = 'Asia/Kabul',\n  AsiaKamchatka = 'Asia/Kamchatka',\n  AsiaKarachi = 'Asia/Karachi',\n  AsiaKathmandu = 'Asia/Kathmandu',\n  AsiaKhandyga = 'Asia/Khandyga',\n  AsiaKolkata = 'Asia/Kolkata',\n  AsiaKrasnoyarsk = 'Asia/Krasnoyarsk',\n  AsiaKualaLumpur = 'Asia/Kuala_Lumpur',\n  AsiaKuching = 'Asia/Kuching',\n  AsiaKuwait = 'Asia/Kuwait',\n  AsiaMacau = 'Asia/Macau',\n  AsiaMagadan = 'Asia/Magadan',\n  AsiaMakassar = 'Asia/Makassar',\n  AsiaManila = 'Asia/Manila',\n  AsiaMuscat = 'Asia/Muscat',\n  AsiaNicosia = 'Asia/Nicosia',\n  AsiaNovokuznetsk = 'Asia/Novokuznetsk',\n  AsiaNovosibirsk = 'Asia/Novosibirsk',\n  AsiaOmsk = 'Asia/Omsk',\n  AsiaOral = 'Asia/Oral',\n  AsiaPhnomPenh = 'Asia/Phnom_Penh',\n  AsiaPontianak = 'Asia/Pontianak',\n  AsiaPyongyang = 'Asia/Pyongyang',\n  AsiaQatar = 'Asia/Qatar',\n  AsiaQyzylorda = 'Asia/Qyzylorda',\n  AsiaRangoon = 'Asia/Rangoon',\n  AsiaRiyadh = 'Asia/Riyadh',\n  AsiaSakhalin = 'Asia/Sakhalin',\n  AsiaSamarkand = 'Asia/Samarkand',\n  AsiaSeoul = 'Asia/Seoul',\n  AsiaShanghai = 'Asia/Shanghai',\n  AsiaSingapore = 'Asia/Singapore',\n  AsiaSrednekolymsk = 'Asia/Srednekolymsk',\n  AsiaTaipei = 'Asia/Taipei',\n  AsiaTashkent = 'Asia/Tashkent',\n  AsiaTbilisi = 'Asia/Tbilisi',\n  AsiaTehran = 'Asia/Tehran',\n  AsiaThimphu = 'Asia/Thimphu',\n  AsiaTokyo = 'Asia/Tokyo',\n  AsiaTomsk = 'Asia/Tomsk',\n  AsiaUlaanbaatar = 'Asia/Ulaanbaatar',\n  AsiaUrumqi = 'Asia/Urumqi',\n  AsiaUstNera = 'Asia/Ust-Nera',\n  AsiaVientiane = 'Asia/Vientiane',\n  AsiaVladivostok = 'Asia/Vladivostok',\n  AsiaYakutsk = 'Asia/Yakutsk',\n  AsiaYekaterinburg = 'Asia/Yekaterinburg',\n  AsiaYerevan = 'Asia/Yerevan',\n  AtlanticAzores = 'Atlantic/Azores',\n  AtlanticBermuda = 'Atlantic/Bermuda',\n  AtlanticCanary = 'Atlantic/Canary',\n  AtlanticCapeVerde = 'Atlantic/Cape_Verde',\n  AtlanticFaroe = 'Atlantic/Faroe',\n  AtlanticMadeira = 'Atlantic/Madeira',\n  AtlanticReykjavik = 'Atlantic/Reykjavik',\n  AtlanticSouthGeorgia = 'Atlantic/South_Georgia',\n  AtlanticStHelena = 'Atlantic/St_Helena',\n  AtlanticStanley = 'Atlantic/Stanley',\n  AustraliaAdelaide = 'Australia/Adelaide',\n  AustraliaBrisbane = 'Australia/Brisbane',\n  AustraliaBrokenHill = 'Australia/Broken_Hill',\n  AustraliaCanberra = 'Australia/Canberra',\n  AustraliaCurrie = 'Australia/Currie',\n  AustraliaDarwin = 'Australia/Darwin',\n  AustraliaEucla = 'Australia/Eucla',\n  AustraliaHobart = 'Australia/Hobart',\n  AustraliaLindeman = 'Australia/Lindeman',\n  AustraliaLordHowe = 'Australia/Lord_Howe',\n  AustraliaMelbourne = 'Australia/Melbourne',\n  AustraliaPerth = 'Australia/Perth',\n  AustraliaSydney = 'Australia/Sydney',\n  EuropeAmsterdam = 'Europe/Amsterdam',\n  EuropeAndorra = 'Europe/Andorra',\n  EuropeAthens = 'Europe/Athens',\n  EuropeBelgrade = 'Europe/Belgrade',\n  EuropeBerlin = 'Europe/Berlin',\n  EuropeBratislava = 'Europe/Bratislava',\n  EuropeBrussels = 'Europe/Brussels',\n  EuropeBucharest = 'Europe/Bucharest',\n  EuropeBudapest = 'Europe/Budapest',\n  EuropeBusingen = 'Europe/Busingen',\n  EuropeChisinau = 'Europe/Chisinau',\n  EuropeCopenhagen = 'Europe/Copenhagen',\n  EuropeDublin = 'Europe/Dublin',\n  EuropeGibraltar = 'Europe/Gibraltar',\n  EuropeGuernsey = 'Europe/Guernsey',\n  EuropeHelsinki = 'Europe/Helsinki',\n  EuropeIsleOfMan = 'Europe/Isle_of_Man',\n  EuropeIstanbul = 'Europe/Istanbul',\n  EuropeJersey = 'Europe/Jersey',\n  EuropeKaliningrad = 'Europe/Kaliningrad',\n  EuropeKiev = 'Europe/Kiev',\n  EuropeKirov = 'Europe/Kirov',\n  EuropeLisbon = 'Europe/Lisbon',\n  EuropeLjubljana = 'Europe/Ljubljana',\n  EuropeLondon = 'Europe/London',\n  EuropeLuxembourg = 'Europe/Luxembourg',\n  EuropeMadrid = 'Europe/Madrid',\n  EuropeMalta = 'Europe/Malta',\n  EuropeMariehamn = 'Europe/Mariehamn',\n  EuropeMinsk = 'Europe/Minsk',\n  EuropeMonaco = 'Europe/Monaco',\n  EuropeMoscow = 'Europe/Moscow',\n  EuropeOslo = 'Europe/Oslo',\n  EuropeParis = 'Europe/Paris',\n  EuropePodgorica = 'Europe/Podgorica',\n  EuropePrague = 'Europe/Prague',\n  EuropeRiga = 'Europe/Riga',\n  EuropeRome = 'Europe/Rome',\n  EuropeSamara = 'Europe/Samara',\n  EuropeSanMarino = 'Europe/San_Marino',\n  EuropeSarajevo = 'Europe/Sarajevo',\n  EuropeSimferopol = 'Europe/Simferopol',\n  EuropeSkopje = 'Europe/Skopje',\n  EuropeSofia = 'Europe/Sofia',\n  EuropeStockholm = 'Europe/Stockholm',\n  EuropeTallinn = 'Europe/Tallinn',\n  EuropeTirane = 'Europe/Tirane',\n  EuropeUzhgorod = 'Europe/Uzhgorod',\n  EuropeVaduz = 'Europe/Vaduz',\n  EuropeVatican = 'Europe/Vatican',\n  EuropeVienna = 'Europe/Vienna',\n  EuropeVilnius = 'Europe/Vilnius',\n  EuropeVolgograd = 'Europe/Volgograd',\n  EuropeWarsaw = 'Europe/Warsaw',\n  EuropeZagreb = 'Europe/Zagreb',\n  EuropeZaporozhye = 'Europe/Zaporozhye',\n  EuropeZurich = 'Europe/Zurich',\n  GMT = 'GMT',\n  IndianAntananarivo = 'Indian/Antananarivo',\n  IndianChagos = 'Indian/Chagos',\n  IndianChristmas = 'Indian/Christmas',\n  IndianCocos = 'Indian/Cocos',\n  IndianComoro = 'Indian/Comoro',\n  IndianKerguelen = 'Indian/Kerguelen',\n  IndianMahe = 'Indian/Mahe',\n  IndianMaldives = 'Indian/Maldives',\n  IndianMauritius = 'Indian/Mauritius',\n  IndianMayotte = 'Indian/Mayotte',\n  IndianReunion = 'Indian/Reunion',\n  PacificApia = 'Pacific/Apia',\n  PacificAuckland = 'Pacific/Auckland',\n  PacificBougainville = 'Pacific/Bougainville',\n  PacificChatham = 'Pacific/Chatham',\n  PacificChuuk = 'Pacific/Chuuk',\n  PacificEaster = 'Pacific/Easter',\n  PacificEfate = 'Pacific/Efate',\n  PacificEnderbury = 'Pacific/Enderbury',\n  PacificFakaofo = 'Pacific/Fakaofo',\n  PacificFiji = 'Pacific/Fiji',\n  PacificFunafuti = 'Pacific/Funafuti',\n  PacificGalapagos = 'Pacific/Galapagos',\n  PacificGambier = 'Pacific/Gambier',\n  PacificGuadalcanal = 'Pacific/Guadalcanal',\n  PacificGuam = 'Pacific/Guam',\n  PacificHonolulu = 'Pacific/Honolulu',\n  PacificJohnston = 'Pacific/Johnston',\n  PacificKiritimati = 'Pacific/Kiritimati',\n  PacificKosrae = 'Pacific/Kosrae',\n  PacificKwajalein = 'Pacific/Kwajalein',\n  PacificMajuro = 'Pacific/Majuro',\n  PacificMarquesas = 'Pacific/Marquesas',\n  PacificMidway = 'Pacific/Midway',\n  PacificNauru = 'Pacific/Nauru',\n  PacificNiue = 'Pacific/Niue',\n  PacificNorfolk = 'Pacific/Norfolk',\n  PacificNoumea = 'Pacific/Noumea',\n  PacificPagoPago = 'Pacific/Pago_Pago',\n  PacificPalau = 'Pacific/Palau',\n  PacificPitcairn = 'Pacific/Pitcairn',\n  PacificPohnpei = 'Pacific/Pohnpei',\n  PacificPonape = 'Pacific/Ponape',\n  PacificPortMoresby = 'Pacific/Port_Moresby',\n  PacificRarotonga = 'Pacific/Rarotonga',\n  PacificSaipan = 'Pacific/Saipan',\n  PacificSamoa = 'Pacific/Samoa',\n  PacificTahiti = 'Pacific/Tahiti',\n  PacificTarawa = 'Pacific/Tarawa',\n  PacificTongatapu = 'Pacific/Tongatapu',\n  PacificTruk = 'Pacific/Truk',\n  PacificWake = 'Pacific/Wake',\n  PacificWallis = 'Pacific/Wallis',\n  PacificYap = 'Pacific/Yap',\n  // USAlaska = 'US/Alaska',\n  // USAleutian = 'US/Aleutian',\n  // USArizona = 'US/Arizona',\n  // USCentral = 'US/Central',\n  // USCentralStandard = 'US/Central Standard',\n  // USCentralDaylight = 'US/Central Daylight',\n  // USEastern = 'US/Eastern',\n  // USEasternStandard = 'US/Eastern Standard',\n  // USEasternDaylight = 'US/Eastern Daylight',\n  // USHawaii = 'US/Hawaii',\n  // USMountain = 'US/Mountain',\n  // USMountainStandard = 'US/Mountain Standard',\n  // USMountainDaylight = 'US/Mountain Daylight',\n  // USPacific = 'US/Pacific',\n  // USPacificStandard = 'US/Pacific Standard',\n  // USPacificDaylight = 'US/Pacific Daylight',\n  // USPacificIsland = 'US/Pacific-Island',\n}\n\nexport type TimezoneRegion = {\n  id: TimezoneRegions;\n  name: string;\n  offset: TimezoneOffset;\n  timezone: Timezones;\n};\n", "import { Timezones } from './timezones';\n\nexport enum TimezoneOffset {\n  UTC_MINUS_12 = 'UTC-12',\n  UTC_MINUS_11_30 = 'UTC-11:30',\n  UTC_MINUS_11 = 'UTC-11',\n  UTC_MINUS_10_30 = 'UTC-10:30',\n  UTC_MINUS_10 = 'UTC-10',\n  UTC_MINUS_9_30 = 'UTC-9:30',\n  UTC_MINUS_9 = 'UTC-09',\n  UTC_MINUS_8_45 = 'UTC-8:45',\n  UTC_MINUS_8 = 'UTC-08',\n  UTC_MINUS_7 = 'UTC-07',\n  UTC_MINUS_6_30 = 'UTC-6:30',\n  UTC_MINUS_6 = 'UTC-06',\n  UTC_MINUS_5_45 = 'UTC-5:45',\n  UTC_MINUS_5_30 = 'UTC-5:30',\n  UTC_MINUS_5 = 'UTC-05',\n  UTC_MINUS_4_30 = 'UTC-4:30',\n  UTC_MINUS_4 = 'UTC-04',\n  UTC_MINUS_3_30 = 'UTC-3:30',\n  UTC_MINUS_3 = 'UTC-03',\n  UTC_MINUS_2_30 = 'UTC-2:30',\n  UTC_MINUS_2 = 'UTC-02',\n  UTC_MINUS_1 = 'UTC-01',\n  UTC_0 = 'UTC+00',\n  UTC_PLUS_1 = 'UTC+01',\n  UTC_PLUS_2 = 'UTC+02',\n  UTC_PLUS_3 = 'UTC+03',\n  UTC_PLUS_3_30 = 'UTC+3:30',\n  UTC_PLUS_4 = 'UTC+04',\n  UTC_PLUS_4_30 = 'UTC+4:30',\n  UTC_PLUS_5 = 'UTC+05',\n  UTC_PLUS_5_30 = 'UTC+5:30',\n  UTC_PLUS_5_45 = 'UTC+5:45',\n  UTC_PLUS_6 = 'UTC+06',\n  UTC_PLUS_6_30 = 'UTC+6:30',\n  UTC_PLUS_7 = 'UTC+07',\n  UTC_PLUS_8 = 'UTC+08',\n  UTC_PLUS_8_45 = 'UTC+8:45',\n  UTC_PLUS_9 = 'UTC+09',\n  UTC_PLUS_9_30 = 'UTC+9:30',\n  UTC_PLUS_10 = 'UTC+10',\n  UTC_PLUS_10_30 = 'UTC+10:30',\n  UTC_PLUS_11 = 'UTC+11',\n  UTC_PLUS_11_30 = 'UTC+11:30',\n  UTC_PLUS_12 = 'UTC+12',\n  UTC_PLUS_12_45 = 'UTC+12:45',\n  UTC_PLUS_13 = 'UTC+13',\n  UTC_PLUS_13_45 = 'UTC+13:45',\n  UTC_PLUS_14 = 'UTC+14',\n}\n\nexport type TimezoneDetails = {\n  dst: {\n    is: boolean;\n    uses: boolean;\n  };\n  id: Timezones;\n  name: string;\n  offset: TimezoneOffset;\n};\n", "import { TimezoneOffset } from './timezone.js';\nimport { TimezoneDetails } from './timezone';\n\nexport enum Timezones {\n  AcreTime = 'ACT',\n  AfghanistanTime = 'AFT',\n  AIXCentralEuropeanTime = 'DFT',\n  AlaskaDaylightTime = 'AKDT',\n  AlaskaStandardTime = 'AKST',\n  AlmaAtaTime = 'ALMT',\n  AmazonSummerTime = 'AMST',\n  AmazonTime = 'AMT',\n  AnadyrTime = 'ANAT',\n  AqtobeTime = 'AQTT',\n  ArabiaStandardTime = 'AST',\n  ArgentinaTime = 'ART',\n  ArmeniaTime = 'AMT',\n  ASEANCommonTime = 'ASEAN',\n  AtlanticDaylightTime = 'ADT',\n  AtlanticStandardTime = 'AST',\n  AustralianCentralDaylightSavingTime = 'ACDT',\n  AustralianCentralStandardTime = 'ACST',\n  AustralianCentralWesternStandardTime = 'ACWST',\n  AustralianEasternDaylightSavingTime = 'AEDT',\n  AustralianEasternStandardTime = 'AEST',\n  AustralianEasternTime = 'AET',\n  AustralianWesternStandardTime = 'AWST',\n  AzerbaijanTime = 'AZT',\n  AzoresStandardTime = 'AZOT',\n  AzoresSummerTime = 'AZOST',\n  BakerIslandTime = 'BIT',\n  BangladeshStandardTime = 'BST',\n  BhutanTime = 'BTT',\n  BoliviaTime = 'BOT',\n  BougainvilleStandardTime = 'BST',\n  BrasiliaSummerTime = 'BRST',\n  BrasiliaTime = 'BRT',\n  BritishIndianOceanTime = 'BIOT',\n  BritishSummerTime = 'BST',\n  BruneiTime = 'BNT',\n  CapeVerdeTime = 'CVT',\n  CentralAfricaTime = 'CAT',\n  CentralDaylightTime = 'CDT',\n  CentralEuropeanSummerTime = 'CEST',\n  CentralEuropeanTime = 'CET',\n  CentralIndonesiaTime = 'WITA',\n  CentralStandardTime = 'CST',\n  CentralTime = 'CT',\n  CentralWesternStandardTime = 'CWST',\n  ChamorroStandardTime = 'CHST',\n  ChathamDaylightTime = 'CHADT',\n  ChathamStandardTime = 'CHAST',\n  ChileStandardTime = 'CLT',\n  ChileSummerTime = 'CLST',\n  ChinaStandardTime = 'CST',\n  ChoibalsanStandardTime = 'CHOT',\n  ChoibalsanSummerTime = 'CHOST',\n  ChristmasIslandTime = 'CXT',\n  ChuukTime = 'CHUT',\n  ClipptertonIslandStandardTime = 'CIST',\n  CocosIslandsTime = 'CCT',\n  ColombiaSummerTime = 'COST',\n  ColombiaTime = 'COT',\n  CookIslandTime = 'CKT',\n  CoordinatedUniversalTime = 'UTC',\n  CubaDaylightTime = 'CDT',\n  CubaStandardTime = 'CST',\n  DavisTime = 'DAVT',\n  DumontDUrvilleTime = 'DDUT',\n  EastAfricaTime = 'EAT',\n  EasterIslandStandardTime = 'EAST',\n  EasterIslandSummerTime = 'EASST',\n  EasternCaribbeanTime = 'ECT',\n  EasternDaylightTime = 'EDT',\n  EasternEuropeanSummerTime = 'EEST',\n  EasternEuropeanTime = 'EET',\n  EasternGreenlandSummerTime = 'EGST',\n  EasternGreenlandTime = 'EGT',\n  EasternIndonesianTime = 'WIT',\n  EasternStandardTime = 'EST',\n  EasternTime = 'ET',\n  EcuadorTime = 'ECT',\n  FalklandIslandsSummerTime = 'FKST',\n  FalklandIslandsTime = 'FKT',\n  FernandoDeNoronhaTime = 'FNT',\n  FijiTime = 'FJT',\n  FrenchGuianaTime = 'GFT',\n  FrenchSouthernAndAntarcticTime = 'TFT',\n  FurtherEasternEuropeanTime = 'FET',\n  GalapagosTime = 'GALT',\n  GambierIslandTime = 'GIT',\n  GambierIslandsTime = 'GAMT',\n  GeorgiaStandardTime = 'GET',\n  GilbertIslandTime = 'GILT',\n  GreenwichMeanTime = 'GMT',\n  GulfStandardTime = 'GST',\n  GuyanaTime = 'GYT',\n  HawaiiAleutianDaylightTime = 'HDT',\n  HawaiiAleutianStandardTime = 'HST',\n  HeardAndMcDonaldIslandsTime = 'HMT',\n  HeureAvanceeDEuropeCentraleTime = 'HAEC',\n  HongKongTime = 'HKT',\n  HovdSummerTime = 'HOVST',\n  HovdTime = 'HOVT',\n  IndianOceanTime = 'IOT',\n  IndianStandardTime = 'IST',\n  IndochinaTime = 'ICT',\n  InternationalDayLineWestTime = 'IDLW',\n  IranDaylightTime = 'IRDT',\n  IranStandardTime = 'IRST',\n  IrishStandardTime = 'IST',\n  IrkutskSummerTime = 'IRKST',\n  IrkutskTime = 'IRKT',\n  IsraelDaylightTime = 'IDT',\n  IsraelStandardTime = 'IST',\n  JapanStandardTime = 'JST',\n  KaliningradTime = 'KALT',\n  KamchatkaTime = 'KAMT',\n  KoreaStandardTime = 'KST',\n  KosraeTime = 'KOST',\n  KrasnoyarskSummerTime = 'KRAST',\n  KrasnoyarskTime = 'KRAT',\n  KyrgyzstanTime = 'KGT',\n  LineIslandsTime = 'LINT',\n  KazakhstanStandardTime = 'KAST',\n  LordHoweStandardTime = 'LHST',\n  LordHoweSummerTime = 'LHST',\n  MacquarieIslandStationTime = 'MIST',\n  MagadanTime = 'MAGT',\n  MalaysiaStandardTime = 'MST',\n  MalaysiaTime = 'MYT',\n  MaldivesTime = 'MVT',\n  MarquesasIslandsTime = 'MART',\n  MarshallIslandsTime = 'MHT',\n  MauritiusTime = 'MUT',\n  MawsonStationTime = 'MAWT',\n  MiddleEuropeanSummerTime = 'MEDT',\n  MiddleEuropeanTime = 'MET',\n  MoscowTime = 'MSK',\n  MountainDaylightTime = 'MDT',\n  MountainStandardTime = 'MST',\n  MyanmarStandardTime = 'MMT',\n  NepalTime = 'NCT',\n  NauruTime = 'NRT',\n  NewCaledoniaTime = 'NCT',\n  NewZealandDaylightTime = 'NZDT',\n  NewZealandStandardTime = 'NZST',\n  NewfoundlandDaylightTime = 'NDT',\n  NewfoundlandStandardTime = 'NST',\n  NewfoundlandTime = 'NT',\n  NiueTime = 'NUT',\n  NorfolkIslandTime = 'NFT',\n  NovosibirskTime = 'NOVT',\n  OmskTime = 'OMST',\n  OralTime = 'ORAT',\n  PacificDaylightTime = 'PDT',\n  PacificStandardTime = 'PST',\n  PakistanStandardTime = 'PKT',\n  PalauTime = 'PWT',\n  PapuaNewGuineaTime = 'PGT',\n  ParaguaySummerTime = 'PYST',\n  ParaguayTime = 'PYT',\n  PeruTime = 'PET',\n  PhilippineStandardTime = 'PHST',\n  PhilippineTime = 'PHT',\n  PhoenixIslandTime = 'PHOT',\n  PitcairnTime = 'PST',\n  PohnpeiStandardTime = 'PONT',\n  ReunionTime = 'RET',\n  RotheraResearchStationTime = 'ROTT',\n  SaintPierreAndMiquelonDaylightTime = 'PMDT',\n  SaintPierreAndMiquelonStandardTime = 'PMST',\n  SakhalinIslandTime = 'SAKT',\n  SamaraTime = 'SAMT',\n  SamoaDaylightTime = 'SDT',\n  SamoaStandardTime = 'SST',\n  SeychellesTime = 'SCT',\n  ShowaStationTime = 'SYOT',\n  SingaporeStandardTime = 'SST',\n  SingaporeTime = 'SGT',\n  SolomonIslandsTime = 'SBT',\n  SouthAfricanStandardTime = 'SAST',\n  SouthGeorgiaAndTheSouthSandwichIslandsTime = 'GST',\n  SrednekolymskTime = 'SRET',\n  SriLankaStandardTime = 'SLST',\n  SurinameTime = 'SRT',\n  TahitiTime = 'TAHT',\n  TajikistanTime = 'TJT',\n  ThailandStandardTime = 'THA',\n  TimorLesteTime = 'TLT',\n  TokelauTime = 'TKT',\n  TongaTime = 'TOT',\n  TurkeyTime = 'TRT',\n  TurkmenistanTime = 'TMT',\n  TuvaluTime = 'TVT',\n  UlaanbaatarStandardTime = 'ULAT',\n  UlaanbaatarSummerTime = 'ULAST',\n  UruguayStandardTime = 'UYT',\n  UruguaySummerTime = 'UYST',\n  UzbekistanTime = 'UZT',\n  VanuatuTime = 'VUT',\n  VenezuelaStandardTime = 'VET',\n  VladivostokTime = 'VLAT',\n  VolgogradTime = 'VOLT',\n  VostokStationTime = 'VOST',\n  WakeIslandTime = 'WAKT',\n  WestAfricaSummerTime = 'WAST',\n  WestAfricaTime = 'WAT',\n  WestGreenlandSummerTime = 'WGST',\n  WestGreenlandTime = 'WGT',\n  WestKazakhstanTime = 'WKT',\n  WesternEuropeanSummerTime = 'WEDT',\n  WesternEuropeanTime = 'WET',\n  WesternIndonesianTime = 'WIT',\n  WesternStandardTime = 'WST',\n  YakutskTime = 'YAKT',\n  YekaterinburgTime = 'YEKT',\n}\n\nexport const AcreTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AcreTime,\n  name: 'Acre Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const AfghanistanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AfghanistanTime,\n  name: 'Afghanistan Time',\n  offset: TimezoneOffset.UTC_PLUS_4_30,\n};\n\nexport const AIXCentralEuropeanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AIXCentralEuropeanTime,\n  name: 'AIX Central European Time',\n  offset: TimezoneOffset.UTC_PLUS_1,\n};\n\nexport const AlaskaDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.AlaskaDaylightTime,\n  name: 'Alaska Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_8,\n};\n\nexport const AlaskaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AlaskaStandardTime,\n  name: 'Alaska Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_9,\n};\n\nexport const AlmaAtaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AlmaAtaTime,\n  name: 'Alma-Ata Time',\n  offset: TimezoneOffset.UTC_PLUS_6,\n};\n\nexport const AmazonSummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AmazonSummerTime,\n  name: 'Amazon Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const AmazonTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AmazonTime,\n  name: 'Amazon Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const AnadyrTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AnadyrTime,\n  name: 'Anadyr Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const AqtobeTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AqtobeTime,\n  name: 'Aqtobe Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const ArabiaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ArabiaStandardTime,\n  name: 'Arabia Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const ArgentinaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ArgentinaTime,\n  name: 'Argentina Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const ArmeniaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ArmeniaTime,\n  name: 'Armenia Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const AtlanticDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.AtlanticDaylightTime,\n  name: 'Atlantic Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const AtlanticStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AtlanticStandardTime,\n  name: 'Atlantic Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const AustralianCentralDaylightSavingTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.AustralianCentralDaylightSavingTime,\n  name: 'Australian Central Daylight Saving Time',\n  offset: TimezoneOffset.UTC_PLUS_10_30,\n};\n\nexport const AustralianCentralStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AustralianCentralStandardTime,\n  name: 'Australian Central Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_9_30,\n};\n\nexport const AustralianCentralWesternStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AustralianCentralWesternStandardTime,\n  name: 'Australian Central Western Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8_45,\n};\n\nexport const AustralianEasternDaylightSavingTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.AustralianEasternDaylightSavingTime,\n  name: 'Australian Eastern Daylight Saving Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const AustralianEasternStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AustralianEasternStandardTime,\n  name: 'Australian Eastern Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_10,\n};\n\nexport const AustralianEasternTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AustralianEasternTime,\n  name: 'Australian Eastern Time',\n  offset: TimezoneOffset.UTC_PLUS_10,\n};\n\nexport const AustralianWesternStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AustralianWesternStandardTime,\n  name: 'Australian Western Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const AzerbaijanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AzerbaijanTime,\n  name: 'Azerbaijan Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const AzoresStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.AzoresStandardTime,\n  name: 'Azores Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_1,\n};\n\nexport const AzoresSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.AzoresSummerTime,\n  name: 'Azores Summer Time',\n  offset: TimezoneOffset.UTC_0,\n};\n\nexport const BakerIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.BakerIslandTime,\n  name: 'Baker Island Time',\n  offset: TimezoneOffset.UTC_MINUS_12,\n};\n\nexport const BangladeshStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.BangladeshStandardTime,\n  name: 'Bangladesh Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_6,\n};\n\nexport const BhutanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.BhutanTime,\n  name: 'Bhutan Time',\n  offset: TimezoneOffset.UTC_PLUS_6,\n};\n\nexport const BoliviaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.BoliviaTime,\n  name: 'Bolivia Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const BougainvilleStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.BougainvilleStandardTime,\n  name: 'Bougainville Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const BrasiliaSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.BrasiliaSummerTime,\n  name: 'Brasilia Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_2,\n};\n\nexport const BrasiliaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.BrasiliaTime,\n  name: 'Brasilia Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const BritishIndianOceanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.BritishIndianOceanTime,\n  name: 'British Indian Ocean Time',\n  offset: TimezoneOffset.UTC_PLUS_6,\n};\n\nexport const BritishSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.BritishSummerTime,\n  name: 'British Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_1,\n};\n\nexport const BruneiTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.BruneiTime,\n  name: 'Brunei Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const CapeVerdeTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CapeVerdeTime,\n  name: 'Cape Verde Time',\n  offset: TimezoneOffset.UTC_MINUS_1,\n};\n\nexport const CentralAfricaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CentralAfricaTime,\n  name: 'Central Africa Time',\n  offset: TimezoneOffset.UTC_PLUS_2,\n};\n\nexport const CentralDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.CentralDaylightTime,\n  name: 'Central Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const CentralEuropeanSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.CentralEuropeanSummerTime,\n  name: 'Central European Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_2,\n};\n\nexport const CentralEuropeanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CentralEuropeanTime,\n  name: 'Central European Time',\n  offset: TimezoneOffset.UTC_PLUS_1,\n};\n\nexport const CentralIndonesiaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CentralIndonesiaTime,\n  name: 'Central Indonesia Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const CentralStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CentralStandardTime,\n  name: 'Central Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_6,\n};\n\nexport const CentralTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CentralTime,\n  name: 'Central Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const CentralWesternStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CentralWesternStandardTime,\n  name: 'Central Western Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8_45,\n};\n\nexport const ChamorroStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ChamorroStandardTime,\n  name: 'Chamorro Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_10,\n};\n\nexport const ChathamDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.ChathamDaylightTime,\n  name: 'Chatham Daylight Time',\n  offset: TimezoneOffset.UTC_PLUS_13_45,\n};\n\nexport const ChathamStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ChathamStandardTime,\n  name: 'Chatham Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_12_45,\n};\n\nexport const ChileStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ChileStandardTime,\n  name: 'Chile Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const ChileSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.ChileSummerTime,\n  name: 'Chile Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const ChinaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ChinaStandardTime,\n  name: 'China Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const ChoibalsanStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ChoibalsanStandardTime,\n  name: 'Choibalsan Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const ChoibalsanSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.ChoibalsanSummerTime,\n  name: 'Choibalsan Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_9,\n};\n\nexport const ChristmasIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ChristmasIslandTime,\n  name: 'Christmas Island Time',\n  offset: TimezoneOffset.UTC_PLUS_7,\n};\n\nexport const ChuukTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ChuukTime,\n  name: 'Chuuk Time',\n  offset: TimezoneOffset.UTC_PLUS_10,\n};\n\nexport const ClipptertonIslandStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ClipptertonIslandStandardTime,\n  name: 'Clippterton Island Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_8,\n};\n\nexport const CocosIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CocosIslandsTime,\n  name: 'Cocos Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_6_30,\n};\n\nexport const ColombiaSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.ColombiaSummerTime,\n  name: 'Colombia Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const ColombiaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ColombiaTime,\n  name: 'Colombia Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const CookIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CookIslandTime,\n  name: 'Cook Island Time',\n  offset: TimezoneOffset.UTC_MINUS_10,\n};\n\nexport const CoordinatedUniversalTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CoordinatedUniversalTime,\n  name: 'Coordinated Universal Time',\n  offset: TimezoneOffset.UTC_0,\n};\n\nexport const CubaDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.CubaDaylightTime,\n  name: 'Cuba Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const CubaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.CubaStandardTime,\n  name: 'Cuba Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const DavisTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.DavisTime,\n  name: 'Davis Time',\n  offset: TimezoneOffset.UTC_PLUS_7,\n};\n\nexport const DumontDUrvilleTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.DumontDUrvilleTime,\n  name: \"Dumont D'Urville Time\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n};\n\nexport const EastAfricaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EastAfricaTime,\n  name: 'East Africa Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const EasterIslandStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EasterIslandStandardTime,\n  name: 'Easter Island Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_6,\n};\n\nexport const EasterIslandSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.EasterIslandSummerTime,\n  name: 'Easter Island Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const EasternCaribbeanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EasternCaribbeanTime,\n  name: 'Eastern Caribbean Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const EasternDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.EasternDaylightTime,\n  name: 'Eastern Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const EasternEuropeanSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.EasternEuropeanSummerTime,\n  name: 'Eastern European Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const EasternEuropeanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EasternEuropeanTime,\n  name: 'Eastern European Time',\n  offset: TimezoneOffset.UTC_PLUS_2,\n};\n\nexport const EasternGreenlandSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.EasternGreenlandSummerTime,\n  name: 'Eastern Greenland Summer Time',\n  offset: TimezoneOffset.UTC_0,\n};\n\nexport const EasternGreenlandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EasternGreenlandTime,\n  name: 'Eastern Greenland Time',\n  offset: TimezoneOffset.UTC_MINUS_1,\n};\n\nexport const EasternIndonesianTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EasternIndonesianTime,\n  name: 'Eastern Indonesian Time',\n  offset: TimezoneOffset.UTC_PLUS_9,\n};\n\nexport const EasternStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EasternStandardTime,\n  name: 'Eastern Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const EasternTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EasternTime,\n  name: 'Eastern Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const EcuadorTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.EcuadorTime,\n  name: 'Ecuador Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const FalklandIslandsSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.FalklandIslandsSummerTime,\n  name: 'Falkland Islands Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const FalklandIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.FalklandIslandsTime,\n  name: 'Falkland Islands Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const FernandoDeNoronhaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.FernandoDeNoronhaTime,\n  name: 'Fernando de Noronha Time',\n  offset: TimezoneOffset.UTC_MINUS_2,\n};\n\nexport const FijiTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.FijiTime,\n  name: 'Fiji Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const FrenchGuianaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.FrenchGuianaTime,\n  name: 'French Guiana Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const FrenchSouthernAndAntarcticTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.FrenchSouthernAndAntarcticTime,\n  name: 'French Southern and Antarctic Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const FurtherEasternEuropeanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.FurtherEasternEuropeanTime,\n  name: 'Further Eastern European Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const GalapagosTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.GalapagosTime,\n  name: 'Galapagos Time',\n  offset: TimezoneOffset.UTC_MINUS_6,\n};\n\nexport const GambierIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.GambierIslandTime,\n  name: 'Gambier Island Time',\n  offset: TimezoneOffset.UTC_MINUS_9,\n};\n\nexport const GambierIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.GambierIslandsTime,\n  name: 'Gambier Islands Time',\n  offset: TimezoneOffset.UTC_MINUS_9,\n};\n\nexport const GeorgiaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.GeorgiaStandardTime,\n  name: 'Georgia Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const GilbertIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.GilbertIslandTime,\n  name: 'Gilbert Island Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const GreenwichMeanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.GreenwichMeanTime,\n  name: 'Greenwich Mean Time',\n  offset: TimezoneOffset.UTC_0,\n};\n\nexport const GulfStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.GulfStandardTime,\n  name: 'Gulf Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const GuyanaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.GuyanaTime,\n  name: 'Guyana Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const HawaiiAleutianDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.HawaiiAleutianDaylightTime,\n  name: 'Hawaii-Aleutian Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_9,\n};\n\nexport const HawaiiAleutianStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.HawaiiAleutianStandardTime,\n  name: 'Hawaii-Aleutian Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_10,\n};\n\nexport const HeardAndMcDonaldIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.HeardAndMcDonaldIslandsTime,\n  name: 'Heard and McDonald Islands Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const HongKongTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.HongKongTime,\n  name: 'Hong Kong Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const HovdSummerTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.HovdSummerTime,\n  name: 'Hovd Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const HovdTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.HovdTime,\n  name: 'Hovd Time',\n  offset: TimezoneOffset.UTC_PLUS_7,\n};\n\nexport const IndianOceanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.IndianOceanTime,\n  name: 'Indian Ocean Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const IndianStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.IndianStandardTime,\n  name: 'Indian Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_5_30,\n};\n\nexport const IndochinaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.IndochinaTime,\n  name: 'Indochina Time',\n  offset: TimezoneOffset.UTC_PLUS_7,\n};\n\nexport const InternationalDayLineWestTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.InternationalDayLineWestTime,\n  name: 'International Day Line West Time',\n  offset: TimezoneOffset.UTC_MINUS_12,\n};\n\nexport const IranDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.IranDaylightTime,\n  name: 'Iran Daylight Time',\n  offset: TimezoneOffset.UTC_PLUS_4_30,\n};\n\nexport const IranStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.IranStandardTime,\n  name: 'Iran Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_3_30,\n};\n\nexport const IrishStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.IrishStandardTime,\n  name: 'Irish Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_1,\n};\n\nexport const IrkutskTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.IrkutskTime,\n  name: 'Irkutsk Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const IsraelDaylightTime: TimezoneDetails = {\n  dst: {\n    is: true,\n    uses: true,\n  },\n  id: Timezones.IsraelDaylightTime,\n  name: 'Israel Daylight Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const IsraelStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.IsraelStandardTime,\n  name: 'Israel Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_2,\n};\n\nexport const JapanStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.JapanStandardTime,\n  name: 'Japan Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_9,\n};\n\nexport const KaliningradTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.KaliningradTime,\n  name: 'Kaliningrad Time',\n  offset: TimezoneOffset.UTC_PLUS_2,\n};\n\nexport const KamchatkaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.KamchatkaTime,\n  name: 'Kamchatka Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const KoreaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.KoreaStandardTime,\n  name: 'Korea Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_9,\n};\n\nexport const KosraeTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.KosraeTime,\n  name: 'Kosrae Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const KrasnoyarskTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.KrasnoyarskTime,\n  name: 'Krasnoyarsk Time',\n  offset: TimezoneOffset.UTC_PLUS_7,\n};\n\nexport const KyrgyzstanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.KyrgyzstanTime,\n  name: 'Kyrgyzstan Time',\n  offset: TimezoneOffset.UTC_PLUS_6,\n};\n\nexport const LineIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.LineIslandsTime,\n  name: 'Line Islands Time',\n  offset: TimezoneOffset.UTC_PLUS_14,\n};\n\nexport const LordHoweStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.LordHoweStandardTime,\n  name: 'Lord Howe Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_10_30,\n};\n\nexport const LordHoweSummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.LordHoweSummerTime,\n  name: 'Lord Howe Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const MacquarieIslandStationTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MacquarieIslandStationTime,\n  name: 'Macquarie Island Station Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const MagadanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MagadanTime,\n  name: 'Magadan Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const MalaysiaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MalaysiaStandardTime,\n  name: 'Malaysia Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const MalaysiaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MalaysiaTime,\n  name: 'Malaysia Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const MaldivesTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MaldivesTime,\n  name: 'Maldives Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const MarquesasIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MarquesasIslandsTime,\n  name: 'Marquesas Islands Time',\n  offset: TimezoneOffset.UTC_PLUS_9_30,\n};\n\nexport const MarshallIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MarshallIslandsTime,\n  name: 'Marshall Islands Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const MauritiusTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MauritiusTime,\n  name: 'Mauritius Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const MawsonStationTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MawsonStationTime,\n  name: 'Mawson Station Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const MiddleEuropeanSummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MiddleEuropeanSummerTime,\n  name: 'Middle European Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_2,\n};\n\nexport const MiddleEuropeanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MiddleEuropeanTime,\n  name: 'Middle European Time',\n  offset: TimezoneOffset.UTC_PLUS_1,\n};\n\nexport const MoscowTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MoscowTime,\n  name: 'Moscow Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const MountainDaylightTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MountainDaylightTime,\n  name: 'Mountain Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_6,\n};\n\nexport const MountainStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MountainStandardTime,\n  name: 'Mountain Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_7,\n};\n\nexport const MyanmarStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.MyanmarStandardTime,\n  name: 'Myanmar Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_6_30,\n};\n\nexport const NepalTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.NepalTime,\n  name: 'Nepal Time',\n  offset: TimezoneOffset.UTC_PLUS_5_45,\n};\n\nexport const NauruTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.NauruTime,\n  name: 'Nauru Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const NewCaledoniaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.NewCaledoniaTime,\n  name: 'New Caledonia Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const NewZealandDaylightTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.NewZealandDaylightTime,\n  name: 'New Zealand Daylight Time',\n  offset: TimezoneOffset.UTC_PLUS_13,\n};\n\nexport const NewZealandStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.NewZealandStandardTime,\n  name: 'New Zealand Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const NewfoundlandDaylightTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.NewfoundlandDaylightTime,\n  name: 'Newfoundland Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_2_30,\n};\n\nexport const NewfoundlandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n\n  id: Timezones.NewfoundlandTime,\n  name: 'Newfoundland Time',\n  offset: TimezoneOffset.UTC_MINUS_3_30,\n};\n\nexport const NiueTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.NiueTime,\n  name: 'Niue Time',\n  offset: TimezoneOffset.UTC_MINUS_11,\n};\n\nexport const NorfolkIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n\n  id: Timezones.NorfolkIslandTime,\n  name: 'Norfolk Island Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const NovosibirskTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.NovosibirskTime,\n  name: 'Novosibirsk Time',\n  offset: TimezoneOffset.UTC_PLUS_7,\n};\n\nexport const OmskTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.OmskTime,\n  name: 'Omsk Time',\n  offset: TimezoneOffset.UTC_PLUS_6,\n};\n\nexport const OralTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.OralTime,\n  name: 'Oral Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const PacificDaylightTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PacificDaylightTime,\n  name: 'Pacific Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_7,\n};\n\nexport const PacificStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PacificStandardTime,\n  name: 'Pacific Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_8,\n};\n\nexport const PakistanStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PakistanStandardTime,\n  name: 'Pakistan Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const PalauTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PalauTime,\n  name: 'Palau Time',\n  offset: TimezoneOffset.UTC_PLUS_9,\n};\n\nexport const PapuaNewGuineaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PapuaNewGuineaTime,\n  name: 'Papua New Guinea Time',\n  offset: TimezoneOffset.UTC_PLUS_10,\n};\n\nexport const ParaguaySummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ParaguaySummerTime,\n  name: 'Paraguay Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const ParaguayTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ParaguayTime,\n  name: 'Paraguay Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const PeruTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PeruTime,\n  name: 'Peru Time',\n  offset: TimezoneOffset.UTC_MINUS_5,\n};\n\nexport const PhilippineStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PhilippineStandardTime,\n  name: 'Philippine Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const PhillipineTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PhilippineTime,\n  name: 'Philippine Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const PhoenixIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PhoenixIslandTime,\n  name: 'Phoenix Island Time',\n  offset: TimezoneOffset.UTC_PLUS_13,\n};\n\nexport const PitcairnTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PitcairnTime,\n  name: 'Pitcairn Time',\n  offset: TimezoneOffset.UTC_MINUS_8,\n};\n\nexport const PohnpeiStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.PohnpeiStandardTime,\n  name: 'Pohnpei Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const ReunionTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ReunionTime,\n  name: 'Reunion Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const RotheraResearchStationTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.RotheraResearchStationTime,\n  name: 'Rothera Research Station Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const SaintPierreAndMiquelonDaylightTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SaintPierreAndMiquelonDaylightTime,\n  name: 'Saint Pierre and Miquelon Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_2,\n};\n\nexport const SaintPierreAndMiquelonStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SaintPierreAndMiquelonStandardTime,\n  name: 'Saint Pierre and Miquelon Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const SakhalinIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SakhalinIslandTime,\n  name: 'Sakhalin Island Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const SamaraTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SamaraTime,\n  name: 'Samara Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const SamoaDaylightTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SamoaDaylightTime,\n  name: 'Samoa Daylight Time',\n  offset: TimezoneOffset.UTC_MINUS_10,\n};\n\nexport const SamoaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SamoaStandardTime,\n  name: 'Samoa Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_11,\n};\n\nexport const SeychellesTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SeychellesTime,\n  name: 'Seychelles Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const ShowaStationTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ShowaStationTime,\n  name: 'Showa Station Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const SingaporeStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SingaporeStandardTime,\n  name: 'Singapore Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const SingaporeTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SingaporeTime,\n  name: 'Singapore Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const SolomonIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SolomonIslandsTime,\n  name: 'Solomon Islands Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const SouthAfricanStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SouthAfricanStandardTime,\n  name: 'South African Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_2,\n};\n\nexport const SouthGeorgiaAndTheSouthSandwichIslandsTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SouthGeorgiaAndTheSouthSandwichIslandsTime,\n  name: 'South Georgia and the South Sandwich Islands Time',\n  offset: TimezoneOffset.UTC_MINUS_2,\n};\n\nexport const SrednekolymskTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SrednekolymskTime,\n  name: 'Srednekolymsk Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const SriLankaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SriLankaStandardTime,\n  name: 'Sri Lanka Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_5_30,\n};\n\nexport const SurinameTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.SurinameTime,\n  name: 'Suriname Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const TahitiTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.TahitiTime,\n  name: 'Tahiti Time',\n  offset: TimezoneOffset.UTC_MINUS_10,\n};\n\nexport const TajikistanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.TajikistanTime,\n  name: 'Tajikistan Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const ThailandStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.ThailandStandardTime,\n  name: 'Thailand Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_7,\n};\n\nexport const TimorLesteTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.TimorLesteTime,\n  name: 'Timor-Leste Time',\n  offset: TimezoneOffset.UTC_PLUS_9,\n};\n\nexport const TokelauTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.TokelauTime,\n  name: 'Tokelau Time',\n  offset: TimezoneOffset.UTC_PLUS_13,\n};\n\nexport const TongaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.TongaTime,\n  name: 'Tonga Time',\n  offset: TimezoneOffset.UTC_PLUS_13,\n};\n\nexport const TurkeyTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.TurkeyTime,\n  name: 'Turkey Time',\n  offset: TimezoneOffset.UTC_PLUS_3,\n};\n\nexport const TurkmenistanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.TurkmenistanTime,\n  name: 'Turkmenistan Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const TuvaluTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.TuvaluTime,\n  name: 'Tuvalu Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const UlaanbaatarStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.UlaanbaatarStandardTime,\n  name: 'Ulaanbaatar Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const UlaanbaatarSummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.UlaanbaatarSummerTime,\n  name: 'Ulaanbaatar Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_9,\n};\n\nexport const UruguayStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.UruguayStandardTime,\n  name: 'Uruguay Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const UruguaySummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.UruguaySummerTime,\n  name: 'Uruguay Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_2,\n};\n\nexport const UzbekistanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.UzbekistanTime,\n  name: 'Uzbekistan Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const VanuatuTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.VanuatuTime,\n  name: 'Vanuatu Time',\n  offset: TimezoneOffset.UTC_PLUS_11,\n};\n\nexport const VenezuelaStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.VenezuelaStandardTime,\n  name: 'Venezuela Standard Time',\n  offset: TimezoneOffset.UTC_MINUS_4,\n};\n\nexport const VladivostokTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.VladivostokTime,\n  name: 'Vladivostok Time',\n  offset: TimezoneOffset.UTC_PLUS_10,\n};\n\nexport const VolgogradTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.VolgogradTime,\n  name: 'Volgograd Time',\n  offset: TimezoneOffset.UTC_PLUS_4,\n};\n\nexport const VostokStationTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.VostokStationTime,\n  name: 'Vostok Station Time',\n  offset: TimezoneOffset.UTC_PLUS_6,\n};\n\nexport const WakeIslandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WakeIslandTime,\n  name: 'Wake Island Time',\n  offset: TimezoneOffset.UTC_PLUS_12,\n};\n\nexport const WestAfricaSummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WestAfricaSummerTime,\n  name: 'West Africa Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_2,\n};\n\nexport const WestAfricaTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WestAfricaTime,\n  name: 'West Africa Time',\n  offset: TimezoneOffset.UTC_PLUS_1,\n};\n\nexport const WestGreenlandSummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WestGreenlandSummerTime,\n  name: 'West Greenland Summer Time',\n  offset: TimezoneOffset.UTC_MINUS_2,\n};\n\nexport const WestGreenlandTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WestGreenlandTime,\n  name: 'West Greenland Time',\n  offset: TimezoneOffset.UTC_MINUS_3,\n};\n\nexport const WestKazakhstanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WestKazakhstanTime,\n  name: 'West Kazakhstan Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n\nexport const WesternEuropeanSummerTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WesternEuropeanSummerTime,\n  name: 'Western European Summer Time',\n  offset: TimezoneOffset.UTC_PLUS_1,\n};\n\nexport const WesternEuropeanTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WesternEuropeanTime,\n  name: 'Western European Time',\n  offset: TimezoneOffset.UTC_0,\n};\n\nexport const WesternIndonesianTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WesternIndonesianTime,\n  name: 'Western Indonesian Time',\n  offset: TimezoneOffset.UTC_PLUS_7,\n};\n\nexport const WesternStandardTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.WesternStandardTime,\n  name: 'Western Standard Time',\n  offset: TimezoneOffset.UTC_PLUS_8,\n};\n\nexport const YakutskTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.YakutskTime,\n  name: 'Yakutsk Time',\n  offset: TimezoneOffset.UTC_PLUS_9,\n};\n\nexport const YekaterinburgTime: TimezoneDetails = {\n  dst: {\n    is: false,\n    uses: true,\n  },\n  id: Timezones.YekaterinburgTime,\n  name: 'Yekaterinburg Time',\n  offset: TimezoneOffset.UTC_PLUS_5,\n};\n", "export enum Region {\n  Africa = 'Africa',\n  Americas = 'Americas',\n  Asia = 'Asia',\n  Europe = 'Europe',\n  Oceania = 'Oceania',\n  Polar = 'Polar',\n}\n\nexport enum SubRegion {\n  CentralAmerica = 'Central America',\n  EasternAsia = 'Eastern Asia',\n  EasternEurope = 'Eastern Europe',\n  EasternAfrica = 'Eastern Africa',\n  MiddleAfrica = 'Middle Africa',\n  MiddleEast = 'Middle East',\n  NorthernAfrica = 'Northern Africa',\n  NorthernAmerica = 'Northern America',\n  NorthernEurope = 'Northern Europe',\n  Polynesia = 'Polynesia',\n  SouthAmerica = 'South America',\n  SouthernAfrica = 'Southern Africa',\n  SouthernAsia = 'Southern Asia',\n  SouthernEurope = 'Southern Europe',\n  WesternAfrica = 'Western Africa',\n  WesternAsia = 'Western Asia',\n  WesternEurope = 'Western Europe',\n  WesternAustralia = 'Western Australia',\n}\n", "import { CurrencyCode } from '../currency/index.js';\nimport { LocaleCode } from '../locale/index.js';\nimport { TimezoneRegions } from '../time/region.js';\nimport { TimezoneOffset } from '../time/timezone.js';\nimport { Timezones } from '../time/timezones.js';\nimport { CountryCode } from './country.js';\nimport { Country } from './country';\nimport { Region, SubRegion } from './region.js';\n\nexport const Countries: Record<Country['name']['short'], Country> = {\n  Afghanistan: {\n    i18n: {\n      calling_codes: [93],\n      currencies: [CurrencyCode.AfghanistanAfghani],\n      languages: [\n        LocaleCode.Pashto,\n        LocaleCode.Dari,\n        LocaleCode.Turkmen,\n        LocaleCode.Uzbek,\n      ],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_4_30],\n        regions: [TimezoneRegions.AsiaKabul],\n        timezones: [Timezones.AfghanistanTime],\n      },\n    },\n    id: CountryCode.Afghanistan,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE6\uD83C\uDDEB',\n        emoji_unicode: 'U+1F1E6 U+1F1EB',\n        svg: 'https://www.countryflags.io/af/flat/64.svg',\n      },\n      tld: ['.af'],\n    },\n    iso: {\n      alpha2: CountryCode.Afghanistan,\n      alpha3: 'AFG',\n      numeric: '004',\n    },\n    name: {\n      alt_spellings: ['AF', 'Af\u0121\u0101nist\u0101n'],\n      demonym: 'Afghan',\n      native: {\n        endonym: '\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646',\n      },\n      official: 'Islamic Republic of Afghanistan',\n      short: 'Afghanistan',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Afghanistan',\n        [LocaleCode.Albanian]: 'Shqip\u00EBri',\n        [LocaleCode.Amharic]: '\u12A0\u134D\u130B\u1295',\n        [LocaleCode.Arabic]: '\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646',\n        [LocaleCode.Armenian]: '\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576',\n        [LocaleCode.Azerbaijani]: 'Az\u0259rbaycan',\n        [LocaleCode.Bashkir]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Basque]: 'Afganist\u00E1n',\n        [LocaleCode.Belarusian]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Bengali]: '\u0986\u09AB\u0997\u09BE\u09A8\u09BF\u09B8\u09CD\u09A4\u09BE\u09A8',\n        [LocaleCode.Berber]: '\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646',\n        [LocaleCode.Bhutani]: '\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F51\u0F7C\u0F53\u0F0B\u0F63\u0F7A\u0F0B\u0F66\u0F90\u0F51\u0F0B\u0F46\u0F0D',\n        [LocaleCode.Bosnian]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Breton]: 'Afganistan',\n        [LocaleCode.Bulgarian]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Burmese]: '\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A',\n        [LocaleCode.Catalan]: 'Afganistan',\n        [LocaleCode.Chinese]: '\u963F\u5BCC\u6C57',\n        [LocaleCode.Croatian]: 'Afganistan',\n        [LocaleCode.Czech]: 'Afganistan',\n        [LocaleCode.Danish]: 'Afghanistan',\n        [LocaleCode.Dutch]: 'Afghanistan',\n        [LocaleCode.English]: 'Afghanistan',\n        [LocaleCode.Esperanto]: 'Afganistan',\n        [LocaleCode.Estonian]: 'Afganistan',\n        [LocaleCode.Finnish]: 'Afghanistan',\n        [LocaleCode.French]: 'Afghanistan',\n        [LocaleCode.Frisian]: 'Afghanistan',\n        [LocaleCode.Galician]: 'Afganist\u00E1n',\n        [LocaleCode.Georgian]: '\u10D0\u10D5\u10E6\u10D0\u10DC\u10D4\u10D7\u10D8',\n        [LocaleCode.German]: 'Afghanistan',\n        [LocaleCode.Greenlandic]: 'Afghanistan',\n        [LocaleCode.Greek]: '\u0391\u03C6\u03B3\u03B1\u03BD\u03B9\u03C3\u03C4\u03AC\u03BD',\n        [LocaleCode.Gujarati]: '\u0A85\u0AAB\u0A97\u0ABE\u0AA8\u0ABF\u0AB8\u0ACD\u0AA4\u0ABE\u0AA8',\n        [LocaleCode.Haitian]: 'Afghanistan',\n        [LocaleCode.Hausa]: 'Afghanistan',\n        [LocaleCode.Hebrew]: '\u05D0\u05E4\u05D2\u05E0\u05D9\u05E1\u05D8\u05DF',\n        [LocaleCode.Hindi]: '\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928',\n        [LocaleCode.Hungarian]: 'Afganistan',\n        [LocaleCode.Icelandic]: 'Afghanistan',\n        [LocaleCode.Igbo]: 'Afghanistan',\n        [LocaleCode.Indonesian]: 'Afghanistan',\n        [LocaleCode.Irish]: 'Afghanistan',\n        [LocaleCode.Italian]: 'Afghanistan',\n        [LocaleCode.Japanese]: '\u30A2\u30D5\u30AC\u30CB\u30B9\u30BF\u30F3',\n        [LocaleCode.Javanese]: 'Afghanistan',\n        [LocaleCode.Kannada]: '\u0C85\u0CAB\u0C97\u0CBE\u0CA8\u0CBF\u0CB8\u0CCD\u0CA4\u0CBE\u0CA8',\n        [LocaleCode.Kazakh]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Khmer]: '\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17B7\u1780',\n        [LocaleCode.Korean]: '\uC544\uD504\uAC00\uB2C8\uC2A4\uD0C4',\n        [LocaleCode.Kurdish]: 'Afghanistan',\n        [LocaleCode.Kyrgyz]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Lao]: '\u0EAD\u0EB2\u0E9F\u0EB2\u0EA5\u0EBD\u0E99',\n        [LocaleCode.Latin]: 'Afghanistan',\n        [LocaleCode.Latvian]: 'Afghanistan',\n        [LocaleCode.Lithuanian]: 'Afganistanas',\n        [LocaleCode.Luxembourgish]: 'Afghanistan',\n        [LocaleCode.Macedonian]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Malagasy]: 'Afghanistan',\n        [LocaleCode.Malay]: 'Afghanistan',\n        [LocaleCode.Malayalam]: '\u0D05\u0D2B\u0D17\u0D3E\u0D28\u0D3F\u0D38\u0D4D\u0D24\u0D3E\u0D28',\n        [LocaleCode.Maltese]: 'Afghanistan',\n        [LocaleCode.Maori]: 'Afghanistan',\n        [LocaleCode.Marathi]: '\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928',\n        [LocaleCode.Mongolian]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Nepali]: '\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928',\n        [LocaleCode.Norwegian]: 'Afghanistan',\n        [LocaleCode.Pashto]: '\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646',\n        [LocaleCode.Persian]: '\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646',\n        [LocaleCode.Polish]: 'Afganistan',\n        [LocaleCode.Portuguese]: 'Afghanistan',\n        [LocaleCode.Punjabi]: 'Afghanistan',\n        [LocaleCode.Romanian]: 'Afghanistan',\n        [LocaleCode.Polish]: 'Afganistan',\n        [LocaleCode.Russian]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Samoan]: 'Afghanistan',\n        [LocaleCode.Sanskrit]: '\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928',\n        [LocaleCode.Scots]: 'Afghanistan',\n        [LocaleCode.Serbian]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Sesotho]: 'Afghanistan',\n        [LocaleCode.Shona]: 'Afghanistan',\n        [LocaleCode.Sindhi]: 'Afghanistan',\n        [LocaleCode.Sinhala]: '\u0D86\u0D9C\u0DCA\u200D\u0DBB\u0DDC\u0D9A\u0DCA\u0D9A\u0DD2\u0DBA\u0DCF\u0DC0',\n        [LocaleCode.Slovak]: 'Afganistan',\n        [LocaleCode.Slovenian]: 'Afganistan',\n        [LocaleCode.Somali]: 'Afghanistan',\n        [LocaleCode.Spanish]: 'Afganist\u00E1n',\n        [LocaleCode.Sudanese]: 'Afghanistan',\n        [LocaleCode.Swahili]: 'Afghanistan',\n        [LocaleCode.Swedish]: 'Afghanistan',\n        [LocaleCode.Tagalog]: 'Afghanistan',\n        [LocaleCode.Tajik]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Tatar]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Tamil]: '\u0B86\u0BAA\u0BCD\u0BAA\u0B95\u0BBE\u0BA9\u0BBF\u0BB8\u0BCD\u0BA4\u0BBE\u0BA9\u0BCD',\n        [LocaleCode.Telugu]: '\u0C06\u0C2B\u0C4D\u0C18\u0C28\u0C3F\u0C38\u0C4D\u0C24\u0C3E\u0C28\u0C4D',\n        [LocaleCode.Thai]: '\u0E2D\u0E31\u0E1F\u0E01\u0E32\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19',\n        [LocaleCode.Tibetan]: '\u0F68\u0F55\u0F0B\u0F42\u0F7A\u0F0B\u0F53\u0F72\u0F66\u0F72\u0F0B\u0F4F\u0F7A\u0F53\u0F66\u0F72\u0F0D',\n        [LocaleCode.Turkish]: 'Afganistan',\n        [LocaleCode.Ukrainian]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Urdu]: '\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646',\n        [LocaleCode.Uzbek]: '\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D',\n        [LocaleCode.Vietnamese]: 'Afghanistan',\n        [LocaleCode.Welsh]: 'Afghanistan',\n        [LocaleCode.Xhosa]: 'Afghanistan',\n        [LocaleCode.Yiddish]: 'Afghanistan',\n        [LocaleCode.Yoruba]: 'Afghanistan',\n        [LocaleCode.Zulu]: 'Afghanistan',\n      },\n    },\n    statistics: {\n      demographics: {\n        age: {\n          distribution: [\n            { age: '0 to 14 years', percentage: 15.3 },\n            { age: '15 to 64 years', percentage: 66.7 },\n            { age: '65 years and over', percentage: 14.6 },\n          ],\n          median_age: 35.5,\n        },\n        population: {\n          largest_city: 'Kabul',\n          total: 34100000,\n        },\n      },\n      geography: {\n        area: 652230,\n        region: Region.Asia,\n        sub_region: SubRegion.SouthernAsia,\n      },\n      government: {\n        capital: 'Kabul',\n        type: 'Islamic Emirate',\n      },\n    },\n  },\n  Albania: {\n    i18n: {\n      calling_codes: [355],\n      currencies: [CurrencyCode.AlbaniaLek],\n      languages: [LocaleCode.Albanian, LocaleCode.Greek, LocaleCode.Turkish],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_1],\n        regions: [TimezoneRegions.EuropeBrussels],\n        timezones: [Timezones.CentralEuropeanTime],\n      },\n    },\n    id: CountryCode.Albania,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE6\uD83C\uDDF1',\n        emoji_unicode: 'U+1F1E6 U+1F1F1',\n        svg: 'https://www.countryflags.io/al/flat/64.svg',\n      },\n      tld: ['.al'],\n    },\n    iso: {\n      alpha2: CountryCode.Albania,\n      alpha3: 'ALB',\n      numeric: '008',\n    },\n    name: {\n      alt_spellings: ['AL', 'Shqip\u00EBri', 'Shqip\u00EBria', 'Shqipnia'],\n      demonym: 'Albanian',\n      native: {\n        endonym: 'Shqip\u00EBri',\n      },\n      official: 'Republic of Albania',\n      short: 'Albania',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Albania',\n        [LocaleCode.Albanian]: 'Albania',\n        [LocaleCode.Amharic]: '\u12A0\u120D\u1263\u1295\u12EB',\n        [LocaleCode.Arabic]: '\u0623\u0644\u0628\u0627\u0646\u064A\u0627',\n        [LocaleCode.Armenian]: '\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576',\n        [LocaleCode.Azerbaijani]: 'Az\u0259rbaycan',\n        [LocaleCode.Bashkir]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Basque]: 'Albania',\n        [LocaleCode.Belarusian]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Bengali]: '\u0986\u09B2\u09AC\u09BE\u09A8\u09BF\u09AF\u09BC\u09BE',\n        [LocaleCode.Berber]: '\u0623\u0644\u0628\u0627\u0646\u064A\u0627',\n        [LocaleCode.Bhutani]: '\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B',\n        [LocaleCode.Bosnian]: 'Albanija',\n        [LocaleCode.Breton]: 'Albania',\n        [LocaleCode.Bulgarian]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Burmese]: '\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A',\n        [LocaleCode.Catalan]: 'Alb\u00E0nia',\n        [LocaleCode.Chinese]: '\u963F\u5C14\u5DF4\u5C3C\u4E9A',\n        [LocaleCode.Croatian]: 'Albanija',\n        [LocaleCode.Czech]: 'Alb\u00E1nie',\n        [LocaleCode.Danish]: 'Albanien',\n        [LocaleCode.Dutch]: 'Albani\u00EB',\n        [LocaleCode.English]: 'Albania',\n        [LocaleCode.Esperanto]: 'Albanio',\n        [LocaleCode.Estonian]: 'Albaania',\n        [LocaleCode.Finnish]: 'Albania',\n        [LocaleCode.French]: 'Albanie',\n        [LocaleCode.Frisian]: 'Albani\u00EB',\n        [LocaleCode.Galician]: 'Alb\u00E2nia',\n        [LocaleCode.Georgian]: '\u10D0\u10DA\u10D1\u10D0\u10DC\u10D8\u10D0',\n        [LocaleCode.German]: 'Albanien',\n        [LocaleCode.Greenlandic]: 'Albania',\n        [LocaleCode.Greek]: '\u0391\u03BB\u03B2\u03B1\u03BD\u03AF\u03B1',\n        [LocaleCode.Gujarati]: '\u0A85\u0AB2\u0AAC\u0AA8\u0ABF\u0AAF\u0ABE',\n        [LocaleCode.Haitian]: 'Albanais',\n        [LocaleCode.Hausa]: 'Albania',\n        [LocaleCode.Hebrew]: '\u05D0\u05DC\u05D1\u05E0\u05D9\u05D4',\n        [LocaleCode.Hindi]: '\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E',\n        [LocaleCode.Hungarian]: 'Alb\u00E1nia',\n        [LocaleCode.Icelandic]: 'Alb\u00FAnir',\n        [LocaleCode.Igbo]: 'Albania',\n        [LocaleCode.Indonesian]: 'Albania',\n        [LocaleCode.Irish]: 'Alb\u00E1in',\n        [LocaleCode.Italian]: 'Albania',\n        [LocaleCode.Japanese]: '\u30A2\u30EB\u30D0\u30CB\u30A2',\n        [LocaleCode.Javanese]: 'Albania',\n        [LocaleCode.Kannada]: '\u0C85\u0CB2\u0CCD\u0CAC\u0CBE\u0CA8\u0CBF\u0CAF\u0CBE',\n        [LocaleCode.Kazakh]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Khmer]: '\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17C1\u179F\u17CA\u17B8',\n        [LocaleCode.Korean]: '\uC54C\uBC14\uB2C8\uC544',\n        [LocaleCode.Kurdish]: '\u0622\u0644\u0628\u0627\u0646\u06CC\u0627',\n        [LocaleCode.Kyrgyz]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Lao]: '\u0EAD\u0EB2\u0EA5\u0EB2\u0E99\u0EB5',\n        [LocaleCode.Latin]: 'Albania',\n        [LocaleCode.Latvian]: 'Alb\u0101nija',\n        [LocaleCode.Lithuanian]: 'Albanija',\n        [LocaleCode.Luxembourgish]: 'Albani\u00EB',\n        [LocaleCode.Macedonian]: '\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430',\n        [LocaleCode.Malagasy]: 'Albania',\n        [LocaleCode.Malay]: 'Albania',\n        [LocaleCode.Malayalam]: '\u0D05\u0D32\u0D4D\u0D2C\u0D3E\u0D28\u0D3F\u0D2F\u0D3E',\n        [LocaleCode.Maltese]: 'Albania',\n        [LocaleCode.Maori]: 'Albania',\n        [LocaleCode.Marathi]: '\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E',\n        [LocaleCode.Mongolian]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Nepali]: '\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E',\n        [LocaleCode.Norwegian]: 'Albania',\n        [LocaleCode.Pashto]: '\u0627\u0627\u0644\u0628\u0627\u0646\u06CC',\n        [LocaleCode.Persian]: '\u0622\u0644\u0628\u0627\u0646\u06CC',\n        [LocaleCode.Polish]: 'Albania',\n        [LocaleCode.Portuguese]: 'Alb\u00E2nia',\n        [LocaleCode.Punjabi]: '\u0A05\u0A32\u0A2C\u0A28\u0A40\u0A06',\n        [LocaleCode.Romanian]: 'Alb\u0103n',\n        [LocaleCode.Russian]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Samoan]: 'Albania',\n        [LocaleCode.Sanskrit]: 'Albani',\n        [LocaleCode.Scots]: 'Alb\u00E0inia',\n        [LocaleCode.Serbian]: '\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430',\n        [LocaleCode.Sesotho]: 'Albania',\n        [LocaleCode.Shona]: 'Albania',\n        [LocaleCode.Sindhi]: 'Albania',\n        [LocaleCode.Sinhala]: '\u0D87\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA',\n        [LocaleCode.Slovak]: 'Alb\u00E1nsko',\n        [LocaleCode.Slovenian]: 'Albanija',\n        [LocaleCode.Somali]: 'Albania',\n        [LocaleCode.Spanish]: 'Albania',\n        [LocaleCode.Sudanese]: 'Albania',\n        [LocaleCode.Swahili]: 'Albania',\n        [LocaleCode.Swedish]: 'Albanien',\n        [LocaleCode.Tagalog]: 'Albania',\n        [LocaleCode.Tajik]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Tamil]: '\u0B85\u0BB2\u0BCD\u0BAA\u0BBE\u0BA9\u0BBF\u0BAF\u0BBE',\n        [LocaleCode.Tatar]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Telugu]: '\u0C05\u0C32\u0C4D\u0C2C\u0C3E\u0C28\u0C3F\u0C2F\u0C3E',\n        [LocaleCode.Thai]: '\u0E2D\u0E31\u0E25\u0E41\u0E1A\u0E19\u0E34\u0E19\u0E35',\n        [LocaleCode.Tibetan]: '\u0F68\u0F63\u0F0B\u0F56\u0F72\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F72',\n        [LocaleCode.Turkish]: 'Albaniye',\n        [LocaleCode.Ukrainian]: '\u0410\u043B\u0431\u0430\u043D\u0456\u044F',\n        [LocaleCode.Urdu]: '\u0622\u0644\u0628\u0627\u0646\u06CC',\n        [LocaleCode.Uzbek]: '\u0410\u043B\u0431\u0430\u043D\u0438\u044F',\n        [LocaleCode.Vietnamese]: 'Albanie',\n        [LocaleCode.Welsh]: 'Albania',\n        [LocaleCode.Xhosa]: 'Albania',\n        [LocaleCode.Yiddish]: '\u05D0\u05DC\u05D1\u05E0\u05D9\u05E9',\n        [LocaleCode.Yoruba]: 'Albania',\n        [LocaleCode.Zulu]: 'Albania',\n      },\n    },\n    statistics: {\n      demographics: {\n        age: {\n          distribution: [\n            { age: '0 to 14 years', percentage: 15.3 },\n            { age: '15 to 64 years', percentage: 66.7 },\n            { age: '65 years and over', percentage: 14.6 },\n          ],\n          median_age: 35.5,\n        },\n        population: {\n          largest_city: 'Tirana',\n          total: 2853000,\n        },\n      },\n      geography: {\n        area: 28748,\n        region: Region.Europe,\n        sub_region: SubRegion.SouthernEurope,\n      },\n      government: {\n        capital: 'Tirana',\n        type: 'Republic',\n      },\n    },\n  },\n  Algeria: {\n    i18n: {\n      calling_codes: [213],\n      currencies: [CurrencyCode.AlgeriaDinar],\n      languages: [\n        LocaleCode.Arabic,\n        LocaleCode.French,\n        LocaleCode.Berber,\n        LocaleCode.Tamazight,\n      ],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_1, TimezoneOffset.UTC_PLUS_2],\n        regions: [TimezoneRegions.AfricaAlgiers],\n        timezones: [Timezones.CentralEuropeanTime],\n      },\n    },\n\n    id: CountryCode.Algeria,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE9\uD83C\uDDFF',\n        emoji_unicode: 'U+1F1E9 U+1F1FF',\n        svg: 'https://www.countryflags.io/dz/flat/64.svg',\n      },\n      tld: ['.dz', '.\u062C\u0632\u0627\u0626\u0631'],\n    },\n    iso: {\n      alpha2: CountryCode.Algeria,\n      alpha3: 'DZA',\n      numeric: '012',\n    },\n    name: {\n      alt_spellings: ['DZ', 'Dzayer', 'Alg\u00E9rie'],\n      demonym: 'Algerian',\n      native: {\n        endonym: '\u0627\u0644\u062C\u0632\u0627\u0626\u0631',\n      },\n      official: \"People's Democratic Republic of Algeria\",\n      short: 'Algeria',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Algerije',\n        [LocaleCode.Albanian]: 'Algeria',\n        [LocaleCode.Amharic]: '\u12A0\u120D\u1300\u122D\u1235',\n        [LocaleCode.Arabic]: '\u0627\u0644\u062C\u0632\u0627\u0626\u0631',\n        [LocaleCode.Armenian]: '\u0531\u056C\u0563\u0578\u0580\u056B\u0561',\n        [LocaleCode.Azerbaijani]: 'Az\u0259rbaycan',\n        [LocaleCode.Bashkir]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Basque]: 'Algeria',\n        [LocaleCode.Belarusian]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Bengali]: '\u0986\u09B2\u099C\u09C7\u09B0',\n        [LocaleCode.Berber]: '\u062C\u0632\u0627\u0626\u0631',\n        [LocaleCode.Bhutani]: '\u0F62\u0FAB\u0F7C\u0F44\u0F0B\u0F41',\n        [LocaleCode.Bosnian]: 'Al\u017Eir',\n        [LocaleCode.Breton]: 'Algeria',\n        [LocaleCode.Bulgarian]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Burmese]: '\u1021\u102C\u101B\u1015\u103A',\n        [LocaleCode.Catalan]: 'Alg\u00E8ria',\n        [LocaleCode.Chinese]: '\u963F\u5C14\u53CA\u5229\u4E9A',\n        [LocaleCode.Croatian]: 'Al\u017Eir',\n        [LocaleCode.Czech]: 'Al\u017E\u00EDrsko',\n        [LocaleCode.Danish]: 'Algeriet',\n        [LocaleCode.Dutch]: 'Algerije',\n        [LocaleCode.English]: 'Algeria',\n        [LocaleCode.Esperanto]: 'Al\u011Derio',\n        [LocaleCode.Estonian]: 'Al\u017Eira',\n        [LocaleCode.Finnish]: 'Algeria',\n        [LocaleCode.French]: 'Alg\u00E9rie',\n        [LocaleCode.Frisian]: 'Algeri\u00EB',\n        [LocaleCode.Galician]: 'Alxeria',\n        [LocaleCode.Georgian]: '\u10D0\u10DA\u10D2\u10D8\u10E3\u10E0\u10D8',\n        [LocaleCode.German]: 'Algerien',\n        [LocaleCode.Greenlandic]: 'Algeria',\n        [LocaleCode.Greek]: '\u0391\u03BB\u03B3\u03B5\u03C1\u03AF\u03B1',\n        [LocaleCode.Gujarati]: '\u0A86\u0AB2\u0AC7\u0A97\u0AB0\u0ABF\u0AAF\u0ABE',\n        [LocaleCode.Haitian]: 'Alg\u00E9rie',\n        [LocaleCode.Hausa]: 'Algeria',\n        [LocaleCode.Hebrew]: '\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4',\n        [LocaleCode.Hindi]: '\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E',\n        [LocaleCode.Hungarian]: 'Alg\u00E1r',\n        [LocaleCode.Icelandic]: 'Alg\u00FAra',\n        [LocaleCode.Igbo]: 'Algeria',\n        [LocaleCode.Indonesian]: 'Aljir',\n        [LocaleCode.Irish]: 'Alg\u00E9rie',\n        [LocaleCode.Italian]: 'Algeria',\n        [LocaleCode.Japanese]: '\u30A2\u30EB\u30B8\u30A7\u30EA\u30A2',\n        [LocaleCode.Javanese]: 'Aljir',\n        [LocaleCode.Kannada]: '\u0C86\u0CB2\u0CCD\u0C97\u0CC7\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD',\n        [LocaleCode.Kazakh]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Khmer]: '\u17A2\u17B6\u179B\u17CB\u1794\u17B6\u1793\u17B8',\n        [LocaleCode.Korean]: '\uC54C\uC81C\uB9AC',\n        [LocaleCode.Kurdish]: '\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u062C\u0632\u0627\u06CC\u0631',\n        [LocaleCode.Kyrgyz]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Lao]: '\u0EAD\u0EB2\u0EA5\u0EB2\u0E88\u0EB5\u0E99',\n        [LocaleCode.Latin]: 'Algeria',\n        [LocaleCode.Latvian]: 'Al\u017E\u012Brija',\n        [LocaleCode.Lithuanian]: 'Al\u017Eyras',\n        [LocaleCode.Luxembourgish]: 'Algeria',\n        [LocaleCode.Macedonian]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Malagasy]: 'Alg\u00E9rie',\n        [LocaleCode.Malay]: 'Aljir',\n        [LocaleCode.Malayalam]: '\u0D06\u0D32\u0D02\u0D17\u0D47\u0D30\u0D3F\u0D2F\u0D7B',\n        [LocaleCode.Maltese]: 'Alg\u00E9rie',\n        [LocaleCode.Maori]: 'Algeria',\n        [LocaleCode.Marathi]: '\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E',\n        [LocaleCode.Mongolian]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Nepali]: '\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E',\n        [LocaleCode.Norwegian]: 'Algeria',\n        [LocaleCode.Pashto]: '\u0627\u0644\u062C\u0632\u0627\u0626\u0631',\n        [LocaleCode.Persian]: '\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u0639\u0631\u0628',\n        [LocaleCode.Polish]: 'Algieria',\n        [LocaleCode.Portuguese]: 'Alg\u00E9ria',\n        [LocaleCode.Punjabi]: '\u0A06\u0A32\u0A47\u0A17\u0A40\u0A06',\n        [LocaleCode.Romanian]: 'Algeria',\n        [LocaleCode.Russian]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Samoan]: 'Algeria',\n        [LocaleCode.Sanskrit]: '\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E',\n        [LocaleCode.Scots]: 'Algeria',\n        [LocaleCode.Serbian]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Sesotho]: 'Algeria',\n        [LocaleCode.Shona]: 'Algeria',\n        [LocaleCode.Sindhi]: 'Algeria',\n        [LocaleCode.Sinhala]: '\u0D86\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA',\n        [LocaleCode.Slovak]: 'Al\u017E\u00EDrsko',\n        [LocaleCode.Slovenian]: 'Al\u017Eir',\n        [LocaleCode.Somali]: 'Algeria',\n        [LocaleCode.Spanish]: 'Algeria',\n        [LocaleCode.Sudanese]: 'Aljir',\n        [LocaleCode.Swahili]: 'Aljir',\n        [LocaleCode.Swedish]: 'Algeriet',\n        [LocaleCode.Tagalog]: 'Algeria',\n        [LocaleCode.Tajik]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Tamil]: '\u0B86\u0BB2\u0BCD\u0B95\u0BC7\u0BB0\u0BBF\u0BAF\u0BBE',\n        [LocaleCode.Tatar]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Telugu]: '\u0C06\u0C32\u0C4D\u0C17\u0C47\u0C30\u0C3F\u0C2F\u0C3E',\n        [LocaleCode.Thai]: '\u0E2D\u0E32\u0E23\u0E32\u0E01\u0E2D\u0E19',\n        [LocaleCode.Tibetan]: '\u0F68\u0F63\u0F9F\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F61\u0F72',\n        [LocaleCode.Turkish]: 'Cezayir',\n        [LocaleCode.Ukrainian]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Urdu]: '\u0622\u0644\u062C\u06CC\u0631',\n        [LocaleCode.Uzbek]: '\u0410\u043B\u0436\u0438\u0440',\n        [LocaleCode.Vietnamese]: '\u1EA2\u0301\u1EA1\u1EA3\u1EAD\u1EB5',\n        [LocaleCode.Welsh]: 'Algeria',\n        [LocaleCode.Xhosa]: 'Algeria',\n        [LocaleCode.Yiddish]: '\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4',\n        [LocaleCode.Yoruba]: 'Algeria',\n        [LocaleCode.Zulu]: 'Algeria',\n      },\n    },\n    statistics: {\n      demographics: {\n        age: {\n          distribution: [\n            { age: '0 to 14 years', percentage: 15.3 },\n            { age: '15 to 64 years', percentage: 66.7 },\n            { age: '65 years and over', percentage: 14.6 },\n          ],\n          median_age: 35.5,\n        },\n        population: {\n          largest_city: 'Oran',\n          total: 37100000,\n        },\n      },\n      geography: {\n        area: 2381740,\n        region: Region.Africa,\n        sub_region: SubRegion.NorthernAfrica,\n      },\n      government: {\n        capital: 'Algiers',\n        type: 'Republic',\n      },\n    },\n  },\n  AmericanSamoa: {\n    i18n: {\n      calling_codes: [1684],\n      currencies: [CurrencyCode.AmericanSamoaTala],\n\n      languages: [LocaleCode.English, LocaleCode.Samoan],\n      tz: {\n        offsets: [TimezoneOffset.UTC_MINUS_11],\n        regions: [TimezoneRegions.PacificSamoa],\n        timezones: [Timezones.SamoaStandardTime],\n      },\n    },\n    id: CountryCode.AmericanSamoa,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE6\uD83C\uDDF8',\n        emoji_unicode: 'U+1F1E6 U+1F1F8',\n        svg: 'https://www.countryflags.io/as/flat/64.svg',\n      },\n      tld: ['.as'],\n    },\n    iso: {\n      alpha2: CountryCode.AmericanSamoa,\n      alpha3: 'ASM',\n      numeric: '016',\n    },\n    name: {\n      alt_spellings: ['AS', 'Amerika S\u0101moa', 'Amelika S\u0101moa', 'S\u0101moa Amelika'],\n      demonym: 'American Samoan',\n      native: {\n        endonym: 'American Samoa',\n      },\n      official: 'American Samoa',\n      short: 'American Samoa',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Amerikaans Samoa',\n        [LocaleCode.Albanian]: 'Samoa Amerikane',\n        [LocaleCode.Amharic]: '\u1233\u121E\u12A0\u122D',\n        [LocaleCode.Arabic]: '\u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629',\n        [LocaleCode.Armenian]: '\u054D\u0561\u0570\u0561\u0574\u0561\u056C\u056B\u0561',\n        [LocaleCode.Azerbaijani]: 'Samoa Amerikana',\n        [LocaleCode.Bashkir]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Basque]: 'Samoa Amerikana',\n        [LocaleCode.Belarusian]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Bengali]: '\u0986\u09AE\u09C7\u09B0\u09BF\u0995\u09BE\u09A8 \u09B8\u09BE\u09AE\u09CB\u09AF\u09BC\u09BE',\n        [LocaleCode.Berber]: '\u062C\u0632\u0631 \u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629',\n        [LocaleCode.Bhutani]: '\u0F68\u0F62\u0F92\u0FB1\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F58\u0F44\u0F66\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F66\u0F90\u0F56\u0F66\u0F0B\u0F62\u0F92\u0FB1\u0F74\u0F51\u0F0B\u0F46\u0F7A\u0F53\u0F0B\u0F54\u0F7C\u0F0D',\n        [LocaleCode.Bosnian]: 'Ameri\u010Dka Samoa',\n        [LocaleCode.Breton]: 'Samoa Amerikan',\n        [LocaleCode.Bulgarian]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Burmese]: '\u1021\u1019\u1039\u1038\u1019\u101B\u102D\u102F\u1018\u102C\u101E\u102C',\n        [LocaleCode.Catalan]: 'Samoa Americana',\n        [LocaleCode.Chinese]: '\u7F8E\u5C5E\u8428\u6469\u4E9A',\n        [LocaleCode.Croatian]: 'Ameri\u010Dka Samoa',\n        [LocaleCode.Czech]: 'Americk\u00E1 Samoa',\n        [LocaleCode.Danish]: 'Amerikansk Samoa',\n        [LocaleCode.Dutch]: 'Amerikaans Samoa',\n        [LocaleCode.English]: 'American Samoa',\n        [LocaleCode.Esperanto]: 'Samoa Amerika',\n        [LocaleCode.Estonian]: 'Ameerika Samoa',\n        [LocaleCode.Finnish]: 'Amerikka Samoa',\n        [LocaleCode.French]: 'American Samoa',\n        [LocaleCode.Frisian]: 'Amerikaans Samoa',\n        [LocaleCode.Galician]: 'Samoa Americana',\n        [LocaleCode.Georgian]: '\u10D0\u10DB\u10D4\u10E0\u10D8\u10D9\u10D8\u10E1 \u10E1\u10D0\u10DB\u10DD\u10D0',\n        [LocaleCode.German]: 'Amerikanisch-Samoa',\n        [LocaleCode.Greenlandic]: 'Amerikaans Samoa',\n        [LocaleCode.Greek]: '\u0391\u03BC\u03B5\u03C1\u03B9\u03BA\u03B1\u03BD\u03B9\u03BA\u03AE \u03A3\u03B1\u03BC\u03CC\u03B1',\n        [LocaleCode.Gujarati]: '\u0A86\u0AAE\u0AC7\u0AB0\u0ABF\u0A95\u0AA8 \u0AB8\u0ABE\u0AAE\u0ACB\u0AAF\u0ABE',\n        [LocaleCode.Haitian]: 'Amerikaans Samoa',\n        [LocaleCode.Hausa]: 'Amerikaans Samoa',\n        [LocaleCode.Hebrew]: '\u05D0\u05DE\u05E8\u05D9\u05E7\u05E0\u05D9\u05D4 \u05E1\u05DE\u05D5\u05D0\u05D4',\n        [LocaleCode.Hindi]: '\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906',\n        [LocaleCode.Hungarian]: 'Amerikai Szamoa',\n        [LocaleCode.Icelandic]: 'Amerikai Szamoa',\n        [LocaleCode.Igbo]: 'Ikina Amerika',\n        [LocaleCode.Indonesian]: 'Samoa Amerika',\n        [LocaleCode.Irish]: 'Samoa Amerikana',\n        [LocaleCode.Italian]: 'Samoa Americane',\n        [LocaleCode.Japanese]: '\u30A2\u30E1\u30EA\u30AB\u9818\u30B5\u30E2\u30A2',\n        [LocaleCode.Javanese]: 'Samoa Amerika',\n        [LocaleCode.Kannada]: '\u0C85\u0CAE\u0CC7\u0CB0\u0CBF\u0C95\u0CA8\u0CCD \u0CB8\u0CAE\u0CCB\u0C86',\n        [LocaleCode.Kazakh]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Khmer]: '\u17A2\u17B6\u1798\u17C9\u17B6\u179A\u17B8\u179F\u17D2\u178F\u1784\u17CB',\n        [LocaleCode.Korean]: '\uC544\uBA54\uB9AC\uCE74 \uC0AC\uBAA8\uC544',\n        [LocaleCode.Kurdish]: 'Amerikaans Samoa',\n        [LocaleCode.Kyrgyz]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Lao]: '\u0EAD\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94',\n        [LocaleCode.Latin]: 'Samoa Amerikana',\n        [LocaleCode.Latvian]: 'Amerikas Samoa',\n        [LocaleCode.Lithuanian]: 'Amerikos Samoa',\n        [LocaleCode.Luxembourgish]: 'Amerikaans Samoa',\n        [LocaleCode.Macedonian]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Malagasy]: 'Samoa Amerika',\n        [LocaleCode.Malay]: 'Amerika Samo',\n        [LocaleCode.Malayalam]: '\u0D05\u0D2E\u0D47\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D28\u0D4D\u0D31\u0D4D \u0D38\u0D2E\u0D4B\u0D06',\n        [LocaleCode.Maltese]: 'Samoa Amerika',\n        [LocaleCode.Maori]: 'Samoa Amerika',\n        [LocaleCode.Marathi]: '\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906',\n        [LocaleCode.Mongolian]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Nepali]: '\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906',\n        [LocaleCode.Norwegian]: 'Amerikansk Samoa',\n        [LocaleCode.Pashto]: '\u0627\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627',\n        [LocaleCode.Persian]: '\u0622\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627',\n        [LocaleCode.Polish]: 'Samoa Ameryka\u0144skie',\n        [LocaleCode.Portuguese]: 'Samoa Americana',\n        [LocaleCode.Punjabi]: '\u0A05\u0A2E\u0A30\u0A40\u0A15\u0A40 \u0A38\u0A3E\u0A2E\u0A4B\u0A06',\n        [LocaleCode.Romanian]: 'Samoa americane',\n        [LocaleCode.Russian]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Samoan]: 'Samoa Amerika',\n        [LocaleCode.Sanskrit]: '\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906',\n        [LocaleCode.Scots]: 'Amerikaans Samoa',\n        [LocaleCode.Serbian]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Sesotho]: 'Amerikaans Samoa',\n        [LocaleCode.Shona]: 'Amerikaans Samoa',\n        [LocaleCode.Sindhi]: 'Amerikaans Samoa',\n        [LocaleCode.Sinhala]: '\u0D86\u0DBB\u0DCA\u0DA2\u0DD2\u0DB1\u0DCF\u0DB1\u0DD4 \u0DC3\u0DD0\u0DB8\u0DD0\u0DBD\u0DCA\u0DC0',\n        [LocaleCode.Slovak]: 'Amerikaans Samoa',\n        [LocaleCode.Slovenian]: 'Amerikaans Samoa',\n        [LocaleCode.Somali]: 'Amerikaans Samoa',\n        [LocaleCode.Spanish]: 'Samoa Americana',\n        [LocaleCode.Sudanese]: 'Amerikaans Samoa',\n        [LocaleCode.Swahili]: 'Amerikaans Samoa',\n        [LocaleCode.Swedish]: 'Amerikansk Samoa',\n        [LocaleCode.Tagalog]: 'Amerikaans Samoa',\n        [LocaleCode.Tajik]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430',\n        [LocaleCode.Tamil]: '\u0B85\u0BAE\u0BC6\u0BB0\u0BBF\u0B95\u0BCD \u0B9A\u0BAE\u0BCB\u0BB5\u0BBE',\n        [LocaleCode.Tatar]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430',\n        [LocaleCode.Telugu]: '\u0C05\u0C2E\u0C46\u0C30\u0C3F\u0C15\u0C4D \u0C38\u0C2E\u0C4B\u0C35\u0C3E',\n        [LocaleCode.Thai]: '\u0E2A\u0E2B\u0E23\u0E32\u0E0A\u0E2D\u0E32\u0E13\u0E32\u0E08\u0E31\u0E01\u0E23\u0E41\u0E2D\u0E1F\u0E23\u0E34\u0E01\u0E32',\n        [LocaleCode.Tibetan]: '\u0F68\u0F7A\u0F0B\u0F62\u0F72\u0F0B\u0F40\u0F0B\u0F68\u0F7A\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F74\u0F0B\u0F61\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F40',\n        [LocaleCode.Turkish]: 'Amerikan Samoas\u0131',\n        [LocaleCode.Ukrainian]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u044C\u043A\u0430 \u0421\u0430\u043C\u043E\u0430',\n        [LocaleCode.Urdu]: '\u0627\u0645\u0631\u06CC\u06A9\u06CC \u0633\u0645\u0648\u0627',\n        [LocaleCode.Uzbek]: '\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430',\n        [LocaleCode.Vietnamese]: 'Amerikaans Samoa',\n        [LocaleCode.Welsh]: 'Amerikaans Samoa',\n        [LocaleCode.Xhosa]: 'Amerikaans Samoa',\n        [LocaleCode.Yiddish]: 'Amerikaans Samoa',\n        [LocaleCode.Yoruba]: 'Amerikaans Samoa',\n        [LocaleCode.Zulu]: 'Amerikaans Samoa',\n      },\n    },\n    statistics: {\n      demographics: {\n        age: {\n          distribution: [\n            { age: '0 to 14 years', percentage: 15.3 },\n            { age: '15 to 64 years', percentage: 66.7 },\n            { age: '65 years and over', percentage: 14.6 },\n          ],\n          median_age: 35.5,\n        },\n        population: {\n          largest_city: 'Pago Pago',\n          total: 558000,\n        },\n      },\n      geography: {\n        area: 199,\n        region: Region.Oceania,\n        sub_region: SubRegion.Polynesia,\n      },\n      government: {\n        capital: 'Pago Pago',\n        type: 'Nonmetropolitan Territory of the US',\n      },\n    },\n  },\n  Andorra: {\n    i18n: {\n      calling_codes: [376],\n      currencies: [CurrencyCode.Euro],\n      languages: [LocaleCode.Catalan, LocaleCode.Spanish],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_1, TimezoneOffset.UTC_PLUS_2],\n        regions: [TimezoneRegions.EuropeAndorra],\n        timezones: [Timezones.CentralEuropeanTime],\n      },\n    },\n    id: CountryCode.Andorra,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE6\uD83C\uDDF4',\n        emoji_unicode: 'U+1F1E6 U+1F1F4',\n        svg: 'https://www.countryflags.io/ad/flat/64.svg',\n      },\n      tld: ['.ad'],\n    },\n    iso: {\n      alpha2: CountryCode.Andorra,\n      alpha3: 'AND',\n      numeric: '020',\n    },\n    name: {\n      alt_spellings: ['AD', 'Principality of Andorra', \"Principat d'Andorra\"],\n      demonym: 'Andorran',\n      native: {\n        endonym: 'Andorra',\n      },\n      official: 'Principality of Andorra',\n      short: 'Andorra',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Andorra',\n        [LocaleCode.Albanian]: 'Andorra',\n        [LocaleCode.Amharic]: '\u12A0\u1295\u12F6\u122B',\n        [LocaleCode.Arabic]: '\u0623\u0646\u062F\u0648\u0631\u0627',\n        [LocaleCode.Armenian]: '\u0540\u0561\u0576\u0564\u0561\u0580\u0561\u057E\u0561\u0575\u0584',\n        [LocaleCode.Azerbaijani]: 'Andorra',\n        [LocaleCode.Bashkir]: '\u0410\u043D\u0434\u043E\u0440\u0430',\n        [LocaleCode.Basque]: 'Andorra',\n        [LocaleCode.Belarusian]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Bengali]: '\u0985\u09A8\u09CD\u09A1\u09CB\u09B0\u09BE',\n        [LocaleCode.Berber]: '\u0623\u0646\u062F\u0648\u0631\u0627',\n        [LocaleCode.Bhutani]: '\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B',\n        [LocaleCode.Bosnian]: 'Andora',\n        [LocaleCode.Breton]: 'Andorra',\n        [LocaleCode.Bulgarian]: '\u0410\u043D\u0434\u043E\u0440\u0430',\n        [LocaleCode.Burmese]: '\u1021\u1014\u1039\u1010\u102C\u101B\u102D\u102F\u1038',\n        [LocaleCode.Catalan]: 'Andorra',\n        [LocaleCode.Chinese]: '\u5B89\u9053\u5C14',\n        [LocaleCode.Croatian]: 'Andora',\n        [LocaleCode.Czech]: 'Andorra',\n        [LocaleCode.Danish]: 'Andorra',\n        [LocaleCode.Dutch]: 'Andorra',\n        [LocaleCode.English]: 'Andorra',\n        [LocaleCode.Esperanto]: 'Andora',\n        [LocaleCode.Estonian]: 'Andorra',\n        [LocaleCode.Finnish]: 'Andorra',\n        [LocaleCode.French]: 'Andorra',\n        [LocaleCode.Frisian]: 'Andorra',\n        [LocaleCode.Galician]: 'Andorra',\n        [LocaleCode.Georgian]: '\u12A0\u1295\u12F6\u122B',\n        [LocaleCode.German]: 'Andorra',\n        [LocaleCode.Greek]: '\u0391\u03BD\u03B4\u03CC\u03C1\u03B1',\n        [LocaleCode.Hebrew]: '\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4',\n        [LocaleCode.Hindi]: '\u0905\u0902\u0921\u094B\u0930\u093E',\n        [LocaleCode.Hungarian]: 'Andorra',\n        [LocaleCode.Icelandic]: 'Andorra',\n        [LocaleCode.Igbo]: 'Andorra',\n        [LocaleCode.Indonesian]: 'Andorra',\n        [LocaleCode.Irish]: 'Andorra',\n        [LocaleCode.Italian]: 'Andorra',\n        [LocaleCode.Japanese]: '\u30A2\u30F3\u30C9\u30E9',\n        [LocaleCode.Javanese]: 'Andorra',\n        [LocaleCode.Kannada]: '\u0C85\u0C82\u0CA1\u0CCB\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD',\n        [LocaleCode.Kazakh]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Khmer]: '\u17A2\u1784\u17CB\u178A\u17B6\u179A\u17B6',\n        [LocaleCode.Korean]: '\uC548\uB3C4\uB77C',\n        [LocaleCode.Kurdish]: 'Andorra',\n        [LocaleCode.Kyrgyz]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Lao]: '\u0EAD\u0EB1\u0E99\u0EC2\u0E94\u0EA3\u0EB2',\n        [LocaleCode.Latin]: 'Andorra',\n        [LocaleCode.Latvian]: 'Andora',\n        [LocaleCode.Lithuanian]: 'Andora',\n        [LocaleCode.Luxembourgish]: 'Andorra',\n        [LocaleCode.Macedonian]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Malagasy]: 'Andorra',\n        [LocaleCode.Malay]: 'Andorra',\n        [LocaleCode.Malayalam]: '\u0D05\u0D02\u0D21\u0D4B\u0D30\u0D3F\u0D2F\u0D28\u0D4D',\n        [LocaleCode.Maltese]: 'Andorra',\n        [LocaleCode.Maori]: 'Andorra',\n        [LocaleCode.Marathi]: '\u0905\u0902\u0921\u094B\u0930\u093E',\n        [LocaleCode.Mongolian]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Nepali]: '\u0905\u0902\u0921\u094B\u0930\u093E',\n        [LocaleCode.Norwegian]: 'Andorra',\n        [LocaleCode.Pashto]: '\u0622\u0646\u062F\u0648\u0631\u0627',\n        [LocaleCode.Persian]: '\u0622\u0646\u062F\u0648\u0631\u0627',\n        [LocaleCode.Polish]: 'Andora',\n        [LocaleCode.Portuguese]: 'Andorra',\n        [LocaleCode.Punjabi]: '\u0A05\u0A70\u0A21\u0A4B\u0A30\u0A3E',\n        [LocaleCode.Romanian]: 'Andorra',\n        [LocaleCode.Russian]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Samoan]: 'Andorra',\n        [LocaleCode.Sanskrit]: '\u0905\u0902\u0921\u094B\u0930\u093E',\n        [LocaleCode.Scots]: 'Andorra',\n        [LocaleCode.Serbian]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Sesotho]: 'Andorra',\n        [LocaleCode.Shona]: 'Andorra',\n        [LocaleCode.Sindhi]: '\u0905\u0902\u0921\u094B\u0930\u093E',\n        [LocaleCode.Sinhala]: '\u0D86\u0DB1\u0DCA\u0DAF\u0DDA',\n        [LocaleCode.Slovak]: 'Andorra',\n        [LocaleCode.Slovenian]: 'Andora',\n        [LocaleCode.Somali]: 'Andorra',\n        [LocaleCode.Spanish]: 'Andorra',\n        [LocaleCode.Sudanese]: 'Andorra',\n        [LocaleCode.Swahili]: 'Andorra',\n        [LocaleCode.Swedish]: 'Andorra',\n        [LocaleCode.Tagalog]: 'Andorra',\n        [LocaleCode.Tajik]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Tamil]: '\u0B85\u0BA9\u0BCB\u0BB0\u0BCD\u0B9F\u0BBE',\n        [LocaleCode.Tatar]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Telugu]: '\u0C05\u0C02\u0C21\u0C4B\u0C30\u0C4D\u0C30\u0C3E',\n        [LocaleCode.Thai]: '\u0E2D\u0E31\u0E19\u0E14\u0E2D\u0E23\u0E4C\u0E23\u0E32',\n        [LocaleCode.Tibetan]: '\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B',\n        [LocaleCode.Turkish]: 'Andora',\n        [LocaleCode.Ukrainian]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Urdu]: '\u0622\u0646\u062F\u0648\u0631\u0627',\n        [LocaleCode.Uzbek]: '\u0410\u043D\u0434\u043E\u0440\u0440\u0430',\n        [LocaleCode.Vietnamese]: 'Andorra',\n        [LocaleCode.Welsh]: 'Andorra',\n        [LocaleCode.Xhosa]: 'Andorra',\n        [LocaleCode.Yiddish]: '\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4',\n        [LocaleCode.Yoruba]: 'Andorra',\n        [LocaleCode.Zulu]: 'Andorra',\n      },\n    },\n    statistics: {\n      demographics: {\n        age: {\n          distribution: [\n            { age: '0 to 14 years', percentage: 15.3 },\n            { age: '15 to 64 years', percentage: 66.7 },\n            { age: '65 years and over', percentage: 14.6 },\n          ],\n          median_age: 35.5,\n        },\n        population: {\n          largest_city: 'Andorra la Vella',\n          total: 78000,\n        },\n      },\n      geography: {\n        area: 468,\n        region: Region.Europe,\n        sub_region: SubRegion.SouthernEurope,\n      },\n      government: {\n        capital: 'Andorra la Vella',\n        type: 'Constitutional Monarchy',\n      },\n    },\n  },\n  Angola: {\n    i18n: {\n      calling_codes: [244],\n      currencies: [CurrencyCode.AngolaKwanza],\n      languages: [\n        LocaleCode.Portuguese,\n        LocaleCode.Spanish,\n        LocaleCode.French,\n        LocaleCode.Italian,\n        LocaleCode.German,\n        LocaleCode.English,\n      ],\n      tz: {\n        offsets: [\n          TimezoneOffset.UTC_0,\n          TimezoneOffset.UTC_PLUS_1,\n          TimezoneOffset.UTC_PLUS_2,\n        ],\n        regions: [TimezoneRegions.AfricaLuanda],\n        timezones: [Timezones.WestAfricaTime],\n      },\n    },\n    id: CountryCode.Angola,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE6\uD83C\uDDEC',\n        emoji_unicode: 'U+1F1E6 U+1F1EC',\n        svg: 'https://www.countryflags.io/ao/flat/64.svg',\n      },\n      tld: ['.ao'],\n    },\n    iso: {\n      alpha2: CountryCode.Angola,\n      alpha3: 'AGO',\n      numeric: '024',\n    },\n    name: {\n      alt_spellings: ['AO', 'Rep\u00FAblica de Angola', '\u0281\u025Bpublika de an'],\n      demonym: 'Angolan',\n      native: {\n        endonym: 'Angola',\n      },\n      official: 'Republic of Angola',\n      short: 'Angola',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Angola',\n        [LocaleCode.Albanian]: 'Ang\u00F2la',\n        [LocaleCode.Amharic]: '\u12A0\u1295\u130E\u120A\u12EB',\n        [LocaleCode.Arabic]: '\u0623\u0646\u063A\u0648\u0644\u0627',\n        [LocaleCode.Armenian]: '\u0540\u0561\u0576\u0563\u0561\u056C\u0561\u056F\u0561',\n        [LocaleCode.Azerbaijani]: 'Ang\u0259l',\n        [LocaleCode.Bashkir]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Basque]: 'Angola',\n        [LocaleCode.Belarusian]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Bengali]: '\u0985\u0999\u09CD\u0997\u09B2\u09BE',\n        [LocaleCode.Berber]: 'Angola',\n        [LocaleCode.Bhutani]: '\u0F60\u0F56\u0FB2\u0F74\u0F42',\n        [LocaleCode.Bosnian]: 'Angola',\n        [LocaleCode.Breton]: 'Angola',\n        [LocaleCode.Bulgarian]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Burmese]: '\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A',\n        [LocaleCode.Catalan]: 'Angola',\n        [LocaleCode.Chinese]: '\u5B89\u54E5\u62C9',\n        [LocaleCode.Croatian]: 'Angola',\n        [LocaleCode.Czech]: 'Angola',\n        [LocaleCode.Danish]: 'Angola',\n        [LocaleCode.Dutch]: 'Angola',\n        [LocaleCode.English]: 'Angola',\n        [LocaleCode.Esperanto]: 'Angolo',\n        [LocaleCode.Estonian]: 'Angola',\n        [LocaleCode.Finnish]: 'Angola',\n        [LocaleCode.French]: 'Angola',\n        [LocaleCode.Frisian]: 'Angola',\n        [LocaleCode.Galician]: 'Angola',\n        [LocaleCode.Georgian]: '\u10D0\u10DC\u10D2\u10DD\u10DA\u10D0',\n        [LocaleCode.German]: 'Angola',\n        [LocaleCode.Greenlandic]: 'Angola',\n        [LocaleCode.Greek]: '\u0391\u03B3\u03BA\u03CC\u03BB\u03B1',\n        [LocaleCode.Gujarati]: '\u0A85\u0A82\u0A97\u0ACB\u0AB2\u0ABE',\n        [LocaleCode.Haitian]: 'Angola',\n        [LocaleCode.Hausa]: 'Angola',\n        [LocaleCode.Hebrew]: '\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4',\n        [LocaleCode.Hindi]: '\u0905\u0919\u094D\u0917\u094B\u0932\u093E',\n        [LocaleCode.Hungarian]: 'Angola',\n        [LocaleCode.Icelandic]: 'Angola',\n        [LocaleCode.Igbo]: 'Angola',\n        [LocaleCode.Indonesian]: 'Angola',\n        [LocaleCode.Irish]: 'Angola',\n        [LocaleCode.Italian]: 'Angola',\n        [LocaleCode.Japanese]: '\u30A2\u30F3\u30B4\u30E9',\n        [LocaleCode.Javanese]: 'Anggol',\n        [LocaleCode.Kannada]: '\u0C85\u0C82\u0C97\u0CCB\u0CB2\u0CBE',\n        [LocaleCode.Kazakh]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Khmer]: '\u17A2\u1784\u17CB\u1780\u17B6\u179B\u17A2\u1784\u17CB\u1782\u17D2\u179B\u17C1\u179F',\n        [LocaleCode.Korean]: '\uC559\uACE8\uB77C',\n        [LocaleCode.Kurdish]: 'Angola',\n        [LocaleCode.Kyrgyz]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Lao]: '\u0EAD\u0EB0\u0E99\u0EB2\u0E94\u0EB2',\n        [LocaleCode.Latin]: 'Angola',\n        [LocaleCode.Latvian]: 'Angola',\n        [LocaleCode.Lithuanian]: 'Angola',\n        [LocaleCode.Luxembourgish]: 'Angola',\n        [LocaleCode.Macedonian]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Malagasy]: 'Angola',\n        [LocaleCode.Malay]: 'Angola',\n        [LocaleCode.Malayalam]: '\u0D05\u0D02\u0D17\u0D4B\u0D33\u0D3E',\n        [LocaleCode.Maltese]: 'Angola',\n        [LocaleCode.Maori]: 'Angola',\n        [LocaleCode.Marathi]: '\u0905\u0919\u094D\u0917\u094B\u0932\u093E',\n        [LocaleCode.Mongolian]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Nepali]: '\u0905\u0919\u094D\u0917\u094B\u0932\u093E',\n        [LocaleCode.Norwegian]: 'Angola',\n        [LocaleCode.Pashto]: '\u0627\u0646\u06AB\u0648\u0644\u0627',\n        [LocaleCode.Persian]: '\u0622\u0646\u06AF\u0648\u0644\u0627',\n        [LocaleCode.Polish]: 'Angola',\n        [LocaleCode.Portuguese]: 'Angola',\n        [LocaleCode.Punjabi]: '\u0A05\u0A19\u0A4D\u0A17\u0A4B\u0A32\u0A3E',\n        [LocaleCode.Romanian]: 'Angole',\n        [LocaleCode.Russian]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Samoan]: 'Angola',\n        [LocaleCode.Sanskrit]: '\u0905\u0919\u094D\u0917\u094B\u0932\u093E',\n        [LocaleCode.Scots]: 'Angola',\n        [LocaleCode.Serbian]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Sesotho]: 'Angola',\n        [LocaleCode.Shona]: 'Angola',\n        [LocaleCode.Sindhi]: '\u0905\u0919\u094D\u0917\u094B\u0932\u093E',\n        [LocaleCode.Sinhala]: '\u0D86\u0D9C\u0DBD\u0DD2\u0DBA\u0DCF\u0DC0',\n        [LocaleCode.Slovak]: 'Angola',\n        [LocaleCode.Slovenian]: 'Angola',\n        [LocaleCode.Somali]: 'Angola',\n        [LocaleCode.Spanish]: 'Angola',\n        [LocaleCode.Sudanese]: 'Angola',\n        [LocaleCode.Swahili]: 'Angola',\n        [LocaleCode.Swedish]: 'Angola',\n        [LocaleCode.Tagalog]: 'Angola',\n        [LocaleCode.Tajik]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Tamil]: '\u0B85\u0B99\u0BCD\u0B95\u0BCB\u0BB2\u0BBE',\n        [LocaleCode.Tatar]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Telugu]: '\u0C05\u0C02\u0C17\u0C4B\u0C32\u0C3E',\n        [LocaleCode.Thai]: '\u0E2D\u0E07\u0E04\u0E4C\u0E01\u0E32\u0E23\u0E2D\u0E32\u0E19\u0E32\u0E21\u0E34\u0E2A\u0E16\u0E32\u0E19',\n        [LocaleCode.Tibetan]: '\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B',\n        [LocaleCode.Turkish]: 'Angola',\n        [LocaleCode.Ukrainian]: '\u0410\u043D\u0433\u043E\u043B\u0430',\n        [LocaleCode.Urdu]: '\u0627\u0646\u06AF\u0648\u0644\u0627',\n        [LocaleCode.Uzbek]: 'Angola',\n        [LocaleCode.Vietnamese]: 'Angola',\n        [LocaleCode.Xhosa]: 'Angola',\n        [LocaleCode.Welsh]: 'Angola',\n        [LocaleCode.Yiddish]: '\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4',\n        [LocaleCode.Yoruba]: 'Angola',\n        [LocaleCode.Zulu]: 'Angola',\n      },\n    },\n  },\n  Anguilla: {\n    i18n: {\n      calling_codes: [1264],\n      currencies: [\n        CurrencyCode.DominicaDollar,\n        CurrencyCode.EastCaribbeanDollar,\n        CurrencyCode.Euro,\n        CurrencyCode.UnitedStatesDollar,\n        CurrencyCode.BritishPound,\n      ],\n      languages: [LocaleCode.English, LocaleCode.Spanish],\n      tz: {\n        offsets: [TimezoneOffset.UTC_MINUS_4],\n        regions: [TimezoneRegions.AmericaAnguilla],\n        timezones: [Timezones.AtlanticStandardTime],\n      },\n    },\n    id: CountryCode.Anguilla,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE6\uD83C\uDDEC',\n        emoji_unicode: 'U+1F1E6 U+1F1EC',\n        svg: 'https://www.countryflags.io/ai/flat/64.svg',\n      },\n      tld: ['.ai'],\n    },\n    iso: {\n      alpha2: CountryCode.Anguilla,\n      alpha3: 'AIA',\n      numeric: '660',\n    },\n    name: {\n      alt_spellings: ['AI'],\n      demonym: 'Anguillian',\n      native: {\n        endonym: 'Anguilla',\n      },\n      official: 'Anguilla',\n      short: 'Anguilla',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Anguilla',\n        [LocaleCode.Albanian]: 'Anguilla',\n        [LocaleCode.Amharic]: '\u12A0\u1295\u1309\u120B',\n        [LocaleCode.Arabic]: '\u0623\u0646\u063A\u0648\u064A\u0644\u0627',\n        [LocaleCode.Armenian]: '\u0531\u0576\u0563\u056B\u056C\u0561',\n        [LocaleCode.Azerbaijani]: 'Az\u0259rbaycan',\n        [LocaleCode.Bashkir]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Basque]: 'Angila',\n        [LocaleCode.Belarusian]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Bengali]: '\u0985\u0999\u09CD\u0997\u09C0\u09B2\u09BE',\n        [LocaleCode.Berber]: '\u0623\u0646\u063A\u0648\u064A\u0644\u0627',\n        [LocaleCode.Bhutani]: '\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B',\n        [LocaleCode.Bosnian]: 'Angila',\n        [LocaleCode.Breton]: 'Angila',\n        [LocaleCode.Bulgarian]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Burmese]: '\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A',\n        [LocaleCode.Catalan]: 'Angilla',\n        [LocaleCode.Chinese]: '\u5B89\u572D\u62C9',\n        [LocaleCode.Croatian]: 'Angila',\n        [LocaleCode.Czech]: 'Anguilla',\n        [LocaleCode.Danish]: 'Anguilla',\n        [LocaleCode.Dutch]: 'Anguilla',\n        [LocaleCode.English]: 'Anguilla',\n        [LocaleCode.Esperanto]: 'Angila',\n        [LocaleCode.Estonian]: 'Anguilla',\n        [LocaleCode.Finnish]: 'Anguilla',\n        [LocaleCode.French]: 'Anguilla',\n        [LocaleCode.Frisian]: 'Angila',\n        [LocaleCode.Galician]: 'Anguilla',\n        [LocaleCode.Georgian]: '\u10D0\u10DC\u10D2\u10D8\u10DA\u10D0',\n        [LocaleCode.German]: 'Anguilla',\n        [LocaleCode.Greenlandic]: 'Anguilla',\n        [LocaleCode.Greek]: '\u0391\u03BD\u03B3\u03BA\u03C5\u03BB\u03AC',\n        [LocaleCode.Gujarati]: '\u0A85\u0A82\u0A97\u0ACD\u0AAF\u0ABE\u0AB2\u0ABE',\n        [LocaleCode.Haitian]: 'Anguilla',\n        [LocaleCode.Hausa]: 'Anguilla',\n        [LocaleCode.Hebrew]: '\u05D0\u05E0\u05D2\u05D5\u05D9\u05D0\u05DC\u05D4',\n        [LocaleCode.Hindi]: '\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E',\n        [LocaleCode.Hungarian]: 'Anguilla',\n        [LocaleCode.Icelandic]: 'Anguilla',\n        [LocaleCode.Igbo]: 'Anguilla',\n        [LocaleCode.Indonesian]: 'Anguilla',\n        [LocaleCode.Irish]: 'Anguilla',\n        [LocaleCode.Italian]: 'Anguilla',\n        [LocaleCode.Japanese]: '\u30A2\u30F3\u30AE\u30E9',\n        [LocaleCode.Javanese]: 'Anguilla',\n        [LocaleCode.Kannada]: '\u0C85\u0C82\u0C97\u0CCD\u0CB5\u0CC7\u0CB2\u0CBE',\n        [LocaleCode.Kazakh]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Khmer]: '\u17A2\u1784\u17CB\u1780\u17B6\u179A\u17A0\u17D2\u1782\u17B8\u1798',\n        [LocaleCode.Korean]: '\uC575\uADC8\uB77C',\n        [LocaleCode.Kurdish]: 'Anguilla',\n        [LocaleCode.Kyrgyz]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Lao]: '\u0EAD\u0EB0\u0E99\u0EB0\u0E88\u0EB3',\n        [LocaleCode.Latin]: 'Anguilla',\n        [LocaleCode.Latvian]: 'Anguilla',\n        [LocaleCode.Lithuanian]: 'Anguilla',\n        [LocaleCode.Luxembourgish]: 'Angilla',\n        [LocaleCode.Macedonian]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Malagasy]: 'Angila',\n        [LocaleCode.Malay]: 'Anguilla',\n        [LocaleCode.Malayalam]: '\u0D05\u0D02\u0D17\u0D4D\u0D35\u0D47\u0D32\u0D3E',\n        [LocaleCode.Maltese]: 'Anguilla',\n        [LocaleCode.Maori]: 'Anguilla',\n        [LocaleCode.Marathi]: '\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E',\n        [LocaleCode.Mongolian]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Nepali]: '\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E',\n        [LocaleCode.Norwegian]: 'Anguilla',\n        [LocaleCode.Pashto]: '\u0622\u0646\u06AF\u0648\u0644\u0627',\n        [LocaleCode.Persian]: '\u0622\u0646\u06AF\u0648\u0644\u0627',\n        [LocaleCode.Polish]: 'Anguilla',\n        [LocaleCode.Portuguese]: 'Anguilla',\n        [LocaleCode.Punjabi]: '\u0A05\u0A02\u0A17\u0A40\u0A32\u0A3E',\n        [LocaleCode.Romanian]: 'Anguilla',\n        [LocaleCode.Russian]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Samoan]: 'Anguilla',\n        [LocaleCode.Sanskrit]: '\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E',\n        [LocaleCode.Scots]: 'Anguilla',\n        [LocaleCode.Serbian]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Sesotho]: 'Anguilla',\n        [LocaleCode.Shona]: 'Anguilla',\n        [LocaleCode.Sindhi]: '\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E',\n        [LocaleCode.Sinhala]: '\u0D86\u0D82\u0D9C\u0DD2\u0DBD\u0DCF\u0DC0',\n        [LocaleCode.Slovak]: 'Anguilla',\n        [LocaleCode.Slovenian]: 'Anguilla',\n        [LocaleCode.Somali]: 'Anguilla',\n        [LocaleCode.Spanish]: 'Anguilla',\n        [LocaleCode.Sudanese]: 'Anguilla',\n        [LocaleCode.Swahili]: 'Anguilla',\n        [LocaleCode.Swedish]: 'Anguilla',\n        [LocaleCode.Tagalog]: 'Anguilla',\n        [LocaleCode.Tajik]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Tamil]: '\u0B85\u0B99\u0BCD\u0B95\u0BC8\u0BB2\u0BBE',\n        [LocaleCode.Tatar]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Telugu]: '\u0C05\u0C02\u0C17\u0C4D\u0C35\u0C47\u0C32\u0C3E',\n        [LocaleCode.Thai]: '\u0E2D\u0E31\u0E07\u0E01\u0E32\u0E25\u0E32',\n        [LocaleCode.Tibetan]: '\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B',\n        [LocaleCode.Turkish]: 'Anguilla',\n        [LocaleCode.Ukrainian]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Urdu]: '\u0622\u0646\u06AF\u0648\u0644\u0627',\n        [LocaleCode.Uzbek]: '\u0410\u043D\u0433\u0438\u043B\u0438',\n        [LocaleCode.Vietnamese]: 'Anguilla',\n        [LocaleCode.Welsh]: 'Anguilla',\n        [LocaleCode.Xhosa]: 'Anguilla',\n        [LocaleCode.Yiddish]: 'Anguilla',\n        [LocaleCode.Yoruba]: 'Anguilla',\n        [LocaleCode.Zulu]: 'Anguilla',\n      },\n    },\n  },\n  Antarctica: {\n    i18n: {\n      calling_codes: [672],\n      currencies: [CurrencyCode.UnitedStatesDollar, CurrencyCode.Euro],\n      languages: [\n        LocaleCode.English,\n        LocaleCode.Spanish,\n        LocaleCode.French,\n        LocaleCode.Portuguese,\n        LocaleCode.Italian,\n        LocaleCode.Dutch,\n        LocaleCode.German,\n        LocaleCode.Swedish,\n        LocaleCode.Norwegian,\n        LocaleCode.Danish,\n        LocaleCode.Finnish,\n      ],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_1, TimezoneOffset.UTC_PLUS_2],\n        regions: [\n          TimezoneRegions.AntarcticaCasey,\n          TimezoneRegions.AntarcticaDavis,\n          TimezoneRegions.AntarcticaMcMurdo,\n          TimezoneRegions.AntarcticaPalmer,\n          TimezoneRegions.AntarcticaRothera,\n        ],\n        timezones: [\n          Timezones.AtlanticStandardTime,\n          Timezones.CentralTime,\n          Timezones.EasternTime,\n          Timezones.AtlanticStandardTime,\n          Timezones.AzoresStandardTime,\n          Timezones.NewfoundlandStandardTime,\n        ],\n      },\n    },\n    id: CountryCode.Antarctica,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE6\uD83C\uDDF6',\n        emoji_unicode: 'U+1F1E6 U+1F1F6',\n        svg: 'https://www.countryflags.io/aq/flat/64.svg',\n      },\n      tld: ['.aq'],\n    },\n    iso: {\n      alpha2: CountryCode.Antarctica,\n      alpha3: 'ATA',\n      numeric: '010',\n    },\n    name: {\n      alt_spellings: ['AQ'],\n      demonym: 'Antarctican',\n      native: {\n        endonym: 'Antarctica',\n      },\n      official: 'Antarctica',\n      short: 'Antarctica',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Antarctica',\n        [LocaleCode.Albanian]: 'Antarktika',\n        [LocaleCode.Amharic]: '\u12A0\u1295\u1272\u120D\u12AB\u1293',\n        [LocaleCode.Arabic]: '\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627',\n        [LocaleCode.Armenian]: '\u0540\u0561\u0576\u0561\u0580\u0561\u057F\u056F\u0578',\n        [LocaleCode.Azerbaijani]: 'Az\u0259rbaycan',\n        [LocaleCode.Bashkir]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Basque]: 'Antarktika',\n        [LocaleCode.Belarusian]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Bengali]: '\u0985\u09A8\u09CD\u09A4\u09B0\u09BE\u09B6\u09CD\u09AC\u09C0',\n        [LocaleCode.Berber]: '\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627',\n        [LocaleCode.Bhutani]: '\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B',\n        [LocaleCode.Bosnian]: 'Antarktika',\n        [LocaleCode.Breton]: 'Antarktika',\n        [LocaleCode.Bulgarian]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Burmese]: '\u1021\u1014\u1039\u1010\u102C\u101B\u102E\u1038\u101A\u102C\u1038',\n        [LocaleCode.Catalan]: 'Ant\u00E0rtida',\n        [LocaleCode.Chinese]: '\u5357\u6781\u6D32',\n        [LocaleCode.Croatian]: 'Antarktika',\n        [LocaleCode.Czech]: 'Antarktida',\n        [LocaleCode.Danish]: 'Antarktis',\n        [LocaleCode.Dutch]: 'Antarctica',\n        [LocaleCode.English]: 'Antarctica',\n        [LocaleCode.Esperanto]: 'Antarktika',\n        [LocaleCode.Estonian]: 'Antarktika',\n        [LocaleCode.Finnish]: 'Antarktis',\n        [LocaleCode.French]: 'Antarctica',\n        [LocaleCode.Frisian]: 'Antarktis',\n        [LocaleCode.Galician]: 'Ant\u00E1rtida',\n        [LocaleCode.Georgian]: '\u10D0\u10DC\u10E2\u10D0\u10E0\u10E5\u10E2\u10D8\u10D9\u10D0',\n        [LocaleCode.German]: 'Antarktis',\n        [LocaleCode.Greenlandic]: 'Antarktis',\n        [LocaleCode.Greek]: '\u0391\u03BD\u03C4\u03B1\u03C1\u03BA\u03C4\u03B9\u03BA\u03AE',\n        [LocaleCode.Gujarati]: '\u0A85\u0AA8\u0ACD\u0AA4\u0AB0\u0ABE\u0AB6\u0ACD\u0AB5\u0AC0',\n        [LocaleCode.Haitian]: 'Antarctica',\n        [LocaleCode.Hausa]: 'Antarktika',\n        [LocaleCode.Hebrew]: '\u05D0\u05E0\u05D8\u05E8\u05E7\u05D8\u05D9\u05E7\u05D4',\n        [LocaleCode.Hindi]: '\u0905\u0928\u094D\u0924\u0930\u0915\u094D\u0937\u0947\u0924\u094D\u0930',\n        [LocaleCode.Hungarian]: 'Antarktika',\n        [LocaleCode.Icelandic]: 'Antarktis',\n        [LocaleCode.Igbo]: 'Antarktika',\n        [LocaleCode.Indonesian]: 'Antarktika',\n        [LocaleCode.Irish]: 'Antarktika',\n        [LocaleCode.Italian]: 'Antartide',\n        [LocaleCode.Japanese]: '\u5357\u6975',\n        [LocaleCode.Javanese]: 'Antarktika',\n        [LocaleCode.Kannada]: '\u0C85\u0CA8\u0CCD\u0CA4\u0CB0\u0CBE\u0CB6\u0CCD\u0CB5\u0CBF',\n        [LocaleCode.Kazakh]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Khmer]: '\u17A2\u1784\u17CB\u179F\u17D2\u1780\u179A\u17A2\u17B6\u1798\u17C9\u17BB\u1799',\n        [LocaleCode.Korean]: '\uC564\uD2F0\uCE74\uD1A0\uB2C9',\n        [LocaleCode.Kurdish]: 'Antarktika',\n        [LocaleCode.Kyrgyz]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Lao]: '\u0EAD\u0EB0\u0E99\u0EAD\u0EA5\u0EB2\u0E81\u0EB4\u0EAA\u0EB0',\n        [LocaleCode.Latin]: 'Antarctica',\n        [LocaleCode.Latvian]: 'Antarktika',\n        [LocaleCode.Lithuanian]: 'Antarktis',\n        [LocaleCode.Luxembourgish]: 'Antarktis',\n        [LocaleCode.Macedonian]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Malagasy]: 'Antarctica',\n        [LocaleCode.Malay]: 'Antarktika',\n        [LocaleCode.Malayalam]: '\u0D05\u0D28\u0D4D\u0D24\u0D30\u0D3E\u0D36\u0D4D\u0D35\u0D3F',\n        [LocaleCode.Maltese]: 'Antarktika',\n        [LocaleCode.Maori]: 'Antarktika',\n        [LocaleCode.Marathi]: '\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E',\n        [LocaleCode.Mongolian]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Nepali]: '\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E',\n        [LocaleCode.Norwegian]: 'Antarktis',\n        [LocaleCode.Pashto]: '\u0627\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627',\n        [LocaleCode.Persian]: '\u0622\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627',\n        [LocaleCode.Polish]: 'Antarktyka',\n        [LocaleCode.Portuguese]: 'Ant\u00E1rtida',\n        [LocaleCode.Punjabi]: '\u0A05\u0A28\u0A4D\u0A24\u0A30\u0A3E\u0A36\u0A3F\u0A15\u0A3E',\n        [LocaleCode.Romanian]: 'Antarctica',\n        [LocaleCode.Russian]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Samoan]: 'Antarktika',\n        [LocaleCode.Sanskrit]: '\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E',\n        [LocaleCode.Scots]: 'Antarktika',\n        [LocaleCode.Serbian]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Sesotho]: 'Antarktika',\n        [LocaleCode.Shona]: 'Antarktika',\n        [LocaleCode.Sindhi]: 'Antarktika',\n        [LocaleCode.Sinhala]: '\u0D86\u0DB1\u0DCA\u0DA7\u0DCA\u0DA7\u0DD2\u0D9A\u0DCF\u0DC0',\n        [LocaleCode.Slovak]: 'Antarktika',\n        [LocaleCode.Slovenian]: 'Antarktika',\n        [LocaleCode.Somali]: 'Antarktika',\n        [LocaleCode.Spanish]: 'Ant\u00E1rtida',\n        [LocaleCode.Sudanese]: 'Antarktika',\n        [LocaleCode.Swahili]: 'Antarktika',\n        [LocaleCode.Swedish]: 'Antarktis',\n        [LocaleCode.Tagalog]: 'Antarktika',\n        [LocaleCode.Tajik]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Tamil]: '\u0B85\u0BA9\u0BCD\u0BA4\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BBF\u0B95\u0BCD',\n        [LocaleCode.Tatar]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Telugu]: '\u0C05\u0C28\u0C4D\u0C24\u0C30\u0C3E\u0C36\u0C4D\u0C35\u0C3F\u0C15\u0C3E',\n        [LocaleCode.Thai]: '\u0E20\u0E39\u0E21\u0E34\u0E20\u0E32\u0E04\u0E2D\u0E32\u0E19\u0E31\u0E19\u0E15\u0E34\u0E01\u0E32',\n        [LocaleCode.Tibetan]: '\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72\u0F0B\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72',\n        [LocaleCode.Turkish]: 'Antarktika',\n        [LocaleCode.Ukrainian]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Urdu]: '\u0627\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627',\n        [LocaleCode.Uzbek]: '\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430',\n        [LocaleCode.Vietnamese]: '\u0110\u1EA5t Antarktik',\n        [LocaleCode.Welsh]: 'Antarktika',\n        [LocaleCode.Xhosa]: 'Antarktika',\n        [LocaleCode.Yiddish]: 'Antarktika',\n        [LocaleCode.Yoruba]: 'Antarktika',\n        [LocaleCode.Zulu]: 'Antarktika',\n      },\n    },\n  },\n  Armenia: {\n    i18n: {\n      calling_codes: [374],\n      currencies: [CurrencyCode.ArmeniaDram],\n      languages: [LocaleCode.Armenian],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_4],\n        regions: [TimezoneRegions.AsiaJakarta],\n        timezones: [Timezones.ArmeniaTime],\n      },\n    },\n    id: CountryCode.Armenia,\n    info: {\n      flag: {\n        emoji: '\uD83C\uDDE6\uD83C\uDDF2',\n        emoji_unicode: 'U+1F1E6 U+1F1F2',\n        svg: 'https://www.countryflags.io/am/flat/64.svg',\n      },\n      tld: ['.am'],\n    },\n    iso: {\n      alpha2: CountryCode.Armenia,\n      alpha3: 'ARM',\n      numeric: '051',\n    },\n    name: {\n      alt_spellings: ['AM', 'Hayastan', 'Republic of Armenia', '\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576'],\n      demonym: 'Armenian',\n      native: {\n        endonym: '\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576',\n      },\n      official: 'Republic of Armenia',\n      short: 'Armenia',\n      translations: {\n        [LocaleCode.Afrikaans]: 'Armeni\u00EB',\n        [LocaleCode.Albanian]: 'Armenia',\n        [LocaleCode.Amharic]: '\u12A0\u121B\u122D\u129B',\n        [LocaleCode.Arabic]: '\u0623\u0631\u0645\u064A\u0646\u064A\u0627',\n        [LocaleCode.Armenian]: '\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576',\n        [LocaleCode.Azerbaijani]: 'Az\u0259rbaycan',\n        [LocaleCode.Bashkir]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Basque]: 'Arm\u00E9nia',\n        [LocaleCode.Belarusian]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Bengali]: '\u0986\u09B0\u09CD\u09AE\u09C7\u09A8\u09BF',\n        [LocaleCode.Berber]: '\u0623\u0631\u0645\u064A\u0646\u064A\u0627',\n        [LocaleCode.Bhutani]: '\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42',\n        [LocaleCode.Bosnian]: 'Armenija',\n        [LocaleCode.Breton]: 'Armeni\u00EB',\n        [LocaleCode.Bulgarian]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Burmese]: '\u1021\u102C\u1019\u1010\u102D\u1010\u1039',\n        [LocaleCode.Catalan]: 'Arm\u00E8nia',\n        [LocaleCode.Chinese]: '\u4E9A\u7F8E\u5C3C\u4E9A',\n        [LocaleCode.Croatian]: 'Armenija',\n        [LocaleCode.Czech]: 'Arm\u00E9nie',\n        [LocaleCode.Danish]: 'Armenien',\n        [LocaleCode.Dutch]: 'Armeni\u00EB',\n        [LocaleCode.English]: 'Armenia',\n        [LocaleCode.Esperanto]: 'Armenia',\n        [LocaleCode.Estonian]: 'Armeenia',\n        [LocaleCode.Finnish]: 'Armenia',\n        [LocaleCode.French]: 'Armenia',\n        [LocaleCode.Frisian]: 'Armeenia',\n        [LocaleCode.Galician]: 'Arm\u00E9nia',\n        [LocaleCode.Georgian]: '\u10D0\u10E0\u10DB\u10DD\u10DC\u10D8',\n        [LocaleCode.German]: 'Armenien',\n        [LocaleCode.Greenlandic]: 'Armenia',\n        [LocaleCode.Greek]: '\u0391\u03C1\u03BC\u03B5\u03BD\u03AF\u03B1',\n        [LocaleCode.Gujarati]: '\u0A85\u0AB0\u0ACD\u0AAE\u0AC7\u0AA8\u0ABF',\n        [LocaleCode.Haitian]: 'Armenia',\n        [LocaleCode.Hausa]: 'Armenia',\n        [LocaleCode.Hebrew]: '\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4',\n        [LocaleCode.Hindi]: '\u0905\u05E8\u05DE\u05E0\u093F\u092F\u093E',\n        [LocaleCode.Hungarian]: '\u00D6rm\u00E9nyorsz\u00E1g',\n        [LocaleCode.Icelandic]: 'Armenia',\n        [LocaleCode.Igbo]: 'Armenia',\n        [LocaleCode.Indonesian]: 'Armenia',\n        [LocaleCode.Irish]: 'Armenia',\n        [LocaleCode.Italian]: 'Armenia',\n        [LocaleCode.Japanese]: '\u30A2\u30EB\u30E1\u30CB\u30A2',\n        [LocaleCode.Javanese]: 'Armenia',\n        [LocaleCode.Kannada]: '\u0C85\u0CB0\u0CCD\u0CAE\u0CC7\u0CA8\u0CBF',\n        [LocaleCode.Kazakh]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Khmer]: '\u17A2\u17B6\u1798\u17C9\u17C1\u179A\u17B8',\n        [LocaleCode.Korean]: '\uC544\uB974\uBA54\uB2C8\uC544',\n        [LocaleCode.Kurdish]: 'Armenia',\n        [LocaleCode.Kyrgyz]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Lao]: '\u0EAD\u0EB2\u0EAB\u0EBC\u0E99\u0EB2',\n        [LocaleCode.Latin]: 'Armenia',\n        [LocaleCode.Latvian]: 'Armeenia',\n        [LocaleCode.Lithuanian]: 'Arm\u0117nija',\n        [LocaleCode.Luxembourgish]: 'Armenien',\n        [LocaleCode.Macedonian]: '\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430',\n        [LocaleCode.Malagasy]: 'Armenia',\n        [LocaleCode.Malay]: 'Armenia',\n        [LocaleCode.Malayalam]: '\u0D05\u0D30\u0D4D\u200D\u0D2E\u0D47\u0D28\u0D3F',\n        [LocaleCode.Maltese]: 'Armenia',\n        [LocaleCode.Maori]: 'Armenia',\n        [LocaleCode.Marathi]: '\u0905\u0930\u094D\u092E\u0947\u0928\u093F',\n        [LocaleCode.Mongolian]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Nepali]: '\u0905\u0930\u094D\u092E\u0947\u0928\u093F',\n        [LocaleCode.Norwegian]: 'Armenia',\n        [LocaleCode.Pashto]: '\u0622\u0631\u0645\u06CC\u0646\u06CC\u0627',\n        [LocaleCode.Persian]: '\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646',\n        [LocaleCode.Polish]: 'Armenia',\n        [LocaleCode.Portuguese]: 'Armenia',\n        [LocaleCode.Punjabi]: '\u0A05\u0A30\u0A2E\u0A40\u0A28\u0A40',\n        [LocaleCode.Romanian]: 'Armenia',\n        [LocaleCode.Russian]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Samoan]: 'Armenia',\n        [LocaleCode.Sanskrit]: 'Armenia',\n        [LocaleCode.Scots]: 'Armenia',\n        [LocaleCode.Serbian]: '\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430',\n        [LocaleCode.Sesotho]: 'Armenia',\n        [LocaleCode.Shona]: 'Armenia',\n        [LocaleCode.Sindhi]: 'Armenia',\n        [LocaleCode.Sinhala]: '\u0D86\u0DBB\u0DCA\u0DB8\u0DD3\u0DB1\u0DD2',\n        [LocaleCode.Slovak]: 'Armenia',\n        [LocaleCode.Slovenian]: 'Armenija',\n        [LocaleCode.Somali]: 'Armenia',\n        [LocaleCode.Spanish]: 'Armenia',\n        [LocaleCode.Sudanese]: 'Armenia',\n        [LocaleCode.Swahili]: 'Armenia',\n        [LocaleCode.Swedish]: 'Armenien',\n        [LocaleCode.Tagalog]: 'Armenia',\n        [LocaleCode.Tajik]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Tamil]: '\u0B85\u0BB0\u0BCD\u0BAE\u0BC7\u0BA9\u0BBF\u0BAF\u0BA9\u0BCD',\n        [LocaleCode.Tatar]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Telugu]: '\u0C05\u0C30\u0C4D\u0C2E\u0C47\u0C28\u0C3F',\n        [LocaleCode.Thai]: '\u0E2D\u0E32\u0E23\u0E4C\u0E40\u0E21\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19',\n        [LocaleCode.Tibetan]: '\u0F68\u0F62\u0F0B\u0F58\u0F7A\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F74\u0F0D',\n        [LocaleCode.Turkish]: 'Ermenistan',\n        [LocaleCode.Ukrainian]: '\u0410\u0440\u043C\u0435\u043D\u0456\u044F',\n        [LocaleCode.Urdu]: '\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646',\n        [LocaleCode.Uzbek]: '\u0410\u0440\u043C\u0435\u043D\u0438\u044F',\n        [LocaleCode.Vietnamese]: 'Armenia',\n        [LocaleCode.Welsh]: 'Armenia',\n        [LocaleCode.Xhosa]: 'Armenia',\n        [LocaleCode.Yiddish]: '\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4',\n        [LocaleCode.Yoruba]: 'Armenia',\n        [LocaleCode.Zulu]: 'Armenia',\n      },\n    },\n  },\n\n  SomeCountry: {\n    i18n: {\n      calling_codes: [],\n      currencies: [],\n      languages: [],\n      tz: {\n        offsets: [],\n        regions: [],\n        timezones: [],\n      },\n    },\n    id: CountryCode.AmericanSamoa,\n    info: {\n      flag: {\n        emoji: '',\n        emoji_unicode: '',\n        svg: '',\n      },\n      tld: [],\n    },\n    iso: {\n      alpha2: CountryCode.AmericanSamoa,\n      alpha3: '',\n      numeric: '',\n    },\n    name: {\n      alt_spellings: [],\n      demonym: '',\n      native: {\n        endonym: '',\n      },\n      official: '',\n      short: '',\n      translations: {\n        [LocaleCode.Afrikaans]: '',\n        [LocaleCode.Albanian]: '',\n        [LocaleCode.Amharic]: '',\n        [LocaleCode.Arabic]: '',\n        [LocaleCode.Armenian]: '',\n        [LocaleCode.Azerbaijani]: '',\n        [LocaleCode.Bashkir]: '',\n        [LocaleCode.Basque]: '',\n        [LocaleCode.Belarusian]: '',\n        [LocaleCode.Bengali]: '',\n        [LocaleCode.Berber]: '',\n        [LocaleCode.Bhutani]: '',\n        [LocaleCode.Bosnian]: '',\n        [LocaleCode.Breton]: '',\n        [LocaleCode.Bulgarian]: '',\n        [LocaleCode.Burmese]: '',\n        [LocaleCode.Catalan]: '',\n        [LocaleCode.Chinese]: '',\n        [LocaleCode.Croatian]: '',\n        [LocaleCode.Czech]: '',\n        [LocaleCode.Danish]: '',\n        [LocaleCode.Dutch]: '',\n        [LocaleCode.English]: '',\n        [LocaleCode.Esperanto]: '',\n        [LocaleCode.Estonian]: '',\n        [LocaleCode.Finnish]: '',\n        [LocaleCode.French]: '',\n        [LocaleCode.Frisian]: '',\n        [LocaleCode.Galician]: '',\n        [LocaleCode.Georgian]: '',\n        [LocaleCode.German]: '',\n        [LocaleCode.Greenlandic]: '',\n        [LocaleCode.Greek]: '',\n        [LocaleCode.Gujarati]: '',\n        [LocaleCode.Haitian]: '',\n        [LocaleCode.Hausa]: '',\n        [LocaleCode.Hebrew]: '',\n        [LocaleCode.Hindi]: '',\n        [LocaleCode.Hungarian]: '',\n        [LocaleCode.Icelandic]: '',\n        [LocaleCode.Igbo]: '',\n        [LocaleCode.Indonesian]: '',\n        [LocaleCode.Irish]: '',\n        [LocaleCode.Italian]: '',\n        [LocaleCode.Japanese]: '',\n        [LocaleCode.Javanese]: '',\n        [LocaleCode.Kannada]: '',\n        [LocaleCode.Kazakh]: '',\n        [LocaleCode.Khmer]: '',\n        [LocaleCode.Korean]: '',\n        [LocaleCode.Kurdish]: '',\n        [LocaleCode.Kyrgyz]: '',\n        [LocaleCode.Lao]: '',\n        [LocaleCode.Latin]: '',\n        [LocaleCode.Latvian]: '',\n        [LocaleCode.Lithuanian]: '',\n        [LocaleCode.Luxembourgish]: '',\n        [LocaleCode.Macedonian]: '',\n        [LocaleCode.Malagasy]: '',\n        [LocaleCode.Malay]: '',\n        [LocaleCode.Malayalam]: '',\n        [LocaleCode.Maltese]: '',\n        [LocaleCode.Maori]: '',\n        [LocaleCode.Marathi]: '',\n        [LocaleCode.Mongolian]: '',\n        [LocaleCode.Nepali]: '',\n        [LocaleCode.Norwegian]: '',\n        [LocaleCode.Pashto]: '',\n        [LocaleCode.Persian]: '',\n        [LocaleCode.Polish]: '',\n        [LocaleCode.Portuguese]: '',\n        [LocaleCode.Punjabi]: '',\n        [LocaleCode.Romanian]: '',\n        [LocaleCode.Russian]: '',\n        [LocaleCode.Samoan]: '',\n        [LocaleCode.Sanskrit]: '',\n        [LocaleCode.Scots]: '',\n        [LocaleCode.Serbian]: '',\n        [LocaleCode.Sesotho]: '',\n        [LocaleCode.Shona]: '',\n        [LocaleCode.Sindhi]: '',\n        [LocaleCode.Sinhala]: '',\n        [LocaleCode.Slovak]: '',\n        [LocaleCode.Slovenian]: '',\n        [LocaleCode.Somali]: '',\n        [LocaleCode.Spanish]: '',\n        [LocaleCode.Sudanese]: '',\n        [LocaleCode.Swahili]: '',\n        [LocaleCode.Swedish]: '',\n        [LocaleCode.Tagalog]: '',\n        [LocaleCode.Tajik]: '',\n        [LocaleCode.Tamil]: '',\n        [LocaleCode.Tatar]: '',\n        [LocaleCode.Telugu]: '',\n        [LocaleCode.Thai]: '',\n        [LocaleCode.Tibetan]: '',\n        [LocaleCode.Turkish]: '',\n        [LocaleCode.Ukrainian]: '',\n        [LocaleCode.Urdu]: '',\n        [LocaleCode.Uzbek]: '',\n        [LocaleCode.Vietnamese]: '',\n        [LocaleCode.Welsh]: '',\n        [LocaleCode.Xhosa]: '',\n        [LocaleCode.Yiddish]: '',\n        [LocaleCode.Yoruba]: '',\n        [LocaleCode.Zulu]: '',\n      },\n    },\n  },\n};\n", "import { LanguageCode } from '../language/index.js';\nimport { LocaleCode } from './index.js';\nimport { Locale } from '.';\nimport { CountryCode } from './country.js';\n\nexport const Afrikaans: Locale = {\n  id: LocaleCode.Afrikaans,\n  language: {\n    code: LanguageCode.Afrikaans,\n    name: 'Afrikaans',\n    native: 'Afrikaans',\n  },\n  name: 'Afrikaans',\n  native_name: 'Afrikaans',\n  rtl: false,\n};\n\nexport const AfrikaansSouthAfrica: Locale = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: 'South Africa',\n    native: 'South Africa',\n  },\n  id: LocaleCode.AfrikaansSouthAfrica,\n  language: {\n    code: LanguageCode.Afrikaans,\n    name: 'Afrikaans',\n    native: 'Afrikaans',\n  },\n  name: 'Afrikaans (South Africa)',\n  native_name: 'Afrikaans (Suid-Afrika)',\n  rtl: false,\n};\n\nexport const Albanian: Locale = {\n  id: LocaleCode.Albanian,\n  language: {\n    code: LanguageCode.Albanian,\n    name: 'Albanian',\n    native: 'Shqip',\n  },\n  name: 'Albanian',\n  native_name: 'Shqip',\n  rtl: false,\n};\n\nexport const AlbanianAlbania: Locale = {\n  country: {\n    code: CountryCode.Albania,\n    name: 'Albania',\n    native: 'Shqip\u00EBria',\n  },\n  id: LocaleCode.AlbanianAlbania,\n  language: {\n    code: LanguageCode.Albanian,\n    name: 'Albanian',\n    native: 'Shqip',\n  },\n  name: 'Albanian (Albania)',\n  native_name: 'Shqip (Shqip\u00EBria)',\n  rtl: false,\n};\n\nexport const Amharic: Locale = {\n  id: LocaleCode.Amharic,\n  language: {\n    code: LanguageCode.Amharic,\n    name: 'Amharic',\n    native: '\u12A0\u121B\u122D\u129B',\n  },\n  name: 'Amharic',\n  native_name: '\u12A0\u121B\u122D\u129B',\n  rtl: false,\n};\n\nexport const AmharicEthiopia: Locale = {\n  country: {\n    code: CountryCode.Ethiopia,\n    name: 'Ethiopia',\n    native: '\u12A2\u1275\u12EE\u1335\u12EB',\n  },\n  id: LocaleCode.AmharicEthiopia,\n  language: {\n    code: LanguageCode.Amharic,\n    name: 'Amharic',\n    native: '\u12A0\u121B\u122D\u129B',\n  },\n  name: 'Amharic (Ethiopia)',\n  native_name: '\u12A0\u121B\u122D\u129B (\u12A2\u1275\u12EE\u1335\u12EB)',\n  rtl: false,\n};\n\nexport const Arabic: Locale = {\n  id: LocaleCode.Arabic,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  rtl: true,\n};\n\nexport const ArabicAlgeria: Locale = {\n  country: {\n    code: CountryCode.Algeria,\n    name: 'Algeria',\n    native: '\u0627\u0644\u062C\u0632\u0627\u0626\u0631',\n  },\n  id: LocaleCode.ArabicAlgeria,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Algeria)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u062C\u0632\u0627\u0626\u0631)',\n  rtl: true,\n};\n\nexport const ArabicBahrain: Locale = {\n  country: {\n    code: CountryCode.Bahrain,\n    name: 'Bahrain',\n    native: '\u0627\u0644\u0628\u062D\u0631\u064A\u0646',\n  },\n  id: LocaleCode.ArabicBahrain,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Bahrain)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0628\u062D\u0631\u064A\u0646)',\n  rtl: true,\n};\n\nexport const ArabicEgypt: Locale = {\n  country: {\n    code: CountryCode.Egypt,\n    name: 'Egypt',\n    native: '\u0645\u0635\u0631',\n  },\n  id: LocaleCode.ArabicEgypt,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Egypt)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0645\u0635\u0631)',\n  rtl: true,\n};\n\nexport const ArabicIraq: Locale = {\n  country: {\n    code: CountryCode.Iraq,\n    name: 'Iraq',\n    native: '\u0627\u0644\u0639\u0631\u0627\u0642',\n  },\n  id: LocaleCode.ArabicIraq,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Iraq)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0639\u0631\u0627\u0642)',\n  rtl: true,\n};\n\nexport const ArabicJordan: Locale = {\n  country: {\n    code: CountryCode.Jordan,\n    name: 'Jordan',\n    native: '\u0627\u0644\u0623\u0631\u062F\u0646',\n  },\n  id: LocaleCode.ArabicJordan,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Jordan)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0623\u0631\u062F\u0646)',\n  rtl: true,\n};\n\nexport const ArabicKuwait: Locale = {\n  country: {\n    code: CountryCode.Kuwait,\n    name: 'Kuwait',\n    native: '\u0627\u0644\u0643\u0648\u064A\u062A',\n  },\n\n  id: LocaleCode.ArabicKuwait,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Kuwait)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0643\u0648\u064A\u062A)',\n  rtl: true,\n};\n\nexport const ArabicLebanon: Locale = {\n  country: {\n    code: CountryCode.Lebanon,\n    name: 'Lebanon',\n    native: '\u0644\u0628\u0646\u0627\u0646',\n  },\n  id: LocaleCode.ArabicLebanon,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Lebanon)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u0628\u0646\u0627\u0646)',\n  rtl: true,\n};\n\nexport const ArabicLibya: Locale = {\n  country: {\n    code: CountryCode.Libya,\n    name: 'Libya',\n    native: '\u0644\u064A\u0628\u064A\u0627',\n  },\n  id: LocaleCode.ArabicLibya,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Libya)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u064A\u0628\u064A\u0627)',\n  rtl: true,\n};\n\nexport const ArabicMorocco: Locale = {\n  country: {\n    code: CountryCode.Morocco,\n    name: 'Morocco',\n    native: '\u0627\u0644\u0645\u063A\u0631\u0628',\n  },\n  id: LocaleCode.ArabicMorocco,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Morocco)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u063A\u0631\u0628)',\n  rtl: true,\n};\n\nexport const ArabicOman: Locale = {\n  country: {\n    code: CountryCode.Oman,\n    name: 'Oman',\n    native: '\u0639\u0645\u0627\u0646',\n  },\n  id: LocaleCode.ArabicOman,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Oman)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0639\u0645\u0627\u0646)',\n  rtl: true,\n};\n\nexport const ArabicQatar: Locale = {\n  country: {\n    code: CountryCode.Qatar,\n    name: 'Qatar',\n    native: '\u0642\u0637\u0631',\n  },\n  id: LocaleCode.ArabicQatar,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Qatar)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0642\u0637\u0631)',\n  rtl: true,\n};\n\nexport const ArabicSaudiArabia: Locale = {\n  country: {\n    code: CountryCode.SaudiArabia,\n    name: 'Saudi Arabia',\n    native: '\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629',\n  },\n  id: LocaleCode.ArabicSaudiArabia,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Saudi Arabia)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629)',\n  rtl: true,\n};\n\nexport const ArabicTunisia: Locale = {\n  country: {\n    code: CountryCode.Tunisia,\n    name: 'Tunisia',\n    native: '\u062A\u0648\u0646\u0633',\n  },\n  id: LocaleCode.ArabicTunisia,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Tunisia)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u062A\u0648\u0646\u0633)',\n  rtl: true,\n};\n\nexport const ArabicUnitedArabEmirates: Locale = {\n  country: {\n    code: CountryCode.UnitedArabEmirates,\n    name: 'United Arab Emirates',\n    native: '\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629',\n  },\n  id: LocaleCode.ArabicUnitedArabEmirates,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (United Arab Emirates)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629)',\n  rtl: true,\n};\n\nexport const ArabicYemen: Locale = {\n  country: {\n    code: CountryCode.Yemen,\n    name: 'Yemen',\n    native: '\u0627\u0644\u064A\u0645\u0646',\n  },\n  id: LocaleCode.ArabicYemen,\n  language: {\n    code: LanguageCode.Arabic,\n    name: 'Arabic',\n    native: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629',\n  },\n  name: 'Arabic (Yemen)',\n  native_name: '\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u064A\u0645\u0646)',\n  rtl: true,\n};\n\nexport const Armenian: Locale = {\n  id: LocaleCode.Armenian,\n  language: {\n    code: LanguageCode.Armenian,\n    name: 'Armenian',\n    native: '\u0540\u0561\u0575\u0565\u0580\u0565\u0576',\n  },\n  name: 'Armenian',\n  native_name: '\u0540\u0561\u0575\u0565\u0580\u0565\u0576',\n  rtl: false,\n};\n\nexport const ArmenianArmenia: Locale = {\n  country: { code: CountryCode.Armenia, name: 'Armenia', native: '\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576' },\n  id: LocaleCode.ArmenianArmenia,\n  language: {\n    code: LanguageCode.Armenian,\n    name: 'Armenian',\n    native: '\u0570\u0561\u0575\u0565\u0580\u0565\u0576',\n  },\n  name: 'Armenian (Armenia)',\n  native_name: '\u0570\u0561\u0575\u0565\u0580\u0565\u0576 (\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576)',\n  rtl: false,\n};\n\nexport const Azerbaijani = {\n  id: LocaleCode.Azerbaijani,\n  language: {\n    code: LanguageCode.Azerbaijani,\n    name: 'Azeribaijani',\n    native: 'Az\u0259rbaycan',\n  },\n  name: 'Azeri',\n  native_name: 'Az\u0259rbaycan',\n  rtl: false,\n};\n\nexport const AzerbaijaniAzerbaijan: Locale = {\n  country: {\n    code: CountryCode.Azerbaijan,\n    name: 'Azerbaijan',\n    native: 'Az\u0259rbaycan',\n  },\n  id: LocaleCode.AzerbaijaniAzerbaijan,\n  language: {\n    code: LanguageCode.Azerbaijani,\n    name: 'Azerbaijani',\n    native: 'Az\u0259rbaycan',\n  },\n  name: 'Azeri (Azerbaijan)',\n  native_name: 'Az\u0259rbaycan (Az\u0259rbaycan)',\n  rtl: false,\n};\n\nexport const Basque: Locale = {\n  id: LocaleCode.Basque,\n  language: {\n    code: LanguageCode.Basque,\n    name: 'Basque',\n    native: 'Euskara',\n  },\n  name: 'Basque',\n  native_name: 'Euskara',\n  rtl: false,\n};\n\nexport const BasqueSpain: Locale = {\n  country: {\n    code: CountryCode.Spain,\n    name: 'Spain',\n    native: 'Espa\u00F1a',\n  },\n  id: LocaleCode.BasqueSpain,\n  language: {\n    code: LanguageCode.Basque,\n    name: 'Basque',\n    native: 'Euskara',\n  },\n  name: 'Basque (Spain)',\n  native_name: 'Euskara (Espa\u00F1a)',\n  rtl: false,\n};\n\nexport const Belarusian: Locale = {\n  id: LocaleCode.Belarusian,\n  language: {\n    code: LanguageCode.Belarusian,\n    name: 'Belarusian',\n    native: '\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F',\n  },\n  name: 'Belarusian',\n  native_name: '\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F',\n  rtl: false,\n};\n\nexport const BelarusianBelarus: Locale = {\n  country: {\n    code: CountryCode.Belarus,\n    name: 'Belarus',\n    native: '\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C',\n  },\n  id: LocaleCode.BelarusianBelarus,\n  language: {\n    code: LanguageCode.Belarusian,\n    name: 'Belarusian',\n    native: '\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F',\n  },\n  name: 'Belarusian (Belarus)',\n  native_name: '\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F (\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C)',\n  rtl: false,\n};\n\nexport const Bengali: Locale = {\n  id: LocaleCode.Bengali,\n  language: {\n    code: LanguageCode.Bengali,\n    name: 'Bengali',\n    native: '\u09AC\u09BE\u0982\u09B2\u09BE',\n  },\n  name: 'Bengali',\n  native_name: '\u09AC\u09BE\u0982\u09B2\u09BE',\n  rtl: false,\n};\n\nexport const BengaliBangladesh: Locale = {\n  country: {\n    code: CountryCode.Bangladesh,\n    name: 'Bangladesh',\n    native: '\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6',\n  },\n  id: LocaleCode.BengaliBangladesh,\n  language: {\n    code: LanguageCode.Bengali,\n    name: 'Bengali',\n    native: '\u09AC\u09BE\u0982\u09B2\u09BE',\n  },\n  name: 'Bengali (Bangladesh)',\n  native_name: '\u09AC\u09BE\u0982\u09B2\u09BE (\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6)',\n  rtl: false,\n};\n\nexport const Bhutani: Locale = {\n  id: LocaleCode.Bhutani,\n  language: {\n    code: LanguageCode.Bhutani,\n    name: 'Bhutani',\n    native: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42',\n  },\n  name: 'Bhutani',\n  native_name: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42',\n  rtl: false,\n};\n\nexport const BhutaniBhutan: Locale = {\n  country: {\n    code: CountryCode.Bhutan,\n    name: 'Bhutan',\n    native: '\u0F60\u0F56\u0FB2\u0F74\u0F42',\n  },\n  id: LocaleCode.BhutaniBhutan,\n  language: {\n    code: LanguageCode.Bhutani,\n    name: 'Bhutani',\n    native: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42',\n  },\n  name: 'Bhutani (Bhutan)',\n  native_name: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42)',\n  rtl: false,\n};\n\nexport const Bulgarian: Locale = {\n  id: LocaleCode.Bulgarian,\n  language: {\n    code: LanguageCode.Bulgarian,\n    name: 'Bulgarian',\n    native: '\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438',\n  },\n  name: 'Bulgarian',\n  native_name: '\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438',\n  rtl: false,\n};\n\nexport const BulgarianBulgaria: Locale = {\n  country: {\n    code: CountryCode.Bulgaria,\n    name: 'Bulgaria',\n    native: '\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F',\n  },\n  id: LocaleCode.BulgarianBulgaria,\n  language: {\n    code: LanguageCode.Bulgarian,\n    name: 'Bulgarian',\n    native: '\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438',\n  },\n  name: 'Bulgarian (Bulgaria)',\n  native_name: '\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438 (\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F)',\n  rtl: false,\n};\n\nexport const Burmese: Locale = {\n  id: LocaleCode.Burmese,\n  language: {\n    code: LanguageCode.Burmese,\n    name: 'Burmese',\n    native: '\u1017\u1019\u102C\u1005\u102C',\n  },\n  name: 'Burmese',\n  native_name: '\u1017\u1019\u102C\u1005\u102C',\n  rtl: false,\n};\n\nexport const BurmeseMyanmar: Locale = {\n  country: {\n    code: CountryCode.Myanmar,\n    name: 'Myanmar',\n    native: '\u1019\u103C\u1014\u103A\u1019\u102C',\n  },\n  id: LocaleCode.BurmeseMyanmar,\n  language: {\n    code: LanguageCode.Burmese,\n    name: 'Burmese',\n    native: '\u1017\u1019\u102C\u1005\u102C',\n  },\n  name: 'Burmese (Myanmar)',\n  native_name: '\u1017\u1019\u102C\u1005\u102C (\u1019\u103C\u1014\u103A\u1019\u102C)',\n  rtl: false,\n};\n\nexport const Cantonese: Locale = {\n  id: LocaleCode.Cantonese,\n  language: {\n    code: LanguageCode.Cantonese,\n    name: 'Cantonese',\n    native: '\u5EE3\u6771\u8A71',\n  },\n  name: 'Cantonese',\n  native_name: '\u5EE3\u6771\u8A71',\n  rtl: false,\n};\n\nexport const CantoneseHongKong: Locale = {\n  country: {\n    code: CountryCode.HongKong,\n    name: 'Hong Kong',\n    native: '\u9999\u6E2F',\n  },\n  id: LocaleCode.CantoneseHongKong,\n  language: {\n    code: LanguageCode.Cantonese,\n    name: 'Cantonese',\n    native: '\u5EE3\u6771\u8A71',\n  },\n  name: 'Cantonese (Hong Kong)',\n  native_name: '\u5EE3\u6771\u8A71 (\u9999\u6E2F)',\n  rtl: false,\n};\n\nexport const Catalan: Locale = {\n  id: LocaleCode.Catalan,\n  language: {\n    code: LanguageCode.Catalan,\n    name: 'Catalan',\n    native: 'Catal\u00E0',\n  },\n  name: 'Catalan',\n  native_name: 'Catal\u00E0',\n  rtl: false,\n};\n\nexport const CatalanSpain: Locale = {\n  country: {\n    code: CountryCode.Spain,\n    name: 'Spain',\n    native: 'Espa\u00F1a',\n  },\n  id: LocaleCode.CatalanSpain,\n  language: {\n    code: LanguageCode.Catalan,\n    name: 'Catalan',\n    native: 'Catal\u00E0',\n  },\n  name: 'Catalan (Spain)',\n  native_name: 'Catal\u00E0 (Espanya)',\n  rtl: false,\n};\n\nexport const ChineseSimplified: Locale = {\n  id: LocaleCode.ChineseSimplified,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Simplified)',\n  native_name: '\u4E2D\u6587',\n  rtl: false,\n};\n\nexport const ChineseSimplifiedChina: Locale = {\n  country: {\n    code: CountryCode.China,\n    name: 'China',\n    native: '\u4E2D\u56FD',\n  },\n  id: LocaleCode.ChineseSimplifiedChina,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Simplified/China)',\n  native_name: '\u4E2D\u6587 (\u4E2D\u56FD)',\n  rtl: false,\n};\n\nexport const ChineseSimplifiedHongKong: Locale = {\n  country: {\n    code: CountryCode.HongKong,\n    name: 'Hong Kong',\n    native: '\u9999\u6E2F',\n  },\n  id: LocaleCode.ChineseSimplifiedHongKong,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Simplified/Hong Kong)',\n  native_name: '\u4E2D\u6587 (\u9999\u6E2F)',\n  rtl: false,\n};\n\nexport const ChineseSimplifiedMacau: Locale = {\n  country: {\n    code: CountryCode.Macau,\n    name: 'Macau',\n    native: '\u6FB3\u9580',\n  },\n  id: LocaleCode.ChineseSimplifiedMacau,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Simplified/Macau)',\n  native_name: '\u4E2D\u6587 (\u6FB3\u9580)',\n  rtl: false,\n};\n\nexport const ChineseSimplifiedSingapore: Locale = {\n  country: {\n    code: CountryCode.Singapore,\n    name: 'Singapore',\n    native: '\u65B0\u52A0\u5761',\n  },\n  id: LocaleCode.ChineseSimplifiedSingapore,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Simplified/Singapore)',\n  native_name: '\u4E2D\u6587 (\u65B0\u52A0\u5761)',\n  rtl: false,\n};\n\nexport const ChineseTraditional: Locale = {\n  id: LocaleCode.ChineseTraditional,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Traditional)',\n  native_name: '\u4E2D\u6587',\n  rtl: false,\n};\n\nexport const ChineseTraditionalHongKong: Locale = {\n  country: {\n    code: CountryCode.HongKong,\n    name: 'Hong Kong',\n    native: '\u9999\u6E2F',\n  },\n  id: LocaleCode.ChineseTraditionalHongKong,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese (Traditional/Hong Kong)',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Hong Kong)',\n  native_name: '\u4E2D\u6587 (\u9999\u6E2F)',\n  rtl: false,\n};\n\nexport const ChineseTraditionalMacau: Locale = {\n  country: {\n    code: CountryCode.Macau,\n    name: 'Macau',\n    native: '\u6FB3\u9580',\n  },\n  id: LocaleCode.ChineseTraditionalMacau,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese (Traditional/Macau)',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Macau)',\n  native_name: '\u4E2D\u6587 (\u6FB3\u9580)',\n  rtl: false,\n};\n\nexport const ChineseTraditionalSingapore: Locale = {\n  country: {\n    code: CountryCode.Singapore,\n    name: 'Singapore',\n    native: '\u65B0\u52A0\u5761',\n  },\n  id: LocaleCode.ChineseTraditionalSingapore,\n  language: {\n    code: LanguageCode.Chinese,\n    name: 'Chinese (Traditional/Singapore)',\n    native: '\u4E2D\u6587',\n  },\n  name: 'Chinese (Singapore)',\n  native_name: '\u4E2D\u6587 (\u65B0\u52A0\u5761)',\n  rtl: false,\n};\n\nexport const Croatian: Locale = {\n  id: LocaleCode.Croatian,\n  language: {\n    code: LanguageCode.Croatian,\n    name: 'Croatian',\n    native: 'Hrvatski',\n  },\n  name: 'Croatian',\n  native_name: 'Hrvatski',\n  rtl: false,\n};\n\nexport const CroatianBosniaAndHerzegovina: Locale = {\n  country: {\n    code: CountryCode.BosniaAndHerzegovina,\n    name: 'Bosnia and Herzegovina',\n    native: 'Bosna i Hercegovina',\n  },\n  id: LocaleCode.CroatianBosniaAndHerzegovina,\n  language: {\n    code: LanguageCode.Croatian,\n    name: 'Croatian',\n    native: 'Hrvatski',\n  },\n  name: 'Croatian (Bosnia and Herzegovina)',\n  native_name: 'Hrvatski (Bosna i Hercegovina)',\n  rtl: false,\n};\n\nexport const CroatianCroatia: Locale = {\n  country: {\n    code: CountryCode.Croatia,\n    name: 'Croatia',\n    native: 'Hrvatska',\n  },\n  id: LocaleCode.CroatianCroatia,\n  language: {\n    code: LanguageCode.Croatian,\n    name: 'Croatian',\n    native: 'Hrvatski',\n  },\n  name: 'Croatian (Croatia)',\n  native_name: 'Hrvatski (Hrvatska)',\n  rtl: false,\n};\n\nexport const Czech: Locale = {\n  id: LocaleCode.Czech,\n  language: {\n    code: LanguageCode.Czech,\n    name: 'Czech',\n    native: '\u010Ce\u0161tina',\n  },\n  name: 'Czech',\n  native_name: '\u010Ce\u0161tina',\n  rtl: false,\n};\n\nexport const CzechCzechRepublic: Locale = {\n  country: {\n    code: CountryCode.CzechRepublic,\n    name: 'Czech Republic',\n    native: '\u010Cesk\u00E1 republika',\n  },\n  id: LocaleCode.CzechCzechRepublic,\n  language: {\n    code: LanguageCode.Czech,\n    name: 'Czech',\n    native: '\u010Ce\u0161tina',\n  },\n  name: 'Czech (Czech Republic)',\n  native_name: '\u010Ce\u0161tina (\u010Cesk\u00E1 republika)',\n  rtl: false,\n};\n\nexport const Danish: Locale = {\n  id: LocaleCode.Danish,\n  language: {\n    code: LanguageCode.Danish,\n    name: 'Danish',\n    native: 'Dansk',\n  },\n  name: 'Danish',\n  native_name: 'Dansk',\n  rtl: false,\n};\n\nexport const DanishDenmark: Locale = {\n  country: {\n    code: CountryCode.Denmark,\n    name: 'Denmark',\n    native: 'Danmark',\n  },\n  id: LocaleCode.DanishDenmark,\n  language: {\n    code: LanguageCode.Danish,\n    name: 'Danish',\n    native: 'Dansk',\n  },\n  name: 'Danish (Denmark)',\n  native_name: 'Dansk (Danmark)',\n  rtl: false,\n};\n\nexport const Divehi: Locale = {\n  id: LocaleCode.Divehi,\n  language: {\n    code: LanguageCode.Divehi,\n    name: 'Divehi',\n    native: '\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0',\n  },\n  name: 'Divehi',\n  native_name: '\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0',\n  rtl: true,\n};\n\nexport const DivehiMaldives: Locale = {\n  country: {\n    code: CountryCode.Maldives,\n    name: 'Maldives',\n    native: '\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC',\n  },\n  id: LocaleCode.DivehiMaldives,\n  language: {\n    code: LanguageCode.Divehi,\n    name: 'Divehi',\n    native: '\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0',\n  },\n  name: 'Divehi (Maldives)',\n  native_name: '\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0 (\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC)',\n  rtl: true,\n};\n\nexport const Dutch: Locale = {\n  id: LocaleCode.Dutch,\n  language: {\n    code: LanguageCode.Dutch,\n    name: 'Dutch',\n    native: 'Nederlands',\n  },\n  name: 'Dutch',\n  native_name: 'Nederlands',\n  rtl: false,\n};\n\nexport const DutchBelgium: Locale = {\n  country: {\n    code: CountryCode.Belgium,\n    name: 'Belgium',\n    native: 'Belgi\u00EB',\n  },\n  id: LocaleCode.DutchBelgium,\n  language: {\n    code: LanguageCode.Dutch,\n    name: 'Dutch',\n    native: 'Nederlands',\n  },\n  name: 'Dutch (Belgium)',\n  native_name: 'Nederlands (Belgi\u00EB)',\n  rtl: false,\n};\n\nexport const DutchNetherlands: Locale = {\n  country: {\n    code: CountryCode.Netherlands,\n    name: 'Netherlands',\n    native: 'Nederland',\n  },\n  id: LocaleCode.DutchNetherlands,\n  language: {\n    code: LanguageCode.Dutch,\n    name: 'Dutch',\n    native: 'Nederlands',\n  },\n  name: 'Dutch (Netherlands)',\n  native_name: 'Nederlands (Nederland)',\n  rtl: false,\n};\n\nexport const English: Locale = {\n  id: LocaleCode.English,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English',\n  native_name: 'English',\n  rtl: false,\n};\n\nexport const EnglishAustralia: Locale = {\n  country: {\n    code: CountryCode.Australia,\n    name: 'Australia',\n    native: 'Australia',\n  },\n  id: LocaleCode.EnglishAustralia,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Australia)',\n  native_name: 'English (Australia)',\n  rtl: false,\n};\n\nexport const EnglishBelgium: Locale = {\n  country: {\n    code: CountryCode.Belgium,\n    name: 'Belgium',\n    native: 'Belgi\u00EB',\n  },\n  id: LocaleCode.EnglishBelgium,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Belgium)',\n  native_name: 'English (Belgi\u00EB)',\n  rtl: false,\n};\n\nexport const EnglishCanada: Locale = {\n  country: {\n    code: CountryCode.Canada,\n    name: 'Canada',\n    native: 'Canada',\n  },\n  id: LocaleCode.EnglishCanada,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Canada)',\n  native_name: 'English (Canada)',\n  rtl: false,\n};\n\nexport const EnglishIreland: Locale = {\n  country: {\n    code: CountryCode.Ireland,\n    name: 'Ireland',\n    native: '\u00C9ire',\n  },\n  id: LocaleCode.EnglishIreland,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Ireland)',\n  native_name: 'English (\u00C9ire)',\n  rtl: false,\n};\n\nexport const EnglishJamaica: Locale = {\n  country: {\n    code: CountryCode.Jamaica,\n    name: 'Jamaica',\n    native: 'Jamaica',\n  },\n  id: LocaleCode.EnglishJamaica,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Jamaica)',\n  native_name: 'English (Jamaica)',\n  rtl: false,\n};\n\nexport const EnglishNewZealand: Locale = {\n  country: {\n    code: CountryCode.NewZealand,\n    name: 'New Zealand',\n    native: 'New Zealand',\n  },\n  id: LocaleCode.EnglishNewZealand,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (New Zealand)',\n  native_name: 'English (New Zealand)',\n  rtl: false,\n};\n\nexport const EnglishPhilippines: Locale = {\n  country: {\n    code: CountryCode.Philippines,\n    name: 'Philippines',\n    native: 'Philippines',\n  },\n  id: LocaleCode.EnglishPhilippines,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Philippines)',\n  native_name: 'English (Philippines)',\n  rtl: false,\n};\n\nexport const EnglishSingapore: Locale = {\n  country: {\n    code: CountryCode.Singapore,\n    name: 'Singapore',\n    native: 'Singapore',\n  },\n  id: LocaleCode.EnglishSingapore,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Singapore)',\n  native_name: 'English (Singapore)',\n  rtl: false,\n};\n\nexport const EnglishSouthAfrica: Locale = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: 'South Africa',\n    native: 'South Africa',\n  },\n  id: LocaleCode.EnglishSouthAfrica,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (South Africa)',\n  native_name: 'English (South Africa)',\n  rtl: false,\n};\n\nexport const EnglishTrinidadAndTobago: Locale = {\n  country: {\n    code: CountryCode.TrinidadAndTobago,\n    name: 'Trinidad and Tobago',\n    native: 'Trinidad and Tobago',\n  },\n  id: LocaleCode.EnglishTrinidadAndTobago,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Trinidad and Tobago)',\n  native_name: 'English (Trinidad and Tobago)',\n  rtl: false,\n};\n\nexport const EnglishUnitedKingdom: Locale = {\n  country: {\n    code: CountryCode.UnitedKingdom,\n    name: 'United Kingdom',\n    native: 'United Kingdom',\n  },\n  id: LocaleCode.EnglishUnitedKingdom,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (United Kingdom)',\n  native_name: 'English (United Kingdom)',\n  rtl: false,\n};\n\nexport const EnglishUnitedStates: Locale = {\n  country: {\n    code: CountryCode.UnitedStates,\n    name: 'United States',\n    native: 'United States',\n  },\n  id: LocaleCode.EnglishUnitedStates,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (United States)',\n  native_name: 'English (United States)',\n  rtl: false,\n};\n\nexport const EnglishZimbabwe: Locale = {\n  country: {\n    code: CountryCode.Zimbabwe,\n    name: 'Zimbabwe',\n    native: 'Zimbabwe',\n  },\n  id: LocaleCode.EnglishZimbabwe,\n  language: {\n    code: LanguageCode.English,\n    name: 'English',\n    native: 'English',\n  },\n  name: 'English (Zimbabwe)',\n  native_name: 'English (Zimbabwe)',\n  rtl: false,\n};\n\nexport const Esperanto: Locale = {\n  id: LocaleCode.Esperanto,\n  language: {\n    code: LanguageCode.Esperanto,\n    name: 'Esperanto',\n    native: 'Esperanto',\n  },\n  name: 'Esperanto',\n  native_name: 'Esperanto',\n  rtl: false,\n};\n\nexport const Estonian: Locale = {\n  id: LocaleCode.Estonian,\n  language: {\n    code: LanguageCode.Estonian,\n    name: 'Estonian',\n    native: 'Eesti',\n  },\n  name: 'Estonian',\n  native_name: 'Eesti',\n  rtl: false,\n};\n\nexport const EstonianEstonia: Locale = {\n  country: {\n    code: CountryCode.Estonia,\n    name: 'Estonia',\n    native: 'Eesti',\n  },\n  id: LocaleCode.EstonianEstonia,\n  language: {\n    code: LanguageCode.Estonian,\n    name: 'Estonian',\n    native: 'Eesti',\n  },\n  name: 'Estonian (Estonia)',\n  native_name: 'Eesti (Eesti)',\n  rtl: false,\n};\n\nexport const Faroese: Locale = {\n  id: LocaleCode.Faroese,\n  language: {\n    code: LanguageCode.Faroese,\n    name: 'Faroese',\n    native: 'F\u00F8royskt',\n  },\n  name: 'Faroese',\n  native_name: 'F\u00F8royskt',\n  rtl: false,\n};\n\nexport const FaroeseFaroeIslands: Locale = {\n  country: {\n    code: CountryCode.FaroeIslands,\n    name: 'Faroe Islands',\n    native: 'F\u00F8royar',\n  },\n  id: LocaleCode.FaroeseFaroeIslands,\n  language: {\n    code: LanguageCode.Faroese,\n    name: 'Faroese',\n    native: 'F\u00F8royskt',\n  },\n  name: 'Faroese (Faroe Islands)',\n  native_name: 'F\u00F8royskt (F\u00F8royar)',\n  rtl: false,\n};\n\nexport const Farsi: Locale = {\n  id: LocaleCode.Farsi,\n  language: {\n    code: LanguageCode.Farsi,\n    name: 'Farsi',\n    native: '\u0641\u0627\u0631\u0633\u06CC',\n  },\n  name: 'Farsi',\n  native_name: '\u0641\u0627\u0631\u0633\u06CC',\n  rtl: true,\n};\n\nexport const FarsiIran: Locale = {\n  country: {\n    code: CountryCode.Iran,\n    name: 'Iran',\n    native: '\u0627\u06CC\u0631\u0627\u0646',\n  },\n  id: LocaleCode.FarsiIran,\n  language: {\n    code: LanguageCode.Farsi,\n    name: 'Farsi',\n    native: '\u0641\u0627\u0631\u0633\u06CC',\n  },\n  name: 'Farsi (Iran)',\n  native_name: '\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)',\n  rtl: true,\n};\n\nexport const Filipino: Locale = {\n  id: LocaleCode.Filipino,\n  language: {\n    code: LanguageCode.Filipino,\n    name: 'Filipino',\n    native: 'Filipino',\n  },\n  name: 'Filipino',\n  native_name: 'Filipino',\n  rtl: false,\n};\n\nexport const FilipinoPhilippines: Locale = {\n  country: {\n    code: CountryCode.Philippines,\n    name: 'Philippines',\n    native: 'Pilipinas',\n  },\n  id: LocaleCode.FilipinoPhilippines,\n  language: {\n    code: LanguageCode.Filipino,\n    name: 'Filipino',\n    native: 'Filipino',\n  },\n  name: 'Filipino (Philippines)',\n  native_name: 'Filipino (Pilipinas)',\n  rtl: false,\n};\n\nexport const Finnish: Locale = {\n  id: LocaleCode.Finnish,\n  language: {\n    code: LanguageCode.Finnish,\n    name: 'Finnish',\n    native: 'Suomi',\n  },\n  name: 'Finnish',\n  native_name: 'Suomi',\n  rtl: false,\n};\n\nexport const FinnishFinland: Locale = {\n  country: {\n    code: CountryCode.Finland,\n    name: 'Finland',\n    native: 'Suomi',\n  },\n  id: LocaleCode.FinnishFinland,\n  language: {\n    code: LanguageCode.Finnish,\n    name: 'Finnish',\n    native: 'Suomi',\n  },\n  name: 'Finnish (Finland)',\n  native_name: 'Suomi (Suomi)',\n  rtl: false,\n};\n\nexport const French: Locale = {\n  id: LocaleCode.French,\n  language: {\n    code: LanguageCode.French,\n    name: 'French',\n    native: 'Fran\u00E7ais',\n  },\n  name: 'French',\n  native_name: 'Fran\u00E7ais',\n  rtl: false,\n};\n\nexport const FrenchBelgium: Locale = {\n  country: {\n    code: CountryCode.Belgium,\n    name: 'Belgium',\n    native: 'Belgique',\n  },\n  id: LocaleCode.FrenchBelgium,\n  language: {\n    code: LanguageCode.French,\n    name: 'French',\n    native: 'Fran\u00E7ais',\n  },\n  name: 'French (Belgium)',\n  native_name: 'Fran\u00E7ais (Belgique)',\n  rtl: false,\n};\n\nexport const FrenchCanada: Locale = {\n  country: {\n    code: CountryCode.Canada,\n    name: 'Canada',\n    native: 'Canada',\n  },\n  id: LocaleCode.FrenchCanada,\n  language: {\n    code: LanguageCode.French,\n    name: 'French',\n    native: 'Fran\u00E7ais',\n  },\n  name: 'French (Canada)',\n  native_name: 'Fran\u00E7ais (Canada)',\n  rtl: false,\n};\n\nexport const FrenchFrance: Locale = {\n  country: {\n    code: CountryCode.France,\n    name: 'France',\n    native: 'France',\n  },\n  id: LocaleCode.FrenchFrance,\n  language: {\n    code: LanguageCode.French,\n    name: 'French',\n    native: 'Fran\u00E7ais',\n  },\n  name: 'French (France)',\n  native_name: 'Fran\u00E7ais (France)',\n  rtl: false,\n};\n\nexport const FrenchLuxembourg: Locale = {\n  country: {\n    code: CountryCode.Luxembourg,\n    name: 'Luxembourg',\n    native: 'Luxembourg',\n  },\n  id: LocaleCode.FrenchLuxembourg,\n  language: {\n    code: LanguageCode.French,\n    name: 'French',\n    native: 'Fran\u00E7ais',\n  },\n  name: 'French (Luxembourg)',\n  native_name: 'Fran\u00E7ais (Luxembourg)',\n  rtl: false,\n};\n\nexport const FrenchMonaco: Locale = {\n  country: {\n    code: CountryCode.Monaco,\n    name: 'Monaco',\n    native: 'Monaco',\n  },\n  id: LocaleCode.FrenchMonaco,\n  language: {\n    code: LanguageCode.French,\n    name: 'French',\n    native: 'Fran\u00E7ais',\n  },\n  name: 'French (Monaco)',\n  native_name: 'Fran\u00E7ais (Monaco)',\n  rtl: false,\n};\n\nexport const FrenchReunion: Locale = {\n  country: {\n    code: CountryCode.Reunion,\n    name: 'Reunion',\n    native: 'La R\u00E9union',\n  },\n  id: LocaleCode.FrenchReunion,\n  language: {\n    code: LanguageCode.French,\n    name: 'French',\n    native: 'Fran\u00E7ais',\n  },\n  name: 'French (Reunion)',\n  native_name: 'Fran\u00E7ais (La R\u00E9union)',\n  rtl: false,\n};\n\nexport const FrenchSwitzerland: Locale = {\n  country: {\n    code: CountryCode.Switzerland,\n    name: 'Switzerland',\n    native: 'Suisse',\n  },\n  id: LocaleCode.FrenchSwitzerland,\n  language: {\n    code: LanguageCode.French,\n    name: 'French',\n    native: 'Fran\u00E7ais',\n  },\n  name: 'French (Switzerland)',\n  native_name: 'Fran\u00E7ais (Suisse)',\n  rtl: false,\n};\n\nexport const Frisian: Locale = {\n  id: LocaleCode.Frisian,\n  language: {\n    code: LanguageCode.Frisian,\n    name: 'Frisian',\n    native: 'Frysk',\n  },\n  name: 'Frisian',\n  native_name: 'Frysk',\n  rtl: false,\n};\n\nexport const FrisianNetherlands: Locale = {\n  country: {\n    code: CountryCode.Netherlands,\n    name: 'Netherlands',\n    native: 'Nederland',\n  },\n  id: LocaleCode.FrisianNetherlands,\n  language: {\n    code: LanguageCode.Frisian,\n    name: 'Frisian',\n    native: 'Frysk',\n  },\n  name: 'Frisian (Netherlands)',\n  native_name: 'Frysk (Nederland)',\n  rtl: false,\n};\n\nexport const Galician: Locale = {\n  id: LocaleCode.Galician,\n  language: {\n    code: LanguageCode.Galician,\n    name: 'Galician',\n    native: 'Galego',\n  },\n  name: 'Galician',\n  native_name: 'Galego',\n  rtl: false,\n};\n\nexport const GalicianSpain: Locale = {\n  country: {\n    code: CountryCode.Spain,\n    name: 'Spain',\n    native: 'Espa\u00F1a',\n  },\n  id: LocaleCode.GalicianSpain,\n  language: {\n    code: LanguageCode.Galician,\n    name: 'Galician',\n    native: 'Galego',\n  },\n  name: 'Galician (Spain)',\n  native_name: 'Galego (Espa\u00F1a)',\n  rtl: false,\n};\n\nexport const Georgian: Locale = {\n  id: LocaleCode.Georgian,\n  language: {\n    code: LanguageCode.Georgian,\n    name: 'Georgian',\n    native: '\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8',\n  },\n  name: 'Georgian',\n  native_name: '\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8',\n  rtl: false,\n};\n\nexport const GeorgianGeorgia: Locale = {\n  country: {\n    code: CountryCode.Georgia,\n    name: 'Georgia',\n    native: '\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD',\n  },\n  id: LocaleCode.GeorgianGeorgia,\n  language: {\n    code: LanguageCode.Georgian,\n    name: 'Georgian',\n    native: '\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8',\n  },\n  name: 'Georgian (Georgia)',\n  native_name: '\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8 (\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD)',\n  rtl: false,\n};\n\nexport const German: Locale = {\n  id: LocaleCode.German,\n  language: {\n    code: LanguageCode.German,\n    name: 'German',\n    native: 'Deutsch',\n  },\n  name: 'German',\n  native_name: 'Deutsch',\n  rtl: false,\n};\n\nexport const GermanAustria: Locale = {\n  country: {\n    code: CountryCode.Austria,\n    name: 'Austria',\n    native: '\u00D6sterreich',\n  },\n  id: LocaleCode.GermanAustria,\n  language: {\n    code: LanguageCode.German,\n    name: 'German',\n    native: 'Deutsch',\n  },\n  name: 'German (Austria)',\n  native_name: 'Deutsch (\u00D6sterreich)',\n  rtl: false,\n};\n\nexport const GermanBelgium: Locale = {\n  country: {\n    code: CountryCode.Belgium,\n    name: 'Belgium',\n    native: 'Belgi\u00EB',\n  },\n  id: LocaleCode.GermanBelgium,\n  language: {\n    code: LanguageCode.German,\n    name: 'German',\n    native: 'Deutsch',\n  },\n  name: 'German (Belgium)',\n  native_name: 'Deutsch (Belgi\u00EB)',\n  rtl: false,\n};\n\nexport const GermanSwitzerland: Locale = {\n  country: {\n    code: CountryCode.Switzerland,\n    name: 'Switzerland',\n    native: 'Suisse',\n  },\n  id: LocaleCode.GermanSwitzerland,\n  language: {\n    code: LanguageCode.German,\n    name: 'German',\n    native: 'Deutsch',\n  },\n  name: 'German (Switzerland)',\n  native_name: 'Deutsch (Suisse)',\n  rtl: false,\n};\n\nexport const GermanLiechtenstein: Locale = {\n  country: {\n    code: CountryCode.Liechtenstein,\n    name: 'Liechtenstein',\n    native: 'Liechtenstein',\n  },\n  id: LocaleCode.GermanLiechtenstein,\n  language: {\n    code: LanguageCode.German,\n    name: 'German',\n    native: 'Deutsch',\n  },\n  name: 'German (Liechtenstein)',\n  native_name: 'Deutsch (Liechtenstein)',\n  rtl: false,\n};\n\nexport const GermanLuxembourg: Locale = {\n  country: {\n    code: CountryCode.Luxembourg,\n    name: 'Luxembourg',\n    native: 'Luxembourg',\n  },\n  id: LocaleCode.GermanLuxembourg,\n  language: {\n    code: LanguageCode.German,\n    name: 'German',\n    native: 'Deutsch',\n  },\n  name: 'German (Luxembourg)',\n  native_name: 'Deutsch (Luxembourg)',\n  rtl: false,\n};\n\nexport const Greek: Locale = {\n  id: LocaleCode.Greek,\n  language: {\n    code: LanguageCode.Greek,\n    name: 'Greek',\n    native: '\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC',\n  },\n  name: 'Greek',\n  native_name: '\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC',\n  rtl: false,\n};\n\nexport const GreekGreece: Locale = {\n  country: {\n    code: CountryCode.Greece,\n    name: 'Greece',\n    native: '\u0395\u03BB\u03BB\u03AC\u03B4\u03B1',\n  },\n  id: LocaleCode.GreekGreece,\n  language: {\n    code: LanguageCode.Greek,\n    name: 'Greek',\n    native: '\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC',\n  },\n  name: 'Greek (Greece)',\n  native_name: '\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC (\u0395\u03BB\u03BB\u03AC\u03B4\u03B1)',\n  rtl: false,\n};\n\nexport const Greenlandic: Locale = {\n  id: LocaleCode.Greenlandic,\n  language: {\n    code: LanguageCode.Greenlandic,\n    name: 'Greenlandic',\n    native: 'Kalaallisut',\n  },\n  name: 'Greenlandic',\n  native_name: 'Kalaallisut',\n  rtl: false,\n};\n\nexport const GreenlandicGreenland: Locale = {\n  country: {\n    code: CountryCode.Greenland,\n    name: 'Greenland',\n    native: 'Kalaallit Nunaat',\n  },\n  id: LocaleCode.GreenlandicGreenland,\n  language: {\n    code: LanguageCode.Greenlandic,\n    name: 'Greenlandic',\n    native: 'Kalaallisut',\n  },\n  name: 'Greenlandic (Greenland)',\n  native_name: 'Kalaallisut (Kalaallit Nunaat)',\n  rtl: false,\n};\n\nexport const Gujarati: Locale = {\n  id: LocaleCode.Gujarati,\n  language: {\n    code: LanguageCode.Gujarati,\n    name: 'Gujarati',\n    native: '\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0',\n  },\n  name: 'Gujarati',\n  native_name: '\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0',\n  rtl: false,\n};\n\nexport const GujaratiIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u092D\u093E\u0930\u0924',\n  },\n  id: LocaleCode.GujaratiIndia,\n  language: {\n    code: LanguageCode.Gujarati,\n    name: 'Gujarati',\n    native: '\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0',\n  },\n  name: 'Gujarati (India)',\n  native_name: '\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0 (\u092D\u093E\u0930\u0924)',\n  rtl: false,\n};\n\nexport const Hausa: Locale = {\n  id: LocaleCode.Hausa,\n  language: {\n    code: LanguageCode.Hausa,\n    name: 'Hausa',\n    native: '\u0647\u064E\u0648\u064F\u0633\u064E',\n  },\n  name: 'Hausa',\n  native_name: '\u0647\u064E\u0648\u064F\u0633\u064E',\n  rtl: false,\n};\n\nexport const HausaGhana: Locale = {\n  country: {\n    code: CountryCode.Ghana,\n    name: 'Ghana',\n    native: 'Ghana',\n  },\n  id: LocaleCode.HausaGhana,\n  language: {\n    code: LanguageCode.Hausa,\n    name: 'Hausa',\n    native: '\u0647\u064E\u0648\u064F\u0633\u064E',\n  },\n  name: 'Hausa (Ghana)',\n  native_name: '\u0647\u064E\u0648\u064F\u0633\u064E (Ghana)',\n  rtl: false,\n};\n\nexport const HausaNiger: Locale = {\n  country: {\n    code: CountryCode.Niger,\n    name: 'Niger',\n    native: 'Niger',\n  },\n  id: LocaleCode.HausaNiger,\n  language: {\n    code: LanguageCode.Hausa,\n    name: 'Hausa',\n    native: '\u0647\u064E\u0648\u064F\u0633\u064E',\n  },\n  name: 'Hausa (Niger)',\n  native_name: '\u0647\u064E\u0648\u064F\u0633\u064E (Niger)',\n  rtl: false,\n};\n\nexport const HausaNigeria: Locale = {\n  country: {\n    code: CountryCode.Nigeria,\n    name: 'Nigeria',\n    native: 'Nigeria',\n  },\n  id: LocaleCode.HausaNigeria,\n  language: {\n    code: LanguageCode.Hausa,\n    name: 'Hausa',\n    native: '\u0647\u064E\u0648\u064F\u0633\u064E',\n  },\n  name: 'Hausa (Nigeria)',\n  native_name: '\u0647\u064E\u0648\u064F\u0633\u064E (Nigeria)',\n  rtl: false,\n};\n\nexport const Hebrew: Locale = {\n  id: LocaleCode.Hebrew,\n  language: {\n    code: LanguageCode.Hebrew,\n    name: 'Hebrew',\n    native: '\u05E2\u05D1\u05E8\u05D9\u05EA',\n  },\n  name: 'Hebrew',\n  native_name: '\u05E2\u05D1\u05E8\u05D9\u05EA',\n  rtl: true,\n};\n\n// TODO: Figure this out since Github is censoring it\nexport const HebrewIsrael: Locale = {\n  country: {\n    code: CountryCode.Israel,\n    name: 'Hebrew',\n    native: '',\n  },\n  id: LocaleCode.HebrewIsrael,\n  language: {\n    code: LanguageCode.Hebrew,\n    name: 'Hebrew',\n    native: '',\n  },\n  name: 'Hebrew (Israel)',\n  native_name: '',\n  rtl: true,\n};\n\nexport const Hindi: Locale = {\n  id: LocaleCode.Hindi,\n  language: {\n    code: LanguageCode.Hindi,\n    name: 'Hindi',\n    native: '\u0939\u093F\u0928\u094D\u0926\u0940',\n  },\n  name: 'Hindi',\n  native_name: '\u0939\u093F\u0928\u094D\u0926\u0940',\n  rtl: false,\n};\n\nexport const HindiIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u092D\u093E\u0930\u0924',\n  },\n  id: LocaleCode.HindiIndia,\n  language: {\n    code: LanguageCode.Hindi,\n    name: 'Hindi',\n    native: '\u092D\u093E\u0930\u0924\u0940\u092F',\n  },\n  name: 'Hindi (India)',\n  native_name: '\u092D\u093E\u0930\u0924\u0940\u092F',\n  rtl: false,\n};\n\nexport const Hungarian: Locale = {\n  id: LocaleCode.Hungarian,\n  language: {\n    code: LanguageCode.Hungarian,\n    name: 'Hungarian',\n    native: 'Magyar',\n  },\n  name: 'Hungarian',\n  native_name: 'Magyar',\n  rtl: false,\n};\n\nexport const HungarianHungary: Locale = {\n  country: {\n    code: CountryCode.Hungary,\n    name: 'Hungary',\n    native: 'Magyarorsz\u00E1g',\n  },\n  id: LocaleCode.HungarianHungary,\n  language: {\n    code: LanguageCode.Hungarian,\n    name: 'Hungarian',\n    native: 'Magyar',\n  },\n  name: 'Hungarian (Hungary)',\n  native_name: 'Magyar (Magyarorsz\u00E1g)',\n  rtl: false,\n};\n\nexport const Icelandic: Locale = {\n  id: LocaleCode.Icelandic,\n  language: {\n    code: LanguageCode.Icelandic,\n    name: 'Icelandic',\n    native: '\u00CDslenska',\n  },\n  name: 'Icelandic',\n  native_name: '\u00CDslenska',\n  rtl: false,\n};\n\nexport const IcelandicIceland: Locale = {\n  country: {\n    code: CountryCode.Iceland,\n    name: 'Iceland',\n    native: '\u00CDsland',\n  },\n  id: LocaleCode.IcelandicIceland,\n  language: {\n    code: LanguageCode.Icelandic,\n    name: 'Icelandic',\n    native: '\u00CDslenska',\n  },\n  name: 'Icelandic (Iceland)',\n  native_name: '\u00CDslenska (\u00CDsland)',\n  rtl: false,\n};\n\nexport const Igbo: Locale = {\n  id: LocaleCode.Igbo,\n  language: {\n    code: LanguageCode.Igbo,\n    name: 'Igbo',\n    native: 'Igbo',\n  },\n  name: 'Igbo',\n  native_name: 'Igbo',\n  rtl: false,\n};\n\nexport const Indonesian: Locale = {\n  id: LocaleCode.Indonesian,\n  language: {\n    code: LanguageCode.Indonesian,\n    name: 'Indonesian',\n    native: 'Bahasa Indonesia',\n  },\n  name: 'Indonesian',\n  native_name: 'Bahasa Indonesia',\n  rtl: false,\n};\n\nexport const IndonesianIndonesia: Locale = {\n  country: {\n    code: CountryCode.Indonesia,\n    name: 'Indonesia',\n    native: 'Indonesia',\n  },\n  id: LocaleCode.IndonesianIndonesia,\n  language: {\n    code: LanguageCode.Indonesian,\n    name: 'Indonesian',\n    native: 'Bahasa Indonesia',\n  },\n  name: 'Indonesian (Indonesia)',\n  native_name: 'Bahasa Indonesia (Indonesia)',\n  rtl: false,\n};\n\nexport const Irish: Locale = {\n  id: LocaleCode.Irish,\n  language: {\n    code: LanguageCode.Irish,\n    name: 'Irish',\n    native: 'Gaeilge',\n  },\n  name: 'Irish',\n  native_name: 'Gaeilge',\n  rtl: false,\n};\n\nexport const IrishIreland: Locale = {\n  country: {\n    code: CountryCode.Ireland,\n    name: 'Ireland',\n    native: '\u00C9ire',\n  },\n  id: LocaleCode.IrishIreland,\n  language: {\n    code: LanguageCode.Irish,\n    name: 'Irish',\n    native: 'Gaeilge',\n  },\n  name: 'Irish (Ireland)',\n  native_name: 'Gaeilge (\u00C9ire)',\n  rtl: false,\n};\n\nexport const Italian: Locale = {\n  id: LocaleCode.Italian,\n  language: {\n    code: LanguageCode.Italian,\n    name: 'Italian',\n    native: 'Italiano',\n  },\n  name: 'Italian',\n  native_name: 'Italiano',\n  rtl: false,\n};\n\nexport const ItalianItaly: Locale = {\n  country: {\n    code: CountryCode.Italy,\n    name: 'Italy',\n    native: 'Italia',\n  },\n  id: LocaleCode.ItalianItaly,\n  language: {\n    code: LanguageCode.Italian,\n    name: 'Italian',\n    native: 'Italiano',\n  },\n  name: 'Italian (Italy)',\n  native_name: 'Italiano (Italia)',\n  rtl: false,\n};\n\nexport const ItalianSwitzerland: Locale = {\n  country: {\n    code: CountryCode.Switzerland,\n    name: 'Switzerland',\n    native: 'Schweiz',\n  },\n  id: LocaleCode.ItalianSwitzerland,\n  language: {\n    code: LanguageCode.Italian,\n    name: 'Italian',\n    native: 'Italiano',\n  },\n  name: 'Italian (Switzerland)',\n  native_name: 'Italiano (Svizzera)',\n  rtl: false,\n};\n\nexport const Japanese: Locale = {\n  id: LocaleCode.Japanese,\n  language: {\n    code: LanguageCode.Japanese,\n    name: 'Japanese',\n    native: '\u65E5\u672C\u8A9E',\n  },\n  name: 'Japanese',\n  native_name: '\u65E5\u672C\u8A9E',\n  rtl: false,\n};\n\nexport const JapaneseJapan: Locale = {\n  country: {\n    code: CountryCode.Japan,\n    name: 'Japan',\n    native: '\u65E5\u672C',\n  },\n  id: LocaleCode.JapaneseJapan,\n  language: {\n    code: LanguageCode.Japanese,\n    name: 'Japanese',\n    native: '\u65E5\u672C\u8A9E',\n  },\n  name: 'Japanese (Japan)',\n  native_name: '\u65E5\u672C\u8A9E (\u65E5\u672C)',\n  rtl: false,\n};\n\nexport const Kannada: Locale = {\n  id: LocaleCode.Kannada,\n  language: {\n    code: LanguageCode.Kannada,\n    name: 'Kannada',\n    native: '\u0C95\u0CA8\u0CCD\u0CA8\u0CA1',\n  },\n  name: 'Kannada',\n  native_name: '\u0C95\u0CA8\u0CCD\u0CA8\u0CA1',\n  rtl: false,\n};\n\nexport const KannadaIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u0CAD\u0CBE\u0CB0\u0CA4',\n  },\n  id: LocaleCode.KannadaIndia,\n  language: {\n    code: LanguageCode.Kannada,\n    name: 'Kannada',\n    native: '\u0C95\u0CA8\u0CCD\u0CA8\u0CA1',\n  },\n  name: 'Kannada (India)',\n  native_name: '\u0C95\u0CA8\u0CCD\u0CA8\u0CA1 (\u0CAD\u0CBE\u0CB0\u0CA4)',\n  rtl: false,\n};\n\nexport const Kazakh: Locale = {\n  id: LocaleCode.Kazakh,\n  language: {\n    code: LanguageCode.Kazakh,\n    name: 'Kazakh',\n    native: '\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456',\n  },\n  name: 'Kazakh',\n  native_name: '\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456',\n  rtl: false,\n};\n\nexport const KazakhKazakhstan: Locale = {\n  country: {\n    code: CountryCode.Kazakhstan,\n    name: 'Kazakhstan',\n    native: '\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D',\n  },\n  id: LocaleCode.KazakhKazakhstan,\n  language: {\n    code: LanguageCode.Kazakh,\n    name: 'Kazakh',\n    native: '\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456',\n  },\n  name: 'Kazakh (Kazakhstan)',\n  native_name: '\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)',\n  rtl: false,\n};\n\nexport const Khmer: Locale = {\n  id: LocaleCode.Khmer,\n  language: {\n    code: LanguageCode.Khmer,\n    name: 'Khmer',\n    native: '\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A',\n  },\n  name: 'Khmer',\n  native_name: '\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A',\n  rtl: false,\n};\n\nexport const KhmerCambodia: Locale = {\n  country: {\n    code: CountryCode.Cambodia,\n    name: 'Cambodia',\n    native: '\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6',\n  },\n  id: LocaleCode.KhmerCambodia,\n  language: {\n    code: LanguageCode.Khmer,\n    name: 'Khmer',\n    native: '\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A',\n  },\n  name: 'Khmer (Cambodia)',\n  native_name: '\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A (\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6)',\n  rtl: false,\n};\n\nexport const Konkani: Locale = {\n  id: LocaleCode.Konkani,\n  language: {\n    code: LanguageCode.Konkani,\n    name: 'Konkani',\n    native: '\u0915\u094B\u0902\u0915\u0923\u0940',\n  },\n  name: 'Konkani',\n  native_name: '\u0915\u094B\u0902\u0915\u0923\u0940',\n  rtl: false,\n};\n\nexport const KonkaniIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u092D\u093E\u0930\u0924',\n  },\n  id: LocaleCode.KonkaniIndia,\n  language: {\n    code: LanguageCode.Konkani,\n    name: 'Konkani',\n    native: '\u0915\u094B\u0902\u0915\u0923\u0940',\n  },\n  name: 'Konkani (India)',\n  native_name: '\u0915\u094B\u0902\u0915\u0923\u0940 (\u092D\u093E\u0930\u0924)',\n  rtl: false,\n};\n\nexport const Korean: Locale = {\n  id: LocaleCode.Korean,\n  language: {\n    code: LanguageCode.Korean,\n    name: 'Korean',\n    native: '\uD55C\uAD6D\uC5B4',\n  },\n  name: 'Korean',\n  native_name: '\uD55C\uAD6D\uC5B4',\n  rtl: false,\n};\n\nexport const KoreanSouthKorea: Locale = {\n  country: {\n    code: CountryCode.SouthKorea,\n    name: 'South Korea',\n    native: '\uB300\uD55C\uBBFC\uAD6D',\n  },\n  id: LocaleCode.KoreanSouthKorea,\n  language: {\n    code: LanguageCode.Korean,\n    name: 'Korean',\n    native: '\uD55C\uAD6D\uC5B4',\n  },\n  name: 'Korean (South Korea)',\n  native_name: '\uD55C\uAD6D\uC5B4 (\uB300\uD55C\uBBFC\uAD6D)',\n  rtl: false,\n};\n\nexport const Kurdish: Locale = {\n  id: LocaleCode.Kurdish,\n  language: {\n    code: LanguageCode.Kurdish,\n    name: 'Kurdish',\n    native: 'Kurd\u00EE',\n  },\n  name: 'Kurdish',\n  native_name: 'Kurd\u00EE',\n  rtl: false,\n};\n\nexport const KurdishIraq: Locale = {\n  country: {\n    code: CountryCode.Iraq,\n    name: 'Iraq',\n    native: '\u0627\u0644\u0639\u0631\u0627\u0642',\n  },\n  id: LocaleCode.KurdishIraq,\n  language: {\n    code: LanguageCode.Kurdish,\n    name: 'Kurdish',\n    native: 'Kurd\u00EE',\n  },\n  name: 'Kurdish (Iraq)',\n  native_name: 'Kurd\u00EE (\u0627\u0644\u0639\u0631\u0627\u0642)',\n  rtl: false,\n};\n\nexport const KurdishTurkey: Locale = {\n  country: {\n    code: CountryCode.Turkey,\n    name: 'Turkey',\n    native: 'T\u00FCrkiye',\n  },\n  id: LocaleCode.KurdishTurkey,\n  language: {\n    code: LanguageCode.Kurdish,\n    name: 'Kurdish',\n    native: 'Kurd\u00EE',\n  },\n  name: 'Kurdish (Turkey)',\n  native_name: 'Kurd\u00EE (T\u00FCrkiye)',\n  rtl: false,\n};\n\nexport const Kyrgyz: Locale = {\n  id: LocaleCode.Kyrgyz,\n  language: {\n    code: LanguageCode.Kyrgyz,\n    name: 'Kyrgyz',\n    native: '\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430',\n  },\n  name: 'Kyrgyz',\n  native_name: '\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430',\n  rtl: false,\n};\n\nexport const KyrgyzKyrgyzstan: Locale = {\n  country: {\n    code: CountryCode.Kyrgyzstan,\n    name: 'Kyrgyzstan',\n    native: '\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D',\n  },\n  id: LocaleCode.KyrgyzKyrgyzstan,\n  language: {\n    code: LanguageCode.Kyrgyz,\n    name: 'Kyrgyz',\n    native: '\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430',\n  },\n  name: 'Kyrgyz (Kyrgyzstan)',\n  native_name: '\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430 (\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D)',\n  rtl: false,\n};\n\nexport const Lao: Locale = {\n  id: LocaleCode.Lao,\n  language: {\n    code: LanguageCode.Lao,\n    name: 'Lao',\n    native: '\u0EA5\u0EB2\u0EA7',\n  },\n  name: 'Lao',\n  native_name: '\u0EA5\u0EB2\u0EA7',\n  rtl: false,\n};\n\nexport const LaoLaos: Locale = {\n  country: {\n    code: CountryCode.Laos,\n    name: 'Laos',\n    native: '\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95',\n  },\n  id: LocaleCode.LaoLaos,\n  language: {\n    code: LanguageCode.Lao,\n    name: 'Lao',\n    native: '\u0EA5\u0EB2\u0EA7',\n  },\n  name: 'Lao (Laos)',\n  native_name: '\u0EA5\u0EB2\u0EA7 (\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95)',\n  rtl: false,\n};\n\nexport const Latvian: Locale = {\n  id: LocaleCode.Latvian,\n  language: {\n    code: LanguageCode.Latvian,\n    name: 'Latvian',\n    native: 'Latvie\u0161u',\n  },\n  name: 'Latvian',\n  native_name: 'Latvie\u0161u',\n  rtl: false,\n};\n\nexport const LatvianLatvia: Locale = {\n  country: {\n    code: CountryCode.Latvia,\n    name: 'Latvia',\n    native: 'Latvija',\n  },\n  id: LocaleCode.LatvianLatvia,\n  language: {\n    code: LanguageCode.Latvian,\n    name: 'Latvian',\n    native: 'Latvie\u0161u',\n  },\n  name: 'Latvian (Latvia)',\n  native_name: 'Latvie\u0161u (Latvija)',\n  rtl: false,\n};\n\nexport const Lithuanian: Locale = {\n  id: LocaleCode.Lithuanian,\n  language: {\n    code: LanguageCode.Lithuanian,\n    name: 'Lithuanian',\n    native: 'Lietuvi\u0173',\n  },\n  name: 'Lithuanian',\n  native_name: 'Lietuvi\u0173',\n  rtl: false,\n};\n\nexport const LithuanianLithuania: Locale = {\n  country: {\n    code: CountryCode.Lithuania,\n    name: 'Lithuania',\n    native: 'Lietuva',\n  },\n  id: LocaleCode.LithuanianLithuania,\n  language: {\n    code: LanguageCode.Lithuanian,\n    name: 'Lithuanian',\n    native: 'Lietuvi\u0173',\n  },\n  name: 'Lithuanian (Lithuania)',\n  native_name: 'Lietuvi\u0173 (Lietuva)',\n  rtl: false,\n};\n\nexport const Luxembourgish: Locale = {\n  id: LocaleCode.Luxembourgish,\n  language: {\n    code: LanguageCode.Luxembourgish,\n    name: 'Luxembourgish',\n    native: 'L\u00EBtzebuergesch',\n  },\n  name: 'Luxembourgish',\n  native_name: 'L\u00EBtzebuergesch',\n  rtl: false,\n};\n\nexport const LuxembourgishBelgium: Locale = {\n  country: {\n    code: CountryCode.Belgium,\n    name: 'Belgium',\n    native: 'Belgi\u00EB',\n  },\n  id: LocaleCode.LuxembourgishBelgium,\n  language: {\n    code: LanguageCode.Luxembourgish,\n    name: 'Luxembourgish',\n    native: 'L\u00EBtzebuergesch',\n  },\n  name: 'Luxembourgish (Belgium)',\n  native_name: 'L\u00EBtzebuergesch (Belgi\u00EB)',\n  rtl: false,\n};\n\nexport const LuxembourgishLuxembourg: Locale = {\n  country: {\n    code: CountryCode.Luxembourg,\n    name: 'Luxembourg',\n    native: 'Luxembourg',\n  },\n  id: LocaleCode.LuxembourgishLuxembourg,\n  language: {\n    code: LanguageCode.Luxembourgish,\n    name: 'Luxembourgish',\n    native: 'L\u00EBtzebuergesch',\n  },\n  name: 'Luxembourgish (Luxembourg)',\n  native_name: 'L\u00EBtzebuergesch (Luxembourg)',\n  rtl: false,\n};\n\nexport const Macedonian: Locale = {\n  id: LocaleCode.Macedonian,\n  language: {\n    code: LanguageCode.Macedonian,\n    name: 'Macedonian',\n    native: '\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438',\n  },\n  name: 'Macedonian',\n  native_name: '\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438',\n  rtl: false,\n};\n\nexport const MacedonianNorthMacedonia: Locale = {\n  country: {\n    code: CountryCode.NorthMacedonia,\n    name: 'Macedonia',\n    native: '\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430',\n  },\n  id: LocaleCode.MacedonianNorthMacedonia,\n  language: {\n    code: LanguageCode.Macedonian,\n    name: 'Macedonian',\n    native: '\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438',\n  },\n  name: 'Macedonian (North Macedonia)',\n  native_name: '\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438 (\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430)',\n  rtl: false,\n};\n\nexport const Malay: Locale = {\n  id: LocaleCode.Malay,\n  language: {\n    code: LanguageCode.Malay,\n    name: 'Malay',\n    native: 'Bahasa Melayu',\n  },\n  name: 'Malay',\n  native_name: 'Bahasa Melayu',\n  rtl: false,\n};\n\nexport const MalayBrunei: Locale = {\n  country: {\n    code: CountryCode.Brunei,\n    name: 'Brunei',\n    native: 'Negara Brunei Darussalam',\n  },\n  id: LocaleCode.MalayBrunei,\n  language: {\n    code: LanguageCode.Malay,\n    name: 'Malay',\n    native: 'Bahasa Melayu',\n  },\n  name: 'Malay (Brunei)',\n  native_name: 'Bahasa Melayu (Negara Brunei Darussalam)',\n  rtl: false,\n};\n\nexport const MalayMalaysia: Locale = {\n  country: {\n    code: CountryCode.Malaysia,\n    name: 'Malaysia',\n    native: 'Malaysia',\n  },\n  id: LocaleCode.MalayMalaysia,\n  language: {\n    code: LanguageCode.Malay,\n    name: 'Malay',\n    native: 'Bahasa Melayu',\n  },\n  name: 'Malay (Malaysia)',\n  native_name: 'Bahasa Melayu (Malaysia)',\n  rtl: false,\n};\n\nexport const MalaySingapore: Locale = {\n  country: {\n    code: CountryCode.Singapore,\n    name: 'Singapore',\n    native: 'Singapore',\n  },\n  id: LocaleCode.MalaySingapore,\n  language: {\n    code: LanguageCode.Malay,\n    name: 'Malay',\n    native: 'Bahasa Melayu',\n  },\n  name: 'Malay (Singapore)',\n  native_name: 'Bahasa Melayu (Singapore)',\n  rtl: false,\n};\n\nexport const MalayIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u092D\u093E\u0930\u0924',\n  },\n  id: LocaleCode.MalayIndia,\n  language: {\n    code: LanguageCode.Malay,\n    name: 'Malay',\n    native: 'Bahasa Melayu',\n  },\n  name: 'Malay (India)',\n  native_name: 'Bahasa Melayu (\u092D\u093E\u0930\u0924)',\n  rtl: false,\n};\n\nexport const Maltese: Locale = {\n  id: LocaleCode.Maltese,\n  language: {\n    code: LanguageCode.Maltese,\n    name: 'Maltese',\n    native: 'Malti',\n  },\n  name: 'Maltese',\n  native_name: 'Malti',\n  rtl: false,\n};\n\nexport const MalteseMalta: Locale = {\n  country: {\n    code: CountryCode.Malta,\n    name: 'Malta',\n    native: 'Malta',\n  },\n  id: LocaleCode.MalteseMalta,\n  language: {\n    code: LanguageCode.Maltese,\n    name: 'Maltese',\n    native: 'Malti',\n  },\n  name: 'Maltese (Malta)',\n  native_name: 'Malti (Malta)',\n  rtl: false,\n};\n\nexport const Maori: Locale = {\n  id: LocaleCode.Maori,\n  language: {\n    code: LanguageCode.Maori,\n    name: 'Maori',\n    native: 'M\u0101ori',\n  },\n  name: 'Maori',\n  native_name: 'M\u0101ori',\n  rtl: false,\n};\n\nexport const MaoriNewZealand: Locale = {\n  country: {\n    code: CountryCode.NewZealand,\n    name: 'New Zealand',\n    native: 'New Zealand',\n  },\n  id: LocaleCode.MaoriNewZealand,\n  language: {\n    code: LanguageCode.Maori,\n    name: 'Maori',\n    native: 'M\u0101ori',\n  },\n  name: 'Maori (New Zealand)',\n  native_name: 'M\u0101ori (New Zealand)',\n  rtl: false,\n};\n\nexport const Marathi: Locale = {\n  id: LocaleCode.Marathi,\n  language: {\n    code: LanguageCode.Marathi,\n    name: 'Marathi',\n    native: '\u092E\u0930\u093E\u0920\u0940',\n  },\n  name: 'Marathi',\n  native_name: '\u092E\u0930\u093E\u0920\u0940',\n  rtl: false,\n};\n\nexport const MarathiIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u092D\u093E\u0930\u0924',\n  },\n  id: LocaleCode.MarathiIndia,\n  language: {\n    code: LanguageCode.Marathi,\n    name: 'Marathi',\n    native: '\u092E\u0930\u093E\u0920\u0940',\n  },\n  name: 'Marathi (India)',\n  native_name: '\u092E\u0930\u093E\u0920\u0940 (\u092D\u093E\u0930\u0924)',\n  rtl: false,\n};\n\nexport const Mongolian: Locale = {\n  id: LocaleCode.Mongolian,\n  language: {\n    code: LanguageCode.Mongolian,\n    name: 'Mongolian',\n    native: '\u041C\u043E\u043D\u0433\u043E\u043B',\n  },\n  name: 'Mongolian',\n  native_name: '\u041C\u043E\u043D\u0433\u043E\u043B',\n  rtl: false,\n};\n\nexport const MongolianMongolia: Locale = {\n  country: {\n    code: CountryCode.Mongolia,\n    name: 'Mongolia',\n    native: '\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441',\n  },\n  id: LocaleCode.MongolianMongolia,\n  language: {\n    code: LanguageCode.Mongolian,\n    name: 'Mongolian',\n    native: '\u041C\u043E\u043D\u0433\u043E\u043B',\n  },\n  name: 'Mongolian (Mongolia)',\n  native_name: '\u041C\u043E\u043D\u0433\u043E\u043B (\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441)',\n  rtl: false,\n};\n\nexport const Montenegrin: Locale = {\n  id: LocaleCode.Montenegrin,\n  language: {\n    code: LanguageCode.Montenegrin,\n    name: 'Montenegrin',\n    native: '\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A',\n  },\n  name: 'Montenegrin',\n  native_name: '\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A',\n  rtl: false,\n};\n\nexport const MontenegrinMontenegro: Locale = {\n  country: {\n    code: CountryCode.Montenegro,\n    name: 'Montenegro',\n    native: '\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A',\n  },\n  id: LocaleCode.MontenegrinMontenegro,\n  language: {\n    code: LanguageCode.Montenegrin,\n    name: 'Montenegrin',\n    native: '\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A',\n  },\n  name: 'Montenegrin (Montenegro)',\n  native_name: '\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A (\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A)',\n  rtl: false,\n};\n\nexport const Nepali: Locale = {\n  id: LocaleCode.Nepali,\n  language: {\n    code: LanguageCode.Nepali,\n    name: 'Nepali',\n    native: '\u0928\u0947\u092A\u093E\u0932\u0940',\n  },\n  name: 'Nepali',\n  native_name: '\u0928\u0947\u092A\u093E\u0932\u0940',\n  rtl: false,\n};\n\nexport const NepaliNepal: Locale = {\n  country: {\n    code: CountryCode.Nepal,\n    name: 'Nepal',\n    native: '\u0928\u0947\u092A\u093E\u0932',\n  },\n  id: LocaleCode.NepaliNepal,\n  language: {\n    code: LanguageCode.Nepali,\n    name: 'Nepali',\n    native: '\u0928\u0947\u092A\u093E\u0932\u0940',\n  },\n  name: 'Nepali (Nepal)',\n  native_name: '\u0928\u0947\u092A\u093E\u0932\u0940 (\u0928\u0947\u092A\u093E\u0932)',\n  rtl: false,\n};\n\nexport const NorthernSotho: Locale = {\n  id: LocaleCode.NorthernSotho,\n  language: {\n    code: LanguageCode.NorthernSotho,\n    name: 'Northern Sotho',\n    native: 'Sesotho sa Leboa',\n  },\n  name: 'Northern Sotho',\n  native_name: 'Sesotho sa Leboa',\n  rtl: false,\n};\n\nexport const NorthernSothoSouthAfrica: Locale = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: 'South Africa',\n    native: 'South Africa',\n  },\n  id: LocaleCode.NorthernSothoSouthAfrica,\n  language: {\n    code: LanguageCode.NorthernSotho,\n    name: 'Northern Sotho',\n    native: 'Sesotho sa Leboa',\n  },\n  name: 'Northern Sotho (South Africa)',\n  native_name: 'Sesotho sa Leboa (South Africa)',\n  rtl: false,\n};\n\nexport const Norwegian: Locale = {\n  id: LocaleCode.Norwegian,\n  language: {\n    code: LanguageCode.Norwegian,\n    name: 'Norwegian',\n    native: 'Norsk',\n  },\n  name: 'Norwegian',\n  native_name: 'Norsk',\n  rtl: false,\n};\n\nexport const NorwegianBokmalNorway: Locale = {\n  country: {\n    code: CountryCode.Norway,\n    name: 'Norway',\n    native: 'Norge',\n  },\n  id: LocaleCode.NorwegianBokmalNorway,\n  language: {\n    code: LanguageCode.NorwegianBokmal,\n    name: 'Norwegian',\n    native: 'Norsk',\n  },\n  name: 'Norwegian (Bokmal)',\n  native_name: 'Norsk (Bokm\u00E5l)',\n  rtl: false,\n};\n\nexport const NorwegianNynorskNorway: Locale = {\n  country: {\n    code: CountryCode.Norway,\n    name: 'Norway',\n    native: 'Norge',\n  },\n  id: LocaleCode.NorwegianNynorskNorway,\n  language: {\n    code: LanguageCode.NorwegianNynorsk,\n    name: 'Norwegian',\n    native: 'Norsk',\n  },\n  name: 'Norwegian (Nynorsk)',\n  native_name: 'Norsk (Nynorsk)',\n  rtl: false,\n};\n\nexport const Oriya: Locale = {\n  id: LocaleCode.Oriya,\n  language: {\n    code: LanguageCode.Oriya,\n    name: 'Oriya',\n    native: '\u0B13\u0B21\u0B3C\u0B3F\u0B06',\n  },\n  name: 'Oriya',\n  native_name: '\u0B13\u0B21\u0B3C\u0B3F\u0B06',\n  rtl: false,\n};\n\nexport const OriyaIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE',\n  },\n  id: LocaleCode.OriyaIndia,\n  language: {\n    code: LanguageCode.Oriya,\n    name: 'Oriya',\n    native: '\u0B13\u0B21\u0B3C\u0B3F\u0B06',\n  },\n  name: 'Oriya (India)',\n  native_name: '\u0B13\u0B21\u0B3C\u0B3F\u0B06 (\u0B2D\u0B3E\u0B30\u0B24)',\n  rtl: false,\n};\n\nexport const Pashto: Locale = {\n  id: LocaleCode.Pashto,\n  language: {\n    code: LanguageCode.Pashto,\n    name: 'Pashto',\n    native: '\u067E\u069A\u062A\u0648',\n  },\n  name: 'Pashto',\n  native_name: '\u067E\u069A\u062A\u0648',\n  rtl: true,\n};\n\nexport const PashtoAfghanistan: Locale = {\n  country: {\n    code: CountryCode.Afghanistan,\n    name: 'Afghanistan',\n    native: '\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646',\n  },\n  id: LocaleCode.PashtoAfghanistan,\n  language: {\n    code: LanguageCode.Pashto,\n    name: 'Pashto',\n    native: '\u067E\u069A\u062A\u0648',\n  },\n  name: 'Pashto (Afghanistan)',\n  native_name: '\u067E\u069A\u062A\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)',\n  rtl: true,\n};\n\nexport const Persian: Locale = {\n  id: LocaleCode.Persian,\n  language: {\n    code: LanguageCode.Persian,\n    name: 'Persian',\n    native: '\u0641\u0627\u0631\u0633\u06CC',\n  },\n  name: 'Persian',\n  native_name: '\u0641\u0627\u0631\u0633\u06CC',\n  rtl: true,\n};\n\nexport const PersianIran: Locale = {\n  country: {\n    code: CountryCode.Iran,\n    name: 'Iran',\n    native: '\u0627\u06CC\u0631\u0627\u0646',\n  },\n  id: LocaleCode.PersianIran,\n  language: {\n    code: LanguageCode.Persian,\n    name: 'Persian',\n    native: '\u0641\u0627\u0631\u0633\u06CC',\n  },\n  name: 'Persian (Iran)',\n  native_name: '\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)',\n  rtl: true,\n};\n\nexport const Polish: Locale = {\n  id: LocaleCode.Polish,\n  language: {\n    code: LanguageCode.Polish,\n    name: 'Polish',\n    native: 'Polski',\n  },\n  name: 'Polish',\n  native_name: 'Polski',\n  rtl: false,\n};\n\nexport const PolishPoland: Locale = {\n  country: {\n    code: CountryCode.Poland,\n    name: 'Poland',\n    native: 'Polska',\n  },\n  id: LocaleCode.PolishPoland,\n  language: {\n    code: LanguageCode.Polish,\n    name: 'Polish',\n    native: 'Polski',\n  },\n  name: 'Polish (Poland)',\n  native_name: 'Polski (Polska)',\n  rtl: false,\n};\n\nexport const Portuguese: Locale = {\n  id: LocaleCode.Portuguese,\n  language: {\n    code: LanguageCode.Portuguese,\n    name: 'Portuguese',\n    native: 'Portugu\u00EAs',\n  },\n  name: 'Portuguese',\n  native_name: 'Portugu\u00EAs',\n  rtl: false,\n};\n\nexport const PortugueseBrazil: Locale = {\n  country: {\n    code: CountryCode.Brazil,\n    name: 'Brazil',\n    native: 'Brasil',\n  },\n  id: LocaleCode.PortugueseBrazil,\n  language: {\n    code: LanguageCode.Portuguese,\n    name: 'Portuguese',\n    native: 'Portugu\u00EAs',\n  },\n  name: 'Portuguese (Brazil)',\n  native_name: 'Portugu\u00EAs (Brasil)',\n  rtl: false,\n};\n\nexport const PortuguesePortugal: Locale = {\n  country: {\n    code: CountryCode.Portugal,\n    name: 'Portugal',\n    native: 'Portugal',\n  },\n  id: LocaleCode.PortuguesePortugal,\n  language: {\n    code: LanguageCode.Portuguese,\n    name: 'Portuguese',\n    native: 'Portugu\u00EAs',\n  },\n  name: 'Portuguese (Portugal)',\n  native_name: 'Portugu\u00EAs (Portugal)',\n  rtl: false,\n};\n\nexport const Punjabi: Locale = {\n  id: LocaleCode.Punjabi,\n  language: {\n    code: LanguageCode.Punjabi,\n    name: 'Punjabi',\n    native: '\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40',\n  },\n  name: 'Punjabi',\n  native_name: '\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40',\n  rtl: true,\n};\n\nexport const PunjabiPakistan: Locale = {\n  country: {\n    code: CountryCode.Pakistan,\n    name: 'Pakistan',\n    native: '\u067E\u0627\u06A9\u0633\u062A\u0627\u0646',\n  },\n  id: LocaleCode.PunjabiPakistan,\n  language: {\n    code: LanguageCode.Punjabi,\n    name: 'Punjabi',\n    native: '\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40',\n  },\n  name: 'Punjabi (Pakistan)',\n  native_name: '\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)',\n  rtl: true,\n};\n\nexport const PunjabiIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u0A2D\u0A3E\u0A30\u0A24',\n  },\n  id: LocaleCode.PunjabiIndia,\n  language: {\n    code: LanguageCode.Punjabi,\n    name: 'Punjabi',\n    native: '\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40',\n  },\n  name: 'Punjabi (India)',\n  native_name: '\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u0A2D\u0A3E\u0A30\u0A24)',\n  rtl: true,\n};\n\nexport const Quechua: Locale = {\n  id: LocaleCode.Quechua,\n  language: {\n    code: LanguageCode.Quechua,\n    name: 'Quechua',\n    native: 'Runa Simi',\n  },\n  name: 'Quechua',\n  native_name: 'Runa Simi',\n  rtl: false,\n};\n\nexport const QuechuaBolivia: Locale = {\n  country: {\n    code: CountryCode.Bolivia,\n    name: 'Bolivia',\n    native: 'Bolivia',\n  },\n  id: LocaleCode.QuechuaBolivia,\n  language: {\n    code: LanguageCode.Quechua,\n    name: 'Quechua',\n    native: 'Runa Simi',\n  },\n  name: 'Quechua (Bolivia)',\n  native_name: 'Runa Simi (Bolivia)',\n  rtl: false,\n};\n\nexport const QuechuaEcuador: Locale = {\n  country: {\n    code: CountryCode.Ecuador,\n    name: 'Ecuador',\n    native: 'Ecuador',\n  },\n  id: LocaleCode.QuechuaEcuador,\n  language: {\n    code: LanguageCode.Quechua,\n    name: 'Quechua',\n    native: 'Runa Simi',\n  },\n  name: 'Quechua (Ecuador)',\n  native_name: 'Runa Simi (Ecuador)',\n  rtl: false,\n};\n\nexport const QuechuaPeru: Locale = {\n  country: {\n    code: CountryCode.Peru,\n    name: 'Peru',\n    native: 'Per\u00FA',\n  },\n  id: LocaleCode.QuechuaPeru,\n  language: {\n    code: LanguageCode.Quechua,\n    name: 'Quechua',\n    native: 'Runa Simi',\n  },\n  name: 'Quechua (Peru)',\n  native_name: 'Runa Simi (Per\u00FA)',\n  rtl: false,\n};\n\nexport const Romanian: Locale = {\n  id: LocaleCode.Romanian,\n  language: {\n    code: LanguageCode.Romanian,\n    name: 'Romanian',\n    native: 'Rom\u00E2n\u0103',\n  },\n  name: 'Romanian',\n  native_name: 'Rom\u00E2n\u0103',\n  rtl: false,\n};\n\nexport const RomanianRomania: Locale = {\n  country: {\n    code: CountryCode.Romania,\n    name: 'Romania',\n    native: 'Rom\u00E2nia',\n  },\n  id: LocaleCode.RomanianRomania,\n  language: {\n    code: LanguageCode.Romanian,\n    name: 'Romanian',\n    native: 'Rom\u00E2n\u0103',\n  },\n  name: 'Romanian (Romania)',\n  native_name: 'Rom\u00E2n\u0103 (Rom\u00E2nia)',\n  rtl: false,\n};\n\nexport const Russian: Locale = {\n  id: LocaleCode.Russian,\n  language: {\n    code: LanguageCode.Russian,\n    name: 'Russian',\n    native: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439',\n  },\n  name: 'Russian',\n  native_name: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439',\n  rtl: false,\n};\n\nexport const RussianRussia: Locale = {\n  country: {\n    code: CountryCode.RussianFederation,\n    name: 'Russian Federation',\n    native: '\u0420\u043E\u0441\u0441\u0438\u044F',\n  },\n  id: LocaleCode.RussianRussia,\n  language: {\n    code: LanguageCode.Russian,\n    name: 'Russian',\n    native: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439',\n  },\n  name: 'Russian (Russia)',\n  native_name: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0420\u043E\u0441\u0441\u0438\u044F)',\n  rtl: false,\n};\n\nexport const RussianUkraine: Locale = {\n  country: {\n    code: CountryCode.Ukraine,\n    name: 'Ukraine',\n    native: '\u0423\u043A\u0440\u0430\u0457\u043D\u0430',\n  },\n  id: LocaleCode.RussianUkraine,\n  language: {\n    code: LanguageCode.Russian,\n    name: 'Russian',\n    native: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439',\n  },\n  name: 'Russian (Ukraine)',\n  native_name: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)',\n  rtl: false,\n};\n\nexport const RussianKazakhstan: Locale = {\n  country: {\n    code: CountryCode.Kazakhstan,\n    name: 'Kazakhstan',\n    native: '\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D',\n  },\n  id: LocaleCode.RussianKazakhstan,\n  language: {\n    code: LanguageCode.Russian,\n    name: 'Russian',\n    native: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439',\n  },\n  name: 'Russian (Kazakhstan)',\n  native_name: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)',\n  rtl: false,\n};\n\nexport const RussianKyrgyzstan: Locale = {\n  country: {\n    code: CountryCode.Kyrgyzstan,\n    name: 'Kyrgyzstan',\n    native: '\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430',\n  },\n  id: LocaleCode.RussianKyrgyzstan,\n  language: {\n    code: LanguageCode.Russian,\n    name: 'Russian',\n    native: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439',\n  },\n  name: 'Russian (Kyrgyzstan)',\n  native_name: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430)',\n  rtl: false,\n};\n\nexport const Sanskrit: Locale = {\n  id: LocaleCode.Sanskrit,\n  language: {\n    code: LanguageCode.Sanskrit,\n    name: 'Sanskrit',\n    native: '\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D',\n  },\n  name: 'Sanskrit',\n  native_name: '\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D',\n  rtl: false,\n};\n\nexport const SanskritIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u092D\u093E\u0930\u0924',\n  },\n  id: LocaleCode.SanskritIndia,\n  language: {\n    code: LanguageCode.Sanskrit,\n    name: 'Sanskrit',\n    native: '\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D',\n  },\n  name: 'Sanskrit (India)',\n  native_name: '\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D (\u092D\u093E\u0930\u0924)',\n  rtl: false,\n};\n\nexport const Sami: Locale = {\n  id: LocaleCode.Sami,\n  language: {\n    code: LanguageCode.Sami,\n    name: 'Sami',\n    native: 'S\u00E1megiella',\n  },\n  name: 'Sami',\n  native_name: 'S\u00E1megiella',\n  rtl: false,\n};\n\nexport const SamiFinland: Locale = {\n  country: {\n    code: CountryCode.Finland,\n    name: 'Finland',\n    native: 'Suomi',\n  },\n  id: LocaleCode.SamiFinland,\n  language: {\n    code: LanguageCode.Sami,\n    name: 'Sami',\n    native: 'S\u00E1megiella',\n  },\n  name: 'Sami (Finland)',\n  native_name: 'S\u00E1megiella (Suomi)',\n  rtl: false,\n};\n\nexport const SamiNorway: Locale = {\n  country: {\n    code: CountryCode.Norway,\n    name: 'Norway',\n    native: 'Norge',\n  },\n  id: LocaleCode.SamiNorway,\n  language: {\n    code: LanguageCode.Sami,\n    name: 'Sami',\n    native: 'S\u00E1megiella',\n  },\n  name: 'Sami (Norway)',\n  native_name: 'S\u00E1megiella (Norge)',\n  rtl: false,\n};\n\nexport const SamiSweden: Locale = {\n  country: {\n    code: CountryCode.Sweden,\n    name: 'Sweden',\n    native: 'Sverige',\n  },\n  id: LocaleCode.SamiSweden,\n  language: {\n    code: LanguageCode.Sami,\n    name: 'Sami',\n    native: 'S\u00E1megiella',\n  },\n  name: 'Sami (Sweden)',\n  native_name: 'S\u00E1megiella (Sverige)',\n  rtl: false,\n};\n\nexport const Samoan: Locale = {\n  id: LocaleCode.Samoan,\n  language: {\n    code: LanguageCode.Samoan,\n    name: 'Samoan',\n    native: 'Gagana fa\u2019a S\u0101moa',\n  },\n  name: 'Samoan',\n  native_name: 'Gagana fa\u2019a S\u0101moa',\n  rtl: false,\n};\n\nexport const SamoanSamoa: Locale = {\n  country: {\n    code: CountryCode.Samoa,\n    name: 'Samoa',\n    native: 'Samoa',\n  },\n  id: LocaleCode.SamoanSamoa,\n  language: {\n    code: LanguageCode.Samoan,\n    name: 'Samoan',\n    native: 'Gagana fa\u2019a S\u0101moa',\n  },\n  name: 'Samoan (Samoa)',\n  native_name: 'Gagana fa\u2019a S\u0101moa (Samoa)',\n  rtl: false,\n};\n\nexport const Serbian: Locale = {\n  id: LocaleCode.Serbian,\n  language: {\n    code: LanguageCode.Serbian,\n    name: 'Serbian (Latin)',\n    native: 'Srpski (Latinica)',\n  },\n  name: 'Serbian (Latin)',\n  native_name: 'Srpski (Latinica)',\n  rtl: false,\n};\n\nexport const SerbianBosniaAndHerzegovina: Locale = {\n  country: {\n    code: CountryCode.BosniaAndHerzegovina,\n    name: 'Bosnia and Herzegovina',\n    native: 'Bosna i Hercegovina',\n  },\n  id: LocaleCode.SerbianBosniaAndHerzegovina,\n  language: {\n    code: LanguageCode.Serbian,\n    name: 'Serbian (Latin)',\n    native: 'Srpski (Latinica)',\n  },\n  name: 'Serbian (Latin) (Bosnia and Herzegovina)',\n  native_name: 'Srpski (Latinica) (Bosna i Hercegovina)',\n  rtl: false,\n};\n\nexport const SerbianSerbiaAndMontenegro: Locale = {\n  country: {\n    code: CountryCode.SerbiaAndMontenegro,\n    name: 'Serbia and Montenegro',\n    native: 'Srbija i Crna Gora',\n  },\n  id: LocaleCode.SerbianSerbiaAndMontenegro,\n  language: {\n    code: LanguageCode.Serbian,\n    name: 'Serbian (Latin)',\n    native: 'Srpski (Latinica)',\n  },\n  name: 'Serbian (Latin) (Serbia and Montenegro)',\n  native_name: 'Srpski (Latinica) (Srbija i Crna Gora)',\n  rtl: false,\n};\n\nexport const SerbianCyrillic: Locale = {\n  id: LocaleCode.SerbianCyrillic,\n  language: {\n    code: LanguageCode.SerbianCyrillic,\n    name: 'Serbian',\n    native: '\u0421\u0440\u043F\u0441\u043A\u0438',\n  },\n  name: 'Serbian (Cyrillic)',\n  native_name: '\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430)',\n  rtl: false,\n};\n\nexport const SerbianCyrillicBosniaAndHerzegovina: Locale = {\n  country: {\n    code: CountryCode.BosniaAndHerzegovina,\n    name: 'Bosnia and Herzegovina',\n    native: '\u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430',\n  },\n  id: LocaleCode.SerbianCyrillicBosniaAndHerzegovina,\n  language: {\n    code: LanguageCode.SerbianCyrillic,\n    name: 'Serbian',\n    native: '\u0421\u0440\u043F\u0441\u043A\u0438',\n  },\n  name: 'Serbian (Cyrillic, Bosnia and Herzegovina)',\n  native_name: '\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430)',\n  rtl: false,\n};\n\nexport const SerbianCyrillicSerbiaAndMontenegro: Locale = {\n  country: {\n    code: CountryCode.SerbiaAndMontenegro,\n    name: 'Serbia and Montenegro',\n    native: '\u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430',\n  },\n  id: LocaleCode.SerbianCyrillicSerbiaAndMontenegro,\n  language: {\n    code: LanguageCode.SerbianCyrillic,\n    name: 'Serbian',\n    native: '\u0421\u0440\u043F\u0441\u043A\u0438',\n  },\n  name: 'Serbian (Cyrillic, Serbia and Montenegro)',\n  native_name: '\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430)',\n  rtl: false,\n};\n\nexport const Slovak: Locale = {\n  id: LocaleCode.Slovak,\n  language: {\n    code: LanguageCode.Slovak,\n    name: 'Slovak',\n    native: 'Sloven\u010Dina',\n  },\n  name: 'Slovak',\n  native_name: 'Sloven\u010Dina',\n  rtl: false,\n};\n\nexport const SlovakSlovakia: Locale = {\n  country: {\n    code: CountryCode.Slovakia,\n    name: 'Slovakia',\n    native: 'Slovensko',\n  },\n  id: LocaleCode.SlovakSlovakia,\n  language: {\n    code: LanguageCode.Slovak,\n    name: 'Slovak',\n    native: 'Sloven\u010Dina',\n  },\n  name: 'Slovak (Slovakia)',\n  native_name: 'Sloven\u010Dina (Slovensko)',\n  rtl: false,\n};\n\nexport const Slovenian: Locale = {\n  id: LocaleCode.Slovenian,\n  language: {\n    code: LanguageCode.Slovenian,\n    name: 'Slovenian',\n    native: 'Sloven\u0161\u010Dina',\n  },\n  name: 'Slovenian',\n  native_name: 'Sloven\u0161\u010Dina',\n  rtl: false,\n};\n\nexport const SlovenianSlovenia: Locale = {\n  country: {\n    code: CountryCode.Slovenia,\n    name: 'Slovenia',\n    native: 'Slovenija',\n  },\n  id: LocaleCode.SlovenianSlovenia,\n  language: {\n    code: LanguageCode.Slovenian,\n    name: 'Slovenian',\n    native: 'Sloven\u0161\u010Dina',\n  },\n  name: 'Slovenian (Slovenia)',\n  native_name: 'Sloven\u0161\u010Dina (Slovenija)',\n  rtl: false,\n};\n\nexport const Somali: Locale = {\n  id: LocaleCode.Somali,\n  language: {\n    code: LanguageCode.Somali,\n    name: 'Somali',\n    native: 'Soomaaliga',\n  },\n  name: 'Somali',\n  native_name: 'Soomaaliga',\n  rtl: true,\n};\n\nexport const SomaliSomalia: Locale = {\n  country: {\n    code: CountryCode.Somalia,\n    name: 'Somalia',\n    native: 'Soomaaliya',\n  },\n  id: LocaleCode.SomaliSomalia,\n  language: {\n    code: LanguageCode.Somali,\n    name: 'Somali',\n    native: 'Soomaaliga',\n  },\n  name: 'Somali (Somalia)',\n  native_name: 'Soomaaliga (Soomaaliya)',\n  rtl: true,\n};\n\nexport const Spanish: Locale = {\n  id: LocaleCode.Spanish,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish',\n  native_name: 'Espa\u00F1ol',\n  rtl: false,\n};\n\nexport const SpanishArgentina: Locale = {\n  country: {\n    code: CountryCode.Argentina,\n    name: 'Argentina',\n    native: 'Argentina',\n  },\n  id: LocaleCode.SpanishArgentina,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Argentina)',\n  native_name: 'Espa\u00F1ol (Argentina)',\n  rtl: false,\n};\n\nexport const SpanishBolivia: Locale = {\n  country: {\n    code: CountryCode.Bolivia,\n    name: 'Bolivia',\n    native: 'Bolivia',\n  },\n  id: LocaleCode.SpanishBolivia,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Bolivia)',\n  native_name: 'Espa\u00F1ol (Bolivia)',\n  rtl: false,\n};\n\nexport const SpanishChile: Locale = {\n  country: {\n    code: CountryCode.Chile,\n    name: 'Chile',\n    native: 'Chile',\n  },\n  id: LocaleCode.SpanishChile,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Chile)',\n  native_name: 'Espa\u00F1ol (Chile)',\n  rtl: false,\n};\n\nexport const SpanishColombia: Locale = {\n  country: {\n    code: CountryCode.Colombia,\n    name: 'Colombia',\n    native: 'Colombia',\n  },\n  id: LocaleCode.SpanishColombia,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Colombia)',\n  native_name: 'Espa\u00F1ol (Colombia)',\n  rtl: false,\n};\n\nexport const SpanishCostaRica: Locale = {\n  country: {\n    code: CountryCode.CostaRica,\n    name: 'Costa Rica',\n    native: 'Costa Rica',\n  },\n  id: LocaleCode.SpanishCostaRica,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Costa Rica)',\n  native_name: 'Espa\u00F1ol (Costa Rica)',\n  rtl: false,\n};\n\nexport const SpanishCuba: Locale = {\n  country: {\n    code: CountryCode.Cuba,\n    name: 'Cuba',\n    native: 'Cuba',\n  },\n  id: LocaleCode.SpanishCuba,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Cuba)',\n  native_name: 'Espa\u00F1ol (Cuba)',\n  rtl: false,\n};\n\nexport const SpanishDominicanRepublic: Locale = {\n  country: {\n    code: CountryCode.DominicanRepublic,\n    name: 'Dominican Republic',\n    native: 'Rep\u00FAblica Dominicana',\n  },\n  id: LocaleCode.SpanishDominicanRepublic,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Dominican Republic)',\n  native_name: 'Espa\u00F1ol (Rep\u00FAblica Dominicana)',\n  rtl: false,\n};\n\nexport const SpanishEcuador: Locale = {\n  country: {\n    code: CountryCode.Ecuador,\n    name: 'Ecuador',\n    native: 'Ecuador',\n  },\n  id: LocaleCode.SpanishEcuador,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Ecuador)',\n  native_name: 'Espa\u00F1ol (Ecuador)',\n  rtl: false,\n};\n\nexport const SpanishElSalvador: Locale = {\n  country: {\n    code: CountryCode.ElSalvador,\n    name: 'El Salvador',\n    native: 'El Salvador',\n  },\n  id: LocaleCode.SpanishElSalvador,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (El Salvador)',\n  native_name: 'Espa\u00F1ol (El Salvador)',\n  rtl: false,\n};\n\nexport const SpanishEquatorialGuinea: Locale = {\n  country: {\n    code: CountryCode.EquatorialGuinea,\n    name: 'Equatorial Guinea',\n    native: 'Guinea Ecuatorial',\n  },\n  id: LocaleCode.SpanishEquatorialGuinea,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Equatorial Guinea)',\n  native_name: 'Espa\u00F1ol (Guinea Ecuatorial)',\n  rtl: false,\n};\n\nexport const SpanishGuatemala: Locale = {\n  country: {\n    code: CountryCode.Guatemala,\n    name: 'Guatemala',\n    native: 'Guatemala',\n  },\n  id: LocaleCode.SpanishGuatemala,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Guatemala)',\n  native_name: 'Espa\u00F1ol (Guatemala)',\n  rtl: false,\n};\n\nexport const SpanishHonduras: Locale = {\n  country: {\n    code: CountryCode.Honduras,\n    name: 'Honduras',\n    native: 'Honduras',\n  },\n  id: LocaleCode.SpanishHonduras,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Honduras)',\n  native_name: 'Espa\u00F1ol (Honduras)',\n  rtl: false,\n};\n\nexport const SpanishMexico: Locale = {\n  country: {\n    code: CountryCode.Mexico,\n    name: 'Mexico',\n    native: 'M\u00E9xico',\n  },\n  id: LocaleCode.SpanishMexico,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Mexico)',\n  native_name: 'Espa\u00F1ol (M\u00E9xico)',\n  rtl: false,\n};\n\nexport const SpanishNicaragua: Locale = {\n  country: {\n    code: CountryCode.Nicaragua,\n    name: 'Nicaragua',\n    native: 'Nicaragua',\n  },\n  id: LocaleCode.SpanishNicaragua,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Nicaragua)',\n  native_name: 'Espa\u00F1ol (Nicaragua)',\n  rtl: false,\n};\n\nexport const SpanishPanama: Locale = {\n  country: {\n    code: CountryCode.Panama,\n    name: 'Panama',\n    native: 'Panam\u00E1',\n  },\n  id: LocaleCode.SpanishPanama,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Panama)',\n  native_name: 'Espa\u00F1ol (Panam\u00E1)',\n  rtl: false,\n};\n\nexport const SpanishParaguay: Locale = {\n  country: {\n    code: CountryCode.Paraguay,\n    name: 'Paraguay',\n    native: 'Paraguay',\n  },\n  id: LocaleCode.SpanishParaguay,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Paraguay)',\n  native_name: 'Espa\u00F1ol (Paraguay)',\n  rtl: false,\n};\n\nexport const SpanishPeru: Locale = {\n  country: {\n    code: CountryCode.Peru,\n    name: 'Peru',\n    native: 'Per\u00FA',\n  },\n  id: LocaleCode.SpanishPeru,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Peru)',\n  native_name: 'Espa\u00F1ol (Per\u00FA)',\n  rtl: false,\n};\n\nexport const SpanishPuertoRico: Locale = {\n  country: {\n    code: CountryCode.PuertoRico,\n    name: 'Puerto Rico',\n    native: 'Puerto Rico',\n  },\n  id: LocaleCode.SpanishPuertoRico,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Puerto Rico)',\n  native_name: 'Espa\u00F1ol (Puerto Rico)',\n  rtl: false,\n};\n\nexport const SpanishUruguay: Locale = {\n  country: {\n    code: CountryCode.Uruguay,\n    name: 'Uruguay',\n    native: 'Uruguay',\n  },\n  id: LocaleCode.SpanishUruguay,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Uruguay)',\n  native_name: 'Espa\u00F1ol (Uruguay)',\n  rtl: false,\n};\n\nexport const SpanishVenezuela: Locale = {\n  country: {\n    code: CountryCode.Venezuela,\n    name: 'Venezuela',\n    native: 'Venezuela',\n  },\n  id: LocaleCode.SpanishVenezuela,\n  language: {\n    code: LanguageCode.Spanish,\n    name: 'Spanish',\n    native: 'Espa\u00F1ol',\n  },\n  name: 'Spanish (Venezuela)',\n  native_name: 'Espa\u00F1ol (Venezuela)',\n  rtl: false,\n};\n\nexport const SutuSouthAfrica: Locale = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: 'South Africa',\n    native: 'South Africa',\n  },\n  id: LocaleCode.SutuSouthAfrica,\n  language: {\n    code: LanguageCode.Sutu,\n    name: 'Sutu',\n    native: 'Sesotho',\n  },\n  name: 'Sutu (South Africa)',\n  native_name: 'Sesotho (Afrika Borwa)',\n  rtl: false,\n};\n\nexport const Swahili: Locale = {\n  id: LocaleCode.Swahili,\n  language: {\n    code: LanguageCode.Swahili,\n    name: 'Swahili',\n    native: 'Kiswahili',\n  },\n  name: 'Swahili',\n  native_name: 'Kiswahili',\n  rtl: false,\n};\n\nexport const SwahiliKenya: Locale = {\n  country: {\n    code: CountryCode.Kenya,\n    name: 'Kenya',\n    native: 'Kenya',\n  },\n  id: LocaleCode.SwahiliKenya,\n  language: {\n    code: LanguageCode.Swahili,\n    name: 'Swahili',\n    native: 'Kiswahili',\n  },\n  name: 'Swahili (Kenya)',\n  native_name: 'Kiswahili (Kenya)',\n  rtl: false,\n};\n\nexport const Swedish: Locale = {\n  id: LocaleCode.Swedish,\n  language: {\n    code: LanguageCode.Swedish,\n    name: 'Swedish',\n    native: 'Svenska',\n  },\n  name: 'Swedish',\n  native_name: 'Svenska',\n  rtl: false,\n};\n\nexport const SwedishFinland: Locale = {\n  country: {\n    code: CountryCode.Finland,\n    name: 'Finland',\n    native: 'Suomi',\n  },\n  id: LocaleCode.SwedishFinland,\n  language: {\n    code: LanguageCode.Swedish,\n    name: 'Swedish',\n    native: 'Svenska',\n  },\n  name: 'Swedish (Finland)',\n  native_name: 'Svenska (Finland)',\n  rtl: false,\n};\n\nexport const SwedishSweden: Locale = {\n  country: {\n    code: CountryCode.Sweden,\n    name: 'Sweden',\n    native: 'Sverige',\n  },\n  id: LocaleCode.SwedishSweden,\n  language: {\n    code: LanguageCode.Swedish,\n    name: 'Swedish',\n    native: 'Svenska',\n  },\n  name: 'Swedish (Sweden)',\n  native_name: 'Svenska (Sverige)',\n  rtl: false,\n};\n\nexport const Syriac: Locale = {\n  id: LocaleCode.Syriac,\n  language: {\n    code: LanguageCode.Syriac,\n    name: 'Syriac',\n    native: '\u0723\u0718\u072A\u071D\u071D\u0710',\n  },\n  name: 'Syriac',\n  native_name: '\u0723\u0718\u072A\u071D\u071D\u0710',\n  rtl: true,\n};\n\nexport const SyriacSyria: Locale = {\n  country: {\n    code: CountryCode.Syria,\n    name: 'Syria',\n    native: '\u0633\u0648\u0631\u064A\u0627',\n  },\n  id: LocaleCode.SyriacSyria,\n  language: {\n    code: LanguageCode.Syriac,\n    name: 'Syriac',\n    native: '\u0723\u0718\u072A\u071D\u071D\u0710',\n  },\n  name: 'Syriac (Syria)',\n  native_name: '\u0723\u0718\u072A\u071D\u071D\u0710 (\u0633\u0648\u0631\u064A\u0627)',\n  rtl: true,\n};\n\nexport const Tajik: Locale = {\n  id: LocaleCode.Tajik,\n  language: {\n    code: LanguageCode.Tajik,\n    name: 'Tajik',\n    native: '\u0422\u043E\u04B7\u0438\u043A\u04E3',\n  },\n  name: 'Tajik',\n  native_name: '\u0422\u043E\u04B7\u0438\u043A\u04E3',\n  rtl: false,\n};\n\nexport const TajikTajikistan: Locale = {\n  country: {\n    code: CountryCode.Tajikistan,\n    name: 'Tajikistan',\n    native: '\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D',\n  },\n  id: LocaleCode.TajikTajikistan,\n  language: {\n    code: LanguageCode.Tajik,\n    name: 'Tajik',\n    native: '\u0422\u043E\u04B7\u0438\u043A\u04E3',\n  },\n  name: 'Tajik (Tajikistan)',\n  native_name: '\u0422\u043E\u04B7\u0438\u043A\u04E3 (\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D)',\n  rtl: false,\n};\n\nexport const Tagalog: Locale = {\n  id: LocaleCode.Tagalog,\n  language: {\n    code: LanguageCode.Tagalog,\n    name: 'Tagalog',\n    native: 'Tagalog',\n  },\n  name: 'Tagalog',\n  native_name: 'Tagalog',\n  rtl: false,\n};\n\nexport const TagalogPhilippines: Locale = {\n  country: {\n    code: CountryCode.Philippines,\n    name: 'Philippines',\n    native: 'Pilipinas',\n  },\n  id: LocaleCode.TagalogPhilippines,\n  language: {\n    code: LanguageCode.Tagalog,\n    name: 'Tagalog',\n    native: 'Tagalog',\n  },\n  name: 'Tagalog (Philippines)',\n  native_name: 'Tagalog (Pilipinas)',\n  rtl: false,\n};\n\nexport const Tamil: Locale = {\n  id: LocaleCode.Tamil,\n  language: {\n    code: LanguageCode.Tamil,\n    name: 'Tamil',\n    native: '\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD',\n  },\n  name: 'Tamil',\n  native_name: '\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD',\n  rtl: false,\n};\n\nexport const TamilIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE',\n  },\n  id: LocaleCode.TamilIndia,\n  language: {\n    code: LanguageCode.Tamil,\n    name: 'Tamil',\n    native: '\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD',\n  },\n  name: 'Tamil (India)',\n  native_name: '\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)',\n  rtl: false,\n};\n\nexport const Telugu: Locale = {\n  id: LocaleCode.Telugu,\n  language: {\n    code: LanguageCode.Telugu,\n    name: 'Telugu',\n    native: '\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41',\n  },\n  name: 'Telugu',\n  native_name: '\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41',\n  rtl: false,\n};\n\nexport const TeluguIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02',\n  },\n  id: LocaleCode.TeluguIndia,\n  language: {\n    code: LanguageCode.Telugu,\n    name: 'Telugu',\n    native: '\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41',\n  },\n  name: 'Telugu (India)',\n  native_name: '\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41 (\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02)',\n  rtl: false,\n};\n\nexport const Thai: Locale = {\n  id: LocaleCode.Thai,\n  language: {\n    code: LanguageCode.Thai,\n    name: 'Thai',\n    native: '\u0E44\u0E17\u0E22',\n  },\n  name: 'Thai',\n  native_name: '\u0E44\u0E17\u0E22',\n  rtl: false,\n};\n\nexport const ThaiThailand: Locale = {\n  country: {\n    code: CountryCode.Thailand,\n    name: 'Thailand',\n    native: '\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22',\n  },\n  id: LocaleCode.ThaiThailand,\n  language: {\n    code: LanguageCode.Thai,\n    name: 'Thai',\n    native: '\u0E44\u0E17\u0E22',\n  },\n  name: 'Thai (Thailand)',\n  native_name: '\u0E44\u0E17\u0E22 (\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22)',\n  rtl: false,\n};\n\nexport const Tibetan: Locale = {\n  id: LocaleCode.Tibetan,\n  language: {\n    code: LanguageCode.Tibetan,\n    name: 'Tibetan',\n    native: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42',\n  },\n  name: 'Tibetan',\n  native_name: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42',\n  rtl: false,\n};\n\nexport const TibetanChina: Locale = {\n  country: {\n    code: CountryCode.China,\n    name: 'China',\n    native: '\u4E2D\u56FD',\n  },\n  id: LocaleCode.TibetanChina,\n  language: {\n    code: LanguageCode.Tibetan,\n    name: 'Tibetan',\n    native: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42',\n  },\n  name: 'Tibetan (China)',\n  native_name: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42)',\n  rtl: false,\n};\n\nexport const TibetanBhutan: Locale = {\n  country: {\n    code: CountryCode.Bhutan,\n    name: 'Bhutan',\n    native: '\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D',\n  },\n  id: LocaleCode.TibetanBhutan,\n  language: {\n    code: LanguageCode.Tibetan,\n    name: 'Tibetan',\n    native: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42',\n  },\n  name: 'Tibetan (Bhutan)',\n  native_name: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D)',\n  rtl: false,\n};\n\nexport const TibetanIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE',\n  },\n  id: LocaleCode.TibetanIndia,\n  language: {\n    code: LanguageCode.Tibetan,\n    name: 'Tibetan',\n    native: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42',\n  },\n  name: 'Tibetan (India)',\n  native_name: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)',\n  rtl: false,\n};\n\nexport const Tsonga: Locale = {\n  id: LocaleCode.Tsonga,\n  language: {\n    code: LanguageCode.Tsonga,\n    name: 'Tsonga',\n    native: 'Xitsonga',\n  },\n  name: 'Tsonga',\n  native_name: 'Xitsonga',\n  rtl: false,\n};\n\nexport const Tswana: Locale = {\n  id: LocaleCode.Tswana,\n  language: {\n    code: LanguageCode.Tswana,\n    name: 'Tswana',\n    native: 'Setswana',\n  },\n  name: 'Tswana',\n  native_name: 'Setswana',\n  rtl: false,\n};\n\nexport const TswanaSouthAfrica: Locale = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: 'South Africa',\n    native: 'South Africa',\n  },\n  id: LocaleCode.TswanaSouthAfrica,\n  language: {\n    code: LanguageCode.Tswana,\n    name: 'Tswana',\n    native: 'Setswana',\n  },\n  name: 'Tswana (South Africa)',\n  native_name: 'Setswana (South Africa)',\n  rtl: false,\n};\n\nexport const Turkish: Locale = {\n  id: LocaleCode.Turkish,\n  language: {\n    code: LanguageCode.Turkish,\n    name: 'Turkish',\n    native: 'T\u00FCrk\u00E7e',\n  },\n  name: 'Turkish',\n  native_name: 'T\u00FCrk\u00E7e',\n  rtl: false,\n};\n\nexport const TurkishTurkey: Locale = {\n  country: {\n    code: CountryCode.Turkey,\n    name: 'Turkey',\n    native: 'T\u00FCrkiye',\n  },\n  id: LocaleCode.TurkishTurkey,\n  language: {\n    code: LanguageCode.Turkish,\n    name: 'Turkish',\n    native: 'T\u00FCrk\u00E7e',\n  },\n  name: 'Turkish (Turkey)',\n  native_name: 'T\u00FCrk\u00E7e (T\u00FCrkiye)',\n  rtl: false,\n};\n\nexport const Ukrainian: Locale = {\n  id: LocaleCode.Ukrainian,\n  language: {\n    code: LanguageCode.Ukrainian,\n    name: 'Ukrainian',\n    native: '\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430',\n  },\n  name: 'Ukrainian',\n  native_name: '\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430',\n  rtl: false,\n};\n\nexport const UkrainianUkraine: Locale = {\n  country: {\n    code: CountryCode.Ukraine,\n    name: 'Ukraine',\n    native: '\u0423\u043A\u0440\u0430\u0457\u043D\u0430',\n  },\n  id: LocaleCode.UkrainianUkraine,\n  language: {\n    code: LanguageCode.Ukrainian,\n    name: 'Ukrainian',\n    native: '\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430',\n  },\n  name: 'Ukrainian (Ukraine)',\n  native_name: '\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)',\n  rtl: false,\n};\n\nexport const Urdu: Locale = {\n  id: LocaleCode.Urdu,\n  language: {\n    code: LanguageCode.Urdu,\n    name: 'Urdu',\n    native: '\u0627\u0631\u062F\u0648',\n  },\n  name: 'Urdu',\n  native_name: '\u0627\u0631\u062F\u0648',\n  rtl: true,\n};\n\nexport const UrduAfghanistan: Locale = {\n  country: {\n    code: CountryCode.Afghanistan,\n    name: 'Afghanistan',\n    native: '\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646',\n  },\n  id: LocaleCode.UrduAfghanistan,\n  language: {\n    code: LanguageCode.Urdu,\n    name: 'Urdu',\n    native: '\u0627\u0631\u062F\u0648',\n  },\n  name: 'Urdu (Afghanistan)',\n  native_name: '\u0627\u0631\u062F\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)',\n  rtl: true,\n};\n\nexport const UrduIndia: Locale = {\n  country: {\n    code: CountryCode.India,\n    name: 'India',\n    native: '\u092D\u093E\u0930\u0924',\n  },\n  id: LocaleCode.UrduIndia,\n  language: {\n    code: LanguageCode.Urdu,\n    name: 'Urdu',\n    native: '\u0627\u0631\u062F\u0648',\n  },\n  name: 'Urdu (India)',\n  native_name: '\u0627\u0631\u062F\u0648 (\u092D\u093E\u0930\u0924)',\n  rtl: true,\n};\n\nexport const UrduPakistan: Locale = {\n  country: {\n    code: CountryCode.Pakistan,\n    name: 'Pakistan',\n    native: '\u067E\u0627\u06A9\u0633\u062A\u0627\u0646',\n  },\n  id: LocaleCode.UrduPakistan,\n  language: {\n    code: LanguageCode.Urdu,\n    name: 'Urdu',\n    native: '\u0627\u0631\u062F\u0648',\n  },\n  name: 'Urdu (Pakistan)',\n  native_name: '\u0627\u0631\u062F\u0648 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)',\n  rtl: true,\n};\n\nexport const UzbekLatin: Locale = {\n  id: LocaleCode.Uzbek,\n  language: {\n    code: LanguageCode.Uzbek,\n    name: 'Uzbek',\n    native: 'O\u02BBzbekcha',\n  },\n  name: 'Uzbek',\n  native_name: 'O\u02BBzbekcha',\n  rtl: false,\n};\n\nexport const UzbekUzbekistan: Locale = {\n  country: {\n    code: CountryCode.Uzbekistan,\n    name: 'Uzbekistan',\n    native: 'O\u02BBzbekiston',\n  },\n  id: LocaleCode.UzbekUzbekistan,\n  language: {\n    code: LanguageCode.Uzbek,\n    name: 'Uzbek',\n    native: 'O\u02BBzbekcha',\n  },\n  name: 'Uzbek (Latin, Uzbekistan)',\n  native_name: 'O\u02BBzbekcha (O\u02BBzbekiston)',\n  rtl: false,\n};\n\nexport const UzbekCyrillic: Locale = {\n  country: {\n    code: CountryCode.Uzbekistan,\n    name: 'Uzbekistan',\n    native: '\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D',\n  },\n  id: LocaleCode.UzbekCyrillic,\n  language: {\n    code: LanguageCode.Uzbek,\n    name: 'Uzbek',\n    native: '\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D',\n  },\n  name: 'Uzbek (Cyrillic)',\n  native_name: '\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D (\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D)',\n  rtl: false,\n};\n\nexport const Vietnamese: Locale = {\n  id: LocaleCode.Vietnamese,\n  language: {\n    code: LanguageCode.Vietnamese,\n    name: 'Vietnamese',\n    native: 'Ti\u1EBFng Vi\u1EC7t',\n  },\n  name: 'Vietnamese',\n  native_name: 'Ti\u1EBFng Vi\u1EC7t',\n  rtl: false,\n};\n\nexport const VietnameseVietnam: Locale = {\n  country: {\n    code: CountryCode.Vietnam,\n    name: 'Vietnam',\n    native: 'Vi\u1EC7t Nam',\n  },\n  id: LocaleCode.VietnameseVietnam,\n  language: {\n    code: LanguageCode.Vietnamese,\n    name: 'Vietnamese',\n    native: 'Ti\u1EBFng Vi\u1EC7t',\n  },\n  name: 'Vietnamese (Vietnam)',\n  native_name: 'Ti\u1EBFng Vi\u1EC7t (Vi\u1EC7t Nam)',\n  rtl: false,\n};\n\nexport const Welsh: Locale = {\n  id: LocaleCode.Welsh,\n  language: {\n    code: LanguageCode.Welsh,\n    name: 'Welsh',\n    native: 'Cymraeg',\n  },\n  name: 'Welsh',\n  native_name: 'Cymraeg',\n  rtl: false,\n};\n\nexport const WelshUnitedKingdom: Locale = {\n  country: {\n    code: CountryCode.UnitedKingdom,\n    name: 'United Kingdom',\n    native: 'United Kingdom',\n  },\n  id: LocaleCode.WelshUnitedKingdom,\n  language: {\n    code: LanguageCode.Welsh,\n    name: 'Welsh',\n    native: 'Cymraeg',\n  },\n  name: 'Welsh (United Kingdom)',\n  native_name: 'Cymraeg (United Kingdom)',\n  rtl: false,\n};\n\nexport const Xhosa: Locale = {\n  id: LocaleCode.Xhosa,\n  language: {\n    code: LanguageCode.Xhosa,\n    name: 'Xhosa',\n    native: 'isiXhosa',\n  },\n  name: 'Xhosa',\n  native_name: 'isiXhosa',\n  rtl: false,\n};\n\nexport const XhosaSouthAfrica: Locale = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: 'South Africa',\n    native: 'South Africa',\n  },\n  id: LocaleCode.XhosaSouthAfrica,\n  language: {\n    code: LanguageCode.Xhosa,\n    name: 'Xhosa',\n    native: 'isiXhosa',\n  },\n  name: 'Xhosa (South Africa)',\n  native_name: 'isiXhosa (South Africa)',\n  rtl: false,\n};\n\nexport const Yiddish: Locale = {\n  id: LocaleCode.Yiddish,\n  language: {\n    code: LanguageCode.Yiddish,\n    name: 'Yiddish',\n    native: '\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9',\n  },\n  name: 'Yiddish',\n  native_name: '\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9',\n  rtl: false,\n};\n\nexport const Yoruba: Locale = {\n  id: LocaleCode.Yoruba,\n  language: {\n    code: LanguageCode.Yoruba,\n    name: 'Yoruba',\n    native: 'Yor\u00F9b\u00E1',\n  },\n  name: 'Yoruba',\n  native_name: 'Yor\u00F9b\u00E1',\n  rtl: false,\n};\n\nexport const YorubaNigeria: Locale = {\n  country: {\n    code: CountryCode.Nigeria,\n    name: 'Nigeria',\n    native: 'Nigeria',\n  },\n  id: LocaleCode.YorubaNigeria,\n  language: {\n    code: LanguageCode.Yoruba,\n    name: 'Yoruba',\n    native: 'Yor\u00F9b\u00E1',\n  },\n  name: 'Yoruba (Nigeria)',\n  native_name: 'Yor\u00F9b\u00E1 (Nigeria)',\n  rtl: false,\n};\n\n// export const ZhuyinMandarin: Locale = {\n//   id: LocaleCode.ZhuyinMandarin,\n//   language: {\n//     code: LanguageCode.Mandarin,\n//     name: 'Mandarin',\n//     native: '\u666E\u901A\u8BDD',\n//   },\n//   name: 'Zhuyin (Mandarin)',\n//   native_name: '\u666E\u901A\u8BDD (\u666E\u901A\u8BDD)',\n//   rtl: false,\n// };\n\n// export const ZhuyinMandarinChina: Locale = {\n//   country: {\n//     code: CountryCode.China,\n//     name: 'China',\n//     native: '\u4E2D\u56FD',\n//   },\n//   id: LocaleCode.ZhuyinMandarinChina,\n//   language: {\n//     code: LanguageCode.Zhuyin,\n//     name: 'Zhuyin',\n//     native: 'Zhuyin',\n//   },\n//   name: 'Zhuyin (Mandarin, China)',\n//   native_name: 'Zhuyin (Mandarin, China)',\n//   rtl: false,\n// };\n\n// export const ZhuyinMandarinTaiwan: Locale = {\n//   country: {\n//     code: CountryCode.Taiwan,\n//     name: 'Taiwan',\n//     native: '\u81FA\u7063',\n//   },\n//   id: LocaleCode.ZhuyinMandarinTaiwan,\n//   language: {\n//     code: LanguageCode.Zhuyin,\n//     name: 'Zhuyin',\n//     native: 'Zhuyin',\n//   },\n//   name: 'Zhuyin (Mandarin, Taiwan)',\n//   native_name: 'Zhuyin (Mandarin, Taiwan)',\n//   rtl: false,\n// };\n\n// export const ZhuyinMandarinHongKong: Locale = {\n//   country: {\n//     code: CountryCode.HongKong,\n//     name: 'Hong Kong',\n//     native: '\u9999\u6E2F',\n//   },\n//   id: LocaleCode.ZhuyinMandarinHongKong,\n//   language: {\n//     code: LanguageCode.Zhuyin,\n//     name: 'Zhuyin',\n//     native: 'Zhuyin',\n//   },\n//   name: 'Zhuyin (Mandarin, Hong Kong)',\n//   native_name: 'Zhuyin (Mandarin, Hong Kong)',\n//   rtl: false,\n// };\n\n// export const ZhuyinMandarinMacau: Locale = {\n//   country: {\n//     code: CountryCode.Macau,\n//     name: 'Macau',\n//     native: '\u6FB3\u9580',\n//   },\n//   id: LocaleCode.ZhuyinMandarinMacau,\n//   language: {\n//     code: LanguageCode.Zhuyin,\n//     name: 'Zhuyin',\n//     native: 'Zhuyin',\n//   },\n//   name: 'Zhuyin (Mandarin, Macau)',\n//   native_name: 'Zhuyin (Mandarin, Macau)',\n//   rtl: false,\n// };\n\nexport const Zulu: Locale = {\n  id: LocaleCode.Zulu,\n  language: {\n    code: LanguageCode.Zulu,\n    name: 'Zulu',\n    native: 'isiZulu',\n  },\n  name: 'Zulu',\n  native_name: 'isiZulu',\n  rtl: false,\n};\n\nexport const ZuluSouthAfrica: Locale = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: 'South Africa',\n    native: 'South Africa',\n  },\n  id: LocaleCode.ZuluSouthAfrica,\n  language: {\n    code: LanguageCode.Zulu,\n    name: 'Zulu',\n    native: 'isiZulu',\n  },\n  name: 'Zulu (South Africa)',\n  native_name: 'isiZulu (South Africa)',\n  rtl: false,\n};\n", "import { TimezoneRegions } from './region.js';\nimport { TimezoneRegion } from './region';\nimport { TimezoneOffset } from './timezone.js';\nimport { Timezones } from './timezones.js';\n\nexport const AfricaAbidjan: TimezoneRegion = {\n  id: TimezoneRegions.AfricaAbidjan,\n  name: 'Africa/Abidjan',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaAccra: TimezoneRegion = {\n  id: TimezoneRegions.AfricaAccra,\n  name: 'Africa/Accra',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaAddisAbaba: TimezoneRegion = {\n  id: TimezoneRegions.AfricaAddisAbaba,\n  name: 'Africa/Addis_Ababa',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaAlgiers: TimezoneRegion = {\n  id: TimezoneRegions.AfricaAlgiers,\n  name: 'Africa/Algiers',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const AfricaAsmara: TimezoneRegion = {\n  id: TimezoneRegions.AfricaAsmara,\n  name: 'Africa/Asmara',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaBamako: TimezoneRegion = {\n  id: TimezoneRegions.AfricaBamako,\n  name: 'Africa/Bamako',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaBangui: TimezoneRegion = {\n  id: TimezoneRegions.AfricaBangui,\n  name: 'Africa/Bangui',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaBanjul: TimezoneRegion = {\n  id: TimezoneRegions.AfricaBanjul,\n  name: 'Africa/Banjul',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaBissau: TimezoneRegion = {\n  id: TimezoneRegions.AfricaBissau,\n  name: 'Africa/Bissau',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaBlantyre: TimezoneRegion = {\n  id: TimezoneRegions.AfricaBlantyre,\n  name: 'Africa/Blantyre',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime,\n};\n\nexport const AfricaBrazzaville: TimezoneRegion = {\n  id: TimezoneRegions.AfricaBrazzaville,\n  name: 'Africa/Brazzaville',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaBujumbura: TimezoneRegion = {\n  id: TimezoneRegions.AfricaBujumbura,\n  name: 'Africa/Bujumbura',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime,\n};\n\nexport const AfricaCairo: TimezoneRegion = {\n  id: TimezoneRegions.AfricaCairo,\n  name: 'Africa/Cairo',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const AfricaCasablanca: TimezoneRegion = {\n  id: TimezoneRegions.AfricaCasablanca,\n  name: 'Africa/Casablanca',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WesternEuropeanTime,\n};\n\nexport const AfricaCeuta: TimezoneRegion = {\n  id: TimezoneRegions.AfricaCeuta,\n  name: 'Africa/Ceuta',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const AfricaConakry: TimezoneRegion = {\n  id: TimezoneRegions.AfricaConakry,\n  name: 'Africa/Conakry',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaDakar: TimezoneRegion = {\n  id: TimezoneRegions.AfricaDakar,\n  name: 'Africa/Dakar',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaDarEsSalaam: TimezoneRegion = {\n  id: TimezoneRegions.AfricaDarEsSalaam,\n  name: 'Africa/Dar_es_Salaam',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaDjibouti: TimezoneRegion = {\n  id: TimezoneRegions.AfricaDjibouti,\n  name: 'Africa/Djibouti',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaDouala: TimezoneRegion = {\n  id: TimezoneRegions.AfricaDouala,\n  name: 'Africa/Douala',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaElAaiun: TimezoneRegion = {\n  id: TimezoneRegions.AfricaElAaiun,\n  name: 'Africa/El_Aaiun',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaFreetown: TimezoneRegion = {\n  id: TimezoneRegions.AfricaFreetown,\n  name: 'Africa/Freetown',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaGaborone: TimezoneRegion = {\n  id: TimezoneRegions.AfricaGaborone,\n  name: 'Africa/Gaborone',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime,\n};\n\nexport const AfricaHarare: TimezoneRegion = {\n  id: TimezoneRegions.AfricaHarare,\n  name: 'Africa/Harare',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime,\n};\n\nexport const AfricaJohannesburg: TimezoneRegion = {\n  id: TimezoneRegions.AfricaJohannesburg,\n  name: 'Africa/Johannesburg',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.SouthAfricanStandardTime,\n};\n\nexport const AfricaJuba: TimezoneRegion = {\n  id: TimezoneRegions.AfricaJuba,\n  name: 'Africa/Juba',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaKampala: TimezoneRegion = {\n  id: TimezoneRegions.AfricaKampala,\n  name: 'Africa/Kampala',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaKhartoum: TimezoneRegion = {\n  id: TimezoneRegions.AfricaKhartoum,\n  name: 'Africa/Khartoum',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaKigali: TimezoneRegion = {\n  id: TimezoneRegions.AfricaKigali,\n  name: 'Africa/Kigali',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime,\n};\n\nexport const AfricaKinshasa: TimezoneRegion = {\n  id: TimezoneRegions.AfricaKinshasa,\n  name: 'Africa/Kinshasa',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaLagos: TimezoneRegion = {\n  id: TimezoneRegions.AfricaLagos,\n  name: 'Africa/Lagos',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaLibreville: TimezoneRegion = {\n  id: TimezoneRegions.AfricaLibreville,\n  name: 'Africa/Libreville',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaLome: TimezoneRegion = {\n  id: TimezoneRegions.AfricaLome,\n  name: 'Africa/Lome',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaLuanda: TimezoneRegion = {\n  id: TimezoneRegions.AfricaLuanda,\n  name: 'Africa/Luanda',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaLubumbashi: TimezoneRegion = {\n  id: TimezoneRegions.AfricaLubumbashi,\n  name: 'Africa/Lubumbashi',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime,\n};\n\nexport const AfricaLusaka: TimezoneRegion = {\n  id: TimezoneRegions.AfricaLusaka,\n  name: 'Africa/Lusaka',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime,\n};\n\nexport const AfricaMalabo: TimezoneRegion = {\n  id: TimezoneRegions.AfricaMalabo,\n  name: 'Africa/Malabo',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaMaputo: TimezoneRegion = {\n  id: TimezoneRegions.AfricaMaputo,\n  name: 'Africa/Maputo',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime,\n};\n\nexport const AfricaMaseru: TimezoneRegion = {\n  id: TimezoneRegions.AfricaMaseru,\n  name: 'Africa/Maseru',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.SouthAfricanStandardTime,\n};\n\nexport const AfricaMbabane: TimezoneRegion = {\n  id: TimezoneRegions.AfricaMbabane,\n  name: 'Africa/Mbabane',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.SouthAfricanStandardTime,\n};\n\nexport const AfricaMogadishu: TimezoneRegion = {\n  id: TimezoneRegions.AfricaMogadishu,\n  name: 'Africa/Mogadishu',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaMonrovia: TimezoneRegion = {\n  id: TimezoneRegions.AfricaMonrovia,\n  name: 'Africa/Monrovia',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaNairobi: TimezoneRegion = {\n  id: TimezoneRegions.AfricaNairobi,\n  name: 'Africa/Nairobi',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const AfricaNdjamena: TimezoneRegion = {\n  id: TimezoneRegions.AfricaNdjamena,\n  name: 'Africa/Ndjamena',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaNiamey: TimezoneRegion = {\n  id: TimezoneRegions.AfricaNiamey,\n  name: 'Africa/Niamey',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaNouakchott: TimezoneRegion = {\n  id: TimezoneRegions.AfricaNouakchott,\n  name: 'Africa/Nouakchott',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const AfricaOuagadougou: TimezoneRegion = {\n  id: TimezoneRegions.AfricaOuagadougou,\n  name: 'Africa/Ouagadougou',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaPortoNovo: TimezoneRegion = {\n  id: TimezoneRegions.AfricaPortoNovo,\n  name: 'Africa/Porto-Novo',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AfricaSaoTome: TimezoneRegion = {\n  id: TimezoneRegions.AfricaSaoTome,\n  name: 'Africa/SaoTome',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaTripoli: TimezoneRegion = {\n  id: TimezoneRegions.AfricaTripoli,\n  name: 'Africa/Tripoli',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaTunis: TimezoneRegion = {\n  id: TimezoneRegions.AfricaTunis,\n  name: 'Africa/Tunis',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AfricaWindhoek: TimezoneRegion = {\n  id: TimezoneRegions.AfricaWindhoek,\n  name: 'Africa/Windhoek',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.WestAfricaTime,\n};\n\nexport const AmericaAdak: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAdak,\n  name: 'America/Adak',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.HawaiiAleutianStandardTime,\n};\n\nexport const AmericaAnchorage: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAnchorage,\n  name: 'America/Anchorage',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.AlaskaStandardTime,\n};\n\nexport const AmericaAnguilla: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAnguilla,\n  name: 'America/Anguilla',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaAntigua: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAntigua,\n  name: 'America/Antigua',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaAraguaina: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAraguaina,\n  name: 'America/Araguaina',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime,\n};\n\nexport const AmericaArgentinaBuenosAires: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaBuenosAires,\n  name: 'America/Argentina/Buenos_Aires',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaCatamarca: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaCatamarca,\n  name: 'America/Argentina/Catamarca',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaCordoba: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaCordoba,\n  name: 'America/Argentina/Cordoba',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaJujuy: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaJujuy,\n  name: 'America/Argentina/Jujuy',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaLaRioja: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaLaRioja,\n  name: 'America/Argentina/La_Rioja',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaMendoza: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaMendoza,\n  name: 'America/Argentina/Mendoza',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaRioGallegos: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaRioGallegos,\n  name: 'America/Argentina/Rio_Gallegos',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaSalta: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaSalta,\n  name: 'America/Argentina/Salta',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaSanJuan: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaSanJuan,\n  name: 'America/Argentina/San_Juan',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaSanLuis: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaSanLuis,\n  name: 'America/Argentina/San_Luis',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaTucuman: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaTucuman,\n  name: 'America/Argentina/Tucuman',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaArgentinaUshuaia: TimezoneRegion = {\n  id: TimezoneRegions.AmericaArgentinaUshuaia,\n  name: 'America/Argentina/Ushuaia',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaAruba: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAruba,\n  name: 'America/Aruba',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaAsuncion: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAsuncion,\n  name: 'America/Asuncion',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.ParaguayTime,\n};\n\nexport const AmericaAtikokan: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAtikokan,\n  name: 'America/Atikokan',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaAtka: TimezoneRegion = {\n  id: TimezoneRegions.AmericaAtka,\n  name: 'America/Atka',\n  offset: TimezoneOffset.UTC_MINUS_10,\n  timezone: Timezones.HawaiiAleutianStandardTime,\n};\n\nexport const AmericaBahia: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBahia,\n  name: 'America/Bahia',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime,\n};\n\nexport const AmericaBahiaBanderas: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBahiaBanderas,\n  name: 'America/Bahia_Banderas',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaBarbados: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBarbados,\n  name: 'America/Barbados',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaBelem: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBelem,\n  name: 'America/Belem',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime,\n};\n\nexport const AmericaBelize: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBelize,\n  name: 'America/Belize',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaBlancSablon: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBlancSablon,\n  name: 'America/Blanc-Sablon',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaBoaVista: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBoaVista,\n  name: 'America/Boa_Vista',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AmazonTime,\n};\n\nexport const AmericaBogota: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBogota,\n  name: 'America/Bogota',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.ColombiaTime,\n};\n\nexport const AmericaBoise: TimezoneRegion = {\n  id: TimezoneRegions.AmericaBoise,\n  name: 'America/Boise',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaCambridgeBay: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCambridgeBay,\n  name: 'America/Cambridge_Bay',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaCampoGrande: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCampoGrande,\n  name: 'America/Campo_Grande',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AmazonTime,\n};\n\nexport const AmericaCancun: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCancun,\n  name: 'America/Cancun',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaCaracas: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCaracas,\n  name: 'America/Caracas',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.VenezuelaStandardTime,\n};\n\nexport const AmericaCayenne: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCayenne,\n  name: 'America/Cayenne',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.FrenchGuianaTime,\n};\n\nexport const AmericaCayman: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCayman,\n  name: 'America/Cayman',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaChicago: TimezoneRegion = {\n  id: TimezoneRegions.AmericaChicago,\n  name: 'America/Chicago',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaChihuahua: TimezoneRegion = {\n  id: TimezoneRegions.AmericaChihuahua,\n  name: 'America/Chihuahua',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaCoralHarbour: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCoralHarbour,\n  name: 'America/Coral_Harbour',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaCordoba: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCordoba,\n  name: 'America/Cordoba',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime,\n};\n\nexport const AmericaCostaRica: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCostaRica,\n  name: 'America/Costa_Rica',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaCreston: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCreston,\n  name: 'America/Creston',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaCuiaba: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCuiaba,\n  name: 'America/Cuiaba',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AmazonTime,\n};\n\nexport const AmericaCuracao: TimezoneRegion = {\n  id: TimezoneRegions.AmericaCuracao,\n  name: 'America/Curacao',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaDanmarkshavn: TimezoneRegion = {\n  id: TimezoneRegions.AmericaDanmarkshavn,\n  name: 'America/Danmarkshavn',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const AmericaDawson: TimezoneRegion = {\n  id: TimezoneRegions.AmericaDawson,\n  name: 'America/Dawson',\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime,\n};\n\nexport const AmericaDawsonCreek: TimezoneRegion = {\n  id: TimezoneRegions.AmericaDawsonCreek,\n  name: 'America/Dawson_Creek',\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime,\n};\n\nexport const AmericaDenver: TimezoneRegion = {\n  id: TimezoneRegions.AmericaDenver,\n  name: 'America/Denver',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaDetroit: TimezoneRegion = {\n  id: TimezoneRegions.AmericaDetroit,\n  name: 'America/Detroit',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaDominica: TimezoneRegion = {\n  id: TimezoneRegions.AmericaDominica,\n  name: 'America/Dominica',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaEdmonton: TimezoneRegion = {\n  id: TimezoneRegions.AmericaEdmonton,\n  name: 'America/Edmonton',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaEirunepe: TimezoneRegion = {\n  id: TimezoneRegions.AmericaEirunepe,\n  name: 'America/Eirunepe',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.AcreTime,\n};\n\nexport const AmericaElSalvador: TimezoneRegion = {\n  id: TimezoneRegions.AmericaElSalvador,\n  name: 'America/El_Salvador',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaFortaleza: TimezoneRegion = {\n  id: TimezoneRegions.AmericaFortaleza,\n  name: 'America/Fortaleza',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime,\n};\n\nexport const AmericaGlaceBay: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGlaceBay,\n  name: 'America/Glace_Bay',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaGodthab: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGodthab,\n  name: 'America/Godthab',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.WestGreenlandTime,\n};\n\nexport const AmericaGooseBay: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGooseBay,\n  name: 'America/Goose_Bay',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaGrandTurk: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGrandTurk,\n  name: 'America/Grand_Turk',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaGrenada: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGrenada,\n  name: 'America/Grenada',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaGuadeloupe: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGuadeloupe,\n  name: 'America/Guadeloupe',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaGuatemala: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGuatemala,\n  name: 'America/Guatemala',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaGuayaquil: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGuayaquil,\n  name: 'America/Guayaquil',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EcuadorTime,\n};\n\nexport const AmericaGuyana: TimezoneRegion = {\n  id: TimezoneRegions.AmericaGuyana,\n  name: 'America/Guyana',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaHalifax: TimezoneRegion = {\n  id: TimezoneRegions.AmericaHalifax,\n  name: 'America/Halifax',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaHavana: TimezoneRegion = {\n  id: TimezoneRegions.AmericaHavana,\n  name: 'America/Havana',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.CubaStandardTime,\n};\n\nexport const AmericaHermosillo: TimezoneRegion = {\n  id: TimezoneRegions.AmericaHermosillo,\n  name: 'America/Hermosillo',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaIndianaIndianapolis: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIndianaIndianapolis,\n  name: 'America/Indiana/Indianapolis',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaIndianaKnox: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIndianaKnox,\n  name: 'America/Indiana/Knox',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaIndianaMarengo: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIndianaMarengo,\n  name: 'America/Indiana/Marengo',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaIndianaPetersburg: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIndianaPetersburg,\n  name: 'America/Indiana/Petersburg',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaIndianaTellCity: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIndianaTellCity,\n  name: 'America/Indiana/Tell_City',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaIndianaVevay: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIndianaVevay,\n  name: 'America/Indiana/Vevay',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaIndianaVincennes: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIndianaVincennes,\n  name: 'America/Indiana/Vincennes',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaIndianaWinamac: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIndianaWinamac,\n  name: 'America/Indiana/Winamac',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaInuvik: TimezoneRegion = {\n  id: TimezoneRegions.AmericaInuvik,\n  name: 'America/Inuvik',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaIqaluit: TimezoneRegion = {\n  id: TimezoneRegions.AmericaIqaluit,\n  name: 'America/Iqaluit',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaJamaica: TimezoneRegion = {\n  id: TimezoneRegions.AmericaJamaica,\n  name: 'America/Jamaica',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaJuneau: TimezoneRegion = {\n  id: TimezoneRegions.AmericaJuneau,\n  name: 'America/Juneau',\n  offset: TimezoneOffset.UTC_MINUS_9,\n  timezone: Timezones.AlaskaStandardTime,\n};\n\nexport const AmericaKentuckyLouisville: TimezoneRegion = {\n  id: TimezoneRegions.AmericaKentuckyLouisville,\n  name: 'America/Kentucky/Louisville',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaKentuckyMonticello: TimezoneRegion = {\n  id: TimezoneRegions.AmericaKentuckyMonticello,\n  name: 'America/Kentucky/Monticello',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaKralendijk: TimezoneRegion = {\n  id: TimezoneRegions.AmericaKralendijk,\n  name: 'America/Kralendijk',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaLaPaz: TimezoneRegion = {\n  id: TimezoneRegions.AmericaLaPaz,\n  name: 'America/La_Paz',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.BoliviaTime,\n};\n\nexport const AmericaLima: TimezoneRegion = {\n  id: TimezoneRegions.AmericaLima,\n  name: 'America/Lima',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.PeruTime,\n};\n\nexport const AmericaLosAngeles: TimezoneRegion = {\n  id: TimezoneRegions.AmericaLosAngeles,\n  name: 'America/Los_Angeles',\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime,\n};\n\nexport const AmericaLouisville: TimezoneRegion = {\n  id: TimezoneRegions.AmericaLouisville,\n  name: 'America/Louisville',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaLowerPrinces: TimezoneRegion = {\n  id: TimezoneRegions.AmericaLowerPrinces,\n  name: 'America/Lower_Princes',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaMaceio: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMaceio,\n  name: 'America/Maceio',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime,\n};\n\nexport const AmericaManagua: TimezoneRegion = {\n  id: TimezoneRegions.AmericaManagua,\n  name: 'America/Managua',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaManaus: TimezoneRegion = {\n  id: TimezoneRegions.AmericaManaus,\n  name: 'America/Manaus',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AmazonTime,\n};\n\nexport const AmericaMarigot: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMarigot,\n  name: 'America/Marigot',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaMartinique: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMartinique,\n  name: 'America/Martinique',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaMatamoros: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMatamoros,\n  name: 'America/Matamoros',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaMazatlan: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMazatlan,\n  name: 'America/Mazatlan',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaMenominee: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMenominee,\n  name: 'America/Menominee',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaMerida: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMerida,\n  name: 'America/Merida',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaMetlakatla: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMetlakatla,\n  name: 'America/Metlakatla',\n  offset: TimezoneOffset.UTC_MINUS_9,\n  timezone: Timezones.AlaskaStandardTime,\n};\n\nexport const AmericaMexicoCity: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMexicoCity,\n  name: 'America/Mexico_City',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaMiquelon: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMiquelon,\n  name: 'America/Miquelon',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.SaintPierreAndMiquelonStandardTime,\n};\n\nexport const AmericaMoncton: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMoncton,\n  name: 'America/Moncton',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaMonterrey: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMonterrey,\n  name: 'America/Monterrey',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaMontevideo: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMontevideo,\n  name: 'America/Montevideo',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.UruguayStandardTime,\n};\n\nexport const AmericaMontreal: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMontreal,\n  name: 'America/Montreal',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaMontserrat: TimezoneRegion = {\n  id: TimezoneRegions.AmericaMontserrat,\n  name: 'America/Montserrat',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaNassau: TimezoneRegion = {\n  id: TimezoneRegions.AmericaNassau,\n  name: 'America/Nassau',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaNewYork: TimezoneRegion = {\n  id: TimezoneRegions.AmericaNewYork,\n  name: 'America/New_York',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaNipigon: TimezoneRegion = {\n  id: TimezoneRegions.AmericaNipigon,\n  name: 'America/Nipigon',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaNome: TimezoneRegion = {\n  id: TimezoneRegions.AmericaNome,\n  name: 'America/Nome',\n  offset: TimezoneOffset.UTC_MINUS_9,\n  timezone: Timezones.AlaskaStandardTime,\n};\n\nexport const AmericaNoronha: TimezoneRegion = {\n  id: TimezoneRegions.AmericaNoronha,\n  name: 'America/Noronha',\n  offset: TimezoneOffset.UTC_MINUS_2,\n  timezone: Timezones.FernandoDeNoronhaTime,\n};\n\nexport const AmericaNorthDakotaBeulah: TimezoneRegion = {\n  id: TimezoneRegions.AmericaNorthDakotaBeulah,\n  name: 'America/North_Dakota/Beulah',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaNorthDakotaCenter: TimezoneRegion = {\n  id: TimezoneRegions.AmericaNorthDakotaCenter,\n  name: 'America/North_Dakota/Center',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaNorthDakotaNewSalem: TimezoneRegion = {\n  id: TimezoneRegions.AmericaNorthDakotaNewSalem,\n  name: 'America/North_Dakota/New_Salem',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaOjinaga: TimezoneRegion = {\n  id: TimezoneRegions.AmericaOjinaga,\n  name: 'America/Ojinaga',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaPanama: TimezoneRegion = {\n  id: TimezoneRegions.AmericaPanama,\n  name: 'America/Panama',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaPangnirtung: TimezoneRegion = {\n  id: TimezoneRegions.AmericaPangnirtung,\n  name: 'America/Pangnirtung',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaParamaribo: TimezoneRegion = {\n  id: TimezoneRegions.AmericaParamaribo,\n  name: 'America/Paramaribo',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.SurinameTime,\n};\n\nexport const AmericaPhoenix: TimezoneRegion = {\n  id: TimezoneRegions.AmericaPhoenix,\n  name: 'America/Phoenix',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaPortAuPrince: TimezoneRegion = {\n  id: TimezoneRegions.AmericaPortAuPrince,\n  name: 'America/Port-au-Prince',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaPortOfSpain: TimezoneRegion = {\n  id: TimezoneRegions.AmericaPortOfSpain,\n  name: 'America/Port_of_Spain',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaPortoVelho: TimezoneRegion = {\n  id: TimezoneRegions.AmericaPortoVelho,\n  name: 'America/Porto_Velho',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AmazonTime,\n};\n\nexport const AmericaPuertoRico: TimezoneRegion = {\n  id: TimezoneRegions.AmericaPuertoRico,\n  name: 'America/Puerto_Rico',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaRainyRiver: TimezoneRegion = {\n  id: TimezoneRegions.AmericaRainyRiver,\n  name: 'America/Rainy_River',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaRankinInlet: TimezoneRegion = {\n  id: TimezoneRegions.AmericaRankinInlet,\n  name: 'America/Rankin_Inlet',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaRecife: TimezoneRegion = {\n  id: TimezoneRegions.AmericaRecife,\n  name: 'America/Recife',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime,\n};\n\nexport const AmericaRegina: TimezoneRegion = {\n  id: TimezoneRegions.AmericaRegina,\n  name: 'America/Regina',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaResolute: TimezoneRegion = {\n  id: TimezoneRegions.AmericaResolute,\n  name: 'America/Resolute',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaRioBranco: TimezoneRegion = {\n  id: TimezoneRegions.AmericaRioBranco,\n  name: 'America/Rio_Branco',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.AcreTime,\n};\n\nexport const AmericaSantaIsabel: TimezoneRegion = {\n  id: TimezoneRegions.AmericaSantaIsabel,\n  name: 'America/Santa_Isabel',\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime,\n};\n\nexport const AmericaSantarem: TimezoneRegion = {\n  id: TimezoneRegions.AmericaSantarem,\n  name: 'America/Santarem',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime,\n};\n\nexport const AmericaSantiago: TimezoneRegion = {\n  id: TimezoneRegions.AmericaSantiago,\n  name: 'America/Santiago',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.ChileStandardTime,\n};\n\nexport const AmericaSantoDomingo: TimezoneRegion = {\n  id: TimezoneRegions.AmericaSantoDomingo,\n  name: 'America/Santo_Domingo',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaSaoPaulo: TimezoneRegion = {\n  id: TimezoneRegions.AmericaSaoPaulo,\n  name: 'America/Sao_Paulo',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime,\n};\n\nexport const AmericaScoresbysund: TimezoneRegion = {\n  id: TimezoneRegions.AmericaScoresbysund,\n  name: 'America/Scoresbysund',\n  offset: TimezoneOffset.UTC_MINUS_1,\n  timezone: Timezones.EasternGreenlandTime,\n};\n\nexport const AmericaShiprock: TimezoneRegion = {\n  id: TimezoneRegions.AmericaShiprock,\n  name: 'America/Shiprock',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AmericaSitka: TimezoneRegion = {\n  id: TimezoneRegions.AmericaSitka,\n  name: 'America/Sitka',\n  offset: TimezoneOffset.UTC_MINUS_9,\n  timezone: Timezones.AlaskaStandardTime,\n};\n\nexport const AmericaStBarthelemy: TimezoneRegion = {\n  id: TimezoneRegions.AmericaStBarthelemy,\n  name: 'America/St_Barthelemy',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaStJohns: TimezoneRegion = {\n  id: TimezoneRegions.AmericaStJohns,\n  name: 'America/St_Johns',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.NewfoundlandStandardTime,\n};\n\nexport const AmericaStKitts: TimezoneRegion = {\n  id: TimezoneRegions.AmericaStKitts,\n  name: 'America/St_Kitts',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaStLucia: TimezoneRegion = {\n  id: TimezoneRegions.AmericaStLucia,\n  name: 'America/St_Lucia',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaStThomas: TimezoneRegion = {\n  id: TimezoneRegions.AmericaStThomas,\n  name: 'America/St_Thomas',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaStVincent: TimezoneRegion = {\n  id: TimezoneRegions.AmericaStVincent,\n  name: 'America/St_Vincent',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaSwiftCurrent: TimezoneRegion = {\n  id: TimezoneRegions.AmericaSwiftCurrent,\n  name: 'America/Swift_Current',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaTegucigalpa: TimezoneRegion = {\n  id: TimezoneRegions.AmericaTegucigalpa,\n  name: 'America/Tegucigalpa',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaThule: TimezoneRegion = {\n  id: TimezoneRegions.AmericaThule,\n  name: 'America/Thule',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaThunderBay: TimezoneRegion = {\n  id: TimezoneRegions.AmericaThunderBay,\n  name: 'America/Thunder_Bay',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaTijuana: TimezoneRegion = {\n  id: TimezoneRegions.AmericaTijuana,\n  name: 'America/Tijuana',\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime,\n};\n\nexport const AmericaToronto: TimezoneRegion = {\n  id: TimezoneRegions.AmericaToronto,\n  name: 'America/Toronto',\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime,\n};\n\nexport const AmericaTortola: TimezoneRegion = {\n  id: TimezoneRegions.AmericaTortola,\n  name: 'America/Tortola',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AmericaVancouver: TimezoneRegion = {\n  id: TimezoneRegions.AmericaVancouver,\n  name: 'America/Vancouver',\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime,\n};\n\nexport const AmericaWhitehorse: TimezoneRegion = {\n  id: TimezoneRegions.AmericaWhitehorse,\n  name: 'America/Whitehorse',\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime,\n};\n\nexport const AmericaWinnipeg: TimezoneRegion = {\n  id: TimezoneRegions.AmericaWinnipeg,\n  name: 'America/Winnipeg',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AmericaYakutat: TimezoneRegion = {\n  id: TimezoneRegions.AmericaYakutat,\n  name: 'America/Yakutat',\n  offset: TimezoneOffset.UTC_MINUS_9,\n  timezone: Timezones.AlaskaStandardTime,\n};\n\nexport const AmericaYellowknife: TimezoneRegion = {\n  id: TimezoneRegions.AmericaYellowknife,\n  name: 'America/Yellowknife',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.MountainStandardTime,\n};\n\nexport const AntarcticaCasey: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaCasey,\n  name: 'Antarctica/Casey',\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.WesternStandardTime,\n};\n\nexport const AntarcticaDavis: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaDavis,\n  name: 'Antarctica/Davis',\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.NewfoundlandStandardTime,\n};\n\nexport const AntarcticaDumontDUrville: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaDumontDUrville,\n  name: 'Antarctica/DumontDUrville',\n  offset: TimezoneOffset.UTC_MINUS_10,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AntarcticaMacquarie: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaMacquarie,\n  name: 'Antarctica/Macquarie',\n  offset: TimezoneOffset.UTC_MINUS_11,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AntarcticaMawson: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaMawson,\n  name: 'Antarctica/Mawson',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AntarcticaMcMurdo: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaMcMurdo,\n  name: 'Antarctica/McMurdo',\n  offset: TimezoneOffset.UTC_MINUS_12,\n  timezone: Timezones.NewZealandStandardTime,\n};\n\nexport const AntarcticaPalmer: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaPalmer,\n  name: 'Antarctica/Palmer',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.ChathamStandardTime,\n};\n\nexport const AntarcticaRothera: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaRothera,\n  name: 'Antarctica/Rothera',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.RotheraResearchStationTime,\n};\n\nexport const AntarcticaSyowa: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaSyowa,\n  name: 'Antarctica/Syowa',\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ShowaStationTime,\n};\n\nexport const AntarcticaTroll: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaTroll,\n  name: 'Antarctica/Troll',\n  offset: TimezoneOffset.UTC_MINUS_2,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const AntarcticaVostok: TimezoneRegion = {\n  id: TimezoneRegions.AntarcticaVostok,\n  name: 'Antarctica/Vostok',\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime,\n};\n\nexport const ArcticLongyearbyen: TimezoneRegion = {\n  id: TimezoneRegions.ArcticLongyearbyen,\n  name: 'Arctic/Longyearbyen',\n  offset: TimezoneOffset.UTC_MINUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const AsiaAden: TimezoneRegion = {\n  id: TimezoneRegions.AsiaAden,\n  name: 'Asia/Aden',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime,\n};\n\nexport const AsiaAlmaty: TimezoneRegion = {\n  id: TimezoneRegions.AsiaAlmaty,\n  name: 'Asia/Almaty',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.AlmaAtaTime,\n};\n\nexport const AsiaAmman: TimezoneRegion = {\n  id: TimezoneRegions.AsiaAmman,\n  name: 'Asia/Amman',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const AsiaAnadyr: TimezoneRegion = {\n  id: TimezoneRegions.AsiaAnadyr,\n  name: 'Asia/Anadyr',\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.NewCaledoniaTime,\n};\n\nexport const AsiaAqtau: TimezoneRegion = {\n  id: TimezoneRegions.AsiaAqtau,\n  name: 'Asia/Aqtau',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.AqtobeTime,\n};\n\nexport const AsiaAqtobe: TimezoneRegion = {\n  id: TimezoneRegions.AsiaAqtobe,\n  name: 'Asia/Aqtobe',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.AqtobeTime,\n};\n\nexport const AsiaAshgabat: TimezoneRegion = {\n  id: TimezoneRegions.AsiaAshgabat,\n  name: 'Asia/Ashgabat',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.TurkmenistanTime,\n};\n\nexport const AsiaBaghdad: TimezoneRegion = {\n  id: TimezoneRegions.AsiaBaghdad,\n  name: 'Asia/Baghdad',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime,\n};\n\nexport const AsiaBahrain: TimezoneRegion = {\n  id: TimezoneRegions.AsiaBahrain,\n  name: 'Asia/Bahrain',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime,\n};\n\nexport const AsiaBaku: TimezoneRegion = {\n  id: TimezoneRegions.AsiaBaku,\n  name: 'Asia/Baku',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.AzerbaijanTime,\n};\n\nexport const AsiaBangkok: TimezoneRegion = {\n  id: TimezoneRegions.AsiaBangkok,\n  name: 'Asia/Bangkok',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.IndochinaTime,\n};\n\nexport const AsiaBarnaul: TimezoneRegion = {\n  id: TimezoneRegions.AsiaBarnaul,\n  name: 'Asia/Barnaul',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.KrasnoyarskTime,\n};\n\nexport const AsiaBeirut: TimezoneRegion = {\n  id: TimezoneRegions.AsiaBeirut,\n  name: 'Asia/Beirut',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const AsiaBishkek: TimezoneRegion = {\n  id: TimezoneRegions.AsiaBishkek,\n  name: 'Asia/Bishkek',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.KyrgyzstanTime,\n};\n\nexport const AsiaBrunei: TimezoneRegion = {\n  id: TimezoneRegions.AsiaBrunei,\n  name: 'Asia/Brunei',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.BruneiTime,\n};\n\nexport const AsiaChita: TimezoneRegion = {\n  id: TimezoneRegions.AsiaChita,\n  name: 'Asia/Chita',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.YakutskTime,\n};\n\nexport const AsiaChoibalsan: TimezoneRegion = {\n  id: TimezoneRegions.AsiaChoibalsan,\n  name: 'Asia/Choibalsan',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.ChoibalsanStandardTime,\n};\n\nexport const AsiaColombo: TimezoneRegion = {\n  id: TimezoneRegions.AsiaColombo,\n  name: 'Asia/Colombo',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.IndianStandardTime,\n};\n\nexport const AsiaDamascus: TimezoneRegion = {\n  id: TimezoneRegions.AsiaDamascus,\n  name: 'Asia/Damascus',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const AsiaDhaka: TimezoneRegion = {\n  id: TimezoneRegions.AsiaDhaka,\n  name: 'Asia/Dhaka',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.BangladeshStandardTime,\n};\n\nexport const AsiaDili: TimezoneRegion = {\n  id: TimezoneRegions.AsiaDili,\n  name: 'Asia/Dili',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.JapanStandardTime,\n};\n\nexport const AsiaDubai: TimezoneRegion = {\n  id: TimezoneRegions.AsiaDubai,\n  name: 'Asia/Dubai',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.GulfStandardTime,\n};\n\nexport const AsiaDushanbe: TimezoneRegion = {\n  id: TimezoneRegions.AsiaDushanbe,\n  name: 'Asia/Dushanbe',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.TajikistanTime,\n};\n\nexport const AsiaFamagusta: TimezoneRegion = {\n  id: TimezoneRegions.AsiaFamagusta,\n  name: 'Asia/Famagusta',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const AsiaGaza: TimezoneRegion = {\n  id: TimezoneRegions.AsiaGaza,\n  name: 'Asia/Gaza',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const AsiaHebron: TimezoneRegion = {\n  id: TimezoneRegions.AsiaHebron,\n  name: 'Asia/Hebron',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const AsiaHoChiMinh: TimezoneRegion = {\n  id: TimezoneRegions.AsiaHoChiMinh,\n  name: 'Asia/Ho_Chi_Minh',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.IndochinaTime,\n};\n\nexport const AsiaHongKong: TimezoneRegion = {\n  id: TimezoneRegions.AsiaHongKong,\n  name: 'Asia/Hong_Kong',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.HongKongTime,\n};\n\nexport const AsiaHovd: TimezoneRegion = {\n  id: TimezoneRegions.AsiaHovd,\n  name: 'Asia/Hovd',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.HovdTime,\n};\n\nexport const AsiaIrkutsk: TimezoneRegion = {\n  id: TimezoneRegions.AsiaIrkutsk,\n  name: 'Asia/Irkutsk',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.IrkutskTime,\n};\n\nexport const AsiaJakarta: TimezoneRegion = {\n  id: TimezoneRegions.AsiaJakarta,\n  name: 'Asia/Jakarta',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.WesternIndonesianTime,\n};\n\nexport const AsiaJayapura: TimezoneRegion = {\n  id: TimezoneRegions.AsiaJayapura,\n  name: 'Asia/Jayapura',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.JapanStandardTime,\n};\n\nexport const AsiaJerusalem: TimezoneRegion = {\n  id: TimezoneRegions.AsiaJerusalem,\n  name: 'Asia/Jerusalem',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const AsiaKabul: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKabul,\n  name: 'Asia/Kabul',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.AfghanistanTime,\n};\n\nexport const AsiaKamchatka: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKamchatka,\n  name: 'Asia/Kamchatka',\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.KamchatkaTime,\n};\n\nexport const AsiaKarachi: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKarachi,\n  name: 'Asia/Karachi',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.PakistanStandardTime,\n};\n\nexport const AsiaKathmandu: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKathmandu,\n  name: 'Asia/Kathmandu',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.NepalTime,\n};\n\nexport const AsiaKhandyga: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKhandyga,\n  name: 'Asia/Khandyga',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.YakutskTime,\n};\n\nexport const AsiaKolkata: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKolkata,\n  name: 'Asia/Kolkata',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.IndianStandardTime,\n};\n\nexport const AsiaKrasnoyarsk: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKrasnoyarsk,\n  name: 'Asia/Krasnoyarsk',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.KrasnoyarskTime,\n};\nexport const AsiaKualaLumpur: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKualaLumpur,\n  name: 'Asia/Kuala_Lumpur',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.MalaysiaStandardTime,\n};\n\nexport const AsiaKuching: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKuching,\n  name: 'Asia/Kuching',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.MalaysiaStandardTime,\n};\n\nexport const AsiaKuwait: TimezoneRegion = {\n  id: TimezoneRegions.AsiaKuwait,\n  name: 'Asia/Kuwait',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime,\n};\n\nexport const AsiaMacau: TimezoneRegion = {\n  id: TimezoneRegions.AsiaMacau,\n  name: 'Asia/Macau',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.ChinaStandardTime,\n};\n\nexport const AsiaMagadan: TimezoneRegion = {\n  id: TimezoneRegions.AsiaMagadan,\n  name: 'Asia/Magadan',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.MagadanTime,\n};\n\nexport const AsiaMakassar: TimezoneRegion = {\n  id: TimezoneRegions.AsiaMakassar,\n  name: 'Asia/Makassar',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.MalaysiaTime,\n};\n\nexport const AsiaManila: TimezoneRegion = {\n  id: TimezoneRegions.AsiaManila,\n  name: 'Asia/Manila',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.PhilippineTime,\n};\n\nexport const AsiaMuscat: TimezoneRegion = {\n  id: TimezoneRegions.AsiaMuscat,\n  name: 'Asia/Muscat',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.GulfStandardTime,\n};\n\nexport const AsiaNovokuznetsk: TimezoneRegion = {\n  id: TimezoneRegions.AsiaNovokuznetsk,\n  name: 'Asia/Novokuznetsk',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.NovosibirskTime,\n};\n\nexport const AsiaNovosibirsk: TimezoneRegion = {\n  id: TimezoneRegions.AsiaNovosibirsk,\n  name: 'Asia/Novosibirsk',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.NovosibirskTime,\n};\n\nexport const AsiaOmsk: TimezoneRegion = {\n  id: TimezoneRegions.AsiaOmsk,\n  name: 'Asia/Omsk',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.OmskTime,\n};\n\nexport const AsiaOral: TimezoneRegion = {\n  id: TimezoneRegions.AsiaOral,\n  name: 'Asia/Oral',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.OralTime,\n};\n\nexport const AsiaPhnomPenh: TimezoneRegion = {\n  id: TimezoneRegions.AsiaPhnomPenh,\n  name: 'Asia/Phnom_Penh',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.IndochinaTime,\n};\n\nexport const AsiaPontianak: TimezoneRegion = {\n  id: TimezoneRegions.AsiaPontianak,\n  name: 'Asia/Pontianak',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.WesternIndonesianTime,\n};\n\nexport const AsiaPyongyang: TimezoneRegion = {\n  id: TimezoneRegions.AsiaPyongyang,\n  name: 'Asia/Pyongyang',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.KoreaStandardTime,\n};\n\nexport const AsiaQatar: TimezoneRegion = {\n  id: TimezoneRegions.AsiaQatar,\n  name: 'Asia/Qatar',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime,\n};\n\nexport const AsiaQyzylorda: TimezoneRegion = {\n  id: TimezoneRegions.AsiaQyzylorda,\n  name: 'Asia/Qyzylorda',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.WestKazakhstanTime,\n};\n\nexport const AsiaRangoon: TimezoneRegion = {\n  id: TimezoneRegions.AsiaRangoon,\n  name: 'Asia/Rangoon',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.MyanmarStandardTime,\n};\n\nexport const AsiaRiyadh: TimezoneRegion = {\n  id: TimezoneRegions.AsiaRiyadh,\n  name: 'Asia/Riyadh',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime,\n};\n\nexport const AsiaSakhalin: TimezoneRegion = {\n  id: TimezoneRegions.AsiaSakhalin,\n  name: 'Asia/Sakhalin',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.SakhalinIslandTime,\n};\n\nexport const AsiaSamarkand: TimezoneRegion = {\n  id: TimezoneRegions.AsiaSamarkand,\n  name: 'Asia/Samarkand',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.UzbekistanTime,\n};\n\nexport const AsiaSeoul: TimezoneRegion = {\n  id: TimezoneRegions.AsiaSeoul,\n  name: 'Asia/Seoul',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.KoreaStandardTime,\n};\n\nexport const AsiaShanghai: TimezoneRegion = {\n  id: TimezoneRegions.AsiaShanghai,\n  name: 'Asia/Shanghai',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.ChinaStandardTime,\n};\n\nexport const AsiaSingapore: TimezoneRegion = {\n  id: TimezoneRegions.AsiaSingapore,\n  name: 'Asia/Singapore',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.SingaporeStandardTime,\n};\n\nexport const AsiaSrednekolymsk: TimezoneRegion = {\n  id: TimezoneRegions.AsiaSrednekolymsk,\n  name: 'Asia/Srednekolymsk',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.SrednekolymskTime,\n};\n\nexport const AsiaTaipei: TimezoneRegion = {\n  id: TimezoneRegions.AsiaTaipei,\n  name: 'Asia/Taipei',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.ChinaStandardTime,\n};\n\nexport const AsiaTashkent: TimezoneRegion = {\n  id: TimezoneRegions.AsiaTashkent,\n  name: 'Asia/Tashkent',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.UzbekistanTime,\n};\n\nexport const AsiaTbilisi: TimezoneRegion = {\n  id: TimezoneRegions.AsiaTbilisi,\n  name: 'Asia/Tbilisi',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.GeorgiaStandardTime,\n};\n\nexport const AsiaTehran: TimezoneRegion = {\n  id: TimezoneRegions.AsiaTehran,\n  name: 'Asia/Tehran',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.IranStandardTime,\n};\n\nexport const AsiaThimphu: TimezoneRegion = {\n  id: TimezoneRegions.AsiaThimphu,\n  name: 'Asia/Thimphu',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.BhutanTime,\n};\n\nexport const AsiaTokyo: TimezoneRegion = {\n  id: TimezoneRegions.AsiaTokyo,\n  name: 'Asia/Tokyo',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.JapanStandardTime,\n};\n\nexport const AsiaTomsk: TimezoneRegion = {\n  id: TimezoneRegions.AsiaTomsk,\n  name: 'Asia/Tomsk',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.KrasnoyarskTime,\n};\n\nexport const AsiaUlaanbaatar: TimezoneRegion = {\n  id: TimezoneRegions.AsiaUlaanbaatar,\n  name: 'Asia/Ulaanbaatar',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.UlaanbaatarStandardTime,\n};\n\nexport const AsiaUrumqi: TimezoneRegion = {\n  id: TimezoneRegions.AsiaUrumqi,\n  name: 'Asia/Urumqi',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.ChinaStandardTime,\n};\n\nexport const AsiaUstNera: TimezoneRegion = {\n  id: TimezoneRegions.AsiaUstNera,\n  name: 'Asia/Ust-Nera',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.VladivostokTime,\n};\n\nexport const AsiaVientiane: TimezoneRegion = {\n  id: TimezoneRegions.AsiaVientiane,\n  name: 'Asia/Vientiane',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.IndochinaTime,\n};\n\nexport const AsiaVladivostok: TimezoneRegion = {\n  id: TimezoneRegions.AsiaVladivostok,\n  name: 'Asia/Vladivostok',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.VladivostokTime,\n};\n\nexport const AsiaYakutsk: TimezoneRegion = {\n  id: TimezoneRegions.AsiaYakutsk,\n  name: 'Asia/Yakutsk',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.YakutskTime,\n};\n\nexport const AsiaYekaterinburg: TimezoneRegion = {\n  id: TimezoneRegions.AsiaYekaterinburg,\n  name: 'Asia/Yekaterinburg',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.YekaterinburgTime,\n};\n\nexport const AsiaYerevan: TimezoneRegion = {\n  id: TimezoneRegions.AsiaYerevan,\n  name: 'Asia/Yerevan',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.ArmeniaTime,\n};\n\nexport const AtlanticAzores: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticAzores,\n  name: 'Atlantic/Azores',\n  offset: TimezoneOffset.UTC_MINUS_1,\n  timezone: Timezones.AzoresStandardTime,\n};\n\nexport const AtlanticBermuda: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticBermuda,\n  name: 'Atlantic/Bermuda',\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime,\n};\n\nexport const AtlanticCanary: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticCanary,\n  name: 'Atlantic/Canary',\n  offset: TimezoneOffset.UTC_MINUS_1,\n  timezone: Timezones.WesternEuropeanTime,\n};\n\nexport const AtlanticCapeVerde: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticCapeVerde,\n  name: 'Atlantic/Cape_Verde',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CapeVerdeTime,\n};\n\nexport const AtlanticFaroe: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticFaroe,\n  name: 'Atlantic/Faroe',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const AtlanticMadeira: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticMadeira,\n  name: 'Atlantic/Madeira',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.WesternEuropeanTime,\n};\n\nexport const AtlanticReykjavik: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticReykjavik,\n  name: 'Atlantic/Reykjavik',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const AtlanticSouthGeorgia: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticSouthGeorgia,\n  name: 'Atlantic/South_Georgia',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime,\n};\n\nexport const AtlanticStHelena: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticStHelena,\n  name: 'Atlantic/St_Helena',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const AtlanticStanley: TimezoneRegion = {\n  id: TimezoneRegions.AtlanticStanley,\n  name: 'Atlantic/Stanley',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.FalklandIslandsTime,\n};\n\nexport const AustraliaAdelaide: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaAdelaide,\n  name: 'Australia/Adelaide',\n  offset: TimezoneOffset.UTC_PLUS_9_30,\n  timezone: Timezones.AustralianCentralStandardTime,\n};\n\nexport const AustraliaBrisbane: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaBrisbane,\n  name: 'Australia/Brisbane',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime,\n};\n\nexport const AustraliaBrokenHill: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaBrokenHill,\n  name: 'Australia/Broken_Hill',\n  offset: TimezoneOffset.UTC_PLUS_9_30,\n  timezone: Timezones.AustralianCentralStandardTime,\n};\n\nexport const AustraliaCanberra: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaCanberra,\n  name: 'Australia/Canberra',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime,\n};\n\nexport const AustraliaCurrie: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaCurrie,\n  name: 'Australia/Currie',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime,\n};\n\nexport const AustraliaDarwin: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaDarwin,\n  name: 'Australia/Darwin',\n  offset: TimezoneOffset.UTC_PLUS_9_30,\n  timezone: Timezones.AustralianCentralStandardTime,\n};\n\nexport const AustraliaEucla: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaEucla,\n  name: 'Australia/Eucla',\n  offset: TimezoneOffset.UTC_PLUS_8_45,\n  timezone: Timezones.AustralianCentralWesternStandardTime,\n};\n\nexport const AustraliaHobart: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaHobart,\n  name: 'Australia/Hobart',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime,\n};\n\nexport const AustraliaLindeman: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaLindeman,\n  name: 'Australia/Lindeman',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime,\n};\n\nexport const AustraliaLordHowe: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaLordHowe,\n  name: 'Australia/Lord_Howe',\n  offset: TimezoneOffset.UTC_PLUS_10_30,\n  timezone: Timezones.LordHoweStandardTime,\n};\n\nexport const AustraliaMelbourne: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaMelbourne,\n  name: 'Australia/Melbourne',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime,\n};\n\nexport const AustraliaPerth: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaPerth,\n  name: 'Australia/Perth',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.AustralianWesternStandardTime,\n};\n\nexport const AustraliaSydney: TimezoneRegion = {\n  id: TimezoneRegions.AustraliaSydney,\n  name: 'Australia/Sydney',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime,\n};\n\nexport const EuropeAmsterdam: TimezoneRegion = {\n  id: TimezoneRegions.EuropeAmsterdam,\n  name: 'Europe/Amsterdam',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeAndorra: TimezoneRegion = {\n  id: TimezoneRegions.EuropeAndorra,\n  name: 'Europe/Andorra',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeAthens: TimezoneRegion = {\n  id: TimezoneRegions.EuropeAthens,\n  name: 'Europe/Athens',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeBelgrade: TimezoneRegion = {\n  id: TimezoneRegions.EuropeBelgrade,\n  name: 'Europe/Belgrade',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeBerlin: TimezoneRegion = {\n  id: TimezoneRegions.EuropeBerlin,\n  name: 'Europe/Berlin',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeBratislava: TimezoneRegion = {\n  id: TimezoneRegions.EuropeBratislava,\n  name: 'Europe/Bratislava',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeBrussels: TimezoneRegion = {\n  id: TimezoneRegions.EuropeBrussels,\n  name: 'Europe/Brussels',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeBucharest: TimezoneRegion = {\n  id: TimezoneRegions.EuropeBucharest,\n  name: 'Europe/Bucharest',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeBudapest: TimezoneRegion = {\n  id: TimezoneRegions.EuropeBudapest,\n  name: 'Europe/Budapest',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeBusingen: TimezoneRegion = {\n  id: TimezoneRegions.EuropeBusingen,\n  name: 'Europe/Busingen',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeChisinau: TimezoneRegion = {\n  id: TimezoneRegions.EuropeChisinau,\n  name: 'Europe/Chisinau',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeCopenhagen: TimezoneRegion = {\n  id: TimezoneRegions.EuropeCopenhagen,\n  name: 'Europe/Copenhagen',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeDublin: TimezoneRegion = {\n  id: TimezoneRegions.EuropeDublin,\n  name: 'Europe/Dublin',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const EuropeGibraltar: TimezoneRegion = {\n  id: TimezoneRegions.EuropeGibraltar,\n  name: 'Europe/Gibraltar',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeGuernsey: TimezoneRegion = {\n  id: TimezoneRegions.EuropeGuernsey,\n  name: 'Europe/Guernsey',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeHelsinki: TimezoneRegion = {\n  id: TimezoneRegions.EuropeHelsinki,\n  name: 'Europe/Helsinki',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeIsleOfMan: TimezoneRegion = {\n  id: TimezoneRegions.EuropeIsleOfMan,\n  name: 'Europe/Isle_of_Man',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const EuropeIstanbul: TimezoneRegion = {\n  id: TimezoneRegions.EuropeIstanbul,\n  name: 'Europe/Istanbul',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeJersey: TimezoneRegion = {\n  id: TimezoneRegions.EuropeJersey,\n  name: 'Europe/Jersey',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeKaliningrad: TimezoneRegion = {\n  id: TimezoneRegions.EuropeKaliningrad,\n  name: 'Europe/Kaliningrad',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeKiev: TimezoneRegion = {\n  id: TimezoneRegions.EuropeKiev,\n  name: 'Europe/Kiev',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeLisbon: TimezoneRegion = {\n  id: TimezoneRegions.EuropeLisbon,\n  name: 'Europe/Lisbon',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const EuropeLjubljana: TimezoneRegion = {\n  id: TimezoneRegions.EuropeLjubljana,\n  name: 'Europe/Ljubljana',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeLondon: TimezoneRegion = {\n  id: TimezoneRegions.EuropeLondon,\n  name: 'Europe/London',\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime,\n};\n\nexport const EuropeLuxembourg: TimezoneRegion = {\n  id: TimezoneRegions.EuropeLuxembourg,\n  name: 'Europe/Luxembourg',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeMadrid: TimezoneRegion = {\n  id: TimezoneRegions.EuropeMadrid,\n  name: 'Europe/Madrid',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeMalta: TimezoneRegion = {\n  id: TimezoneRegions.EuropeMalta,\n  name: 'Europe/Malta',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeMariehamn: TimezoneRegion = {\n  id: TimezoneRegions.EuropeMariehamn,\n  name: 'Europe/Mariehamn',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeMinsk: TimezoneRegion = {\n  id: TimezoneRegions.EuropeMinsk,\n  name: 'Europe/Minsk',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeMonaco: TimezoneRegion = {\n  id: TimezoneRegions.EuropeMonaco,\n  name: 'Europe/Monaco',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeMoscow: TimezoneRegion = {\n  id: TimezoneRegions.EuropeMoscow,\n  name: 'Europe/Moscow',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeOslo: TimezoneRegion = {\n  id: TimezoneRegions.EuropeOslo,\n  name: 'Europe/Oslo',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeParis: TimezoneRegion = {\n  id: TimezoneRegions.EuropeParis,\n  name: 'Europe/Paris',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropePodgorica: TimezoneRegion = {\n  id: TimezoneRegions.EuropePodgorica,\n  name: 'Europe/Podgorica',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropePrague: TimezoneRegion = {\n  id: TimezoneRegions.EuropePrague,\n  name: 'Europe/Prague',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeRiga: TimezoneRegion = {\n  id: TimezoneRegions.EuropeRiga,\n  name: 'Europe/Riga',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeRome: TimezoneRegion = {\n  id: TimezoneRegions.EuropeRome,\n  name: 'Europe/Rome',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeSamara: TimezoneRegion = {\n  id: TimezoneRegions.EuropeSamara,\n  name: 'Europe/Samara',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeSanMarino: TimezoneRegion = {\n  id: TimezoneRegions.EuropeSanMarino,\n  name: 'Europe/San_Marino',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeSarajevo: TimezoneRegion = {\n  id: TimezoneRegions.EuropeSarajevo,\n  name: 'Europe/Sarajevo',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeSimferopol: TimezoneRegion = {\n  id: TimezoneRegions.EuropeSimferopol,\n  name: 'Europe/Simferopol',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeSkopje: TimezoneRegion = {\n  id: TimezoneRegions.EuropeSkopje,\n  name: 'Europe/Skopje',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeSofia: TimezoneRegion = {\n  id: TimezoneRegions.EuropeSofia,\n  name: 'Europe/Sofia',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeStockholm: TimezoneRegion = {\n  id: TimezoneRegions.EuropeStockholm,\n  name: 'Europe/Stockholm',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeTallinn: TimezoneRegion = {\n  id: TimezoneRegions.EuropeTallinn,\n  name: 'Europe/Tallinn',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeTirane: TimezoneRegion = {\n  id: TimezoneRegions.EuropeTirane,\n  name: 'Europe/Tirane',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeUzhgorod: TimezoneRegion = {\n  id: TimezoneRegions.EuropeUzhgorod,\n  name: 'Europe/Uzhgorod',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeVaduz: TimezoneRegion = {\n  id: TimezoneRegions.EuropeVaduz,\n  name: 'Europe/Vaduz',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeVatican: TimezoneRegion = {\n  id: TimezoneRegions.EuropeVatican,\n  name: 'Europe/Vatican',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeVienna: TimezoneRegion = {\n  id: TimezoneRegions.EuropeVienna,\n  name: 'Europe/Vienna',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeVilnius: TimezoneRegion = {\n  id: TimezoneRegions.EuropeVilnius,\n  name: 'Europe/Vilnius',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeVolgograd: TimezoneRegion = {\n  id: TimezoneRegions.EuropeVolgograd,\n  name: 'Europe/Volgograd',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeWarsaw: TimezoneRegion = {\n  id: TimezoneRegions.EuropeWarsaw,\n  name: 'Europe/Warsaw',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeZagreb: TimezoneRegion = {\n  id: TimezoneRegions.EuropeZagreb,\n  name: 'Europe/Zagreb',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const EuropeZaporozhye: TimezoneRegion = {\n  id: TimezoneRegions.EuropeZaporozhye,\n  name: 'Europe/Zaporozhye',\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime,\n};\n\nexport const EuropeZurich: TimezoneRegion = {\n  id: TimezoneRegions.EuropeZurich,\n  name: 'Europe/Zurich',\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime,\n};\n\nexport const IndianAntananarivo: TimezoneRegion = {\n  id: TimezoneRegions.IndianAntananarivo,\n  name: 'Indian/Antananarivo',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const IndianChagos: TimezoneRegion = {\n  id: TimezoneRegions.IndianChagos,\n  name: 'Indian/Chagos',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.IndianOceanTime,\n};\n\nexport const IndianChristmas: TimezoneRegion = {\n  id: TimezoneRegions.IndianChristmas,\n  name: 'Indian/Christmas',\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.ChristmasIslandTime,\n};\n\nexport const IndianCocos: TimezoneRegion = {\n  id: TimezoneRegions.IndianCocos,\n  name: 'Indian/Cocos',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.CocosIslandsTime,\n};\n\nexport const IndianComoro: TimezoneRegion = {\n  id: TimezoneRegions.IndianComoro,\n  name: 'Indian/Comoro',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const IndianKerguelen: TimezoneRegion = {\n  id: TimezoneRegions.IndianKerguelen,\n  name: 'Indian/Kerguelen',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.FrenchSouthernAndAntarcticTime,\n};\n\nexport const IndianMahe: TimezoneRegion = {\n  id: TimezoneRegions.IndianMahe,\n  name: 'Indian/Mahe',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.SeychellesTime,\n};\n\nexport const IndianMaldives: TimezoneRegion = {\n  id: TimezoneRegions.IndianMaldives,\n  name: 'Indian/Maldives',\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.MaldivesTime,\n};\n\nexport const IndianMauritius: TimezoneRegion = {\n  id: TimezoneRegions.IndianMauritius,\n  name: 'Indian/Mauritius',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.MauritiusTime,\n};\n\nexport const IndianMayotte: TimezoneRegion = {\n  id: TimezoneRegions.IndianMayotte,\n  name: 'Indian/Mayotte',\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime,\n};\n\nexport const IndianReunion: TimezoneRegion = {\n  id: TimezoneRegions.IndianReunion,\n  name: 'Indian/Reunion',\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.ReunionTime,\n};\n\nexport const PacificApia: TimezoneRegion = {\n  id: TimezoneRegions.PacificApia,\n  name: 'Pacific/Apia',\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.SamoaStandardTime,\n};\n\nexport const PacificAuckland: TimezoneRegion = {\n  id: TimezoneRegions.PacificAuckland,\n  name: 'Pacific/Auckland',\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.NewZealandStandardTime,\n};\n\nexport const PacificChatham: TimezoneRegion = {\n  id: TimezoneRegions.PacificChatham,\n  name: 'Pacific/Chatham',\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.ChathamStandardTime,\n};\n\nexport const PacificEaster: TimezoneRegion = {\n  id: TimezoneRegions.PacificEaster,\n  name: 'Pacific/Easter',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.EasterIslandStandardTime,\n};\n\nexport const PacificEfate: TimezoneRegion = {\n  id: TimezoneRegions.PacificEfate,\n  name: 'Pacific/Efate',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.VanuatuTime,\n};\n\nexport const PacificEnderbury: TimezoneRegion = {\n  id: TimezoneRegions.PacificEnderbury,\n  name: 'Pacific/Enderbury',\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.TongaTime,\n};\n\nexport const PacificFakaofo: TimezoneRegion = {\n  id: TimezoneRegions.PacificFakaofo,\n  name: 'Pacific/Fakaofo',\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.TongaTime,\n};\n\nexport const PacificFiji: TimezoneRegion = {\n  id: TimezoneRegions.PacificFiji,\n  name: 'Pacific/Fiji',\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.FijiTime,\n};\n\nexport const PacificFunafuti: TimezoneRegion = {\n  id: TimezoneRegions.PacificFunafuti,\n  name: 'Pacific/Funafuti',\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.TuvaluTime,\n};\n\nexport const PacificGalapagos: TimezoneRegion = {\n  id: TimezoneRegions.PacificGalapagos,\n  name: 'Pacific/Galapagos',\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.GalapagosTime,\n};\n\nexport const PacificGambier: TimezoneRegion = {\n  id: TimezoneRegions.PacificGambier,\n  name: 'Pacific/Gambier',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.GambierIslandTime,\n};\n\nexport const PacificGuadalcanal: TimezoneRegion = {\n  id: TimezoneRegions.PacificGuadalcanal,\n  name: 'Pacific/Guadalcanal',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.SolomonIslandsTime,\n};\n\nexport const PacificGuam: TimezoneRegion = {\n  id: TimezoneRegions.PacificGuam,\n  name: 'Pacific/Guam',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.ChamorroStandardTime,\n};\n\nexport const PacificHonolulu: TimezoneRegion = {\n  id: TimezoneRegions.PacificHonolulu,\n  name: 'Pacific/Honolulu',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.HawaiiAleutianStandardTime,\n};\n\nexport const PacificJohnston: TimezoneRegion = {\n  id: TimezoneRegions.PacificJohnston,\n  name: 'Pacific/Johnston',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.HawaiiAleutianStandardTime,\n};\n\nexport const PacificKiritimati: TimezoneRegion = {\n  id: TimezoneRegions.PacificKiritimati,\n  name: 'Pacific/Kiritimati',\n  offset: TimezoneOffset.UTC_PLUS_14,\n  timezone: Timezones.LineIslandsTime,\n};\n\nexport const PacificKosrae: TimezoneRegion = {\n  id: TimezoneRegions.PacificKosrae,\n  name: 'Pacific/Kosrae',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.KosraeTime,\n};\n\nexport const PacificKwajalein: TimezoneRegion = {\n  id: TimezoneRegions.PacificKwajalein,\n  name: 'Pacific/Kwajalein',\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.MarshallIslandsTime,\n};\n\nexport const PacificMajuro: TimezoneRegion = {\n  id: TimezoneRegions.PacificMajuro,\n  name: 'Pacific/Majuro',\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.MarshallIslandsTime,\n};\n\nexport const PacificMarquesas: TimezoneRegion = {\n  id: TimezoneRegions.PacificMarquesas,\n  name: 'Pacific/Marquesas',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.MarquesasIslandsTime,\n};\n\nexport const PacificMidway: TimezoneRegion = {\n  id: TimezoneRegions.PacificMidway,\n  name: 'Pacific/Midway',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.SamoaStandardTime,\n};\n\nexport const PacificNauru: TimezoneRegion = {\n  id: TimezoneRegions.PacificNauru,\n  name: 'Pacific/Nauru',\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.NauruTime,\n};\n\nexport const PacificNiue: TimezoneRegion = {\n  id: TimezoneRegions.PacificNiue,\n  name: 'Pacific/Niue',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.NiueTime,\n};\n\nexport const PacificNorfolk: TimezoneRegion = {\n  id: TimezoneRegions.PacificNorfolk,\n  name: 'Pacific/Norfolk',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.NorfolkIslandTime,\n};\n\nexport const PacificNoumea: TimezoneRegion = {\n  id: TimezoneRegions.PacificNoumea,\n  name: 'Pacific/Noumea',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.NewCaledoniaTime,\n};\n\nexport const PacificPagoPago: TimezoneRegion = {\n  id: TimezoneRegions.PacificPagoPago,\n  name: 'Pacific/Pago_Pago',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.SamoaStandardTime,\n};\n\nexport const PacificPalau: TimezoneRegion = {\n  id: TimezoneRegions.PacificPalau,\n  name: 'Pacific/Palau',\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.PalauTime,\n};\n\nexport const PacificPitcairn: TimezoneRegion = {\n  id: TimezoneRegions.PacificPitcairn,\n  name: 'Pacific/Pitcairn',\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.PitcairnTime,\n};\n\nexport const PacificPonape: TimezoneRegion = {\n  id: TimezoneRegions.PacificPonape,\n  name: 'Pacific/Ponape',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.PohnpeiStandardTime,\n};\n\nexport const PacificPortMoresby: TimezoneRegion = {\n  id: TimezoneRegions.PacificPortMoresby,\n  name: 'Pacific/Port_Moresby',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.PapuaNewGuineaTime,\n};\n\nexport const PacificRarotonga: TimezoneRegion = {\n  id: TimezoneRegions.PacificRarotonga,\n  name: 'Pacific/Rarotonga',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.CookIslandTime,\n};\n\nexport const PacificSaipan: TimezoneRegion = {\n  id: TimezoneRegions.PacificSaipan,\n  name: 'Pacific/Saipan',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.ChamorroStandardTime,\n};\n\nexport const PacificTahiti: TimezoneRegion = {\n  id: TimezoneRegions.PacificTahiti,\n  name: 'Pacific/Tahiti',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.TahitiTime,\n};\n\nexport const PacificTarawa: TimezoneRegion = {\n  id: TimezoneRegions.PacificTarawa,\n  name: 'Pacific/Tarawa',\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.GilbertIslandTime,\n};\n\nexport const PacificTongatapu: TimezoneRegion = {\n  id: TimezoneRegions.PacificTongatapu,\n  name: 'Pacific/Tongatapu',\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.TongaTime,\n};\n\nexport const PacificChuuk: TimezoneRegion = {\n  id: TimezoneRegions.PacificChuuk,\n  name: 'Pacific/Chuuk',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.ChuukTime,\n};\n\nexport const PacificPohnpei: TimezoneRegion = {\n  id: TimezoneRegions.PacificPohnpei,\n  name: 'Pacific/Pohnpei',\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.PohnpeiStandardTime,\n};\n\nexport const PacificYap: TimezoneRegion = {\n  id: TimezoneRegions.PacificYap,\n  name: 'Pacific/Yap',\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.ChuukTime,\n};\n", "import { DateTime } from 'luxon';\n\nexport enum Analytics {\n  Business = 'business',\n  Engineering = 'engineering',\n  Exception = 'exception',\n  LogMessage = 'log-message',\n  Marketing = 'marketing',\n  PageLeave = 'page-leave',\n  PageView = 'page-view',\n  Product = 'product',\n  QualityManagement = 'quality-management',\n  UserAccess = 'user-access',\n  UserLogin = 'user-login',\n  UserLogout = 'user-logout',\n  UserSignup = 'user-signup',\n  UserPreferencesChanged = 'user-preferences-changed',\n  WebsiteVisit = 'website-visit',\n}\n\nexport type AnalyticsEvent<T = {}> = {\n  created: DateTime;\n  data?: Record<string, unknown>;\n  id?: string;\n  message?: string;\n  name: Analytics;\n} & T;\n", "import { UserAccessDevice } from '../../user/access';\nimport { Analytics, AnalyticsEvent } from '..';\n\nexport enum PageLeaveMethod {\n  CloseTab = 'close-tab',\n  ExternalLink = 'external-link',\n  NavigateAway = 'navigate-away',\n  Unknown = 'unknown',\n}\n\nexport type PageViewEvent = AnalyticsEvent<{\n  data: {\n    device: UserAccessDevice;\n    referrer_url?: string;\n  };\n  description: 'Occurs when a person views a page in a Website or application.';\n  id: string;\n  name: Analytics.PageView;\n}>;\n\nexport type PageLeaveEvent = AnalyticsEvent<{\n  data: {\n    device: UserAccessDevice;\n    leave_method: PageLeaveMethod;\n  };\n  description: 'Occurs when a person leaves a page.';\n  id: string;\n  name: Analytics.PageLeave;\n}>;\n\nexport type WebsiteVisitEvent = AnalyticsEvent<{\n  device: UserAccessDevice;\n  description: 'Occurs when a person a website.';\n  id: string;\n  name: Analytics.WebsiteVisit;\n}>;\n", "export enum BuildFormat {\n  CJS = 'cjs',\n  ESM = 'esm',\n  IIFE = 'iife',\n  UMD = 'umd',\n}\n\nexport interface BundleOptions {\n  readonly css?: boolean;\n  readonly exclude?: readonly string[];\n}\n\nexport enum BuildTarget {\n  ES5 = 'es5',\n  ES6 = 'es6',\n  ES2015 = 'es2015',\n  ES2016 = 'es2016',\n  ES2017 = 'es2017',\n  ES2018 = 'es2018',\n  ES2019 = 'es2019',\n  ES2020 = 'es2020',\n  ES2021 = 'es2021',\n  ES2022 = 'es2022',\n  ESNext = 'esnext',\n  Latest = 'latest',\n}\n\nexport enum BuildTool {\n  ESBuild = 'esbuild',\n  Vite = 'vite',\n}\n\nexport enum BuildPlatform {\n  Browser = 'browser',\n  Node = 'node',\n}\n\nexport type BuildOptions = {\n  readonly assets?: {\n    readonly directory?: string;\n    readonly public?: boolean;\n  };\n  readonly bundle?: boolean | BundleOptions;\n  readonly configPath?: string;\n  readonly format?: BuildFormat;\n  readonly formats?: readonly BuildFormat[];\n  readonly input?: {\n    readonly directory: string;\n    readonly file?: string;\n    readonly files?: readonly string[];\n  };\n  readonly library?:\n    | boolean\n    | {\n        readonly name: string;\n      };\n  readonly manifest?: boolean;\n  readonly minify?: boolean;\n  readonly output?: {\n    readonly clean?: boolean;\n    readonly directory: string;\n    readonly file?: string;\n  };\n  readonly platform?: BuildPlatform;\n  readonly rootDir?: string;\n  readonly sourcemap?: boolean;\n  readonly splitting?: boolean;\n  readonly target?: BuildTarget;\n  readonly tool: BuildTool;\n  readonly treeShaking?: boolean;\n  readonly types?:\n    | boolean\n    | {\n        readonly configPath?: string;\n      };\n  readonly webApp?: {\n    readonly react?: boolean;\n    readonly ssr?: boolean;\n  };\n};\n\nexport interface ESBuildOptions extends Omit<BuildOptions, 'formats' | 'tool'> {\n  readonly format?: BuildFormat.CJS | BuildFormat.ESM | BuildFormat.IIFE;\n}\n\nexport interface ViteBuildOptions\n  extends Omit<BuildOptions, 'format' | 'splitting' | 'tool' | 'treeShaking'> {\n  readonly format?:\n    | BuildFormat.CJS\n    | BuildFormat.ESM\n    | BuildFormat.IIFE\n    | BuildFormat.UMD;\n  readonly optimize?: {\n    readonly exclude?: string[];\n    readonly include?: string[];\n  };\n}\n", "import { CurrencyCode } from '../../../i18n/currency';\nimport { Person } from '../../../people/person';\n\nexport enum DataPointMetric {\n  AccountBalance = 'AccountBalance',\n  UserAssets = 'UserAssets',\n  UserCreditCardDebt = 'UserCreditCardDebt',\n  UserCreditLimit = 'UserCreditLimit',\n  UserCreditUtilization = 'UserCreditUtilization',\n  UserDebt = 'UserDebt',\n  UserInvestments = 'UserInvestments',\n  UserRetirement = 'UserRetirement',\n  UserSavings = 'UserSavings',\n}\n\nexport type DataPoint = {\n  id: string;\n  date: Date;\n  currency_code?: CurrencyCode;\n  metric: DataPointMetric;\n  value: number;\n  person_id: Person['id'];\n};\n", "export enum DefaultValue {\n  DateTime = 'date_time',\n  True = 'true',\n  False = 'false',\n  UniqueId = 'unique_id',\n}\n", "import { DateTime } from 'luxon';\n\nimport { ModelField } from './field';\nimport { Relationship } from './relationship';\n\nexport enum ModelType {\n  DomainModel = 'domain_entity',\n  GenericModel = 'generic_entity',\n}\n\nexport type ModelProps<T = {}> = {\n  created?: DateTime;\n  description?: string;\n  fields: Record<string, ModelField>;\n  id?: string; // This won't be optional when entities are stored in a database instead of a file.\n  name: string;\n  relationships?: Relationship;\n  updated?: DateTime;\n} & T;\n\nexport class Model implements ModelProps {\n  created?: DateTime;\n  description?: string;\n  fields: Record<string, ModelField>;\n  id?: string; // This won't be optional when entities are stored in a database instead of a file.\n  name: string;\n  relationships?: Relationship;\n  updated?: DateTime;\n\n  constructor(props: ModelProps) {\n    const { created, description, fields, name, id, relationships, updated } =\n      props;\n\n    this.created = created;\n    this.description = description;\n    this.fields = fields;\n    this.id = id;\n    this.name = name;\n    this.relationships = relationships;\n    this.updated = updated;\n  }\n}\n", "import { CurrencyCode } from '../../../i18n/currency';\nimport { CountryCode } from '../../../i18n/locale/country';\nimport { ISO8601String } from '../../../i18n/date';\nimport { LanguageCode } from '../../../i18n/language';\nimport { TimezoneRegions } from '../../../i18n/time/region';\n\nexport type MenuItem = {\n  label: string;\n  value: string | number | boolean;\n};\n\nexport type AirportCode = string;\nexport type BankIDCode = string;\nexport type BitcoinAddress = string;\nexport type Boolean = boolean;\nexport type City = string;\nexport type Color = string;\nexport type CreditCard = string;\nexport type CurrencyAmount = number;\nexport type DataURI = string;\nexport type Date = ISO8601String;\nexport type DateRange = ISO8601String[];\nexport type DateTime = ISO8601String;\nexport type DayOfMonth = string;\nexport type DomainName = string;\nexport type EmailAddress = string;\nexport type EthereumAddress = string;\nexport type EAN = string;\nexport type EIN = string;\nexport type Float = number;\nexport type GeographicCoordinate = number;\nexport type GeographicCoordinates = number[];\nexport type GitRepositoryURL = string;\nexport type HSLColor = string;\nexport type HexColor = string;\nexport type Hexadecimal = string;\nexport type IBAN = string;\nexport type IMEI = number;\nexport type IPAddress = string;\nexport type IPAddressRange = string[];\nexport type ISBN = string;\nexport type ISIN = string;\nexport type ISMN = string;\nexport type ISSN = string;\nexport type ISO8601 = string;\nexport type ISO31661Alpha2 = string;\nexport type ISO31661Alpha3 = string;\nexport type ISO4217 = CurrencyCode;\nexport type Image = {\n  description?: string;\n  format?: string;\n  path?: string;\n  url?: string;\n};\nexport type Integer = number;\nexport type JSONObject = Record<string, unknown>;\nexport type LicensePlateNumber = string;\nexport type LongText = string;\nexport type MD5 = string;\nexport type MACAddress = string;\nexport type MagnetURI = string;\nexport type Markdown = string;\nexport type Menu = {\n  defaultValue?: MenuItem['value'];\n  items: MenuItem[];\n};\nexport type MimeType = string;\nexport type Month = string;\nexport type Number = number;\nexport type Password = string;\nexport type PassportNumber = string;\nexport type Percent = number;\nexport type PhoneNumber = string;\nexport type Port = number;\nexport type PostalCode = string;\nexport type Province = string;\nexport type RFC3339 = string;\nexport type RGBColor = string;\nexport type SemanticVersion = string;\nexport type SSN = number;\nexport type State = string;\nexport type StreetAddress = string;\nexport type String = string;\nexport type Tags = MenuItem[];\nexport type TaxIDNumber = string;\nexport type Time = string;\nexport type TimeRange = string[];\nexport type TimeOfDay = string;\nexport type Timezone = TimezoneRegions;\nexport type URL = string;\nexport type URLPath = string;\nexport type UUID = string;\nexport type VATIDNumber = string;\nexport type VerificationCode = string;\nexport type Video = {\n  description?: string;\n  format?: string;\n  url?: string;\n  path?: string;\n};\nexport type Weekday = string;\nexport type Year = number;\n\nexport type Primitive =\n  | AirportCode\n  | BankIDCode\n  | BitcoinAddress\n  | boolean\n  | City\n  | Color\n  | CountryCode\n  | CreditCard\n  | CurrencyAmount\n  | CurrencyCode\n  | DataURI\n  | Date\n  | DateRange\n  | DateTime\n  | DayOfMonth\n  | DomainName\n  | EmailAddress\n  | EthereumAddress\n  | EAN\n  | EIN\n  | Float\n  | GeographicCoordinate\n  | GeographicCoordinates\n  | GitRepositoryURL\n  | HSLColor\n  | HexColor\n  | Hexadecimal\n  | IBAN\n  | IMEI\n  | IPAddress\n  | IPAddressRange\n  | ISBN\n  | ISIN\n  | ISMN\n  | ISSN\n  | ISO8601\n  | ISO31661Alpha2\n  | ISO31661Alpha3\n  | ISO4217\n  | Image\n  | Integer\n  | JSONObject\n  | LanguageCode\n  | LicensePlateNumber\n  | LongText\n  | MD5\n  | Markdown\n  | Menu\n  | number\n  | MACAddress\n  | MagnetURI\n  | MimeType\n  | Month\n  | Password\n  | PassportNumber\n  | Percent\n  | PhoneNumber\n  | Port\n  | PostalCode\n  | Province\n  | RFC3339\n  | RGBColor\n  | SemanticVersion\n  | SSN\n  | State\n  | StreetAddress\n  | string\n  | Tags\n  | TaxIDNumber\n  | Time\n  | TimeRange\n  | TimeOfDay\n  | Timezone\n  | URL\n  | URLPath\n  | UUID\n  | VATIDNumber\n  | Video\n  | VerificationCode\n  | Weekday\n  | Year;\n\n// export enum Primitives {\n//   AirportCode = AirportCode,\n//   BankIDCode = BankIDCode,\n//   BitcoinAddress = BitcoinAddress,\n//   Boolean = Boolean,\n//   City = City,\n//   Color = Color,\n//   CountryCode = CountryCode,\n//   CreditCard = CreditCard,\n//   CurrencyAmount = CurrencyAmount,\n//   CurrencyCode =CurrencyCode,\n//   DataURI = 'data-uri',\n//   Date = 'date',\n//   DateRange = 'date-range',\n//   DateTime = 'date-time',\n//   DayOfMonth = 'day-of-month',\n//   DomainName = 'domain-name',\n//   EmailAddress = 'email-address',\n//   EthereumAddress = 'ethereum-address',\n//   EAN = 'european-article-number',\n//   EIN = 'employer-identification-number',\n//   Float = 'float',\n//   GeographicCoordinate = 'geographic-coordinate',\n//   GeographicCoordinates = 'geographic-coordinates',\n//   GitRepositoryURL = 'git-repository-url',\n//   HSLColor = 'hsl-color',\n//   HexColor = 'hex-color',\n//   Hexadecimal = 'hexadecimal',\n//   IBAN = 'international-bank-account-number',\n//   IMEI = 'international-mobile-equipment-identifier',\n//   IPAddress = 'ip-address',\n//   IPAddressRange = 'ip-address-range',\n//   ISBN = 'international-standard-book-number',\n//   ISIN = 'international-stock-number',\n//   ISMN = 'international-standard-music-number',\n//   ISSN = 'international-standard-serial-number',\n//   ISO8601 = 'iso-8601',\n//   ISO31661Alpha2 = 'iso-31661-alpha-2',\n//   ISO31661Alpha3 = 'iso-31661-alpha-3',\n//   ISO4217 = 'iso-4217',\n//   Image = 'image',\n//   Integer = 'integer',\n//   JSON = 'json',\n//   LanguageCode = 'language-code',\n//   LicensePlateNumber = 'license-plate-number',\n//   LongText = 'long-text',\n//   MD5 = 'md5',\n//   Markdown = 'markdown',\n//   Menu = 'menu',\n//   Number = 'number',\n//   MACAddress = 'mac-address',\n//   MagnetURI = 'magnet-uri',\n//   MimeType = 'mime-type',\n//   Month = 'month',\n//   Password = 'password',\n//   PassportNumber = 'passport-number',\n//   Percent = 'percent',\n//   PhoneNumber = 'phone-number',\n//   Port = 'port',\n//   PostalCode = 'postal-code',\n//   Province = 'province',\n//   RFC3339 = 'rfc-3339',\n//   RGBColor = 'rgb-color',\n//   SemanticVersion = 'semantic-version',\n//   SSN = 'social-security-number',\n//   State = 'state',\n//   StreetAddress = 'street-address',\n//   String = 'string',\n//   Tags = 'tags',\n//   TaxIDNumber = 'tax-id-number',\n//   Time = 'time',\n//   TimeOfDay = 'time-of-day',\n//   TimeRange = 'time-range',\n//   TimezoneRegion = 'timezone-region',\n//   URL = 'url',\n//   URLPath = 'url-path',\n//   UUID = 'uuid',\n//   VATIDNumber = 'value-added-tax-id-number',\n//   VerificationCode = 'verification-code',\n//   Video = 'video',\n//   Weekday = 'weekday',\n//   Year = 'year',\n// }\n\nexport enum Primitives {\n  AirportCode = 'airport-code',\n  BankIDCode = 'bank-id-code',\n  BitcoinAddress = 'bitcoin-address',\n  Boolean = 'boolean',\n  City = 'city',\n  Color = 'color',\n  CountryCode = 'country-code',\n  CreditCard = 'credit-card',\n  CurrencyAmount = 'currency-amount',\n  CurrencyCode = 'currency-code',\n  DataURI = 'data-uri',\n  Date = 'date',\n  DateRange = 'date-range',\n  DateTime = 'date-time',\n  DayOfMonth = 'day-of-month',\n  DomainName = 'domain-name',\n  EmailAddress = 'email-address',\n  EthereumAddress = 'ethereum-address',\n  EAN = 'european-article-number',\n  EIN = 'employer-identification-number',\n  Float = 'float',\n  GeographicCoordinate = 'geographic-coordinate',\n  GeographicCoordinates = 'geographic-coordinates',\n  GitRepositoryURL = 'git-repository-url',\n  HSLColor = 'hsl-color',\n  HexColor = 'hex-color',\n  Hexadecimal = 'hexadecimal',\n  IBAN = 'international-bank-account-number',\n  IMEI = 'international-mobile-equipment-identifier',\n  IPAddress = 'ip-address',\n  IPAddressRange = 'ip-address-range',\n  ISBN = 'international-standard-book-number',\n  ISIN = 'international-stock-number',\n  ISMN = 'international-standard-music-number',\n  ISSN = 'international-standard-serial-number',\n  ISO8601 = 'iso-8601',\n  ISO31661Alpha2 = 'iso-31661-alpha-2',\n  ISO31661Alpha3 = 'iso-31661-alpha-3',\n  ISO4217 = 'iso-4217',\n  Image = 'image',\n  Integer = 'integer',\n  JSON = 'json',\n  LanguageCode = 'language-code',\n  LicensePlateNumber = 'license-plate-number',\n  LongText = 'long-text',\n  MD5 = 'md5',\n  Markdown = 'markdown',\n  Menu = 'menu',\n  Number = 'number',\n  MACAddress = 'mac-address',\n  MagnetURI = 'magnet-uri',\n  MimeType = 'mime-type',\n  Month = 'month',\n  Password = 'password',\n  PassportNumber = 'passport-number',\n  Percent = 'percent',\n  PhoneNumber = 'phone-number',\n  Port = 'port',\n  PostalCode = 'postal-code',\n  Province = 'province',\n  RFC3339 = 'rfc-3339',\n  RGBColor = 'rgb-color',\n  SemanticVersion = 'semantic-version',\n  SSN = 'social-security-number',\n  State = 'state',\n  StreetAddress = 'street-address',\n  String = 'string',\n  Tags = 'tags',\n  TaxIDNumber = 'tax-id-number',\n  Time = 'time',\n  TimeOfDay = 'time-of-day',\n  TimeRange = 'time-range',\n  TimezoneRegion = 'timezone-region',\n  URL = 'url',\n  URLPath = 'url-path',\n  UUID = 'uuid',\n  VATIDNumber = 'value-added-tax-id-number',\n  VerificationCode = 'verification-code',\n  Video = 'video',\n  Weekday = 'weekday',\n  Year = 'year',\n}\n", "import { InfrastructureOptions } from './infrastructure';\n\nexport enum DeploymentStrategy {\n  BlueGreen = 'blue-green',\n  Canary = 'canary',\n  Rolling = 'rolling',\n}\n\nexport type Deployment = {\n  readonly infrastructure?: InfrastructureOptions;\n  readonly strategy?: DeploymentStrategy;\n};\n\n// export type Deployment = {\n//   readonly id: string;\n//   readonly status: DeploymentStatus;\n//   readonly target: DeploymentTarget;\n//   readonly ApplicationId: Application['id'];\n//   readonly EnvironmentId: Environment['id'];\n//   readonly CreatedDate: DateTime;\n//   readonly PipelineWorkflowId: PipelineWorkflow['id'];\n// };\n", "import { Deployment } from './deployment';\nimport { DNSConfig } from './infrastructure';\n\nexport enum Environments {\n  Development = 'development',\n  QA = 'qa',\n  Preview = 'preview',\n  Production = 'production',\n}\n\nexport enum EnvironmentType {\n  Development = 'Development',\n  NonProduction = 'NonProduction',\n  Production = 'Production',\n}\n\nexport type Environment = DNSConfig & {\n  readonly id: string;\n  readonly type: EnvironmentType;\n  readonly name: string;\n  readonly description: string;\n};\n\nexport type RemoteEnvironment = Environment & {\n  readonly deployment?: Deployment;\n};\n\nexport type DevelopmentEnvironment = Environment;\n\nexport type PreviewEnvironment = RemoteEnvironment & {\n  readonly branches?: {\n    readonly [key: string]: RemoteEnvironment & {\n      readonly ssr?: boolean;\n    };\n  };\n};\n\nexport type ProductionEnvironment = RemoteEnvironment;\n\nexport type QAEnvironment = RemoteEnvironment & {\n  readonly e2e?: boolean;\n  readonly integration?: boolean;\n  readonly lint?: boolean;\n  readonly unit?: boolean;\n};\n\nexport interface EnvironmentOptions {\n  readonly development?: DevelopmentEnvironment;\n  readonly preview?: PreviewEnvironment;\n  readonly qa?: QAEnvironment;\n  readonly production?: ProductionEnvironment;\n}\n", "export enum CloudProviders {\n  AWS = 'aws',\n}\n\nexport enum InfrastuctureClass {\n  Smallest = 'smallest',\n  Small = 'small',\n  Medium = 'medium',\n  Large = 'large',\n  Largest = 'largest',\n}\n\nexport type DNSConfig = {\n  readonly https?: boolean;\n  readonly host?: string;\n  readonly port?: string;\n  readonly path?: string;\n};\n\nexport type InfrastructureOptions = {\n  readonly class?: InfrastuctureClass;\n  readonly dns?: DNSConfig;\n  readonly provider?: CloudProviders;\n};\n", "export enum OnboardingStatus {\n  Completed = 'completed',\n  Started = 'started',\n  Uncompleted = 'uncompleted',\n}\n\nexport type OnboardingStep = {\n  description: string;\n  id: string;\n  guide_id: OnboardingGuide;\n  name: string;\n};\n\nexport type OnboardingGuide = {\n  id: string;\n  name: string;\n  description: string;\n  steps: OnboardingStep['id'][];\n};\n", "export enum PipelineStatus {\n  Finished = 'Finished',\n  Queued = 'Queued',\n  Running = 'Running',\n  Started = 'Started',\n}\n\nexport enum PipelineWorkflowStatus {\n  Canceled = 'Canceled',\n  Completed = 'Completed',\n  Failed = 'Failed',\n  Running = 'Running',\n  Queued = 'Queued',\n  Waiting = 'Waiting',\n}\n\nexport enum PipelineStepStatus {\n  Canceled = 'Canceled',\n  Completed = 'Completed',\n  Failed = 'Failed',\n  Running = 'Running',\n  Queued = 'Queued',\n  Waiting = 'Waiting',\n}\n\nexport type PipelineStepOutputLine = {\n  readonly id: string;\n  readonly text: string;\n  readonly PipelineStepOutputId: PipelineStepOutput['id'];\n};\n\nexport type PipelineStepOutput = {\n  readonly id: string;\n  readonly PipeWorkflowStepId: PipelineWorkflowStep['id'];\n};\n\nexport type PipelineWorkflowStep = {\n  readonly enabled: boolean;\n  readonly id: string;\n  readonly status: PipelineStepStatus;\n  readonly PipeWorkflowId: PipelineWorkflow['id'];\n};\n\nexport type PipelineWorkflow = {\n  readonly description: string;\n  readonly enabled: boolean;\n  readonly id: string;\n  readonly name: string;\n  readonly ActivePipelineId: Pipeline['id'];\n};\n\nexport type Pipeline = {\n  readonly id: string;\n  readonly name: string;\n  readonly description: string;\n  readonly status: PipelineStatus;\n};\n", "export enum Platform {\n  Desktop = 'desktop',\n  Mobile = 'mobile',\n  NodeJS = 'nodejs',\n  TV = 'tv',\n  Watch = 'watch',\n  Web = 'web',\n}\n", "export enum ProblemSeverity {\n  Low = 'low',\n  Medium = 'medium',\n  High = 'high',\n  Emergency = 'emergency',\n}\n\nexport enum ProblemType {\n  Bug = 'bug',\n}\n\nexport interface Problem {\n  readonly severity: ProblemSeverity;\n  readonly type: ProblemType;\n}\n", "import { BuildOptions } from './build';\nimport { ChangesetOptions } from './changeset';\nimport { EnvironmentOptions } from './environment';\nimport { ReleaseOptions } from './release';\nimport { RunOptions } from './run';\nimport { TestOptions } from './test';\n\nexport enum ProjectType {\n  DesktopApplication = 'desktop-application',\n  MobileApplication = 'mobile-application',\n  WebApplication = 'web-application',\n  CLIApplication = 'cli-application',\n  Library = 'library',\n  WebService = 'web-service',\n}\n\nexport type Project = {\n  readonly id?: string;\n  readonly name: string;\n  readonly description: string;\n  readonly type: ProjectType;\n  readonly build?: BuildOptions | readonly BuildOptions[];\n  readonly changesets?: ChangesetOptions;\n  readonly environments?: EnvironmentOptions;\n  readonly release?: ReleaseOptions;\n  readonly run?: RunOptions;\n  readonly test?: TestOptions;\n};\n", "import { DateTime } from 'luxon';\n\nexport enum TaskStatus {\n  'Canceled' = 'Canceled',\n  'Completed' = 'Completed',\n  'Created' = 'Created',\n  'Faulted' = 'Faulted',\n  'Queued' = 'Queued',\n  'Running' = 'Running',\n  'Waiting' = 'Waiting',\n}\n\nexport type Task = {\n  readonly created?: DateTime;\n  readonly data: Record<string, string> | ReadonlyMap<string, string>;\n  readonly name: string;\n  readonly id?: string;\n  readonly status?: TaskStatus;\n};\n\nexport type Queue = {\n  readonly id: string;\n  readonly name: string;\n  readonly queued: readonly Task['id'][];\n  readonly running: readonly Task['id'][];\n  readonly finished: readonly Task['id'][];\n};\n\nexport type QueueInitializationResult = {\n  readonly error: boolean | Error;\n};\n", "import { ElementType } from 'react';\n\nexport enum RouteRole {\n  ForgotPassword = 'forgot_password',\n  Index = 'index',\n  Login = 'login',\n  PageNotFound = '404',\n  Signup = 'signup',\n  VerifyCode = 'verify_code',\n}\n\nexport type Route = {\n  readonly loginRequired?: boolean;\n  readonly path?: string;\n  readonly component: ElementType;\n  readonly role?: RouteRole;\n};\n", "export enum Condition {\n  Contains = 'contains',\n  HasCharacterCount = 'has-character-count',\n  HasNumberCount = 'has-number-count',\n  HasLetterCount = 'has-letter-count',\n  HasLowercaseCount = 'has-lowercase-count',\n  HasSpacesCount = 'has-spaces-count',\n  HasSymbolCount = 'has-symbol-count',\n  HasUppercaseCount = 'has-uppercase-count',\n  IsAfter = 'is-after',\n  IsAfterOrEqual = 'is-after-or-equal',\n  IsAirport = 'is-airport',\n  IsAlpha = 'is-alpha',\n  IsAlphanumeric = 'is-alphanumeric',\n  IsAlgorithmHash = 'is-algorithm-hash',\n  IsAscii = 'is-ascii',\n  IsBase64 = 'is-base-64',\n  IsBefore = 'is-before',\n  IsBeforeOrAfter = 'is-before-or-after',\n  IsBeforeOrEqual = 'is-before-or-equal',\n  IsBetween = 'is-between',\n  IsBIC = 'is-bic',\n  IsBitcoinAddress = 'is-bitcoin-address',\n  IsBoolean = 'is-boolean',\n  IsColor = 'is-color',\n  IsComplexEnough = 'is-complex-enough',\n  IsCountry = 'is-country',\n  IsCreditCard = 'is-credit-card',\n  IsCurrency = 'is-currency',\n  IsDataURI = 'is-data-uri',\n  IsDate = 'is-date',\n  IsDateRange = 'is-date-range',\n  IsDateTime = 'is-date-time',\n  IsDayOfMonth = 'is-day-of-month',\n  IsDecimal = 'is-decimal',\n  IsDivisibleBy = 'is-divisible-by',\n  IsDomainName = 'is-domain-name',\n  IsEmailAddress = 'is-email-address',\n  IsEthereumAddress = 'is-ethereum-address',\n  IsEAN = 'is-ean',\n  IsEIN = 'is-ein',\n  IsEqual = 'is-equal',\n  IsEvenNumber = 'is-even-number',\n  IsFloat = 'is-float',\n  IsIBAN = 'is-iban',\n  IsGreaterThan = 'greater-than',\n  IsGreaterThanOrEqual = 'greater-than-or-equal',\n  IsHSLColor = 'is-hsl-color',\n  IsHexColor = 'is-hex-color',\n  IsHexadecimal = 'is-hexadecimal',\n  IsIdentityCardCode = 'is-identity-card-code',\n  IsIMEI = 'is-imei',\n  IsInIPAddressRange = 'is-in-ip-address-range',\n  IsInList = 'is-in-list',\n  IsInTheLast = 'is-in-the-last',\n  IsInteger = 'is-integer',\n  IsIPAddress = 'is-ip-address',\n  IsIPAddressRange = 'is-ip-address-range',\n  IsISBN = 'is-isbn',\n  IsISIN = 'is-isin',\n  IsISMN = 'is-ismn',\n  IsISRC = 'is-isrc',\n  IsISSN = 'is-issn',\n  IsISO4217 = 'is-iso-4217',\n  IsISO8601 = 'is-iso-8601',\n  IsISO31661Alpha2 = 'is-iso-31661-alpha-2',\n  IsISO31661Alpha3 = 'is-iso-31661-alpha-3',\n  IsJSON = 'is-json',\n  IsLanguage = 'is-language',\n  IsLatitude = 'is-latitude',\n  IsLongitude = 'is-longitude',\n  IsLengthEqual = 'is-length-equal',\n  IsLengthGreaterThan = 'is-length-greater-than',\n  IsLengthGreaterThanOrEqual = 'is-length-great-than-or-equal',\n  IsLengthLessThan = 'is-length-less-than',\n  IsLengthLessThanOrEqual = 'is-length-less-than-or-equal',\n  IsLessThan = 'less-than',\n  IsLessThanOrEqual = 'less-than-or-equal',\n  IsLicensePlateNumber = 'is-license-plate-number',\n  IsLowercase = 'is-lowercase',\n  IsOctal = 'is-octal',\n  IsMACAddress = 'is-mac-address',\n  IsMD5 = 'is-md5',\n  IsMagnetURI = 'is-magnet-uri',\n  IsMarkdown = 'is-markdown',\n  IsMimeType = 'is-mime-type',\n  IsMonth = 'is-month',\n  IsNegativeNumber = 'is-negative-number',\n  IsNotDate = 'is-not-date',\n  IsNotEqual = 'is-not-equal',\n  IsNotInIPAddressRange = 'is-not-in-ip-address-range',\n  IsNotInList = 'is-not-in-list',\n  IsNotNull = 'is-not-null',\n  IsNotRegexMatch = 'is-not-regex-match',\n  IsNotToday = 'is-not-today',\n  IsNumber = 'is-number',\n  IsNumeric = 'is-numeric',\n  IsOddNumber = 'is-odd-number',\n  IsPassportNumber = 'is-passport-number',\n  IsPhoneNumber = 'is-phone-number',\n  IsPort = 'is-port',\n  IsPositiveNumber = 'is-positive-number',\n  IsPostalCode = 'is-postal-code',\n  IsProvince = 'is-province',\n  IsRGBColor = 'is-rgb-color',\n  IsRegexMatch = 'is-regex-match',\n  IsRequired = 'is-required',\n  IsSemanticVersion = 'is-semantic-version',\n  IsSlug = 'is-slug',\n  IsSSN = 'is-ssn',\n  IsState = 'is-state',\n  IsStreetAddress = 'is-street-address',\n  IsString = 'is-string',\n  IsStrongPassword = 'is-strong-password',\n  IsTags = 'is-tags',\n  IsTaxIDNumber = 'is-tax-id-number',\n  IsThisMonth = 'is-this-month',\n  IsThisQuarter = 'is-this-quarter',\n  IsThisWeek = 'is-this-week',\n  IsThisWeekend = 'is-this-weekend',\n  IsThisYear = 'is-this-year',\n  IsTime = 'is-time',\n  IsTimeOfDay = 'is-time-of-day',\n  IsTimeRange = 'is-time-range',\n  IsToday = 'is-today',\n  IsURL = 'is-url',\n  IsUUID = 'is-uuid',\n  IsUppercase = 'is-uppercase',\n  IsUsernameAvailable = 'is-username-available',\n  IsValidStreetAddress = 'is-valid-street-address',\n  IsVATIDNumber = 'is-vat-id-number',\n  IsWeekday = 'is-weekday',\n  IsWeekend = 'is-weekend',\n  IsYear = 'is-year',\n}\n\nexport enum AuthenticationCondition {\n  IsAuthenticated = 'is-authenticated',\n  IsNotAuthenticated = 'is-not-authenticated',\n  IsUsernameAvailable = 'is-username-available',\n  PasswordMismatch = 'password-mismatch',\n}\n\nexport type RuleCondition = {\n  condition: Condition | AuthenticationCondition;\n  description: string;\n  name: string;\n  subject: string;\n  value: any;\n};\n", "import { Condition } from '../../index';\n\nexport enum ColorCondition {\n  IsHSLColor = Condition.IsHSLColor,\n  IsHexColor = Condition.IsHexColor,\n  IsNotNull = Condition.IsNotNull,\n  IsRGBColor = Condition.IsRGBColor,\n  IsString = Condition.IsString,\n}\n", "import { Condition } from '../index';\n\nexport enum AlgorithmHashCondition {\n  IsAlgorithmHash = Condition.IsAlgorithmHash,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum SemanticVersionCondition {\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsSemanticVersion = Condition.IsSemanticVersion,\n  IsString = Condition.IsString,\n}\n\nexport enum UUIDCondition {\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n  IsUUID = Condition.IsUUID,\n}\n\nexport enum MD5Condition {\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsMD5 = Condition.IsMD5,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n", "import { Condition } from '../index';\n\nexport enum BooleanCondition {\n  IsBoolean = Condition.IsBoolean,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n", "import { Condition } from '../index';\n\nexport enum DateCondition {\n  IsAfter = Condition.IsAfter,\n  IsAfterOrEqual = Condition.IsAfterOrEqual,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrEqual = Condition.IsBeforeOrEqual,\n  IsBetween = Condition.IsBetween,\n  IsDate = Condition.IsDate,\n  IsEqual = Condition.IsEqual,\n  IsNotDate = Condition.IsNotDate,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNotToday = Condition.IsNotToday,\n  IsThisWeek = Condition.IsThisWeek,\n  IsThisMonth = Condition.IsThisMonth,\n  IsThisQuarter = Condition.IsThisQuarter,\n  IsThisYear = Condition.IsThisYear,\n  IsToday = Condition.IsToday,\n  IsWeekend = Condition.IsWeekend,\n}\n\nexport enum DateRangeCondition {\n  IsAfter = Condition.IsAfter,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrAfter = Condition.IsBeforeOrAfter,\n  IsBetween = Condition.IsBetween,\n  IsDate = Condition.IsDate,\n  IsDateRange = Condition.IsDateRange,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n\nexport enum DateTimeCondition {\n  IsAfter = Condition.IsAfter,\n  IsAfterOrEqual = Condition.IsAfterOrEqual,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrEqual = Condition.IsBeforeOrEqual,\n  IsBetween = Condition.IsBetween,\n  IsDate = Condition.IsDate,\n  IsEqual = Condition.IsEqual,\n  IsNotDate = Condition.IsNotDate,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNotToday = Condition.IsNotToday,\n  IsThisWeek = Condition.IsThisWeek,\n  IsThisMonth = Condition.IsThisMonth,\n  IsThisQuarter = Condition.IsThisQuarter,\n  IsThisYear = Condition.IsThisYear,\n  IsToday = Condition.IsToday,\n  IsWeekend = Condition.IsWeekend,\n}\n\nexport enum DayOfMonthCondition {\n  IsAfter = Condition.IsAfter,\n  IsAfterOrEqual = Condition.IsAfterOrEqual,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrEqual = Condition.IsBeforeOrEqual,\n  IsBetween = Condition.IsBetween,\n  IsDayOfMonth = Condition.IsDayOfMonth,\n  IsEvenNumber = Condition.IsEvenNumber,\n  IsEqual = Condition.IsEqual,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsInteger = Condition.IsInteger,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumber = Condition.IsNumber,\n  IsOddNumber = Condition.IsOddNumber,\n  IsToday = Condition.IsToday,\n  IsWeekday = Condition.IsWeekday,\n  IsWeekend = Condition.IsWeekend,\n}\n\nexport enum MonthCondition {\n  IsAfter = Condition.IsAfter,\n  IsAfterOrEqual = Condition.IsAfterOrEqual,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrEqual = Condition.IsBeforeOrEqual,\n  IsBetween = Condition.IsBetween,\n  IsEvenNumber = Condition.IsEvenNumber,\n  IsEqual = Condition.IsEqual,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsInteger = Condition.IsInteger,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsMonth = Condition.IsMonth,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumber = Condition.IsNumber,\n  IsOddNumber = Condition.IsOddNumber,\n  IsThisMonth = Condition.IsThisMonth,\n}\n\nexport enum TimeCondition {\n  IsAfter = Condition.IsAfter,\n  IsAfterOrEqual = Condition.IsAfterOrEqual,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrEqual = Condition.IsBeforeOrEqual,\n  IsBetween = Condition.IsBetween,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsTime = Condition.IsTime,\n}\n\nexport enum TimeRangeCondition {\n  IsAfter = Condition.IsAfter,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrAfter = Condition.IsBeforeOrAfter,\n  IsBetween = Condition.IsBetween,\n  IsTime = Condition.IsTime,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsTimeRange = Condition.IsTimeRange,\n}\n\nexport enum TimeOfDayCondition {\n  IsAfter = Condition.IsAfter,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrAfter = Condition.IsBeforeOrAfter,\n  IsBetween = Condition.IsBetween,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsTimeOfDay = Condition.IsTimeOfDay,\n  IsTimeRange = Condition.IsTimeRange,\n}\n\nexport enum WeekdayCondition {\n  IsAfter = Condition.IsAfter,\n  IsAfterOrEqual = Condition.IsAfterOrEqual,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrEqual = Condition.IsBeforeOrEqual,\n  IsBetween = Condition.IsBetween,\n  IsEvenNumber = Condition.IsEvenNumber,\n  IsEqual = Condition.IsEqual,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumber = Condition.IsNumber,\n  IsOddNumber = Condition.IsOddNumber,\n  IsWeekday = Condition.IsWeekday,\n  IsWeekend = Condition.IsWeekend,\n}\n\nexport enum YearCondition {\n  IsAfter = Condition.IsAfter,\n  IsAfterOrEqual = Condition.IsAfterOrEqual,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrEqual = Condition.IsBeforeOrEqual,\n  IsBetween = Condition.IsBetween,\n  IsEvenNumber = Condition.IsEvenNumber,\n  IsEqual = Condition.IsEqual,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsInteger = Condition.IsInteger,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumber = Condition.IsNumber,\n  IsOddNumber = Condition.IsOddNumber,\n  IsThisYear = Condition.IsThisYear,\n  IsYear = Condition.IsYear,\n}\n", "import { Condition } from '../index';\n\nexport enum HexadecimalCondition {\n  IsEqual = Condition.IsEqual,\n  IsHexadecimal = Condition.IsHexadecimal,\n  IsLengthEqual = Condition.IsLengthEqual,\n  IsLengthGreaterThan = Condition.IsLengthGreaterThan,\n  IsLengthGreaterThanOrEqual = Condition.IsLengthGreaterThanOrEqual,\n  IsLengthLessThan = Condition.IsLengthLessThan,\n  IsLengthLessThanOrEqual = Condition.IsLengthLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum JSONCondition {\n  IsEqual = Condition.IsEqual,\n  IsJSON = Condition.IsJSON,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n\nexport enum MarkdownCondition {\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsMarkdown = Condition.IsMarkdown,\n  IsString = Condition.IsString,\n}\n", "import { Condition } from '../../index';\n\nexport enum CurrencyCondition {\n  IsBetween = Condition.IsBetween,\n  IsCurrency = Condition.IsCurrency,\n  IsDecimal = Condition.IsDecimal,\n  IsDivisibleBy = Condition.IsDivisibleBy,\n  IsEvenNumber = Condition.IsEvenNumber,\n  IsFloat = Condition.IsFloat,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsInteger = Condition.IsInteger,\n  IsISO8601 = Condition.IsISO8601,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsNegativeNumber = Condition.IsNegativeNumber,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumber = Condition.IsNumber,\n  IsOddNumber = Condition.IsOddNumber,\n  IsPositiveNumber = Condition.IsPositiveNumber,\n}\n\nexport enum BitcoinAddressCondition {\n  IsBitcoinAddress = Condition.IsBitcoinAddress,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n\nexport enum EthereumAddressCondition {\n  IsEthereumAddress = Condition.IsEthereumAddress,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n", "import { Condition } from '../../index';\n\nexport enum LanguageCondition {\n  IsEqual = Condition.IsEqual,\n  IsJSON = Condition.IsJSON,\n  IsLanguage = Condition.IsLanguage,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n", "import { Condition } from '../../index';\n\nexport enum CityCondition {\n  IsAlpha = Condition.IsAlpha,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum CountryCondition {\n  IsAlpha = Condition.IsAlpha,\n  IsCountry = Condition.IsCountry,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum LatitudeCondition {\n  IsEqual = Condition.IsEqual,\n  IsFloat = Condition.IsFloat,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumeric = Condition.IsNumeric,\n}\n\nexport enum LongitudeCondition {\n  IsEqual = Condition.IsEqual,\n  IsFloat = Condition.IsFloat,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumeric = Condition.IsNumeric,\n}\n\nexport enum PostalCodeCondition {\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsPostalCode = Condition.IsPostalCode,\n  IsNotNull = Condition.IsNotNull,\n}\n\nexport enum ProvinceCondition {\n  IsAlpha = Condition.IsAlpha,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsProvince = Condition.IsProvince,\n  IsString = Condition.IsString,\n}\n\nexport enum StateCondition {\n  IsAlpha = Condition.IsAlpha,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsState = Condition.IsState,\n  IsString = Condition.IsString,\n}\n\nexport enum StreetAddressCondition {\n  IsAlphanumeric = Condition.IsAlphanumeric,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n\n  IsString = Condition.IsString,\n  IsStreetAddress = Condition.IsStreetAddress,\n}\n", "import { Condition } from '../index';\n\nexport enum MenuCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n\nexport enum TagsCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n", "import { Condition } from '../index';\n\nexport enum DataURICondition {\n  Contains = Condition.Contains,\n  IsDataURI = Condition.IsDataURI,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum DomainNameCondition {\n  Contains = Condition.Contains,\n  IsDomainName = Condition.IsDomainName,\n  IsEqual = Condition.IsEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum EmailCondition {\n  Contains = Condition.Contains,\n  IsEmailAddress = Condition.IsEmailAddress,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum IPAddressCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsIPAddress = Condition.IsIPAddress,\n  IsInIPAddressRange = Condition.IsInIPAddressRange,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotInIPAddressRange = Condition.IsNotInIPAddressRange,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum IPAddressRangeCondition {\n  IsEqual = Condition.IsEqual,\n  IsIPAddressRange = Condition.IsIPAddressRange,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotInIPAddressRange = Condition.IsNotInIPAddressRange,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum PortCondition {\n  IsEqual = Condition.IsEqual,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsInteger = Condition.IsInteger,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n}\n\nexport enum MACAddressCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsMACAddress = Condition.IsMACAddress,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum MagnetURICondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsMagnetURI = Condition.IsMagnetURI,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum MimeTypeCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsMimeType = Condition.IsMimeType,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\nexport enum SlugCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n  IsSlug = Condition.IsSlug,\n}\n\nexport enum URLCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n  IsURL = Condition.IsURL,\n}\n", "import { Condition } from '../index';\n\nexport enum NumberCondition {\n  IsAfter = Condition.IsAfter,\n  IsAfterOrEqual = Condition.IsAfterOrEqual,\n  IsBefore = Condition.IsBefore,\n  IsBeforeOrEqual = Condition.IsBeforeOrEqual,\n  IsBetween = Condition.IsBetween,\n  IsDecimal = Condition.IsDecimal,\n  IsDivisibleBy = Condition.IsDivisibleBy,\n  IsEAN = Condition.IsEAN,\n  IsEIN = Condition.IsEIN,\n  IsEqual = Condition.IsEqual,\n  IsEvenNumber = Condition.IsEvenNumber,\n  IsFloat = Condition.IsFloat,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsInt = Condition.IsInteger,\n  IsISBN = Condition.IsISBN,\n  IsISMN = Condition.IsISMN,\n  IsISSN = Condition.IsISSN,\n  IsLatitude = Condition.IsLatitude,\n  IsLongitude = Condition.IsLongitude,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsMACAddress = Condition.IsMACAddress,\n  IsNumber = Condition.IsNumber,\n  IsNegativeNumber = Condition.IsNegativeNumber,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsOddNumber = Condition.IsOddNumber,\n  IsPassportNumber = Condition.IsPassportNumber,\n  IsPhoneNumber = Condition.IsPhoneNumber,\n  IsPort = Condition.IsPort,\n  IsPositiveNumber = Condition.IsPositiveNumber,\n  IsPostalCode = Condition.IsPostalCode,\n  IsSemanticVersion = Condition.IsSemanticVersion,\n  IsSSN = Condition.IsSSN,\n  IsTaxIDNumber = Condition.IsTaxIDNumber,\n  IsUUID = Condition.IsUUID,\n  IsVATIDNumber = Condition.IsVATIDNumber,\n}\n\nexport enum FloatCondition {\n  IsEqual = Condition.IsEqual,\n  IsFloat = Condition.IsFloat,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumber = Condition.IsNumber,\n  IsNumeric = Condition.IsNumeric,\n}\n\nexport enum IntegerCondition {\n  IsEqual = Condition.IsEqual,\n  IsInteger = Condition.IsInteger,\n  IsGreaterThan = Condition.IsGreaterThan,\n  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,\n  IsLessThan = Condition.IsLessThan,\n  IsLessThanOrEqual = Condition.IsLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsNumber = Condition.IsNumber,\n  IsNumeric = Condition.IsNumeric,\n}\n", "import { Condition } from '../index';\n\nexport enum CreditCardCondition {\n  IsCreditCard = Condition.IsCreditCard,\n  IsEqual = Condition.IsEqual,\n  IsLengthEqual = Condition.IsLengthEqual,\n  IsLengthGreaterThan = Condition.IsLengthGreaterThan,\n  IsLengthGreaterThanOrEqual = Condition.IsLengthGreaterThanOrEqual,\n  IsLengthLessThan = Condition.IsLengthLessThan,\n  IsLengthLessThanOrEqual = Condition.IsLengthLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotNull = Condition.IsNotNull,\n  IsRegexMatch = Condition.IsRegexMatch,\n  IsNotRegexMatch = Condition.IsNotRegexMatch,\n}\n\nexport enum EmailAddressCondition {\n  isEmailAddress = Condition.IsEmailAddress,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsLengthEqual = Condition.IsLengthEqual,\n  IsLengthGreaterThan = Condition.IsLengthGreaterThan,\n  IsLengthGreaterThanOrEqual = Condition.IsLengthGreaterThanOrEqual,\n  IsLengthLessThan = Condition.IsLengthLessThan,\n  IsLengthLessThanOrEqual = Condition.IsLengthLessThanOrEqual,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsRegexMatch = Condition.IsRegexMatch,\n  IsNotRegexMatch = Condition.IsNotRegexMatch,\n}\n\nexport enum LicensePlateNumber {\n  IsLicensePlateNumber = Condition.IsLicensePlateNumber,\n  IsNotNull = Condition.IsNotNull,\n  IsNotRegexMatch = Condition.IsNotRegexMatch,\n  IsString = Condition.IsString,\n  IsRegexMatch = Condition.IsRegexMatch,\n}\nexport enum PassportNumberCondition {\n  IsNotNull = Condition.IsNotNull,\n  IsPassportNumber = Condition.IsPassportNumber,\n  IsString = Condition.IsString,\n  IsRegexMatch = Condition.IsRegexMatch,\n}\n\nexport enum PasswordCondition {\n  IsComplexEnough = Condition.IsComplexEnough,\n  IsInList = Condition.IsInList,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsNotRegexMatch = Condition.IsNotRegexMatch,\n  IsLengthGreaterThan = Condition.IsLengthGreaterThan,\n  IsLengthGreaterThanOrEqual = Condition.IsLengthGreaterThanOrEqual,\n  IsLengthLessThan = Condition.IsLengthLessThan,\n  IsLengthLessThanOrEqual = Condition.IsLengthLessThanOrEqual,\n  IsStrongPassword = Condition.IsStrongPassword,\n  IsString = Condition.IsString,\n  IsRegexMatch = Condition.IsRegexMatch,\n}\n\nexport enum PhoneNumberCondition {\n  IsNotNull = Condition.IsNotNull,\n  IsNotRegexMatch = Condition.IsNotRegexMatch,\n  IsNumber = Condition.IsNumber,\n  IsPhoneNumber = Condition.IsPhoneNumber,\n  IsRegexMatch = Condition.IsRegexMatch,\n}\n\nexport enum SocialSecurityNumberCondition {\n  IsNotNull = Condition.IsNotNull,\n  IsSSN = Condition.IsSSN,\n  IsString = Condition.IsString,\n  IsRegexMatch = Condition.IsRegexMatch,\n}\n", "import { Condition } from '../../../index';\n\nexport enum AirportCondition {\n  IsAirport = Condition.IsAirport,\n  IsAlpha = Condition.IsAlpha,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n", "import { Condition } from '../index';\n\n/**\n * Bank Identification Code\n *\n * @remarks\n * BIC means Bank Identification Code, or Bank Identifier Code.\n * It is an 8 to 11-character code that is used to identify a\n * specific bank when you make an international transaction.\n * */\nexport enum BICCondition {\n  Contains = Condition.Contains,\n  IsBIC = Condition.IsBIC,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\n/**\n * European Article Number\n *\n * @remarks\n * The International Article Number (also known as European\n * Article Number or EAN) is a standard describing a barcode\n * symbology and numbering system used in global trade to identify\n * a specific retail product type, in a specific packaging\n * configuration, from a specific manufacturer.\n *\n * The most commonly used EAN standard is the thirteen-digit EAN-13\n * */\nexport enum EANCondition {\n  Contains = Condition.Contains,\n  IsEAN = Condition.IsEAN,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\n/**\n * Employer Identification Number\n *\n * @remarks\n *\n * The Employer Identification Number (EIN), also known as the Federal\n * Employer Identification Number (FEIN) or the Federal Tax Identification\n * Number, is a unique nine-digit number assigned by the Internal Revenue\n * Service (IRS) to business entities operating in the United States for the\n * purposes of identification.\n */\nexport enum EINCondition {\n  Contains = Condition.Contains,\n  IsEIN = Condition.IsEIN,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\n/**\n * International Bank Account Number\n *\n * @remarks\n *\n * An IBAN, or international bank account number, is a standard\n * international numbering system developed to identify an overseas\n * bank account. The number starts with a two-digit country code, then\n * two numbers, followed by several more alphanumeric characters.\n */\nexport enum IBANCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsIBAN = Condition.IsIBAN,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\n/**\n * International Standard Book Number\n *\n * @remarks\n *\n * ISBN is the acronym for International Standard Book Number. This\n * 10 or 13-digit number identifies a specific book, an edition of a\n * book, or a book-like product (such as an audiobook). Since 1970 each\n * published book has a unique ISBN. In 2007, assigned ISBNs changed\n * from 10 digits to 13.\n */\nexport enum ISBNCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsISBN = Condition.IsISBN,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\n/**\n * International Securities Identification Number\n *\n * @remarks\n * An ISIN is a 12-digit alphanumeric code that uniquely identifies a\n * specific security. The numbers are allocated by a country's respective\n * national numbering agency (NNA). An ISIN is not the same as the ticker\n * symbol, which identifies the stock at the exchange level.\n */\nexport enum ISINCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsISIN = Condition.IsISIN,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\n/**\n * International Standard Music Number\n *\n * @remarks\n * The International Standard Music Number or ISMN (ISO 10957) is a\n * thirteen-character alphanumeric identifier for printed music developed\n * by ISO.\n */\nexport enum ISMNCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsISMN = Condition.IsISMN,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\n/**\n * International Standard Serial Number\n *\n * @remarks\n * An International Standard Serial Number (ISSN) is an eight-digit\n * serial number used to uniquely identify a serial publication,\n * such as a magazine. The ISSN is especially helpful in distinguishing\n * between serials with the same title.\n */\nexport enum ISSNCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsISSN = Condition.IsISSN,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n}\n\n/**\n * Tax Identification Number\n *\n * @remarks\n * A Tax Identification Number (TIN) is a nine-digit number used as a\n * tracking number by the Internal Revenue Service (IRS)\n */\nexport enum TaxIDNumberCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n  IsTaxIDNumber = Condition.IsTaxIDNumber,\n}\n\n/**\n * Value Added Tax (VAT) Registration Number\n *\n * @remarks\n * A VAT registration number is a nine-digit number used to identify\n * a business or person in the European Union.\n */\nexport enum VATCondition {\n  Contains = Condition.Contains,\n  IsEqual = Condition.IsEqual,\n  IsInList = Condition.IsInList,\n  IsNotEqual = Condition.IsNotEqual,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsString = Condition.IsString,\n  IsVATIDNumber = Condition.IsVATIDNumber,\n}\n", "import { Condition } from '../index';\n\n// TODO: Example the number of conditions a string can support\nexport enum StringCondition {\n  Contains = Condition.Contains,\n  HasNumberCount = Condition.HasNumberCount,\n  HasLowercaseCount = Condition.HasLowercaseCount,\n  HasLetterCount = Condition.HasLetterCount,\n  HasSpacesCount = Condition.HasSpacesCount,\n  HasSymbolCount = Condition.HasSymbolCount,\n  HasUppercaseCount = Condition.HasUppercaseCount,\n  IsAlpha = Condition.IsAlpha,\n  IsAlphanumeric = Condition.IsAlphanumeric,\n  IsAscii = Condition.IsAscii,\n  IsBase64 = Condition.IsBase64,\n  IsColor = Condition.IsColor,\n  IsComplexEnough = Condition.IsComplexEnough,\n  IsCreditCard = Condition.IsCreditCard,\n  IsDataURI = Condition.IsDataURI,\n  IsDomainName = Condition.IsDomainName,\n  IsEmailAddress = Condition.IsEmailAddress,\n  IsEthereumAddress = Condition.IsEthereumAddress,\n  IsEAN = Condition.IsEAN,\n  IsEIN = Condition.IsEIN,\n  IsEqual = Condition.IsEqual,\n  IsIBAN = Condition.IsIBAN,\n  IsHSLColor = Condition.IsHSLColor,\n  IsHexColor = Condition.IsHexColor,\n  IsHexadecimal = Condition.IsHexadecimal,\n  IsIdentityCardCode = Condition.IsIdentityCardCode,\n  IsIMEI = Condition.IsIMEI,\n  IsInList = Condition.IsInList,\n  IsIPAddress = Condition.IsIPAddress,\n  IsInIPAddressRange = Condition.IsInIPAddressRange,\n  IsISBN = Condition.IsISBN,\n  IsISIN = Condition.IsISIN,\n  IsISMN = Condition.IsISMN,\n  IsISRC = Condition.IsISRC,\n  IsISSN = Condition.IsISSN,\n  IsLanguage = Condition.IsLanguage,\n  IsLatitude = Condition.IsLatitude,\n  IsLongitude = Condition.IsLongitude,\n  IsLengthEqual = Condition.IsLengthEqual,\n  IsLengthGreaterThan = Condition.IsLengthGreaterThan,\n  IsLengthGreaterThanOrEqual = Condition.IsLengthGreaterThanOrEqual,\n  IsLengthLessThan = Condition.IsLengthLessThan,\n  IsLengthLessThanOrEqual = Condition.IsLengthLessThanOrEqual,\n  IsLicensePlateNumber = Condition.IsLicensePlateNumber,\n  IsLowercase = Condition.IsLowercase,\n  IsOctal = Condition.IsOctal,\n  IsMACAddress = Condition.IsMACAddress,\n  IsMD5 = Condition.IsMD5,\n  IsMagnetURI = Condition.IsMagnetURI,\n  IsMarkdown = Condition.IsMarkdown,\n  IsMimeType = Condition.IsMimeType,\n  IsMonth = Condition.IsMonth,\n  IsNotInIPAddressRange = Condition.IsNotInIPAddressRange,\n  IsNotInList = Condition.IsNotInList,\n  IsNotNull = Condition.IsNotNull,\n  IsNotRegexMatch = Condition.IsNotRegexMatch,\n  IsNumber = Condition.IsNumber,\n  IsNumeric = Condition.IsNumeric,\n  IsPassportNumber = Condition.IsPassportNumber,\n  IsPhoneNumber = Condition.IsPhoneNumber,\n  IsPort = Condition.IsPort,\n  IsPostalCode = Condition.IsPostalCode,\n  IsProvince = Condition.IsProvince,\n  IsRegexMatch = Condition.IsRegexMatch,\n  IsSemanticVersion = Condition.IsSemanticVersion,\n  IsSlug = Condition.IsSlug,\n  IsSSN = Condition.IsSSN,\n  IsState = Condition.IsState,\n  IsStreetAddress = Condition.IsStreetAddress,\n  IsString = Condition.IsString,\n  IsTaxIDNumber = Condition.IsTaxIDNumber,\n  IsURL = Condition.IsURL,\n  IsUUID = Condition.IsUUID,\n  IsUppercase = Condition.IsUppercase,\n  IsVATIDNumber = Condition.IsVATIDNumber,\n  IsWeekday = Condition.IsWeekday,\n  IsWeekend = Condition.IsWeekend,\n  IsYear = Condition.IsYear,\n}\n\nexport enum LongTextCondition {\n  Contains = Condition.Contains,\n  IsAlpha = Condition.IsAlpha,\n  IsAlphanumeric = Condition.IsAlphanumeric,\n  IsInList = Condition.IsInList,\n  IsMarkdown = Condition.IsMarkdown,\n  IsNotInList = Condition.IsNotInList,\n  IsNumeric = Condition.IsNumeric,\n  IsLowercase = Condition.IsLowercase,\n  IsString = Condition.IsString,\n  IsUppercase = Condition.IsUppercase,\n}\n", "import { Action } from './action';\nimport { Condition } from './condition/index';\n\nexport type Allowed = 'allowed';\nexport type Blocked = 'blocked';\n\nexport enum Privilege {\n  Allowed,\n  Blocked,\n}\n\nexport type Create = Privilege;\nexport type Delete = Privilege;\nexport type Edit = Privilege;\nexport type View = Privilege;\n\nexport type Rule<T = {}> = {\n  actions?: Action[];\n  conditions: Condition[];\n  description: string;\n  name: string;\n} & T;\n", "export enum FormValidationProblem {\n  InvalidCharacters = 'invalid-characters',\n  InvalidPattern = 'invalid-pattern',\n  NotComplexEnough = 'not-complex-enough',\n  NotUnique = 'not-unique',\n  NotValidEmail = 'not-valid-email',\n  TooLong = 'too-long',\n  TooShort = 'too-short',\n  Required = 'required',\n}\n", "export enum TestTool {\n  Ava = 'ava',\n  Jest = 'jest',\n}\n\nexport enum TestReporter {\n  Clover = 'clover',\n  Cobertura = 'cobertura',\n  HTML = 'html',\n  JSONSummary = 'json-summary',\n  JSON = 'json',\n  Lcov = 'lcov',\n  Lcovonly = 'lcovonly',\n  None = 'none',\n  TeamCity = 'teamcity',\n  TextLcov = 'text-lcov',\n  TextSummary = 'text-summary',\n  Text = 'text',\n}\n\nexport interface TestOptions {\n  concurrency?: number;\n  coverage?: {\n    directory?: string;\n    files?: {\n      exclude?: string[];\n      include?: string[];\n    };\n    reporters?: TestReporter[];\n    thresholds?: {\n      [filePath: string]: {\n        branches?: number;\n        functions?: number;\n        lines?: number;\n        statements?: number;\n      };\n      global: {\n        branches?: number;\n        functions?: number;\n        lines?: number;\n        statements?: number;\n      };\n    };\n  };\n  fail: {\n    fast?: boolean;\n    noTests?: boolean;\n  };\n  files?: {\n    exclude?: string[];\n    include?: string[];\n  };\n  tool?: TestTool;\n  verbose?: boolean;\n}\n", "import { CommunicationMedium } from '../../../communications/medium';\n\n/**\n * @enum AuthenticationStatus\n * @property Archived - User is no longer active.\n * @property Compromised - User is disabled due to a potential security threat.\n * @property Confirmed - User has been confirmed.\n * @property ForcePasswordChange - The user is confirmed and the user can sign in\n * using a temporary password, but on first sign-in, the user must change his\n * or her password to a new value before doing anything else.\n * @property ResetRequired - User is confirmed, but the user must request a\n * code and reset his or her password before he or she can sign in.\n * @property Unconfirmed - User has been created but not confirmed.\n * @property Unknown - User status is not known.\n */\nexport enum UserVerificationStatus {\n  Archived = 'ARCHIVED',\n  Compromised = 'COMPROMISED',\n  Confirmed = 'CONFIRMED',\n  ForcePasswordChange = 'FORCE_CHANGE_PASSWORD',\n  ResetRequired = 'RESET_REQUIRED',\n  Unconfirmed = 'UNCONFIRMED',\n  Unknown = 'UNKNOWN',\n}\n\nexport enum UserAuthenticationVerificationType {\n  Code = 'code',\n  Link = 'link',\n}\n\nexport type UserVerificationDetails = {\n  status: UserVerificationStatus;\n  delivery: {\n    medium: CommunicationMedium.Email;\n    destination: string;\n  };\n};\n", "export enum UserRole {\n  Owner = 'Owner',\n  Admin = 'Admin',\n  User = 'User',\n  Visitor = 'Visitor',\n}\n", "import { BuildFormat } from '@srclaunch/types';\n\nexport function getFormatFileExtension(format: BuildFormat) {\n  switch (format) {\n    case BuildFormat.CJS:\n      return '.cjs';\n    case BuildFormat.ESM:\n      return '.mjs';\n    case BuildFormat.IIFE:\n      return '.iife.js';\n    case BuildFormat.UMD:\n      return '.umd.js';\n    default:\n      return '.js';\n  }\n}\n\nexport function getViteFormatFileExtension(\n  format:\n    | 'amd'\n    | 'cjs'\n    | 'es'\n    | 'iife'\n    | 'system'\n    | 'umd'\n    | 'commonjs'\n    | 'esm'\n    | 'module'\n    | 'systemjs',\n) {\n  switch (format) {\n    case 'cjs':\n    case 'commonjs':\n      return '.cjs';\n    case 'es':\n    case 'esm':\n    case 'module':\n      return '.mjs';\n    case 'iife':\n      return '.iife.js';\n    case 'umd':\n      return '.umd.js';\n    default:\n      return `unknown-${format}.js`;\n  }\n}\n", "import fs, { emptyDir } from 'fs-extra';\nimport path from 'node:path';\n\nexport async function emptyDirectory(directory: string): Promise<void> {\n  if (!directory) {\n    throw new Error('Directory must be provided');\n  }\n\n  if (directory === '/') {\n    throw new Error('Cannot empty root directory');\n  }\n\n  try {\n    await emptyDir(directory);\n  } catch (err) {\n    throw new Error(`Could not empty directory: ${directory}`);\n  }\n}\n\nexport async function readFile(filePath: string) {\n  if (!filePath) {\n    throw new Error('File path must be provided');\n  }\n\n  try {\n    path.join(path.resolve(), '.srclaunch', 'config.json');\n\n    return await fs.readFile(filePath);\n  } catch (err) {\n    throw new Error(`Could not read file: ${filePath}`);\n  }\n}\n", "const ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi16 = (offset = 0) => code => `\\u001B[${code + offset}m`;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\toverline: [53, 55],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29],\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39],\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49],\n\t\t},\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`,\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false,\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false,\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = wrapAnsi16();\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi = wrapAnsi16(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue: (red, green, blue) => {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16\n\t\t\t\t\t+ (36 * Math.round(red / 255 * 5))\n\t\t\t\t\t+ (6 * Math.round(green / 255 * 5))\n\t\t\t\t\t+ Math.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue: hex => {\n\t\t\t\tconst matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet {colorString} = matches.groups;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = [...colorString].map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t/* eslint-disable no-bitwise */\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF,\n\t\t\t\t\t/* eslint-enable no-bitwise */\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t\tansi256ToAnsi: {\n\t\t\tvalue: code => {\n\t\t\t\tif (code < 8) {\n\t\t\t\t\treturn 30 + code;\n\t\t\t\t}\n\n\t\t\t\tif (code < 16) {\n\t\t\t\t\treturn 90 + (code - 8);\n\t\t\t\t}\n\n\t\t\t\tlet red;\n\t\t\t\tlet green;\n\t\t\t\tlet blue;\n\n\t\t\t\tif (code >= 232) {\n\t\t\t\t\tred = (((code - 232) * 10) + 8) / 255;\n\t\t\t\t\tgreen = red;\n\t\t\t\t\tblue = red;\n\t\t\t\t} else {\n\t\t\t\t\tcode -= 16;\n\n\t\t\t\t\tconst remainder = code % 36;\n\n\t\t\t\t\tred = Math.floor(code / 36) / 5;\n\t\t\t\t\tgreen = Math.floor(remainder / 6) / 5;\n\t\t\t\t\tblue = (remainder % 6) / 5;\n\t\t\t\t}\n\n\t\t\t\tconst value = Math.max(red, green, blue) * 2;\n\n\t\t\t\tif (value === 0) {\n\t\t\t\t\treturn 30;\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tlet result = 30 + ((Math.round(blue) << 2) | (Math.round(green) << 1) | Math.round(red));\n\n\t\t\t\tif (value === 2) {\n\t\t\t\t\tresult += 60;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\trgbToAnsi: {\n\t\t\tvalue: (red, green, blue) => styles.ansi256ToAnsi(styles.rgbToAnsi256(red, green, blue)),\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi: {\n\t\t\tvalue: hex => styles.ansi256ToAnsi(styles.hexToAnsi256(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t});\n\n\treturn styles;\n}\n\nconst ansiStyles = assembleStyles();\n\nexport default ansiStyles;\n", "import process from 'node:process';\nimport os from 'node:os';\nimport tty from 'node:tty';\n\n// From: https://github.com/sindresorhus/has-flag/blob/main/index.js\nfunction hasFlag(flag, argv = process.argv) {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n}\n\nconst {env} = process;\n\nlet flagForceColor;\nif (\n\thasFlag('no-color')\n\t|| hasFlag('no-colors')\n\t|| hasFlag('color=false')\n\t|| hasFlag('color=never')\n) {\n\tflagForceColor = 0;\n} else if (\n\thasFlag('color')\n\t|| hasFlag('colors')\n\t|| hasFlag('color=true')\n\t|| hasFlag('color=always')\n) {\n\tflagForceColor = 1;\n}\n\nfunction envForceColor() {\n\tif ('FORCE_COLOR' in env) {\n\t\tif (env.FORCE_COLOR === 'true') {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif (env.FORCE_COLOR === 'false') {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn env.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3,\n\t};\n}\n\nfunction _supportsColor(haveStream, {streamIsTTY, sniffFlags = true} = {}) {\n\tconst noFlagForceColor = envForceColor();\n\tif (noFlagForceColor !== undefined) {\n\t\tflagForceColor = noFlagForceColor;\n\t}\n\n\tconst forceColor = sniffFlags ? flagForceColor : noFlagForceColor;\n\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (sniffFlags) {\n\t\tif (hasFlag('color=16m')\n\t\t\t|| hasFlag('color=full')\n\t\t\t|| hasFlag('color=truecolor')) {\n\t\t\treturn 3;\n\t\t}\n\n\t\tif (hasFlag('color=256')) {\n\t\t\treturn 2;\n\t\t}\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10\n\t\t\t&& Number(osRelease[2]) >= 10_586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14_931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE', 'DRONE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\t// Check for Azure DevOps pipelines\n\tif ('TF_BUILD' in env && 'AGENT_NAME' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = Number.parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nexport function createSupportsColor(stream, options = {}) {\n\tconst level = _supportsColor(stream, {\n\t\tstreamIsTTY: stream && stream.isTTY,\n\t\t...options,\n\t});\n\n\treturn translateLevel(level);\n}\n\nconst supportsColor = {\n\tstdout: createSupportsColor({isTTY: tty.isatty(1)}),\n\tstderr: createSupportsColor({isTTY: tty.isatty(2)}),\n};\n\nexport default supportsColor;\n", "// TODO: When targeting Node.js 16, use `String.prototype.replaceAll`.\nexport function stringReplaceAll(string, substring, replacer) {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n\nexport function stringEncaseCRLFWithFirstIndex(string, prefix, postfix, index) {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n", "import ansiStyles from '#ansi-styles';\nimport supportsColor from '#supports-color';\nimport { // eslint-disable-line import/order\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex,\n} from './utilities.js';\n\nconst {stdout: stdoutColor, stderr: stderrColor} = supportsColor;\n\nconst GENERATOR = Symbol('GENERATOR');\nconst STYLER = Symbol('STYLER');\nconst IS_EMPTY = Symbol('IS_EMPTY');\n\n// `supportsColor.level` \u2192 `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m',\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nexport class Chalk {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = (...strings) => strings.join(' ');\n\tapplyOptions(chalk, options);\n\n\tObject.setPrototypeOf(chalk, createChalk.prototype);\n\n\treturn chalk;\n};\n\nfunction createChalk(options) {\n\treturn chalkFactory(options);\n}\n\nObject.setPrototypeOf(createChalk.prototype, Function.prototype);\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this[STYLER]), this[IS_EMPTY]);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t},\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this[STYLER], true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t},\n};\n\nconst getModelAnsi = (model, level, type, ...arguments_) => {\n\tif (model === 'rgb') {\n\t\tif (level === 'ansi16m') {\n\t\t\treturn ansiStyles[type].ansi16m(...arguments_);\n\t\t}\n\n\t\tif (level === 'ansi256') {\n\t\t\treturn ansiStyles[type].ansi256(ansiStyles.rgbToAnsi256(...arguments_));\n\t\t}\n\n\t\treturn ansiStyles[type].ansi(ansiStyles.rgbToAnsi(...arguments_));\n\t}\n\n\tif (model === 'hex') {\n\t\treturn getModelAnsi('rgb', level, type, ...ansiStyles.hexToRgb(...arguments_));\n\t}\n\n\treturn ansiStyles[type][model](...arguments_);\n};\n\nconst usedModels = ['rgb', 'hex', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'color', ...arguments_), ansiStyles.color.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'bgColor', ...arguments_), ansiStyles.bgColor.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this[GENERATOR].level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis[GENERATOR].level = level;\n\t\t},\n\t},\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent,\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\t// Single argument is hot path, implicit coercion is faster than anything\n\t// eslint-disable-next-line no-implicit-coercion\n\tconst builder = (...arguments_) => applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder[GENERATOR] = self;\n\tbuilder[STYLER] = _styler;\n\tbuilder[IS_EMPTY] = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self[IS_EMPTY] ? '' : string;\n\t}\n\n\tlet styler = self[STYLER];\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.includes('\\u001B')) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nObject.defineProperties(createChalk.prototype, styles);\n\nconst chalk = createChalk();\nexport const chalkStderr = createChalk({level: stderrColor ? stderrColor.level : 0});\n\nexport {\n\tstdoutColor as supportsColor,\n\tstderrColor as supportsColorStderr,\n};\n\nexport default chalk;\n", "import { build as buildCommand } from 'vite';\nimport react from '@vitejs/plugin-react';\nimport { build as buildTypes } from './types.js';\nimport path from 'node:path';\nimport {\n  BuildFormat,\n  BuildPlatform,\n  BuildTarget,\n  ViteBuildOptions,\n} from '@srclaunch/types';\nimport { getViteFormatFileExtension } from './formats.js';\nimport chalk from 'chalk';\n\nexport async function build({\n  assets,\n  bundle,\n  format = BuildFormat.ESM,\n  formats = [BuildFormat.ESM, BuildFormat.UMD],\n  input,\n  library = false,\n  optimize,\n  manifest = true,\n  minify = true,\n  output,\n  platform = BuildPlatform.Browser,\n  rootDir,\n  sourcemap = true,\n  target = BuildTarget.ESNext,\n  types = true,\n  webApp,\n}: ViteBuildOptions) {\n  try {\n    const viteFormats = (\n      formats && formats.length > 0\n        ? formats?.map(f => (f === BuildFormat.ESM ? 'es' : f))\n        : [format === BuildFormat.ESM ? 'es' : format]\n    ) as ('cjs' | 'es' | 'iife' | 'umd')[];\n\n    await buildCommand({\n      build: {\n        assetsDir: assets?.directory\n          ? path.join(path.resolve(), assets?.directory)\n          : undefined,\n        emptyOutDir: output?.clean ?? true,\n        outDir: output?.directory ?? 'dist',\n        lib: Boolean(library)\n          ? {\n              entry: path.join(\n                path.resolve(),\n                input?.directory ?? 'src',\n                input?.file ?? 'index.ts',\n              ),\n              formats: viteFormats,\n              name:\n                library && typeof library === 'object'\n                  ? library?.name\n                  : undefined,\n              fileName: format =>\n                `${output?.file ?? 'index'}${getViteFormatFileExtension(\n                  format,\n                )}`,\n            }\n          : false,\n        manifest,\n        minify,\n        rollupOptions: {\n          external: (typeof bundle === 'object'\n            ? bundle.exclude ?? []\n            : []) as string[],\n        },\n        sourcemap,\n        ssrManifest: manifest && webApp?.ssr,\n        target,\n      },\n      configFile: false,\n      envPrefix: 'SRCLAUNCH_',\n      optimizeDeps: {\n        exclude: (optimize?.exclude ?? []) as string[],\n        include: (optimize?.include ?? []) as string[],\n      },\n      plugins: webApp?.react ? [react()] : [],\n      root: rootDir ?? path.resolve(),\n    });\n\n    // console.log('result', result);\n\n    // if (Array.isArray(result) && result.length > 0 && result[0]) {\n    //   for (const output of result) {\n    //     if (Array.isArray(output) && output.length > 0) {\n    //       for (const line of output) {\n    //         if (line.output) {\n    //           for (const line of output.output) {\n    //             if (line.type === 'asset') {\n    //               `Wrote asset ${line.fileName}...`;\n    //             } else {\n    //               console.log(\n    //                 `Wrote chunk ${line.fileName}... ${\n    //                   line.code.length / 1024\n    //                 } kb`,\n    //               );\n    //             }\n    //           }\n    //         }\n    //       }\n    //     }\n    //     //  else if (typeof output === 'object') {\n    //     //   if (output.output) {\n    //     //     for (const line of output.output) {\n    //     //       console.log(line);\n    //     //     }\n    //     //   }\n    //     // }\n    //   }\n    // }\n\n    if (types) {\n      await buildTypes({ input, types, output });\n      console.info(`${chalk.green('\u2714')} compiled types`);\n    }\n\n    // if (result.errors) {\n    //   result.errors.forEach(error => {\n    //     console.error(error.text);\n    //   });\n    // }\n\n    console.info(\n      `${chalk.green('\u2714')} bundled to ${\n        formats && formats.length > 0\n          ? `${chalk.bold(formats.join(', ').toLocaleUpperCase())} formats`\n          : `${chalk.bold(format.toLocaleUpperCase())} format`\n      }`,\n    );\n  } catch (err: any) {\n    console.error(`Error occurred while building: ${err.name}`, err);\n  }\n}\n", "import { Command, CommandType } from '../lib/command.js';\nimport { build as esbuild } from '../lib/build/esbuild.js';\nimport { build as vite } from '../lib/build/vite.js';\nimport {\n  BuildFormat,\n  BuildOptions,\n  BuildTool,\n  ESBuildOptions,\n  Project,\n  ProjectType,\n  ViteBuildOptions,\n} from '@srclaunch/types';\nimport { TypedFlags } from 'meow';\n\ntype BuildFlags = TypedFlags<{\n  clean: {\n    alias: 'c';\n    default: true;\n    description: 'Clean build directory before building';\n    type: 'boolean';\n  };\n}>;\n\nexport default new Command<Project, BuildFlags>({\n  name: 'build',\n  description: 'Commands for building various types of projects',\n  run: async ({ config, flags }: { config: Project; flags: BuildFlags }) => {\n    const options = config.build as BuildOptions | BuildOptions[];\n\n    if (!options) {\n      throw new Error('Missing build configuration');\n    }\n\n    let run = 0;\n    if (typeof options === 'object' && !Array.isArray(options)) {\n      switch (options.tool) {\n        case BuildTool.Vite:\n          await vite({\n            ...options,\n            library:\n              config.type === ProjectType.Library ||\n              config.type === ProjectType.CLIApplication\n                ? {\n                    name: config.name,\n                  }\n                : false,\n          } as ViteBuildOptions);\n          return;\n        case BuildTool.ESBuild:\n        default:\n          const formats = options.formats ?? [BuildFormat.ESM];\n\n          for (const format of formats) {\n            const clean = options.output?.clean ?? run === 0;\n            const types = options.types ?? run === 0;\n\n            await esbuild({\n              ...options,\n              output: {\n                ...options.output,\n                clean,\n              },\n              format: format,\n              types,\n            } as ESBuildOptions);\n\n            run = run + 1;\n          }\n      }\n    } else if (Array.isArray(options)) {\n      for (const build of options) {\n        switch (build.tool) {\n          case BuildTool.Vite:\n            await vite({\n              ...build,\n              library:\n                config.type === ProjectType.Library ||\n                config.type === ProjectType.CLIApplication\n                  ? {\n                      name: config.name,\n                    }\n                  : false,\n            } as ViteBuildOptions);\n            break;\n          case BuildTool.ESBuild:\n          default:\n            const formats = build?.formats ?? [build.format ?? BuildFormat.ESM];\n\n            for (const format of formats) {\n              const clean = build.output?.clean ?? run === 0;\n              const types = build.types ?? run === 0;\n\n              await esbuild({\n                ...build,\n                output: {\n                  ...build.output,\n                  clean,\n                },\n                format,\n                types,\n              } as ESBuildOptions);\n              run = run + 1;\n            }\n        }\n      }\n    }\n  },\n  commands: [\n    new Command<Project, BuildFlags>({\n      name: 'esbuild',\n      description: 'Compiles and optionally bundles a package using esbuild',\n      run: async ({\n        config,\n        flags,\n      }: {\n        config: Project;\n        flags: BuildFlags;\n      }) => {\n        const options = config.build as BuildOptions | BuildOptions[];\n\n        if (!options) {\n          throw new Error('Missing build configuration');\n        }\n\n        let run = 0;\n        if (typeof options === 'object' && !Array.isArray(options)) {\n          if (options.formats && options.formats?.length > 0) {\n            for (const format of options.formats) {\n              const clean = options.output?.clean ?? run === 0;\n              const types = options.types ?? run === 0;\n\n              await esbuild({\n                ...options,\n                output: {\n                  ...options.output,\n                  clean,\n                },\n                format,\n                types,\n              } as ESBuildOptions);\n\n              run = run = 1;\n            }\n          } else {\n            await esbuild(options as ESBuildOptions);\n          }\n        } else if (Array.isArray(options)) {\n          if (options) {\n            for (const build of options) {\n              if (build.formats && build.formats?.length > 0) {\n                for (const format of build.formats) {\n                  const clean =\n                    (build.output?.clean || Boolean(flags.clean)) ?? run === 0;\n                  const types = build.types ?? run === 0;\n\n                  await esbuild({\n                    ...build,\n                    output: {\n                      directory: 'dist',\n                      file: 'index',\n                      ...build.output,\n                      clean,\n                    },\n                    format,\n                    types,\n                  } as ESBuildOptions);\n\n                  run = run = 1;\n                }\n              } else {\n                const clean =\n                  (build.output?.clean || Boolean(flags.clean)) && run === 0;\n                const types = build.types ?? run === 0;\n\n                await esbuild({\n                  ...build,\n                  output: {\n                    directory: 'dist',\n                    file: 'index',\n                    ...build.output,\n                    clean,\n                  },\n                  types,\n                } as ESBuildOptions);\n              }\n            }\n          }\n        }\n      },\n    }),\n    new Command<Project, BuildFlags>({\n      name: 'vite',\n      description: 'Compiles and bundles a package using Vite',\n      run: async ({ config, flags }) => {\n        const options = config.build;\n\n        if (!options) {\n          throw new Error('Missing build configuration');\n        }\n\n        if (typeof options === 'object' && !Array.isArray(options)) {\n          await vite({\n            ...options,\n            library:\n              config.type === ProjectType.Library ||\n              config.type === ProjectType.CLIApplication\n                ? {\n                    name: config.name,\n                  }\n                : false,\n          } as ViteBuildOptions);\n        } else if (Array.isArray(options)) {\n          if (options) {\n            for (const build of options) {\n              await vite({\n                ...build,\n                library:\n                  config.type === ProjectType.Library ||\n                  config.type === ProjectType.CLIApplication\n                    ? {\n                        name: config.name,\n                      }\n                    : false,\n              } as ViteBuildOptions);\n            }\n          }\n        }\n      },\n      type: CommandType.Project,\n    }),\n    new Command({\n      name: 'types',\n      description: 'Builds Typescript definitions',\n      run: async ({ config, flags }) => {},\n    }),\n    new Command({\n      name: 'help',\n      description: 'Shows help for build commands',\n      run: async () => {\n        console.info(\n          'Available build commands are: lib, web-app, web-service, types, and help',\n        );\n      },\n      type: CommandType.Project,\n    }),\n  ],\n});\n", "import { Project } from '@srclaunch/types';\nimport { AnyFlag, TypedFlags } from 'meow';\nimport Git, { SimpleGit } from 'simple-git';\nimport { Command, CommandType } from '../lib/command.js';\nimport { render } from 'ink';\nimport { AppContainer } from '../containers/AppContainer.js';\nimport { InteractiveModeFlag } from '../lib/flags.js';\nimport chalk from 'chalk';\n\nexport default new Command({\n  name: 'changesets',\n  description: 'Manage changesets',\n  commands: [\n    new Command<\n      Project,\n      TypedFlags<\n        InteractiveModeFlag & {\n          message: {\n            alias: 'm';\n            description: 'A message describing the changes';\n            isRequired: true;\n            type: 'string';\n          };\n          scope: {\n            alias: 's';\n            description: 'The scope of the changes';\n            isRequired: true;\n            type: 'string';\n          };\n          type: {\n            alias: 't';\n            description: 'The type of changes made';\n            isRequired: true;\n            type: 'string';\n          };\n        }\n      >\n    >({\n      name: 'add',\n      description: 'Create a changeset',\n      run: async ({ cli, config, flags }) => {\n        const message = flags.message;\n\n        if (flags.interactive) {\n          const { waitUntilExit } = render(\n            <AppContainer\n              initialTab=\"Changes\"\n              cliVersion={cli.pkg.version}\n              flags={flags}\n            />,\n          );\n          await waitUntilExit();\n        } else {\n          try {\n            const git: SimpleGit = Git();\n            await git.add('.');\n            await git.commit(message);\n            console.log(`${chalk.green('\u2714')} added new changeset`);\n          } catch (err) {\n            console.error('commit err', err);\n          }\n        }\n      },\n      type: CommandType.Project,\n    }),\n    new Command<Project>({\n      name: 'list',\n      description: 'List changesets',\n      run: async ({ config, flags }) => {},\n      type: CommandType.Project,\n    }),\n    new Command<Project>({\n      name: 'help',\n      description: 'Show help for changesets',\n      run: async () => {\n        console.info('Available changesets commands are: create, list');\n      },\n      type: CommandType.Project,\n    }),\n  ],\n});\n", "import { Box, Newline, Spacer, Static, Text, useInput } from 'ink';\nimport { TypedFlags } from 'meow';\nimport { ReactElement, useEffect, useState } from 'react';\nimport { Worker } from 'worker_threads';\nimport MultiSelect from 'ink-multi-select';\n\n// import { getAppLabMetadata } from '../applab';\n// import { startThread } from '../worker-thread';\n\nimport { FullScreen } from '../components/FullScreen.js';\nimport { Scrollable } from '../components/Scrollable.js';\nimport { Tab, Tabs } from '../components/Tabs.js';\nimport { Changes } from '../pages/Changes.js';\nimport { Tests } from '../pages/Tests.js';\nimport { Release } from '../pages/Release.js';\nimport { Build } from '../pages/Build.js';\nimport { Overview } from '../pages/Overview.js';\n// import { Tab, Tabs } from './Tabs.js';\n\ntype AppContainerProps = {\n  initialTab?: string;\n  cliVersion?: string;\n  flags?: TypedFlags<{}> & Record<string, unknown>;\n};\n\nexport const AppContainer = ({\n  initialTab,\n  cliVersion,\n}: AppContainerProps): ReactElement => {\n  const [mainOutput, setMainOutput] = useState<string[]>([]);\n  const [serviceStatus, setServiceStatus] = useState<undefined | string>(\n    undefined,\n  );\n\n  const addToLogs = (str: string) => {\n    setMainOutput(currentState => [...currentState, str]);\n  };\n\n  useInput(async (input, key) => {\n    if (input === 'q') {\n      addToLogs('Quitting');\n\n      throw new Error('Quitting');\n      // Exit program\n    }\n\n    // if (input === \"r\") {\n    //   console.info(\"Restarting\");\n    //   await restart();\n    //   process.exit(0);\n    //   // Exit program\n    // }\n\n    if (key.leftArrow) {\n      // Left arrow key pressed\n    }\n  });\n\n  // useEffect(() => {\n  //   setMainScrollCursor(m => (m += 1));\n  // }, [mainOutput.length]);\n\n  useEffect(() => {\n    const handleFlags = async () => {\n      addToLogs(``);\n      // addToLogs('Initializing services...');\n      //\n      // const { name, type } = await getAppLabMetadata();\n      //\n      // setServiceStatus('starting');\n      // addToLogs(`Starting service ${name}...`);\n      //\n      // const thread: Worker = await startThread({\n      //   name,\n      //   type,\n      // });\n      //\n      // thread.on('online', () => {\n      //   addToLogs(`${name} worker online`);\n      // });\n      //\n      // thread.on('message', (message: string) => {\n      //   addToLogs(message);\n      // });\n      //\n      // thread.on('error', async (err: Error) => {\n      //   addToLogs(`ERROR: ${err.name}: ${err.message}`);\n      //\n      //   setServiceStatus('error');\n      // });\n      //\n      // thread.on('exit', async () => {\n      //   setServiceStatus('error');\n      // });\n      //\n      // setServiceStatus('started');\n      // addToLogs(`Service ${name} started`);\n\n      if (serviceStatus) {\n        addToLogs(serviceStatus);\n      }\n    };\n\n    handleFlags();\n  }, []);\n\n  return (\n    <FullScreen\n      borderStyle=\"round\"\n      borderColor=\"lightgrey\"\n      flexDirection=\"column\"\n    >\n      <Tabs>\n        <Tab initial={initialTab === 'Overview'} label=\"Overview\">\n          <Overview />\n        </Tab>\n        <Tab initial={initialTab === 'Build'} label=\"Build\">\n          <Build />\n        </Tab>\n        <Tab initial={initialTab === 'Tests'} label=\"Tests\">\n          <Tests />\n        </Tab>\n        <Tab initial={initialTab === 'Changes'} label=\"Changes\">\n          <Changes />\n        </Tab>\n        <Tab initial={initialTab === 'Release'} label=\"Release\">\n          <Release />\n        </Tab>\n      </Tabs>\n      <Box flexDirection=\"row\">\n        <Spacer />\n        <Box alignItems=\"flex-end\" paddingRight={1}>\n          <Text>{cliVersion}</Text>\n        </Box>\n      </Box>\n    </FullScreen>\n  );\n};\n", "import { Box, BoxProps } from 'ink';\nimport { PropsWithChildren, ReactElement, useEffect, useState } from 'react';\n\ntype FullScreenProps = PropsWithChildren<BoxProps>;\n\nexport const FullScreen = ({\n  children,\n  ...props\n}: FullScreenProps): ReactElement => {\n  const [size, setSize] = useState({\n    columns: process.stdout.columns,\n    rows: process.stdout.rows,\n  });\n\n  useEffect(() => {\n    function onResize() {\n      setSize({\n        columns: process.stdout.columns,\n        rows: process.stdout.rows,\n      });\n    }\n\n    process.stdout.on('resize', onResize);\n    process.stdout.write('\\x1b[?1049h');\n\n    return () => {\n      process.stdout.off('resize', onResize);\n      process.stdout.write('\\x1b[?1049l');\n    };\n  }, []);\n\n  return (\n    <Box width={size.columns} height={size.rows} {...props}>\n      {children}\n    </Box>\n  );\n};\n", "import { Box, BoxProps, Text, useFocus, useFocusManager } from 'ink';\nimport React, {\n  PropsWithChildren,\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Button from './Button.js';\n\ntype TabsProps = PropsWithChildren<BoxProps & { title?: string }>;\n\nexport const Tabs = ({\n  children,\n  title,\n  ...props\n}: TabsProps): ReactElement => {\n  const { enableFocus, focusNext } = useFocusManager();\n  const [activeTab, setActiveTab] = useState(0);\n  const { isFocused } = useFocus({\n    autoFocus: true,\n  });\n\n  useEffect(() => {\n    enableFocus();\n  }, [enableFocus]);\n\n  useEffect(() => {\n    if (isFocused) {\n      focusNext();\n    }\n  }, [isFocused, focusNext]);\n\n  useEffect(() => {\n    // @ts-ignore\n    React.Children.forEach(children, (child: typeof Tab, index) => {\n      // @ts-ignore\n      if (child?.props?.initial) {\n        setActiveTab(index);\n      }\n    });\n  }, [children]);\n  // useEffect(() => {\n  //   console.log;\n  // }, [activeTab]);\n\n  return (\n    <Box flexGrow={1} flexDirection=\"column\" {...props}>\n      {/* Tab navigation */}\n      <Box flexDirection=\"row\" height={1}>\n        <Box paddingLeft={1} flexGrow={1}>\n          {/* @ts-ignore */}\n          {React.Children.map(children, (child: typeof Tab, i) => {\n            return (\n              <Box marginRight={2}>\n                <Button\n                  onFocus={() => setActiveTab(i)}\n                  // @ts-ignore\n                  label={child?.props?.label}\n                  // @ts-ignore\n                  status={child?.props?.status}\n                />\n              </Box>\n            );\n          })}\n        </Box>\n\n        {title && (\n          <Box alignItems=\"flex-end\" paddingRight={1}>\n            <Text>{title}</Text>\n          </Box>\n        )}\n      </Box>\n\n      {/* Tab content */}\n      <Box\n        flexGrow={1}\n        flexDirection=\"column\"\n        borderStyle=\"round\"\n        borderColor=\"black\"\n        width=\"100%\"\n      >\n        {/* @ts-ignore */}\n        {React.Children.map(children, (child1: typeof Tab, i) => {\n          return (\n            <Box\n              display={activeTab === i ? 'flex' : 'none'}\n              flexDirection={'column'}\n            >\n              {React.Children.map(child1, child2 => {\n                return <>{child2}</>;\n              })}\n            </Box>\n          );\n        })}\n      </Box>\n    </Box>\n  );\n};\n\ntype TabProps = PropsWithChildren<{\n  initial?: boolean;\n  label: string;\n  status?: string;\n}>;\n\nexport const Tab = ({ children }: TabProps): ReactElement => {\n  return <>{children}</>;\n};\n", "import { Box, Text, useFocus } from 'ink';\nimport { ReactElement, useEffect } from 'react';\n\ntype ButtonProps = { label: string; onFocus: () => unknown; status?: string };\n\nconst Button = ({ label, onFocus, status }: ButtonProps): ReactElement => {\n  const { isFocused } = useFocus();\n\n  useEffect(() => {\n    if (isFocused) onFocus();\n  }, [isFocused, onFocus]);\n\n  const getStatusOrbColor = () => {\n    switch (status) {\n      case 'started':\n        return `#82d800`;\n      case 'starting':\n      case 'init':\n        return `#ffcc00`;\n      case 'error':\n        return `#cc5222`;\n      default:\n        return `#ffcc00`;\n    }\n  };\n\n  return (\n    <Box height={1}>\n      <Text\n        backgroundColor={isFocused ? 'cyanBright' : undefined}\n        color={isFocused ? '#000000' : 'grayBright'}\n        // bold={isFocused}\n      >\n        {status && <Text color={getStatusOrbColor()}>{' \u25CF'}</Text>}\n\n        <Text> {label} </Text>\n      </Text>\n    </Box>\n  );\n};\n\nexport default Button;\n", "import { Box, Text } from 'ink';\n\nexport const Changes = () => {\n  return (\n    <Box flexGrow={1}>\n      <Box\n        borderStyle=\"round\"\n        borderColor=\"blue\"\n        flexDirection=\"column\"\n        width={30}\n        padding={1}\n        paddingLeft={2}\n      >\n        <Box>\n          <Text>\n            Change type\n            {/* items.length: {items.length} - lineCount: {lineCount} */}\n          </Text>\n        </Box>\n        <Box>\n          <Text>New Feature</Text>\n          <Text>Bugfix</Text>\n          <Text>Documentation</Text>\n          <Text>Formatting</Text>\n          <Text>Refactor</Text>\n          <Text>Performance</Text>\n          <Text>Testing</Text>\n          <Text>Chore</Text>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n", "import { Box } from 'ink';\nimport { useState } from 'react';\nimport { Scrollable } from '../components/Scrollable';\n\nexport const Tests = () => {\n  const [mainOutput, setMainOutput] = useState<string[]>([]);\n\n  const addToLogs = (str: string) => {\n    setMainOutput(currentState => [...currentState, str]);\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <Box flexGrow={1} borderStyle=\"round\" borderColor=\"gray\" marginLeft={1}>\n        <Scrollable items={mainOutput} />\n      </Box>\n    </Box>\n  );\n};\n", "import { Box, DOMElement, measureElement, Text, useInput } from 'ink';\nimport { createRef, ReactElement, useEffect, useState } from 'react';\n\ntype ScrollableProps = { items: string[] };\n\nexport const Scrollable = ({ items }: ScrollableProps): ReactElement => {\n  const [cursor, setCursor] = useState(0);\n  const [lineCount, setLineCount] = useState(0);\n  const [lines, setLines] = useState<\n    {\n      key: number;\n      message: string;\n      visible: boolean;\n    }[]\n  >([]);\n  const [isScrollable, setScrollable] = useState(false);\n  const [autoScroll, setAutoScroll] = useState(true);\n  const [scrollbarHeight, setScrollbarHeight] = useState(1);\n  const [scrollbarOffset, setScrollbarOffset] = useState(0);\n\n  useInput((input, key) => {\n    if (key.upArrow) {\n      if (cursor > 0) setCursor(cursor - 1);\n\n      setAutoScroll(cursor >= items.length - 1);\n    } else if (key.downArrow) {\n      if (lines.length > cursor + 1) setCursor(cursor + 1);\n\n      setAutoScroll(cursor >= items.length - 1);\n    }\n  });\n\n  const ref = createRef<DOMElement>();\n\n  useEffect(() => {\n    const height = Math.ceil((lineCount / lines.length) * 100);\n\n    setScrollbarHeight(height);\n\n    setScrollable(lines.length >= lineCount);\n  }, [lines.length, lineCount]);\n\n  useEffect(() => {\n    if (ref.current) {\n      const height = measureElement(ref.current)?.height;\n\n      setLineCount(height ?? 20);\n    }\n  }, [items]);\n\n  useEffect(() => {\n    if (ref.current) {\n      const height = measureElement(ref.current)?.height;\n\n      setLineCount(height ?? 20);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (lineCount) {\n      setLines(\n        items.map((message, k) => {\n          const alwaysVisible = k < lineCount && cursor < lineCount;\n\n          const visible =\n            alwaysVisible || (k <= cursor && k >= cursor - lineCount);\n\n          return {\n            key: k,\n            message,\n            visible,\n          };\n        }),\n      );\n    }\n  }, [items, cursor, lineCount]);\n\n  const getCursor = (i: number) => {\n    if (i === cursor) {\n      return '\u276F\\u00A0';\n    }\n\n    return '\\u00A0\\u00A0';\n  };\n\n  useEffect(() => {\n    if (autoScroll) setCursor(items.length - 1);\n  }, [items.length, autoScroll]);\n\n  useEffect(() => {\n    const offset = Math.floor((cursor / lines.length) * 100);\n\n    setScrollbarOffset(offset);\n  }, [cursor, lines.length]);\n\n  const getFormattedMessage = (message: string) => {\n    if (message.indexOf('src/') === 0) {\n      return <Text color={'magenta'}>{message}</Text>;\n    }\n\n    return <Text color={'lightGrey'}>{message}</Text>;\n  };\n\n  return (\n    <Box flexDirection={'row'} minHeight={'100%'} minWidth={'100%'}>\n      <Box flexDirection=\"column\" flexGrow={1} ref={ref}>\n        <Box flexDirection={'column'} flexGrow={1}>\n          {lines.map((line, i) => {\n            if (!line.visible) return null;\n\n            return (\n              <Text key={i}>\n                {!line.visible && 'X '}\n                {getCursor(i)}\n                {getFormattedMessage(line.message.toString())}\n              </Text>\n            );\n          })}\n        </Box>\n      </Box>\n\n      {isScrollable && (\n        <Box\n          alignItems={'stretch'}\n          borderStyle={'round'}\n          flexGrow={0}\n          width={1}\n          minHeight={'100%'}\n          flexDirection={'column'}\n        >\n          <Box flexGrow={0} height={`${scrollbarOffset}%`} />\n          <Box\n            borderStyle={'round'}\n            flexGrow={0}\n            width={1}\n            height={`${scrollbarHeight}%`}\n            marginLeft={-1}\n          ></Box>\n        </Box>\n      )}\n    </Box>\n  );\n};\n", "import { Box } from 'ink';\n\nexport const Release = () => {\n  return <Box flexGrow={1}></Box>;\n};\n", "import { Box } from 'ink';\nimport { useState } from 'react';\nimport { Scrollable } from '../components/Scrollable';\n\nexport const Build = () => {\n  const [mainOutput, setMainOutput] = useState<string[]>([]);\n\n  const addToLogs = (str: string) => {\n    setMainOutput(currentState => [...currentState, str]);\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <Box flexGrow={1} borderStyle=\"round\" borderColor=\"gray\" marginLeft={1}>\n        <Scrollable items={mainOutput} />\n      </Box>\n    </Box>\n  );\n};\n", "import { Box } from 'ink';\n\nexport const Overview = () => {\n  return <Box flexGrow={1}></Box>;\n};\n", "import { Project } from '@srclaunch/types';\n// import { render } from 'ink';\n// import { AppContainer } from '../components/AppContainer.js';\nimport { Command, CommandType } from '../lib/command.js';\n\nexport default new Command({\n  name: 'dev',\n  description: 'Development environment commands',\n  commands: [\n    new Command<Project>({\n      name: 'start',\n      description: 'Launches the local development environment.',\n      run: async ({ cli, flags }) => {\n        // const { waitUntilExit } = render(\n        //   <AppContainer cliVersion={cli.pkg.version} flags={flags} />,\n        // );\n        // await waitUntilExit();\n      },\n      type: CommandType.Project,\n    }),\n    new Command<Project>({\n      name: 'help',\n      description: 'Shows help for dev commands',\n      run: async () => {\n        console.info('Available dev commands are: start, help');\n      },\n      type: CommandType.Project,\n    }),\n  ],\n});\n", "import { Command } from '../lib/command.js';\n\nexport default new Command({\n  name: 'help',\n  description: 'Shows help for commands',\n  run: async ({ cli }) => {\n    cli.showHelp();\n  },\n});\n", "import { Workspace } from '@srclaunch/types';\nimport { Command, CommandType } from '../lib/command.js';\n\nexport default new Command({\n  name: 'infrastructure',\n  description: 'Manage infrastructure',\n  commands: [\n    new Command<Workspace>({\n      name: 'deploy',\n      description: 'Deploy infrastructure',\n      run: async ({ config, flags }) => {},\n      type: CommandType.Workspace,\n    }),\n    new Command<Workspace>({\n      name: 'help',\n      description: 'Shows help for infrastructure commands',\n      run: async () => {\n        console.info('Available infrastructure commands are: deploy, help');\n      },\n      type: CommandType.Workspace,\n    }),\n  ],\n});\n", "import fs from 'fs-extra';\nimport path from 'node:path';\n\nimport { constructModelExportIndexScript } from '../exports.js';\n\nexport async function buildSrcLaunchModels(\n  modelsPath: string,\n  projectPath: string,\n): Promise<void> {\n  try {\n    const BUILD_PATH = path.join(path.resolve(), projectPath, 'src');\n\n    await fs.emptyDir(BUILD_PATH);\n\n    const files = await fs.readdir(modelsPath);\n\n    for (const file of files) {\n      const fileContents = await fs.readFile(\n        path.join(modelsPath, file),\n        'utf8',\n      );\n\n      const fieldsPropertyExists = fileContents.includes('fields: {');\n\n      if (!fieldsPropertyExists) {\n        throw new Error(`${file} is missing the fields property.`);\n      }\n\n      let entityFields = `\n    created_date: {\n      label: 'Created Date',\n      required: false,\n      type: Primitives.DateTime,\n    },\n    updated_date: {\n      label: 'Updated Date',\n      required: false,\n      type: Primitives.DateTime,\n    },\n  `;\n\n      const relationshipsStart = fileContents.indexOf('relationships:') + 15;\n      const relationshipsEnd =\n        fileContents.indexOf('}', relationshipsStart) + 1;\n      const relationships = fileContents.slice(\n        relationshipsStart,\n        relationshipsEnd,\n      );\n\n      if (relationships) {\n        const belongsToStart = relationships.indexOf('belongsTo:') + 10;\n        const belongsToEnd = relationships.indexOf(']', belongsToStart) + 1;\n        const belongsTo = relationships.slice(belongsToStart, belongsToEnd);\n\n        if (belongsTo) {\n          const transformed = belongsTo\n            .replace(/'/g, '\"')\n            .replace(/ {2}|\\r\\n|\\n|\\r/g, '')\n            .replace(/\\s/g, '')\n            .replace(',]', ']');\n\n          const belongsToFields = JSON.parse(transformed);\n\n          for (const relationship of belongsToFields) {\n            entityFields += `\n        ${relationship}Id: {\n          label: '${relationship}',\n          required: false,\n          type: Primitives.UUID\n        },\n        `;\n          }\n        }\n      }\n\n      const updatedFileContents = fileContents.replace(\n        'fields: {',\n        `fields: {\n        ${entityFields}`,\n      );\n\n      // logger.info(`Writing ${file} model`);\n\n      await fs.writeFile(\n        path.join(BUILD_PATH, file),\n        updatedFileContents,\n        'utf8',\n      );\n    }\n\n    // logger.info(`Writing ${BUILD_PATH}/index.ts`);\n\n    const buildModels = await fs.readdir(BUILD_PATH);\n    const models = buildModels.filter(file => {\n      return file.slice(-3) === '.ts' && file.split('.ts')[0] !== 'index';\n    });\n\n    const indexFileContent = constructModelExportIndexScript(\n      models,\n      'srclaunch',\n    );\n\n    await fs.writeFile(\n      path.join(BUILD_PATH, 'index.ts'),\n      indexFileContent,\n      'utf8',\n    );\n  } catch (error: any) {\n    console.error(error);\n    throw error;\n  }\n}\n", "export function constructModelExportIndexScript(\n  models: string[],\n  modelFormat: 'sequelize' | 'json' | 'srclaunch' | 'ts' = 'srclaunch',\n): string | void {\n  try {\n    let indexFileExports = '';\n    let indexFileImports = '';\n    let sequelizeDefaultExports = 'export default {';\n\n    const fileExtension = `.${\n      modelFormat === 'srclaunch' || modelFormat === 'sequelize' ? 'ts' : 'json'\n    }`;\n\n    for (const model of models) {\n      const modelName = model.split(fileExtension)[0];\n\n      if (modelFormat === 'json') {\n        indexFileImports += `import ${modelName} from './${modelName}.json';\\n`;\n      } else if (modelFormat === 'sequelize') {\n        indexFileImports += `import ${modelName}Init, { ${modelName} } from './${modelName}';\\n`;\n        sequelizeDefaultExports += `${modelName}: ${modelName}Init,`;\n      } else {\n        indexFileImports += `import { ${modelName} } from './${modelName}.js';\\n`;\n      }\n\n      indexFileExports += `  ${modelName},\\n`;\n    }\n\n    if (modelFormat === 'sequelize') {\n      sequelizeDefaultExports += '};';\n    }\n\n    return `${indexFileImports}\\nexport {\\n${indexFileExports}};\\n${\n      modelFormat === 'sequelize' ? sequelizeDefaultExports : ''\n    }\\n`;\n  } catch (err: any) {\n    console.error(err);\n  }\n}\n\nexport async function constructAppLabModelExports() {\n  return `import { Model } from '@srclaunch/types';\nexport * from \"./srclaunch/index\";\n\nimport * as Models from \"./srclaunch/index\";\n\nexport function getModels(): Record<string, Model> {\n  return Models as Record<string, Model>;\n}`;\n}\n", "import fs from 'fs-extra';\nimport path from 'node:path';\n\nimport { constructAppLabModelExports } from '../exports.js';\nimport {\n  getDocumentModel,\n  getInvoiceModel,\n  getMessageModel,\n  getOrganizationModel,\n  getPaymentMethodModel,\n  getPaymentModel,\n  getPersonModel,\n  getSubscriptionModel,\n  getTeamModel,\n  getUserGroupModel,\n  getUserModel,\n  getUserRoleModel,\n} from './models.js';\n\nexport async function copyStubModels() {\n  try {\n    const BUILD_PATH = path.join(path.resolve(), '.applab/dependencies/models');\n\n    const applabModelPath = path.join(BUILD_PATH, 'src');\n\n    // await fs.writeFile(\n    //   path.join(applabModelPath, 'Message.ts'),\n    //   getMessageModel(),\n    //   'utf8',\n    // );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'Organization.ts'),\n      getOrganizationModel(),\n      'utf8',\n    );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'Team.ts'),\n      getTeamModel(),\n      'utf8',\n    );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'Document.ts'),\n      getDocumentModel(),\n      'utf8',\n    );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'Payment.ts'),\n      getPaymentModel(),\n      'utf8',\n    );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'Invoice.ts'),\n      getInvoiceModel(),\n      'utf8',\n    );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'PaymentMethod.ts'),\n      getPaymentMethodModel(),\n      'utf8',\n    );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'Person.ts'),\n      getPersonModel(),\n      'utf8',\n    );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'Subscription.ts'),\n      getSubscriptionModel(),\n      'utf8',\n    );\n\n    await fs.writeFile(\n      path.join(applabModelPath, 'User.ts'),\n      getUserModel(),\n      'utf8',\n    );\n    await fs.writeFile(\n      path.join(applabModelPath, 'UserGroup.ts'),\n      getUserGroupModel(),\n      'utf8',\n    );\n    await fs.writeFile(\n      path.join(applabModelPath, 'UserRole.ts'),\n      getUserRoleModel(),\n      'utf8',\n    );\n\n    // const modelExportsIndexFile = await constructAppLabModelExports();\n    // await fs.writeFile(\n    //   path.join(BUILD_PATH, 'src', 'index.ts'),\n    //   modelExportsIndexFile,\n    //   'utf8',\n    // );\n  } catch (error: any) {\n    console.error(error);\n  }\n}\n", "export function getDocumentModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\n  export const Document: ModelProps = {\n    fields: {\n      name: {\n        label: \"Name\",\n        type: Primitives.String,\n        required: true,\n      },\n      description: {\n        label: \"Description\",\n        type: Primitives.String,\n        required: true,\n      }\n    },\n    name: \"Document\",\n    relationships: {\n      belongsTo: [\"Organization\", \"Invoice\", \"User\"],\n    },\n  };\n  `;\n}\n\nexport function getMessageModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\n  export const Message: ModelProps = {\n    fields: {\n      message: {\n        label: \"Message\",\n        type: Primitives.String,\n        required: true,\n      },\n      recipient: {\n        label: \"Recipient\",\n        type: Primitives.String,\n        required: false,\n      }\n    },\n    name: \"Message\",\n    relationships: {\n      belongsTo: [\"Organization\", \"User\"],\n    },\n  };`;\n}\n\nexport function getInvoiceModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\n  export const Invoice: ModelProps = {\n    fields: {\n      amount: {\n        label: \"Amount\",\n        type: Primitives.Number,\n        required: true,\n      },\n      currency: {\n        label: \"Currency\",\n        type: Primitives.CurrencyCode,\n        required: true,\n      },\n      date: {\n        label: \"Date\",\n        type: Primitives.Date,\n        required: true,\n      },\n      due_date: {\n        label: \"Due Date\",\n        type: Primitives.Date,\n        required: true,\n      },\n      notes: {\n        label: \"Notes\",\n        type: Primitives.String,\n      },\n      status: {\n        label: \"Status\",\n        type: Primitives.String,\n        required: true,\n      },\n    },\n    name: \"Invoice\",\n    relationships: {\n      belongsTo: [\"Organization\", \"Payment\", \"User\"],\n    },\n  };`;\n}\n\nexport function getOrganizationModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\nexport const Organization: ModelProps = {\n  fields: {\n    description: {\n      label: \"Description\",\n      type: Primitives.String,\n    },\n    name: {\n      label: \"Name\",\n      type: Primitives.String,\n    },\n  },\n  name: \"Organization\",\n  relationships: {},\n};`;\n}\n\nexport function getPaymentModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\n  export const Payment: ModelProps = {\n    fields: {\n      amount: {\n        label: \"Amount\",\n        type: Primitives.Number,\n        required: true,\n      },\n      currency: {\n        label: \"Currency\",\n        type: Primitives.CurrencyCode,\n        required: true,\n      },\n      date: {\n        label: \"Date\",\n        type: Primitives.Date,\n        required: true,\n      },\n      failure_reason: {\n        label: \"Failure Reason\",\n        type: Primitives.Menu,\n        menu: [\n          {\n            label: 'Insufficient Funds',\n            value: 'insufficient-funds',\n          },\n          {\n            label: 'Invalid Amount',\n            value: 'invalid-amount',\n          },\n          {\n            label: 'Invalid Currency',\n            value: 'invalid-currency',\n          },\n          {\n            label: 'Invalid Card',\n            value: 'invalid-card',\n          },\n          {\n            label: 'Invalid Card Expiry',\n            value: 'invalid-card-expiry',\n          },\n          {\n            label: 'Invalid Card Number',\n            value: 'invalid-card-number',\n          },\n          {\n            label: 'Invalid Card Security Code',\n            value: 'invalid-card-security-code',\n          },\n          {\n            label: 'Invalid Card Holder',\n            value: 'invalid-card-holder',\n          },\n          {\n            label: 'Invalid Card Address',\n            value: 'invalid-card-address',\n          },\n        ]\n      },\n      notes: {\n        label: \"Notes\",\n        type: Primitives.String,\n        required: true,\n      },\n      status: {\n        label: \"Status\",\n        type: Primitives.Menu,\n        required: true,\n        menu: [\n          {\n            label: \"Paid\",\n            value: \"paid\",\n          },\n          {\n            label: \"Failure\",\n            value: \"failure\",\n          },\n          {\n            label: \"Pending\",\n            value: \"pending\",\n          },\n        ],\n      }\n    },\n    name: \"Payment\",\n    relationships: {\n      belongsTo: [\"Organization\", \"User\"],\n    },\n  };`;\n}\n\nexport function getPaymentMethodModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\nexport const PaymentMethod: ModelProps = {\n  fields: {\n    default: {\n      label: \"Default\",\n      type: Primitives.Boolean,\n    },\n    masked_number: {\n      label: \"Number\",\n      type: Primitives.String,\n    },\n    name: {\n      label: \"Name\",\n      type: Primitives.String,\n    },\n    type: {\n      label: \"Type\",\n      menu: [\n        {\n          label: \"Bank Transfer\",\n          value: \"bank-transfer\",\n        },\n        {\n          label: \"Credit Card\",\n          value: \"credit-card\",\n        },\n        {\n          label: \"Crypto\",\n          value: \"crypto\",\n        },\n      ],\n      type: Primitives.Menu,\n    },\n  },\n  name: \"PaymentMethod\",\n  relationships: {\n    belongsTo: [\"Organization\", \"Payment\", \"Team\", \"User\"],\n  },\n};`;\n}\n\nexport function getPersonModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\nexport const Person: ModelProps = {\n  fields: {\n    analytics: {\n      label: \"Analytics\",\n      type: Primitives.JSON,\n    },\n    billing: {\n      label: \"Billing Details\",\n      type: Primitives.JSON,\n    },\n  },\n  name: \"Person\",\n  relationships: {\n    hasMany: [\"Event\"],\n    hasOne: [\"User\"],\n  },\n};`;\n}\n\nexport function getSubscriptionModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\nexport const Subscription: ModelProps = {\n  fields: {\n    status: {\n      label: \"Status\",\n      menu: [\n        {\n          label: \"Active\",\n          value: \"active\",\n        },\n        {\n          label: \"Expired\",\n          value: \"expired\",\n        },\n        {\n          label: \"Canceled\",\n          value: \"canceled\",\n        },\n      ],\n      type: Primitives.Menu,\n    },\n    cancel_date: {\n      label: \"Cancel date\",\n      type: Primitives.DateTime,\n    },\n    expiration_date: {\n      label: \"Expiration date\",\n      type: Primitives.DateTime,\n    },\n    renewal_date: {\n      label: \"Renewal date\",\n      type: Primitives.DateTime,\n    },\n    start_date: {\n      label: \"Start date\",\n      type: Primitives.DateTime,\n    },\n  },\n  name: \"Subscription\",\n  relationships: {\n    belongsTo: [\"Organization\", \"Product\", \"Team\", \"User\"],\n  },\n};`;\n}\n\n\nexport function getTeamModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\nexport const Team: ModelProps = {\n  fields: {\n    description: {\n      label: \"Description\",\n      type: Primitives.String,\n    },\n    name: {\n      label: \"Name\",\n      type: Primitives.String,\n    },\n  },\n  name: \"Team\",\n  relationships: {\n    belongsTo: [\"Organization\"],\n  },\n};`;\n}\n\nexport function getUserModel() {\n  return `import {\n  CurrencyCode,\n  LanguageCode,\n  LocaleCode,\n  ModelProps,\n  Primitives,\n} from \"@srclaunch/types\";\n\nexport const User: ModelProps = {\n  description: \"A user that signs into the application\",\n  fields: {\n    access: {\n      label: \"Access Details\",\n      type: Primitives.JSON,\n    },\n    cognito_id: {\n      label: \"Cognito ID\",\n      type: Primitives.String,\n    },\n    membership: {\n      label: \"Membership\",\n      type: Primitives.JSON,\n    },\n    onboarding: {\n      label: \"Onboarding\",\n      type: Primitives.JSON,\n    },\n    preferences: {\n      defaultValue: {\n        accessibility: {\n          outlines: false,\n        },\n        localization: {\n          currency: CurrencyCode.UnitedStatesDollar,\n          language: LanguageCode.English,\n          locale: LocaleCode.EnglishUnitedStates,\n        },\n        look_and_feel: {\n          theme: \"light\",\n        },\n      },\n      label: \"Preferences\",\n      type: Primitives.JSON,\n    },\n  },\n  name: \"User\",\n  relationships: {\n    belongsTo: [\"Person\", \"Team\"]\n  },\n};`;\n}\n\nexport function getUserGroupModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\nexport const UserGroup: ModelProps = {\n  fields: {\n    description: {\n      label: \"Description\",\n      type: Primitives.String,\n    },\n    name: {\n      label: \"Name\",\n      type: Primitives.String,\n    },\n  },\n  name: \"UserGroup\",\n  relationships: {\n    belongsTo: [\"Organization\", \"Team\"],\n  },\n};`;\n}\n\nexport function getUserRoleModel() {\n  return `import { ModelProps, Primitives } from \"@srclaunch/types\";\n\nexport const UserRole: ModelProps = {\n  fields: {\n    description: {\n      label: \"Description\",\n      type: Primitives.String,\n    },\n    name: {\n      label: \"Name\",\n      type: Primitives.String,\n    },\n  },\n  name: \"UserRole\",\n  relationships: {\n    belongsTo: [\"Organization\", \"Team\"],\n  },\n};`;\n}\n", "// import fs from 'fs-extra';\n// import path from 'node:path';\n// import { Exception } from '@srclaunch/exceptions';\nimport { BuildFormat, Workspace } from '@srclaunch/types';\nimport { build as esbuild } from '../../build/esbuild.js';\n// import { build as vite, ViteBuildOptions } from '../../build/vite';\n// import { build as buildTypes, TypesBuildOptions } from '../../build/types';\n// import { cleanModels } from './clean';\nimport { buildSrcLaunchModels } from './outputs/srclaunch.js';\n// import { buildHttpClient } from './outputs/http-client';\n// // import { buildJSONModels } from './outputs/json';\n// import { buildReduxSlices } from './outputs/redux';\n// import { buildSequelizeModels } from './outputs/sequelize';\n// import { buildModelTypes } from './outputs/types';\nimport { copyStubModels } from './stubs/index.js';\n\nexport type ModelsBuildOptions = {\n  paths: {\n    dependencies: Workspace['dependencies'];\n  };\n};\n\nexport async function buildModels(\n  path: string,\n  { dependencies }: { dependencies: Workspace['dependencies'] },\n) {\n  console.info('Building Core Object dependencies...');\n\n  console.info('Adding out of box Core Objects...');\n  await copyStubModels();\n\n  console.info('Building SrcLaunch models...');\n  await buildSrcLaunchModels(path, dependencies.models.path);\n  await esbuild({\n    format: BuildFormat.ESM,\n    rootDir: dependencies.models.path,\n  });\n\n  // console.info('Creating model type definitions...');\n  // await buildModelTypes(projectConfig.dependencies.types.path);\n  // await buildTypes(projectConfig.dependencies.types.path);\n\n  // console.info('Creating Sequelize models...');\n  // await buildSequelizeModels(\n  //   projectConfig.dependencies['sequelize-models'].path,\n  // );\n  // await buildProject(projectConfig.dependencies['sequelize-models'].path);\n\n  // console.info('Building HTTP client...');\n  // await buildHttpClient({\n  //   httpClientProjectName: projectConfig.dependencies['http-client'].repo,\n  //   modelsPath: projectConfig.dependencies.models.path,\n  //   path: projectConfig.dependencies['http-client'].path,\n  //   typesProjectName: projectConfig.dependencies.types.repo,\n  // });\n  // await buildProject(projectConfig.dependencies['http-client'].path);\n\n  // console.info('Building Redux state...');\n  // await buildReduxSlices({\n  //   httpClientProjectName: projectConfig.dependencies['http-client'].repo,\n  //   projectPath: projectConfig.dependencies['redux-state'].path,\n  //   typesProjectName: projectConfig.dependencies.types.repo,\n  // });\n  // await buildProject(projectConfig.dependencies['redux-state'].path);\n}\n", "import fs from 'fs-extra';\nimport path from 'path';\n\nexport async function listModels() {\n  const modelsPath = path.join('models');\n\n  const files = fs.readdirSync(modelsPath).filter(file => {\n    return file.slice(-3) === '.ts' && file.split('.ts')[0] !== 'index';\n  });\n\n  console.info(files.map(file => file.split('.ts')[0]).toString());\n}\n", "import fs from 'fs-extra';\nimport path from 'node:path';\n\nexport async function cleanModels() {\n  try {\n    const MODEL_DEPS_PATH = path.join(path.resolve(), 'dependencies/models');\n\n    await fs.emptyDir(path.join(MODEL_DEPS_PATH, 'src'));\n\n    // const TYPES_DEPS_PATH = path.join(\n    //   path.resolve(),\n    //   APPLAB_DIRECTORY,\n    //   'dependencies/types',\n    // );\n    // const SEQUELIZE_DEPS_PATH = path.join(\n    //   path.resolve(),\n    //   APPLAB_DIRECTORY,\n    //   'dependencies/sequelize-models',\n    // );\n\n    // await fs.emptyDir(path.join(MODEL_DEPS_PATH, 'src', 'applab'));\n    // await fs.emptyDir(path.join(MODEL_DEPS_PATH, 'src', 'json'));\n    // await fs.emptyDir(path.join(TYPES_DEPS_PATH, 'src'));\n    // await fs.emptyDir(path.join(SEQUELIZE_DEPS_PATH, 'src'));\n  } catch (error: any) {\n    console.error(error);\n  }\n}\n", "import { Command, CommandType } from '../lib/command.js';\n\nimport { buildModels } from '../lib/models/build/index.js';\nimport { listModels } from '../lib/models/list.js';\nimport { cleanModels } from '../lib/models/build/clean.js';\nimport { Project, Workspace } from '@srclaunch/types';\nimport path from 'path';\n\nexport default new Command({\n  name: '',\n  description: '',\n  commands: [\n    new Command<Workspace>({\n      name: 'clean',\n      description: '',\n      run: async ({ config, flags }) => {\n        await cleanModels();\n      },\n      type: CommandType.Workspace,\n    }),\n    new Command<Workspace>({\n      name: 'create',\n      description: '',\n      run: async ({ config, flags }) => {},\n      type: CommandType.Workspace,\n    }),\n    new Command<Workspace>({\n      name: 'build',\n      description: '',\n      run: async ({ config, flags }) => {\n        await buildModels(\n          path.join(path.resolve(), config.models?.path ?? 'models'),\n          {\n            dependencies: config.dependencies,\n          },\n        );\n      },\n      type: CommandType.Workspace,\n    }),\n    new Command<Workspace>({\n      name: 'list',\n      description: '',\n      run: async ({ config, flags }) => {\n        await listModels();\n      },\n      type: CommandType.Workspace,\n    }),\n    new Command<Workspace>({\n      name: 'help',\n      description: 'Shows help for model commands',\n      run: async () => {\n        console.info(\n          'Available model commands are: clean, build, list, and help.',\n        );\n      },\n      type: CommandType.Workspace,\n    }),\n  ],\n});\n", "import { Project } from '@srclaunch/types';\nimport { Command, CommandType } from '../lib/command.js';\n\nexport default new Command({\n  name: 'preview',\n  description:\n    'Creates a preview of the production build with currently pending changesets',\n  commands: [\n    new Command<Project>({\n      name: 'start',\n      description:\n        'Builds a preview of the production build, and serves locally on the port provided in the project configuration file',\n      run: async () => {},\n      type: CommandType.Project,\n    }),\n    new Command<Project>({\n      name: 'help',\n      description: 'Shows help for preview commands',\n      run: async () => {\n        console.info('Available preview commands are: help');\n      },\n      type: CommandType.Project,\n    }),\n  ],\n});\n", "import { Workspace } from '@srclaunch/types';\nimport { Command, CommandType } from '../lib/command.js';\n\nexport default new Command({\n  name: 'projects',\n  description: 'Manage projects',\n  commands: [\n    new Command<Workspace>({\n      name: 'create',\n      description: 'Create a new SrcLaunch project',\n      run: async ({ config, flags }) => {},\n      type: CommandType.Workspace,\n    }),\n    new Command<Workspace>({\n      name: 'help',\n      description: 'Shows help for projects commands',\n      run: async () => {\n        console.info('Available projects commands are: create, help');\n      },\n      type: CommandType.Workspace,\n    }),\n  ],\n});\n", "import { Project } from '@srclaunch/types';\nimport standardVersion from 'standard-version';\nimport Git, { SimpleGit } from 'simple-git';\nimport { Command, CommandType } from '../lib/command.js';\nimport chalk from 'chalk';\n\nexport default new Command<Project>({\n  name: 'release',\n  description: 'Create a release',\n  run: async ({ config }: { config: Project }) => {\n    try {\n      const git: SimpleGit = Git();\n      const currentBranch = await (await git.branchLocal()).current;\n\n      const currentRepo = await (\n        await git.getRemotes()\n      ).find(remote => remote.name === 'origin');\n\n      await standardVersion({\n        noVerify: true,\n        infile: 'CHANGELOG.md',\n        silent: false,\n      });\n\n      const result = await git.push(\n        currentRepo?.name ?? 'origin',\n        currentBranch,\n        {\n          '--follow-tags': null,\n        },\n      );\n\n      console.log(\n        `${chalk.green('\u2714')} pushed release to ${chalk.bold(\n          result.repo,\n        )} on branch ${chalk.bold(currentBranch)}`,\n      );\n    } catch (err) {\n      console.error('err', err);\n    }\n  },\n  type: CommandType.Project,\n  commands: [\n    new Command<Project>({\n      name: 'help',\n      description: 'Shows help for release commands',\n      run: async () => {\n        console.info('Available release commands are: create, help');\n      },\n      type: CommandType.Project,\n    }),\n  ],\n});\n", "var Activities = /* @__PURE__ */ ((Activities2) => {\n  Activities2[\"Comment\"] = \"comment\";\n  Activities2[\"Create\"] = \"create\";\n  Activities2[\"Delete\"] = \"delete\";\n  Activities2[\"Edit\"] = \"edit\";\n  Activities2[\"Invoice\"] = \"invoice\";\n  Activities2[\"Message\"] = \"message\";\n  Activities2[\"PageView\"] = \"pageView\";\n  Activities2[\"Paid\"] = \"paid\";\n  Activities2[\"Payment\"] = \"payment\";\n  Activities2[\"Purchase\"] = \"purchase\";\n  Activities2[\"Referral\"] = \"referral\";\n  Activities2[\"Renewal\"] = \"renewal\";\n  Activities2[\"Signup\"] = \"signup\";\n  Activities2[\"Subscription\"] = \"subscription\";\n  Activities2[\"Upgrade\"] = \"upgrade\";\n  return Activities2;\n})(Activities || {});\n\nvar PaymentIntentStatus = /* @__PURE__ */ ((PaymentIntentStatus2) => {\n  PaymentIntentStatus2[\"RequiresPaymentMethod\"] = \"requires_payment_method\";\n  PaymentIntentStatus2[\"RequiresConfirmation\"] = \"requires_confirmation\";\n  PaymentIntentStatus2[\"RequiresAction\"] = \"requires_action\";\n  PaymentIntentStatus2[\"Processing\"] = \"processing\";\n  PaymentIntentStatus2[\"RequiresCapture\"] = \"requires_capture\";\n  PaymentIntentStatus2[\"Canceled\"] = \"canceled\";\n  PaymentIntentStatus2[\"Succeeded\"] = \"succeeded\";\n  return PaymentIntentStatus2;\n})(PaymentIntentStatus || {});\n\nvar SubscriptionStatus = /* @__PURE__ */ ((SubscriptionStatus2) => {\n  SubscriptionStatus2[\"Incomplete\"] = \"incomplete\";\n  SubscriptionStatus2[\"IncompleteExpired\"] = \"incomplete_expired\";\n  SubscriptionStatus2[\"Trialing\"] = \"trialing\";\n  SubscriptionStatus2[\"Active\"] = \"active\";\n  SubscriptionStatus2[\"PastDue\"] = \"past_due\";\n  SubscriptionStatus2[\"Canceled\"] = \"canceled\";\n  SubscriptionStatus2[\"Unpaid\"] = \"unpaid\";\n  return SubscriptionStatus2;\n})(SubscriptionStatus || {});\nvar SubscriptionPlanDuration = /* @__PURE__ */ ((SubscriptionPlanDuration2) => {\n  SubscriptionPlanDuration2[\"Monthly\"] = \"monthly\";\n  SubscriptionPlanDuration2[\"Quarterly\"] = \"quarterly\";\n  SubscriptionPlanDuration2[\"Yearly\"] = \"yearly\";\n  SubscriptionPlanDuration2[\"Lifetime\"] = \"lifetime\";\n  return SubscriptionPlanDuration2;\n})(SubscriptionPlanDuration || {});\n\nvar ChatMessageStatus = /* @__PURE__ */ ((ChatMessageStatus2) => {\n  ChatMessageStatus2[\"Delivered\"] = \"delivered\";\n  ChatMessageStatus2[\"Read\"] = \"read\";\n  ChatMessageStatus2[\"Sending\"] = \"sending\";\n  ChatMessageStatus2[\"Sent\"] = \"sent\";\n  return ChatMessageStatus2;\n})(ChatMessageStatus || {});\nvar ChatMessageType = /* @__PURE__ */ ((ChatMessageType2) => {\n  ChatMessageType2[\"Audio\"] = \"audio\";\n  ChatMessageType2[\"File\"] = \"file\";\n  ChatMessageType2[\"Image\"] = \"image\";\n  ChatMessageType2[\"Text\"] = \"text\";\n  ChatMessageType2[\"Video\"] = \"video\";\n  return ChatMessageType2;\n})(ChatMessageType || {});\nvar ChatMessageAttachmentType = /* @__PURE__ */ ((ChatMessageAttachmentType2) => {\n  ChatMessageAttachmentType2[\"Audio\"] = \"audio\";\n  ChatMessageAttachmentType2[\"File\"] = \"file\";\n  ChatMessageAttachmentType2[\"Image\"] = \"image\";\n  ChatMessageAttachmentType2[\"Video\"] = \"video\";\n  return ChatMessageAttachmentType2;\n})(ChatMessageAttachmentType || {});\nvar ChatMessageReactionType = /* @__PURE__ */ ((ChatMessageReactionType2) => {\n  ChatMessageReactionType2[\"Angry\"] = \"angry\";\n  ChatMessageReactionType2[\"Laugh\"] = \"laugh\";\n  ChatMessageReactionType2[\"Like\"] = \"like\";\n  ChatMessageReactionType2[\"Love\"] = \"love\";\n  ChatMessageReactionType2[\"Sad\"] = \"sad\";\n  ChatMessageReactionType2[\"Wow\"] = \"wow\";\n  ChatMessageReactionType2[\"Wink\"] = \"wink\";\n  ChatMessageReactionType2[\"Yay\"] = \"yay\";\n  return ChatMessageReactionType2;\n})(ChatMessageReactionType || {});\n\nvar CommunicationMedium = /* @__PURE__ */ ((CommunicationMedium2) => {\n  CommunicationMedium2[\"Email\"] = \"email\";\n  CommunicationMedium2[\"PhoneNumber\"] = \"phone_number\";\n  return CommunicationMedium2;\n})(CommunicationMedium || {});\n\nvar LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n  LogLevel2[\"Analytics\"] = \"analytics\";\n  LogLevel2[\"Critical\"] = \"critical\";\n  LogLevel2[\"Debug\"] = \"debug\";\n  LogLevel2[\"Exception\"] = \"exception\";\n  LogLevel2[\"Http\"] = \"http\";\n  LogLevel2[\"Info\"] = \"info\";\n  LogLevel2[\"Warning\"] = \"warning\";\n  return LogLevel2;\n})(LogLevel || {});\n\nvar HttpRequestMethod = /* @__PURE__ */ ((HttpRequestMethod2) => {\n  HttpRequestMethod2[\"Delete\"] = \"delete\";\n  HttpRequestMethod2[\"Get\"] = \"get\";\n  HttpRequestMethod2[\"Head\"] = \"head\";\n  HttpRequestMethod2[\"Patch\"] = \"patch\";\n  HttpRequestMethod2[\"Post\"] = \"post\";\n  HttpRequestMethod2[\"Put\"] = \"put\";\n  return HttpRequestMethod2;\n})(HttpRequestMethod || {});\nvar HttpResponseCode = /* @__PURE__ */ ((HttpResponseCode2) => {\n  HttpResponseCode2[HttpResponseCode2[\"CONTINUE\"] = 100] = \"CONTINUE\";\n  HttpResponseCode2[HttpResponseCode2[\"SWITCHING_PROTOCOLS\"] = 101] = \"SWITCHING_PROTOCOLS\";\n  HttpResponseCode2[HttpResponseCode2[\"PROCESSING\"] = 102] = \"PROCESSING\";\n  HttpResponseCode2[HttpResponseCode2[\"OK\"] = 200] = \"OK\";\n  HttpResponseCode2[HttpResponseCode2[\"CREATED\"] = 201] = \"CREATED\";\n  HttpResponseCode2[HttpResponseCode2[\"ACCEPTED\"] = 202] = \"ACCEPTED\";\n  HttpResponseCode2[HttpResponseCode2[\"NON_AUTHORITATIVE_INFORMATION\"] = 203] = \"NON_AUTHORITATIVE_INFORMATION\";\n  HttpResponseCode2[HttpResponseCode2[\"NO_CONTENT\"] = 204] = \"NO_CONTENT\";\n  HttpResponseCode2[HttpResponseCode2[\"RESET_CONTENT\"] = 205] = \"RESET_CONTENT\";\n  HttpResponseCode2[HttpResponseCode2[\"PARTIAL_CONTENT\"] = 206] = \"PARTIAL_CONTENT\";\n  HttpResponseCode2[HttpResponseCode2[\"MULTI_STATUS\"] = 207] = \"MULTI_STATUS\";\n  HttpResponseCode2[HttpResponseCode2[\"ALREADY_REPORTED\"] = 208] = \"ALREADY_REPORTED\";\n  HttpResponseCode2[HttpResponseCode2[\"IM_USED\"] = 226] = \"IM_USED\";\n  HttpResponseCode2[HttpResponseCode2[\"MULTIPLE_CHOICES\"] = 300] = \"MULTIPLE_CHOICES\";\n  HttpResponseCode2[HttpResponseCode2[\"MOVED_PERMANENTLY\"] = 301] = \"MOVED_PERMANENTLY\";\n  HttpResponseCode2[HttpResponseCode2[\"FOUND\"] = 302] = \"FOUND\";\n  HttpResponseCode2[HttpResponseCode2[\"SEE_OTHER\"] = 303] = \"SEE_OTHER\";\n  HttpResponseCode2[HttpResponseCode2[\"NOT_MODIFIED\"] = 304] = \"NOT_MODIFIED\";\n  HttpResponseCode2[HttpResponseCode2[\"USE_PROXY\"] = 305] = \"USE_PROXY\";\n  HttpResponseCode2[HttpResponseCode2[\"SWITCH_PROXY\"] = 306] = \"SWITCH_PROXY\";\n  HttpResponseCode2[HttpResponseCode2[\"TEMPORARY_REDIRECT\"] = 307] = \"TEMPORARY_REDIRECT\";\n  HttpResponseCode2[HttpResponseCode2[\"PERMANENT_REDIRECT\"] = 308] = \"PERMANENT_REDIRECT\";\n  HttpResponseCode2[HttpResponseCode2[\"BAD_REQUEST\"] = 400] = \"BAD_REQUEST\";\n  HttpResponseCode2[HttpResponseCode2[\"UNAUTHORIZED\"] = 401] = \"UNAUTHORIZED\";\n  HttpResponseCode2[HttpResponseCode2[\"PAYMENT_REQUIRED\"] = 402] = \"PAYMENT_REQUIRED\";\n  HttpResponseCode2[HttpResponseCode2[\"FORBIDDEN\"] = 403] = \"FORBIDDEN\";\n  HttpResponseCode2[HttpResponseCode2[\"NOT_FOUND\"] = 404] = \"NOT_FOUND\";\n  HttpResponseCode2[HttpResponseCode2[\"METHOD_NOT_ALLOWED\"] = 405] = \"METHOD_NOT_ALLOWED\";\n  HttpResponseCode2[HttpResponseCode2[\"NOT_ACCEPTABLE\"] = 406] = \"NOT_ACCEPTABLE\";\n  HttpResponseCode2[HttpResponseCode2[\"PROXY_AUTHENTICATION_REQUIRED\"] = 407] = \"PROXY_AUTHENTICATION_REQUIRED\";\n  HttpResponseCode2[HttpResponseCode2[\"REQUEST_TIMEOUT\"] = 408] = \"REQUEST_TIMEOUT\";\n  HttpResponseCode2[HttpResponseCode2[\"CONFLICT\"] = 409] = \"CONFLICT\";\n  HttpResponseCode2[HttpResponseCode2[\"GONE\"] = 410] = \"GONE\";\n  HttpResponseCode2[HttpResponseCode2[\"LENGTH_REQUIRED\"] = 411] = \"LENGTH_REQUIRED\";\n  HttpResponseCode2[HttpResponseCode2[\"PRECONDITION_FAILED\"] = 412] = \"PRECONDITION_FAILED\";\n  HttpResponseCode2[HttpResponseCode2[\"PAYLOAD_TOO_LARGE\"] = 413] = \"PAYLOAD_TOO_LARGE\";\n  HttpResponseCode2[HttpResponseCode2[\"URI_TOO_LONG\"] = 414] = \"URI_TOO_LONG\";\n  HttpResponseCode2[HttpResponseCode2[\"UNSUPPORTED_MEDIA_TYPE\"] = 415] = \"UNSUPPORTED_MEDIA_TYPE\";\n  HttpResponseCode2[HttpResponseCode2[\"RANGE_NOT_SATISFIABLE\"] = 416] = \"RANGE_NOT_SATISFIABLE\";\n  HttpResponseCode2[HttpResponseCode2[\"EXPECTATION_FAILED\"] = 417] = \"EXPECTATION_FAILED\";\n  HttpResponseCode2[HttpResponseCode2[\"I_AM_A_TEAPOT\"] = 418] = \"I_AM_A_TEAPOT\";\n  HttpResponseCode2[HttpResponseCode2[\"MISDIRECTED_REQUEST\"] = 421] = \"MISDIRECTED_REQUEST\";\n  HttpResponseCode2[HttpResponseCode2[\"UNPROCESSABLE_ENTITY\"] = 422] = \"UNPROCESSABLE_ENTITY\";\n  HttpResponseCode2[HttpResponseCode2[\"LOCKED\"] = 423] = \"LOCKED\";\n  HttpResponseCode2[HttpResponseCode2[\"FAILED_DEPENDENCY\"] = 424] = \"FAILED_DEPENDENCY\";\n  HttpResponseCode2[HttpResponseCode2[\"TOO_EARLY\"] = 425] = \"TOO_EARLY\";\n  HttpResponseCode2[HttpResponseCode2[\"UPGRADE_REQUIRED\"] = 426] = \"UPGRADE_REQUIRED\";\n  HttpResponseCode2[HttpResponseCode2[\"PRECONDITION_REQUIRED\"] = 428] = \"PRECONDITION_REQUIRED\";\n  HttpResponseCode2[HttpResponseCode2[\"TOO_MANY_REQUESTS\"] = 429] = \"TOO_MANY_REQUESTS\";\n  HttpResponseCode2[HttpResponseCode2[\"REQUEST_HEADER_FIELDS_TOO_LARGE\"] = 431] = \"REQUEST_HEADER_FIELDS_TOO_LARGE\";\n  HttpResponseCode2[HttpResponseCode2[\"UNAVAILABLE_FOR_LEGAL_REASONS\"] = 451] = \"UNAVAILABLE_FOR_LEGAL_REASONS\";\n  HttpResponseCode2[HttpResponseCode2[\"INTERNAL_SERVER_ERROR\"] = 500] = \"INTERNAL_SERVER_ERROR\";\n  HttpResponseCode2[HttpResponseCode2[\"NOT_IMPLEMENTED\"] = 501] = \"NOT_IMPLEMENTED\";\n  HttpResponseCode2[HttpResponseCode2[\"BAD_GATEWAY\"] = 502] = \"BAD_GATEWAY\";\n  HttpResponseCode2[HttpResponseCode2[\"SERVICE_UNAVAILABLE\"] = 503] = \"SERVICE_UNAVAILABLE\";\n  HttpResponseCode2[HttpResponseCode2[\"GATEWAY_TIMEOUT\"] = 504] = \"GATEWAY_TIMEOUT\";\n  HttpResponseCode2[HttpResponseCode2[\"HTTP_VERSION_NOT_SUPPORTED\"] = 505] = \"HTTP_VERSION_NOT_SUPPORTED\";\n  HttpResponseCode2[HttpResponseCode2[\"VARIANT_ALSO_NEGOTIATES\"] = 506] = \"VARIANT_ALSO_NEGOTIATES\";\n  HttpResponseCode2[HttpResponseCode2[\"INSUFFICIENT_STORAGE\"] = 507] = \"INSUFFICIENT_STORAGE\";\n  HttpResponseCode2[HttpResponseCode2[\"LOOP_DETECTED\"] = 508] = \"LOOP_DETECTED\";\n  HttpResponseCode2[HttpResponseCode2[\"BANDWIDTH_LIMIT_EXCEEDED\"] = 509] = \"BANDWIDTH_LIMIT_EXCEEDED\";\n  HttpResponseCode2[HttpResponseCode2[\"NOT_EXTENDED\"] = 510] = \"NOT_EXTENDED\";\n  HttpResponseCode2[HttpResponseCode2[\"NETWORK_AUTHENTICATION_REQUIRED\"] = 511] = \"NETWORK_AUTHENTICATION_REQUIRED\";\n  return HttpResponseCode2;\n})(HttpResponseCode || {});\n\nvar CountryCode = /* @__PURE__ */ ((CountryCode2) => {\n  CountryCode2[\"Afghanistan\"] = \"AF\";\n  CountryCode2[\"Albania\"] = \"AL\";\n  CountryCode2[\"Algeria\"] = \"DZ\";\n  CountryCode2[\"AmericanSamoa\"] = \"AS\";\n  CountryCode2[\"Andorra\"] = \"AD\";\n  CountryCode2[\"Angola\"] = \"AO\";\n  CountryCode2[\"Anguilla\"] = \"AI\";\n  CountryCode2[\"Antarctica\"] = \"AQ\";\n  CountryCode2[\"AntiguaAndBarbuda\"] = \"AG\";\n  CountryCode2[\"Argentina\"] = \"AR\";\n  CountryCode2[\"Armenia\"] = \"AM\";\n  CountryCode2[\"Aruba\"] = \"AW\";\n  CountryCode2[\"Australia\"] = \"AU\";\n  CountryCode2[\"Austria\"] = \"AT\";\n  CountryCode2[\"Azerbaijan\"] = \"AZ\";\n  CountryCode2[\"Bahamas\"] = \"BS\";\n  CountryCode2[\"Bahrain\"] = \"BH\";\n  CountryCode2[\"Bangladesh\"] = \"BD\";\n  CountryCode2[\"Barbados\"] = \"BB\";\n  CountryCode2[\"Belarus\"] = \"BY\";\n  CountryCode2[\"Belgium\"] = \"BE\";\n  CountryCode2[\"Belize\"] = \"BZ\";\n  CountryCode2[\"Benin\"] = \"BJ\";\n  CountryCode2[\"Bermuda\"] = \"BM\";\n  CountryCode2[\"Bhutan\"] = \"BT\";\n  CountryCode2[\"Bolivia\"] = \"BO\";\n  CountryCode2[\"BosniaAndHerzegovina\"] = \"BA\";\n  CountryCode2[\"Botswana\"] = \"BW\";\n  CountryCode2[\"BouvetIsland\"] = \"BV\";\n  CountryCode2[\"Brazil\"] = \"BR\";\n  CountryCode2[\"BritishIndianOceanTerritory\"] = \"IO\";\n  CountryCode2[\"Brunei\"] = \"BN\";\n  CountryCode2[\"Bulgaria\"] = \"BG\";\n  CountryCode2[\"BurkinaFaso\"] = \"BF\";\n  CountryCode2[\"Burundi\"] = \"BI\";\n  CountryCode2[\"Cambodia\"] = \"KH\";\n  CountryCode2[\"Cameroon\"] = \"CM\";\n  CountryCode2[\"Canada\"] = \"CA\";\n  CountryCode2[\"CapeVerde\"] = \"CV\";\n  CountryCode2[\"CaymanIslands\"] = \"KY\";\n  CountryCode2[\"CentralAfricanRepublic\"] = \"CF\";\n  CountryCode2[\"Chad\"] = \"TD\";\n  CountryCode2[\"Chile\"] = \"CL\";\n  CountryCode2[\"China\"] = \"CN\";\n  CountryCode2[\"ChristmasIsland\"] = \"CX\";\n  CountryCode2[\"CocosKeelingIslands\"] = \"CC\";\n  CountryCode2[\"Colombia\"] = \"CO\";\n  CountryCode2[\"Comoros\"] = \"KM\";\n  CountryCode2[\"Congo\"] = \"CG\";\n  CountryCode2[\"CongoTheDemocraticRepublicOfThe\"] = \"CD\";\n  CountryCode2[\"CookIslands\"] = \"CK\";\n  CountryCode2[\"CostaRica\"] = \"CR\";\n  CountryCode2[\"CoteDIvoire\"] = \"CI\";\n  CountryCode2[\"Croatia\"] = \"HR\";\n  CountryCode2[\"Cuba\"] = \"CU\";\n  CountryCode2[\"Cyprus\"] = \"CY\";\n  CountryCode2[\"CzechRepublic\"] = \"CZ\";\n  CountryCode2[\"Denmark\"] = \"DK\";\n  CountryCode2[\"Djibouti\"] = \"DJ\";\n  CountryCode2[\"Dominica\"] = \"DM\";\n  CountryCode2[\"DominicanRepublic\"] = \"DO\";\n  CountryCode2[\"Ecuador\"] = \"EC\";\n  CountryCode2[\"Egypt\"] = \"EG\";\n  CountryCode2[\"ElSalvador\"] = \"SV\";\n  CountryCode2[\"EquatorialGuinea\"] = \"GQ\";\n  CountryCode2[\"Eritrea\"] = \"ER\";\n  CountryCode2[\"Estonia\"] = \"EE\";\n  CountryCode2[\"Ethiopia\"] = \"ET\";\n  CountryCode2[\"FalklandIslands\"] = \"FK\";\n  CountryCode2[\"FaroeIslands\"] = \"FO\";\n  CountryCode2[\"Fiji\"] = \"FJ\";\n  CountryCode2[\"Finland\"] = \"FI\";\n  CountryCode2[\"France\"] = \"FR\";\n  CountryCode2[\"FrenchGuiana\"] = \"GF\";\n  CountryCode2[\"FrenchPolynesia\"] = \"PF\";\n  CountryCode2[\"FrenchSouthernTerritories\"] = \"TF\";\n  CountryCode2[\"Gabon\"] = \"GA\";\n  CountryCode2[\"Gambia\"] = \"GM\";\n  CountryCode2[\"Georgia\"] = \"GE\";\n  CountryCode2[\"Germany\"] = \"DE\";\n  CountryCode2[\"Ghana\"] = \"GH\";\n  CountryCode2[\"Gibraltar\"] = \"GI\";\n  CountryCode2[\"Greece\"] = \"GR\";\n  CountryCode2[\"Greenland\"] = \"GL\";\n  CountryCode2[\"Grenada\"] = \"GD\";\n  CountryCode2[\"Guadeloupe\"] = \"GP\";\n  CountryCode2[\"Guam\"] = \"GU\";\n  CountryCode2[\"Guatemala\"] = \"GT\";\n  CountryCode2[\"Guernsey\"] = \"GG\";\n  CountryCode2[\"Guinea\"] = \"GN\";\n  CountryCode2[\"GuineaBissau\"] = \"GW\";\n  CountryCode2[\"Guyana\"] = \"GY\";\n  CountryCode2[\"Haiti\"] = \"HT\";\n  CountryCode2[\"HeardIslandMcdonaldIslands\"] = \"HM\";\n  CountryCode2[\"HolySeeVaticanCityState\"] = \"VA\";\n  CountryCode2[\"Honduras\"] = \"HN\";\n  CountryCode2[\"HongKong\"] = \"HK\";\n  CountryCode2[\"Hungary\"] = \"HU\";\n  CountryCode2[\"Iceland\"] = \"IS\";\n  CountryCode2[\"India\"] = \"IN\";\n  CountryCode2[\"Indonesia\"] = \"ID\";\n  CountryCode2[\"Iran\"] = \"IR\";\n  CountryCode2[\"Iraq\"] = \"IQ\";\n  CountryCode2[\"Ireland\"] = \"IE\";\n  CountryCode2[\"IsleOfMan\"] = \"IM\";\n  CountryCode2[\"Israel\"] = \"IL\";\n  CountryCode2[\"Italy\"] = \"IT\";\n  CountryCode2[\"Jamaica\"] = \"JM\";\n  CountryCode2[\"Japan\"] = \"JP\";\n  CountryCode2[\"Jersey\"] = \"JE\";\n  CountryCode2[\"Jordan\"] = \"JO\";\n  CountryCode2[\"Kazakhstan\"] = \"KZ\";\n  CountryCode2[\"Kenya\"] = \"KE\";\n  CountryCode2[\"Kiribati\"] = \"KI\";\n  CountryCode2[\"Kuwait\"] = \"KW\";\n  CountryCode2[\"Kyrgyzstan\"] = \"KG\";\n  CountryCode2[\"Laos\"] = \"LA\";\n  CountryCode2[\"Latvia\"] = \"LV\";\n  CountryCode2[\"Lebanon\"] = \"LB\";\n  CountryCode2[\"Lesotho\"] = \"LS\";\n  CountryCode2[\"Liberia\"] = \"LR\";\n  CountryCode2[\"Libya\"] = \"LY\";\n  CountryCode2[\"Liechtenstein\"] = \"LI\";\n  CountryCode2[\"Lithuania\"] = \"LT\";\n  CountryCode2[\"Luxembourg\"] = \"LU\";\n  CountryCode2[\"Macau\"] = \"MO\";\n  CountryCode2[\"Madagascar\"] = \"MG\";\n  CountryCode2[\"Malawi\"] = \"MW\";\n  CountryCode2[\"Malaysia\"] = \"MY\";\n  CountryCode2[\"Maldives\"] = \"MV\";\n  CountryCode2[\"Mali\"] = \"ML\";\n  CountryCode2[\"Malta\"] = \"MT\";\n  CountryCode2[\"MarshallIslands\"] = \"MH\";\n  CountryCode2[\"Martinique\"] = \"MQ\";\n  CountryCode2[\"Mauritania\"] = \"MR\";\n  CountryCode2[\"Mauritius\"] = \"MU\";\n  CountryCode2[\"Mayotte\"] = \"YT\";\n  CountryCode2[\"Mexico\"] = \"MX\";\n  CountryCode2[\"MicronesiaFederatedStatesOf\"] = \"FM\";\n  CountryCode2[\"Moldova\"] = \"MD\";\n  CountryCode2[\"Monaco\"] = \"MC\";\n  CountryCode2[\"Mongolia\"] = \"MN\";\n  CountryCode2[\"Montenegro\"] = \"ME\";\n  CountryCode2[\"Montserrat\"] = \"MS\";\n  CountryCode2[\"Morocco\"] = \"MA\";\n  CountryCode2[\"Mozambique\"] = \"MZ\";\n  CountryCode2[\"Myanmar\"] = \"MM\";\n  CountryCode2[\"Namibia\"] = \"NA\";\n  CountryCode2[\"Nauru\"] = \"NR\";\n  CountryCode2[\"Nepal\"] = \"NP\";\n  CountryCode2[\"Netherlands\"] = \"NL\";\n  CountryCode2[\"NetherlandsAntilles\"] = \"AN\";\n  CountryCode2[\"NewCaledonia\"] = \"NC\";\n  CountryCode2[\"NewZealand\"] = \"NZ\";\n  CountryCode2[\"NorthKorea\"] = \"KP\";\n  CountryCode2[\"Nicaragua\"] = \"NI\";\n  CountryCode2[\"Niger\"] = \"NE\";\n  CountryCode2[\"Nigeria\"] = \"NG\";\n  CountryCode2[\"Niue\"] = \"NU\";\n  CountryCode2[\"NorfolkIsland\"] = \"NF\";\n  CountryCode2[\"NorthMacedonia\"] = \"MK\";\n  CountryCode2[\"NorthernMarianaIslands\"] = \"MP\";\n  CountryCode2[\"Norway\"] = \"NO\";\n  CountryCode2[\"Oman\"] = \"OM\";\n  CountryCode2[\"Pakistan\"] = \"PK\";\n  CountryCode2[\"Palau\"] = \"PW\";\n  CountryCode2[\"PalestinianTerritoryOccupied\"] = \"PS\";\n  CountryCode2[\"Panama\"] = \"PA\";\n  CountryCode2[\"PapuaNewGuinea\"] = \"PG\";\n  CountryCode2[\"Paraguay\"] = \"PY\";\n  CountryCode2[\"Peru\"] = \"PE\";\n  CountryCode2[\"Philippines\"] = \"PH\";\n  CountryCode2[\"Pitcairn\"] = \"PN\";\n  CountryCode2[\"Poland\"] = \"PL\";\n  CountryCode2[\"Portugal\"] = \"PT\";\n  CountryCode2[\"PuertoRico\"] = \"PR\";\n  CountryCode2[\"Qatar\"] = \"QA\";\n  CountryCode2[\"Reunion\"] = \"RE\";\n  CountryCode2[\"Romania\"] = \"RO\";\n  CountryCode2[\"RussianFederation\"] = \"RU\";\n  CountryCode2[\"Rwanda\"] = \"RW\";\n  CountryCode2[\"SaintBarthelemy\"] = \"BL\";\n  CountryCode2[\"SaintHelena\"] = \"SH\";\n  CountryCode2[\"SaintKittsAndNevis\"] = \"KN\";\n  CountryCode2[\"SaintLucia\"] = \"LC\";\n  CountryCode2[\"SaintMartin\"] = \"MF\";\n  CountryCode2[\"SaintPierreAndMiquelon\"] = \"PM\";\n  CountryCode2[\"SaintVincentAndTheGrenadines\"] = \"VC\";\n  CountryCode2[\"Samoa\"] = \"WS\";\n  CountryCode2[\"SanMarino\"] = \"SM\";\n  CountryCode2[\"SaoTomeAndPrincipe\"] = \"ST\";\n  CountryCode2[\"SaudiArabia\"] = \"SA\";\n  CountryCode2[\"Senegal\"] = \"SN\";\n  CountryCode2[\"Serbia\"] = \"RS\";\n  CountryCode2[\"SerbiaAndMontenegro\"] = \"CS\";\n  CountryCode2[\"Seychelles\"] = \"SC\";\n  CountryCode2[\"SierraLeone\"] = \"SL\";\n  CountryCode2[\"Singapore\"] = \"SG\";\n  CountryCode2[\"Slovakia\"] = \"SK\";\n  CountryCode2[\"Slovenia\"] = \"SI\";\n  CountryCode2[\"SolomonIslands\"] = \"SB\";\n  CountryCode2[\"Somalia\"] = \"SO\";\n  CountryCode2[\"SouthAfrica\"] = \"ZA\";\n  CountryCode2[\"SouthGeorgiaAndTheSouthSandwichIslands\"] = \"GS\";\n  CountryCode2[\"SouthKorea\"] = \"KR\";\n  CountryCode2[\"Spain\"] = \"ES\";\n  CountryCode2[\"SriLanka\"] = \"LK\";\n  CountryCode2[\"Sudan\"] = \"SD\";\n  CountryCode2[\"Suriname\"] = \"SR\";\n  CountryCode2[\"SvalbardAndJanMayen\"] = \"SJ\";\n  CountryCode2[\"Swaziland\"] = \"SZ\";\n  CountryCode2[\"Sweden\"] = \"SE\";\n  CountryCode2[\"Switzerland\"] = \"CH\";\n  CountryCode2[\"Syria\"] = \"SY\";\n  CountryCode2[\"Taiwan\"] = \"TW\";\n  CountryCode2[\"Tajikistan\"] = \"TJ\";\n  CountryCode2[\"Tanzania\"] = \"TZ\";\n  CountryCode2[\"Thailand\"] = \"TH\";\n  CountryCode2[\"TimorLeste\"] = \"TL\";\n  CountryCode2[\"Togo\"] = \"TG\";\n  CountryCode2[\"Tokelau\"] = \"TK\";\n  CountryCode2[\"Tonga\"] = \"TO\";\n  CountryCode2[\"TrinidadAndTobago\"] = \"TT\";\n  CountryCode2[\"Tunisia\"] = \"TN\";\n  CountryCode2[\"Turkey\"] = \"TR\";\n  CountryCode2[\"Turkmenistan\"] = \"TM\";\n  CountryCode2[\"TurksAndCaicosIslands\"] = \"TC\";\n  CountryCode2[\"Tuvalu\"] = \"TV\";\n  CountryCode2[\"Uganda\"] = \"UG\";\n  CountryCode2[\"Ukraine\"] = \"UA\";\n  CountryCode2[\"UnitedArabEmirates\"] = \"AE\";\n  CountryCode2[\"UnitedKingdom\"] = \"GB\";\n  CountryCode2[\"UnitedStates\"] = \"US\";\n  CountryCode2[\"UnitedStatesMinorOutlyingIslands\"] = \"UM\";\n  CountryCode2[\"Uruguay\"] = \"UY\";\n  CountryCode2[\"Uzbekistan\"] = \"UZ\";\n  CountryCode2[\"Vanuatu\"] = \"VU\";\n  CountryCode2[\"Venezuela\"] = \"VE\";\n  CountryCode2[\"Vietnam\"] = \"VN\";\n  CountryCode2[\"VirginIslandsBritish\"] = \"VG\";\n  CountryCode2[\"VirginIslandsUS\"] = \"VI\";\n  CountryCode2[\"WallisAndFutuna\"] = \"WF\";\n  CountryCode2[\"WesternSahara\"] = \"EH\";\n  CountryCode2[\"Yemen\"] = \"YE\";\n  CountryCode2[\"Zambia\"] = \"ZM\";\n  CountryCode2[\"Zimbabwe\"] = \"ZW\";\n  return CountryCode2;\n})(CountryCode || {});\n\nvar CurrencyCode = /* @__PURE__ */ ((CurrencyCode2) => {\n  CurrencyCode2[\"AfghanistanAfghani\"] = \"AFN\";\n  CurrencyCode2[\"AlbaniaLek\"] = \"ALL\";\n  CurrencyCode2[\"ArmeniaDram\"] = \"AMD\";\n  CurrencyCode2[\"AlgeriaDinar\"] = \"DZD\";\n  CurrencyCode2[\"AmericanSamoaTala\"] = \"WST\";\n  CurrencyCode2[\"AngolaKwanza\"] = \"AOA\";\n  CurrencyCode2[\"ArgentinaPeso\"] = \"ARS\";\n  CurrencyCode2[\"AustraliaDollar\"] = \"AUD\";\n  CurrencyCode2[\"ArubaFlorin\"] = \"AWG\";\n  CurrencyCode2[\"AzerbaijanNewManat\"] = \"AZN\";\n  CurrencyCode2[\"BosniaAndHerzegovinaConvertibleMark\"] = \"BAM\";\n  CurrencyCode2[\"BahrainDinar\"] = \"BHD\";\n  CurrencyCode2[\"BarbadosDollar\"] = \"BBD\";\n  CurrencyCode2[\"BangladeshTaka\"] = \"BDT\";\n  CurrencyCode2[\"BelgiumFranc\"] = \"BGN\";\n  CurrencyCode2[\"BermudaDollar\"] = \"BMD\";\n  CurrencyCode2[\"BruneiDollar\"] = \"BND\";\n  CurrencyCode2[\"BoliviaBoliviano\"] = \"BOB\";\n  CurrencyCode2[\"BrazilReal\"] = \"BRL\";\n  CurrencyCode2[\"BahamasDollar\"] = \"BSD\";\n  CurrencyCode2[\"BhutanNgultrum\"] = \"BTN\";\n  CurrencyCode2[\"BotswanaPula\"] = \"BWP\";\n  CurrencyCode2[\"BelarusRuble\"] = \"BYN\";\n  CurrencyCode2[\"BelizeDollar\"] = \"BZD\";\n  CurrencyCode2[\"BulgariaLev\"] = \"BGN\";\n  CurrencyCode2[\"BurundiFranc\"] = \"BIF\";\n  CurrencyCode2[\"BritishPound\"] = \"GBP\";\n  CurrencyCode2[\"CanadaDollar\"] = \"CAD\";\n  CurrencyCode2[\"CambodiaRiel\"] = \"KHR\";\n  CurrencyCode2[\"ComorosFranc\"] = \"KMF\";\n  CurrencyCode2[\"CaymanIslandsDollar\"] = \"KYD\";\n  CurrencyCode2[\"ChilePeso\"] = \"CLP\";\n  CurrencyCode2[\"ChinaYuan\"] = \"CNY\";\n  CurrencyCode2[\"ColombiaPeso\"] = \"COP\";\n  CurrencyCode2[\"CostaRicaColon\"] = \"CRC\";\n  CurrencyCode2[\"CroatiaKuna\"] = \"HRK\";\n  CurrencyCode2[\"CubaConvertiblePeso\"] = \"CUC\";\n  CurrencyCode2[\"CubaPeso\"] = \"CUP\";\n  CurrencyCode2[\"CapeVerdeEscudo\"] = \"CVE\";\n  CurrencyCode2[\"CyprusPound\"] = \"CYP\";\n  CurrencyCode2[\"CzechRepublicKoruna\"] = \"CZK\";\n  CurrencyCode2[\"DjiboutiFranc\"] = \"DJF\";\n  CurrencyCode2[\"DenmarkKrone\"] = \"DKK\";\n  CurrencyCode2[\"DominicaDollar\"] = \"XCD\";\n  CurrencyCode2[\"DominicanRepublicPeso\"] = \"DOP\";\n  CurrencyCode2[\"EastCaribbeanDollar\"] = \"XCD\";\n  CurrencyCode2[\"EgyptPound\"] = \"EGP\";\n  CurrencyCode2[\"ElSalvadorColon\"] = \"SVC\";\n  CurrencyCode2[\"EquatorialGuineaEkwele\"] = \"GQE\";\n  CurrencyCode2[\"EritreaNakfa\"] = \"ERN\";\n  CurrencyCode2[\"EstoniaKroon\"] = \"EEK\";\n  CurrencyCode2[\"EthiopiaBirr\"] = \"ETB\";\n  CurrencyCode2[\"Euro\"] = \"EUR\";\n  CurrencyCode2[\"FijiDollar\"] = \"FJD\";\n  CurrencyCode2[\"FalklandIslandsPound\"] = \"FKP\";\n  CurrencyCode2[\"GambiaDalasi\"] = \"GMD\";\n  CurrencyCode2[\"GabonFranc\"] = \"GMD\";\n  CurrencyCode2[\"GeorgiaLari\"] = \"GEL\";\n  CurrencyCode2[\"GhanaCedi\"] = \"GHS\";\n  CurrencyCode2[\"GibraltarPound\"] = \"GIP\";\n  CurrencyCode2[\"GuatemalaQuetzal\"] = \"GTQ\";\n  CurrencyCode2[\"GuernseyPound\"] = \"GGP\";\n  CurrencyCode2[\"GuineaBissauPeso\"] = \"GWP\";\n  CurrencyCode2[\"GuyanaDollar\"] = \"GYD\";\n  CurrencyCode2[\"HongKongDollar\"] = \"HKD\";\n  CurrencyCode2[\"HondurasLempira\"] = \"HNL\";\n  CurrencyCode2[\"HaitiGourde\"] = \"HTG\";\n  CurrencyCode2[\"HungaryForint\"] = \"HUF\";\n  CurrencyCode2[\"IndonesiaRupiah\"] = \"IDR\";\n  CurrencyCode2[\"IsleOfManPound\"] = \"IMP\";\n  CurrencyCode2[\"IsraelNewShekel\"] = \"ILS\";\n  CurrencyCode2[\"IndiaRupee\"] = \"INR\";\n  CurrencyCode2[\"IraqDinar\"] = \"IQD\";\n  CurrencyCode2[\"IranRial\"] = \"IRR\";\n  CurrencyCode2[\"IcelandKrona\"] = \"ISK\";\n  CurrencyCode2[\"JamaicaDollar\"] = \"JMD\";\n  CurrencyCode2[\"JapanYen\"] = \"JPY\";\n  CurrencyCode2[\"JerseyPound\"] = \"JEP\";\n  CurrencyCode2[\"JordanDinar\"] = \"JOD\";\n  CurrencyCode2[\"KazakhstanTenge\"] = \"KZT\";\n  CurrencyCode2[\"KenyaShilling\"] = \"KES\";\n  CurrencyCode2[\"KyrgyzstanSom\"] = \"KGS\";\n  CurrencyCode2[\"NorthKoreaWon\"] = \"KPW\";\n  CurrencyCode2[\"SouthKoreaWon\"] = \"KRW\";\n  CurrencyCode2[\"KuwaitDinar\"] = \"KWD\";\n  CurrencyCode2[\"LaosKip\"] = \"LAK\";\n  CurrencyCode2[\"LebanonPound\"] = \"LBP\";\n  CurrencyCode2[\"LiberiaDollar\"] = \"LRD\";\n  CurrencyCode2[\"LesothoLoti\"] = \"LSL\";\n  CurrencyCode2[\"LibyanDinar\"] = \"LYD\";\n  CurrencyCode2[\"LithuaniaLitas\"] = \"LTL\";\n  CurrencyCode2[\"LatviaLats\"] = \"LVL\";\n  CurrencyCode2[\"LibyaDinar\"] = \"LYD\";\n  CurrencyCode2[\"MacauPataca\"] = \"MOP\";\n  CurrencyCode2[\"MaldivesRufiyaa\"] = \"MVR\";\n  CurrencyCode2[\"MalawiKwacha\"] = \"MWK\";\n  CurrencyCode2[\"MaltaLira\"] = \"MTL\";\n  CurrencyCode2[\"MauritiusRupee\"] = \"MUR\";\n  CurrencyCode2[\"MongoliaTughrik\"] = \"MNT\";\n  CurrencyCode2[\"MoroccoDirham\"] = \"MAD\";\n  CurrencyCode2[\"MoldovaLeu\"] = \"MDL\";\n  CurrencyCode2[\"MozambiqueMetical\"] = \"MZN\";\n  CurrencyCode2[\"MadagascarAriary\"] = \"MGA\";\n  CurrencyCode2[\"MacedoniaDenar\"] = \"MKD\";\n  CurrencyCode2[\"MexicoPeso\"] = \"MXN\";\n  CurrencyCode2[\"MalaysiaRinggit\"] = \"MYR\";\n  CurrencyCode2[\"MyanmarKyat\"] = \"MMK\";\n  CurrencyCode2[\"MicronesiaFederatedStatesDollar\"] = \"USD\";\n  CurrencyCode2[\"NicaraguaCordoba\"] = \"NIO\";\n  CurrencyCode2[\"NamibiaDollar\"] = \"NAD\";\n  CurrencyCode2[\"NetherlandsAntillesGuilder\"] = \"ANG\";\n  CurrencyCode2[\"NewCaledoniaFranc\"] = \"XPF\";\n  CurrencyCode2[\"NigeriaNaira\"] = \"NGN\";\n  CurrencyCode2[\"NicaraguaCordobaOro\"] = \"NIO\";\n  CurrencyCode2[\"NigerCFAFranc\"] = \"XOF\";\n  CurrencyCode2[\"NorwayKrone\"] = \"NOK\";\n  CurrencyCode2[\"NepalRupee\"] = \"NPR\";\n  CurrencyCode2[\"NewZealandDollar\"] = \"NZD\";\n  CurrencyCode2[\"OmanRial\"] = \"OMR\";\n  CurrencyCode2[\"PanamaBalboa\"] = \"PAB\";\n  CurrencyCode2[\"PeruNuevoSol\"] = \"PEN\";\n  CurrencyCode2[\"PapuaNewGuineaKina\"] = \"PGK\";\n  CurrencyCode2[\"PhilippinesPeso\"] = \"PHP\";\n  CurrencyCode2[\"PakistanRupee\"] = \"PKR\";\n  CurrencyCode2[\"PeruNuevo\"] = \"PEN\";\n  CurrencyCode2[\"PolandZloty\"] = \"PLN\";\n  CurrencyCode2[\"ParaguayGuarani\"] = \"PYG\";\n  CurrencyCode2[\"QatarRial\"] = \"QAR\";\n  CurrencyCode2[\"RomaniaNewLeu\"] = \"RON\";\n  CurrencyCode2[\"SerbiaDinar\"] = \"RSD\";\n  CurrencyCode2[\"SriLankaRupee\"] = \"LKR\";\n  CurrencyCode2[\"RussiaRuble\"] = \"RUB\";\n  CurrencyCode2[\"RwandaFranc\"] = \"RWF\";\n  CurrencyCode2[\"SaudiArabiaRiyal\"] = \"SAR\";\n  CurrencyCode2[\"SlovakiaKoruna\"] = \"SKK\";\n  CurrencyCode2[\"SloveniaTolar\"] = \"SIT\";\n  CurrencyCode2[\"SolomonIslandsDollar\"] = \"SBD\";\n  CurrencyCode2[\"SeychellesRupee\"] = \"SCR\";\n  CurrencyCode2[\"SudanPound\"] = \"SDG\";\n  CurrencyCode2[\"SwedenKrona\"] = \"SEK\";\n  CurrencyCode2[\"SingaporeDollar\"] = \"SGD\";\n  CurrencyCode2[\"SaintHelenaPound\"] = \"SHP\";\n  CurrencyCode2[\"SierraLeoneLeone\"] = \"SLL\";\n  CurrencyCode2[\"SomaliaShilling\"] = \"SOS\";\n  CurrencyCode2[\"SurinameDollar\"] = \"SRD\";\n  CurrencyCode2[\"SintMaartenPound\"] = \"SXD\";\n  CurrencyCode2[\"SyriaPound\"] = \"SYP\";\n  CurrencyCode2[\"SwazilandLilangeni\"] = \"SZL\";\n  CurrencyCode2[\"SwitzerlandFranc\"] = \"CHF\";\n  CurrencyCode2[\"ThailandBaht\"] = \"THB\";\n  CurrencyCode2[\"TajikistanSomoni\"] = \"TJS\";\n  CurrencyCode2[\"TurkmenistanManat\"] = \"TMT\";\n  CurrencyCode2[\"TunisiaDinar\"] = \"TND\";\n  CurrencyCode2[\"TongaPaanga\"] = \"TOP\";\n  CurrencyCode2[\"TurkeyLira\"] = \"TRY\";\n  CurrencyCode2[\"TrinidadAndTobagoDollar\"] = \"TTD\";\n  CurrencyCode2[\"TaiwanNewDollar\"] = \"TWD\";\n  CurrencyCode2[\"TanzaniaShilling\"] = \"TZS\";\n  CurrencyCode2[\"UnitedArabEmiratesDirham\"] = \"AED\";\n  CurrencyCode2[\"UkraineHryvnia\"] = \"UAH\";\n  CurrencyCode2[\"UgandaShilling\"] = \"UGX\";\n  CurrencyCode2[\"UnitedKingdomPound\"] = \"GBP\";\n  CurrencyCode2[\"UnitedStatesDollar\"] = \"USD\";\n  CurrencyCode2[\"UruguayPeso\"] = \"UYU\";\n  CurrencyCode2[\"UzbekistanSom\"] = \"UZS\";\n  CurrencyCode2[\"VenezuelaBolivar\"] = \"VEF\";\n  CurrencyCode2[\"VietnamDong\"] = \"VND\";\n  CurrencyCode2[\"VanuatuVatu\"] = \"VUV\";\n  CurrencyCode2[\"SamoaTala\"] = \"WST\";\n  CurrencyCode2[\"YemenRial\"] = \"YER\";\n  CurrencyCode2[\"SouthAfricaRand\"] = \"ZAR\";\n  CurrencyCode2[\"ZambiaKwacha\"] = \"ZMW\";\n  CurrencyCode2[\"ZimbabweDollar\"] = \"ZWL\";\n  return CurrencyCode2;\n})(CurrencyCode || {});\nconst Currencies = {\n  AfghanistanAfghani: {\n    code: \"AFN\" /* AfghanistanAfghani */,\n    countries: [CountryCode.Afghanistan],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Afghan Afghani\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u060B\",\n    symbol_native: \"\\u060B\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  AlbaniaLek: {\n    code: \"ALL\" /* AlbaniaLek */,\n    countries: [CountryCode.Albania],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Albanian Lek\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"Lek\",\n    symbol_native: \"Lek\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  AlgeriaDinar: {\n    code: \"DZD\" /* AlgeriaDinar */,\n    countries: [CountryCode.Algeria],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Algerian Dinar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u062F.\\u062C\",\n    symbol_native: \"\\u062F.\\u062C\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  ArgentinaPeso: {\n    code: \"ARS\" /* ArgentinaPeso */,\n    countries: [CountryCode.Argentina],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Argentine Peso\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  ArmeniaDram: {\n    code: \"AMD\" /* ArmeniaDram */,\n    countries: [CountryCode.Armenia],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Armenian Dram\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u0564\\u0580.\",\n    symbol_native: \"\\u0564\\u0580.\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  ArubaFlorin: {\n    code: \"AWG\" /* ArubaFlorin */,\n    countries: [CountryCode.Aruba],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Aruban Florin\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u0192\",\n    symbol_native: \"\\u0192\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  AustraliaDollar: {\n    code: \"AUD\" /* AustraliaDollar */,\n    countries: [CountryCode.Australia],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Australian Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  AzerbaijanManat: {\n    code: \"AZN\" /* AzerbaijanNewManat */,\n    countries: [CountryCode.Azerbaijan],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Azerbaijani Manat\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u043C\\u0430\\u043D\",\n    symbol_native: \"\\u043C\\u0430\\u043D\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  BahrainDinar: {\n    code: \"BHD\" /* BahrainDinar */,\n    countries: [CountryCode.Bahrain],\n    decimal_digits: 3,\n    decimal_separator: \".\",\n    name: \"Bahraini Dinar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \".\\u062F.\\u0628\",\n    symbol_native: \".\\u062F.\\u0628\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  BangladeshTaka: {\n    code: \"BDT\" /* BangladeshTaka */,\n    countries: [CountryCode.Bangladesh],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Bangladeshi Taka\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u09F3\",\n    symbol_native: \"\\u09F3\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  BarbadosDollar: {\n    code: \"BBD\" /* BarbadosDollar */,\n    countries: [CountryCode.Barbados],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Barbadian Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  BelarusRuble: {\n    code: \"BYN\" /* BelarusRuble */,\n    countries: [CountryCode.Belarus],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Belarusian Ruble\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"Br\",\n    symbol_native: \"Br\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  BelizeDollar: {\n    code: \"BZD\" /* BelizeDollar */,\n    countries: [CountryCode.Belize],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Belize Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"BZ$\",\n    symbol_native: \"BZ$\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  BermudaDollar: {\n    code: \"BMD\" /* BermudaDollar */,\n    countries: [CountryCode.Bermuda],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Bermudian Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  BoliviaBoliviano: {\n    code: \"BOB\" /* BoliviaBoliviano */,\n    countries: [CountryCode.Bolivia],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Bolivian Boliviano\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$b\",\n    symbol_native: \"$b\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  BosniaAndHerzegovinaConvertibleMarka: {\n    code: \"BAM\" /* BosniaAndHerzegovinaConvertibleMark */,\n    countries: [CountryCode.BosniaAndHerzegovina],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Bosnia and Herzegovina Convertible Marka\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"KM\",\n    symbol_native: \"KM\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  BotswanaPula: {\n    code: \"BWP\" /* BotswanaPula */,\n    countries: [CountryCode.Botswana],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Botswana Pula\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"P\",\n    symbol_native: \"P\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  BrazilReal: {\n    code: \"BRL\" /* BrazilReal */,\n    countries: [CountryCode.Brazil],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Brazilian Real\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"R$\",\n    symbol_native: \"R$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  BruneiDollar: {\n    code: \"BND\" /* BruneiDollar */,\n    countries: [CountryCode.Brunei],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Brunei Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  BulgariaLev: {\n    code: \"BGN\" /* BulgariaLev */,\n    countries: [CountryCode.Bulgaria],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Bulgarian Lev\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u043B\\u0432\",\n    symbol_native: \"\\u043B\\u0432\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  BurundiFranc: {\n    code: \"BIF\" /* BurundiFranc */,\n    countries: [CountryCode.Burundi],\n    decimal_digits: 0,\n    decimal_separator: \".\",\n    name: \"Burundian Franc\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"FBu\",\n    symbol_native: \"FBu\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  CambodiaRiel: {\n    code: \"KHR\" /* CambodiaRiel */,\n    countries: [CountryCode.Cambodia],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Cambodian Riel\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u17DB\",\n    symbol_native: \"\\u17DB\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  CanadaDollar: {\n    code: \"CAD\" /* CanadaDollar */,\n    countries: [CountryCode.Canada],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Canadian Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  CapeVerdeEscudo: {\n    code: \"CVE\" /* CapeVerdeEscudo */,\n    countries: [CountryCode.CapeVerde],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Cape Verde Escudo\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"Esc\",\n    symbol_native: \"Esc\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  CaymanIslandsDollar: {\n    code: \"KYD\" /* CaymanIslandsDollar */,\n    countries: [CountryCode.CaymanIslands],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Cayman Islands Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  ChilePeso: {\n    code: \"CLP\" /* ChilePeso */,\n    countries: [CountryCode.Chile],\n    decimal_digits: 0,\n    decimal_separator: \".\",\n    name: \"Chilean Peso\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  ChinaYuanRenminbi: {\n    code: \"CNY\" /* ChinaYuan */,\n    countries: [CountryCode.China],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Chinese Yuan\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\xA5\",\n    symbol_native: \"\\xA5\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  ColombiaPeso: {\n    code: \"COP\" /* ColombiaPeso */,\n    countries: [CountryCode.Colombia],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Colombian Peso\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  ComorosFranc: {\n    code: \"KMF\" /* ComorosFranc */,\n    countries: [CountryCode.Comoros],\n    decimal_digits: 0,\n    decimal_separator: \".\",\n    name: \"Comoros Franc\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"CF\",\n    symbol_native: \"CF\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  CostaRicaColon: {\n    code: \"CRC\" /* CostaRicaColon */,\n    countries: [CountryCode.CostaRica],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Costa Rican Colon\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20A1\",\n    symbol_native: \"\\u20A1\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  CroatiaKuna: {\n    code: \"HRK\" /* CroatiaKuna */,\n    countries: [CountryCode.Croatia],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Croatian Kuna\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"kn\",\n    symbol_native: \"kn\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  CubaConvertiblePeso: {\n    code: \"CUC\" /* CubaConvertiblePeso */,\n    countries: [CountryCode.Cuba],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Cuba Convertible Peso\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  CubaPeso: {\n    code: \"CUP\" /* CubaPeso */,\n    countries: [CountryCode.Cuba],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Cuba Peso\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  CyprusPound: {\n    code: \"CYP\" /* CyprusPound */,\n    countries: [CountryCode.Cyprus],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Cyprus Pound\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\xA3\",\n    symbol_native: \"\\xA3\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  CzechRepublicKoruna: {\n    code: \"CZK\" /* CzechRepublicKoruna */,\n    countries: [CountryCode.CzechRepublic],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Czech Republic Koruna\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"K\\u010D\",\n    symbol_native: \"K\\u010D\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  DenmarkKrone: {\n    code: \"DKK\" /* DenmarkKrone */,\n    countries: [CountryCode.Denmark],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Denmark Krone\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"kr\",\n    symbol_native: \"kr\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  DjiboutiFranc: {\n    code: \"DJF\" /* DjiboutiFranc */,\n    countries: [CountryCode.Djibouti],\n    decimal_digits: 0,\n    decimal_separator: \".\",\n    name: \"Djibouti Franc\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"Fdj\",\n    symbol_native: \"Fdj\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  DominicanRepublicPeso: {\n    code: \"DOP\" /* DominicanRepublicPeso */,\n    countries: [CountryCode.DominicanRepublic],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Dominican Republic Peso\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"RD$\",\n    symbol_native: \"RD$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  EastCaribbeanDollar: {\n    code: \"XCD\" /* EastCaribbeanDollar */,\n    countries: [\n      CountryCode.AntiguaAndBarbuda,\n      CountryCode.Dominica,\n      CountryCode.Grenada,\n      CountryCode.SaintKittsAndNevis,\n      CountryCode.SaintLucia,\n      CountryCode.SaintVincentAndTheGrenadines\n    ],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"East Caribbean Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  EgyptPound: {\n    code: \"EGP\" /* EgyptPound */,\n    countries: [CountryCode.Egypt],\n    decimal_digits: 2,\n    decimal_separator: \".\",\n    name: \"Egypt Pound\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\xA3\",\n    symbol_native: \"\\xA3\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  ElSalvadorColon: {\n    code: \"SVC\" /* ElSalvadorColon */,\n    countries: [CountryCode.ElSalvador],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"El Salvador Colon\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20A1\",\n    symbol_native: \"\\u20A1\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  EquatorialGuineaEkwele: {\n    code: \"GQE\" /* EquatorialGuineaEkwele */,\n    countries: [CountryCode.EquatorialGuinea],\n    decimal_digits: 0,\n    decimal_separator: \".\",\n    name: \"Equatorial Guinea Ekwele\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"GQE\",\n    symbol_native: \"GQE\",\n    symbol_placement: \"before\",\n    thousands_separator: \",\"\n  },\n  EritreaNakfa: {\n    code: \"ERN\" /* EritreaNakfa */,\n    countries: [CountryCode.Eritrea],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Eritrea Nakfa\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"Nfk\",\n    symbol_native: \"Nfk\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  EstoniaKroon: {\n    code: \"EEK\" /* EstoniaKroon */,\n    countries: [CountryCode.Estonia],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Estonia Kroon\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"kr\",\n    symbol_native: \"kr\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  EthiopiaBirr: {\n    code: \"ETB\" /* EthiopiaBirr */,\n    countries: [CountryCode.Ethiopia],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Ethiopia Birr\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"Br\",\n    symbol_native: \"Br\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  Euro: {\n    code: \"EUR\" /* Euro */,\n    countries: [\n      CountryCode.Andorra,\n      CountryCode.Austria,\n      CountryCode.Belgium,\n      CountryCode.Cyprus,\n      CountryCode.Estonia,\n      CountryCode.Finland,\n      CountryCode.France,\n      CountryCode.Germany,\n      CountryCode.Greece,\n      CountryCode.Ireland,\n      CountryCode.Italy,\n      CountryCode.Latvia,\n      CountryCode.Lithuania,\n      CountryCode.Luxembourg,\n      CountryCode.Malta,\n      CountryCode.Monaco,\n      CountryCode.Netherlands,\n      CountryCode.Portugal,\n      CountryCode.Spain,\n      CountryCode.Sweden,\n      CountryCode.UnitedKingdom\n    ],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Euro\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20AC\",\n    symbol_native: \"\\u20AC\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  FalklandIslandsPound: {\n    code: \"FKP\" /* FalklandIslandsPound */,\n    countries: [CountryCode.FalklandIslands],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Equatorial Guinea Ekwele\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\xA3\",\n    symbol_native: \"\\xA3\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  FijiDollar: {\n    code: \"FJD\" /* FijiDollar */,\n    countries: [CountryCode.Fiji],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Fiji Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  GambiaDalasi: {\n    code: \"GMD\" /* GambiaDalasi */,\n    countries: [CountryCode.Gambia],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Gambia Dalasi\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"D\",\n    symbol_native: \"D\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  GeorgiaLari: {\n    code: \"GEL\" /* GeorgiaLari */,\n    countries: [CountryCode.Georgia],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Georgia Lari\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20BE\",\n    symbol_native: \"\\u20BE\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  GhanaCedi: {\n    code: \"GHS\" /* GhanaCedi */,\n    countries: [CountryCode.Ghana],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Ghana Cedi\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20B5\",\n    symbol_native: \"\\u20B5\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  GibraltarPound: {\n    code: \"GIP\" /* GibraltarPound */,\n    countries: [CountryCode.Gibraltar],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Gibraltar Pound\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\xA3\",\n    symbol_native: \"\\xA3\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  GuatemalaQuetzal: {\n    code: \"GTQ\" /* GuatemalaQuetzal */,\n    countries: [CountryCode.Guatemala],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Guatemala Quetzal\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"Q\",\n    symbol_native: \"Q\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  GuernseyPound: {\n    code: \"GGP\" /* GuernseyPound */,\n    countries: [CountryCode.Guernsey],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Guernsey Pound\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\xA3\",\n    symbol_native: \"\\xA3\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  GuineaBissauPeso: {\n    code: \"GWP\" /* GuineaBissauPeso */,\n    countries: [CountryCode.GuineaBissau],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Guinea-Bissau Peso\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20B5\",\n    symbol_native: \"\\u20B5\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  GuyanaDollar: {\n    code: \"GYD\" /* GuyanaDollar */,\n    countries: [CountryCode.Guyana],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Guyana Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  HaitiGourde: {\n    code: \"HTG\" /* HaitiGourde */,\n    countries: [CountryCode.Haiti],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Haiti Gourde\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"G\",\n    symbol_native: \"G\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  HondurasLempira: {\n    code: \"HNL\" /* HondurasLempira */,\n    countries: [CountryCode.Honduras],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Honduras Lempira\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"L\",\n    symbol_native: \"L\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  HongKongDollar: {\n    code: \"HKD\" /* HongKongDollar */,\n    countries: [CountryCode.HongKong],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Hong Kong Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  HungaryForint: {\n    code: \"HUF\" /* HungaryForint */,\n    countries: [CountryCode.Hungary],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Hungary Forint\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"Ft\",\n    symbol_native: \"Ft\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  IcelandKrona: {\n    code: \"ISK\" /* IcelandKrona */,\n    countries: [CountryCode.Iceland],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"Iceland Krona\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"kr\",\n    symbol_native: \"kr\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  IndianRupee: {\n    code: \"INR\" /* IndiaRupee */,\n    countries: [CountryCode.India, CountryCode.Bhutan],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Indian Rupee\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20B9\",\n    symbol_native: \"\\u20B9\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  IndonesiaRupiah: {\n    code: \"IDR\" /* IndonesiaRupiah */,\n    countries: [CountryCode.Indonesia],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"Indonesia Rupiah\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"Rp\",\n    symbol_native: \"Rp\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  IranRial: {\n    code: \"IRR\" /* IranRial */,\n    countries: [CountryCode.Iran],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"Iran Rial\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\uFDFC\",\n    symbol_native: \"\\uFDFC\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  IsleOfManPound: {\n    code: \"IMP\" /* IsleOfManPound */,\n    countries: [CountryCode.IsleOfMan],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Isle of Man Pound\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\uFDFC\",\n    symbol_native: \"\\uFDFC\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  IsraeliShekel: {\n    code: \"ILS\" /* IsraelNewShekel */,\n    countries: [CountryCode.Israel],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Israeli Shekel\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20AA\",\n    symbol_native: \"\\u20AA\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  JamaicaDollar: {\n    code: \"JMD\" /* JamaicaDollar */,\n    countries: [CountryCode.Jamaica],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Jamaica Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"J$\",\n    symbol_native: \"J$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  JapanYen: {\n    code: \"JPY\" /* JapanYen */,\n    countries: [CountryCode.Japan],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"Japan Yen\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\xA5\",\n    symbol_native: \"\\uFFE5\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  JerseyPound: {\n    code: \"JEP\" /* JerseyPound */,\n    countries: [CountryCode.Jersey],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Jersey Pound\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\xA3\",\n    symbol_native: \"\\xA3\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  JordanDinar: {\n    code: \"JOD\" /* JordanDinar */,\n    countries: [CountryCode.Jordan],\n    decimal_digits: 3,\n    decimal_separator: \",\",\n    name: \"Jordan Dinar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"JD\",\n    symbol_native: \"JD\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  KazakhstanTenge: {\n    code: \"KZT\" /* KazakhstanTenge */,\n    countries: [CountryCode.Kazakhstan],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Kazakhstan Tenge\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20B8\",\n    symbol_native: \"\\u20B8\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  KenyaShilling: {\n    code: \"KES\" /* KenyaShilling */,\n    countries: [CountryCode.Kenya],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Kenya Shilling\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"KSh\",\n    symbol_native: \"KSh\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  KuwaitDinar: {\n    code: \"KWD\" /* KuwaitDinar */,\n    countries: [CountryCode.Kuwait],\n    decimal_digits: 3,\n    decimal_separator: \",\",\n    name: \"Kuwait Dinar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"KD\",\n    symbol_native: \"KD\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  KyrgyzstanSom: {\n    code: \"KGS\" /* KyrgyzstanSom */,\n    countries: [CountryCode.Kyrgyzstan],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Kyrgyzstan Som\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"KGS\",\n    symbol_native: \"KGS\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  LaosKip: {\n    code: \"LAK\" /* LaosKip */,\n    countries: [CountryCode.Laos],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"Laos Kip\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20AD\",\n    symbol_native: \"\\u20AD\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  LatviaLats: {\n    code: \"LVL\" /* LatviaLats */,\n    countries: [CountryCode.Latvia],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Latvia Lat\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"Ls\",\n    symbol_native: \"Ls\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  LebanonPound: {\n    code: \"LBP\" /* LebanonPound */,\n    countries: [CountryCode.Lebanon],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"Lebanon Pound\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\xA3\",\n    symbol_native: \"\\xA3\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  LesothoLoti: {\n    code: \"LSL\" /* LesothoLoti */,\n    countries: [CountryCode.Lesotho],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Lesotho Loti\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"M\",\n    symbol_native: \"M\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  LiberiaDollar: {\n    code: \"LRD\" /* LiberiaDollar */,\n    countries: [CountryCode.Liberia],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Liberia Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  LibyanDinar: {\n    code: \"LYD\" /* LibyanDinar */,\n    countries: [CountryCode.Libya],\n    decimal_digits: 3,\n    decimal_separator: \",\",\n    name: \"Libyan Dinar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"LD\",\n    symbol_native: \"LD\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  LithuaniaLitas: {\n    code: \"LTL\" /* LithuaniaLitas */,\n    countries: [CountryCode.Lithuania],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Lithuania Litas\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"Lt\",\n    symbol_native: \"Lt\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  MacauPataca: {\n    code: \"MOP\" /* MacauPataca */,\n    countries: [CountryCode.Macau],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Macau Pataca\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"MOP$\",\n    symbol_native: \"MOP$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  MacedoniaDenar: {\n    code: \"MKD\" /* MacedoniaDenar */,\n    countries: [CountryCode.NorthMacedonia],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Macedonia Denar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u0434\\u0435\\u043D\",\n    symbol_native: \"\\u0434\\u0435\\u043D\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  MadagascarAriary: {\n    code: \"MGA\" /* MadagascarAriary */,\n    countries: [CountryCode.Madagascar],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"Madagascar Ariary\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"Ar\",\n    symbol_native: \"Ar\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  MalawiKwacha: {\n    code: \"MWK\" /* MalawiKwacha */,\n    countries: [CountryCode.Malawi],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Malawi Kwacha\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"MK\",\n    symbol_native: \"MK\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  MalaysiaRinggit: {\n    code: \"MYR\" /* MalaysiaRinggit */,\n    countries: [CountryCode.Malaysia],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Malaysia Ringgit\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"RM\",\n    symbol_native: \"RM\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  MaldivesRufiyaa: {\n    code: \"MVR\" /* MaldivesRufiyaa */,\n    countries: [CountryCode.Maldives],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Maldives Rufiyaa\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"Rf\",\n    symbol_native: \"Rf\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  MaltaLira: {\n    code: \"MTL\" /* MaltaLira */,\n    countries: [CountryCode.Malta],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Malta Lira\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"Lm\",\n    symbol_native: \"Lm\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  MauritiusRupee: {\n    code: \"MUR\" /* MauritiusRupee */,\n    countries: [CountryCode.Mauritius],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Mauritius Rupee\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20A8\",\n    symbol_native: \"\\u20A8\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  MexicoPeso: {\n    code: \"MXN\" /* MexicoPeso */,\n    countries: [CountryCode.Mexico],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Mexico Peso\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  MoldovaLeu: {\n    code: \"MDL\" /* MoldovaLeu */,\n    countries: [CountryCode.Moldova],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Moldova Leu\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"L\",\n    symbol_native: \"L\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  MongoliaTughrik: {\n    code: \"MNT\" /* MongoliaTughrik */,\n    countries: [CountryCode.Mongolia],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Mongolia Tughrik\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20AE\",\n    symbol_native: \"\\u20AE\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  MoroccoDirham: {\n    code: \"MAD\" /* MoroccoDirham */,\n    countries: [CountryCode.Morocco],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Morocco Dirham\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"DH\",\n    symbol_native: \"DH\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  MozambiqueMetical: {\n    code: \"MZN\" /* MozambiqueMetical */,\n    countries: [CountryCode.Mozambique],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Mozambique Metical\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"MT\",\n    symbol_native: \"MT\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  MyanmarKyat: {\n    code: \"MMK\" /* MyanmarKyat */,\n    countries: [CountryCode.Myanmar],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"Myanmar Kyat\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"K\",\n    symbol_native: \"K\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  NamibiaDollar: {\n    code: \"NAD\" /* NamibiaDollar */,\n    countries: [CountryCode.Namibia],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Namibia Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  NepalRupee: {\n    code: \"NPR\" /* NepalRupee */,\n    countries: [CountryCode.Nepal],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Nepal Rupee\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20A8\",\n    symbol_native: \"\\u20A8\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  NetherlandsAntillesGuilder: {\n    code: \"ANG\" /* NetherlandsAntillesGuilder */,\n    countries: [CountryCode.NetherlandsAntilles],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Netherlands Antilles Guilder\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u0192\",\n    symbol_native: \"\\u0192\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  NewCaledoniaFranc: {\n    code: \"XPF\" /* NewCaledoniaFranc */,\n    countries: [CountryCode.NewCaledonia],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"New Caledonia Franc\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20A3\",\n    symbol_native: \"\\u20A3\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  NewZealandDollar: {\n    code: \"NZD\" /* NewZealandDollar */,\n    countries: [CountryCode.NewZealand],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"New Zealand Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  NicaraguaCordoba: {\n    code: \"NIO\" /* NicaraguaCordoba */,\n    countries: [CountryCode.Nicaragua],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Nicaragua Cordoba\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"C$\",\n    symbol_native: \"C$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  NigerCFAFranc: {\n    code: \"XOF\" /* NigerCFAFranc */,\n    countries: [CountryCode.Niger],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"Niger CFA Franc\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"CFA\",\n    symbol_native: \"CFA\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  NigeriaNaira: {\n    code: \"NGN\" /* NigeriaNaira */,\n    countries: [CountryCode.Nigeria],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Nigeria Naira\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20A6\",\n    symbol_native: \"\\u20A6\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  NorthKoreaWon: {\n    code: \"KPW\" /* NorthKoreaWon */,\n    countries: [CountryCode.NorthKorea],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"North Korea Won\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20A9\",\n    symbol_native: \"\\u20A9\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  NorwayKrone: {\n    code: \"NOK\" /* NorwayKrone */,\n    countries: [CountryCode.Norway],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Norway Krone\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"kr\",\n    symbol_native: \"kr\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  OmanRial: {\n    code: \"OMR\" /* OmanRial */,\n    countries: [CountryCode.Oman],\n    decimal_digits: 3,\n    decimal_separator: \",\",\n    name: \"Oman Rial\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\uFDFC\",\n    symbol_native: \"\\uFDFC\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  PakistanRupee: {\n    code: \"PKR\" /* PakistanRupee */,\n    countries: [CountryCode.Pakistan],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Pakistan Rupee\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20A8\",\n    symbol_native: \"\\u20A8\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  PanamaBalboa: {\n    code: \"PAB\" /* PanamaBalboa */,\n    countries: [CountryCode.Panama],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Panama Balboa\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"B/.\",\n    symbol_native: \"B/.\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  ParaguayGuarani: {\n    code: \"PYG\" /* ParaguayGuarani */,\n    countries: [CountryCode.Paraguay],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"Paraguay Guarani\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"Gs\",\n    symbol_native: \"Gs\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  PeruvianNuevo: {\n    code: \"PEN\" /* PeruNuevo */,\n    countries: [CountryCode.Peru],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Peruvian Nuevo\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"S/.\",\n    symbol_native: \"S/.\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  PhilippinesPeso: {\n    code: \"PHP\" /* PhilippinesPeso */,\n    countries: [CountryCode.Philippines],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Philippines Peso\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20B1\",\n    symbol_native: \"\\u20B1\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  PolandZloty: {\n    code: \"PLN\" /* PolandZloty */,\n    countries: [CountryCode.Poland],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Poland Zloty\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"z\\u0142\",\n    symbol_native: \"z\\u0142\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  QatarRial: {\n    code: \"QAR\" /* QatarRial */,\n    countries: [CountryCode.Qatar],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Qatar Rial\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\uFDFC\",\n    symbol_native: \"\\uFDFC\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  RomaniaNewLeu: {\n    code: \"RON\" /* RomaniaNewLeu */,\n    countries: [CountryCode.Romania],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Romania New Leu\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"lei\",\n    symbol_native: \"lei\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  RussiaRuble: {\n    code: \"RUB\" /* RussiaRuble */,\n    countries: [CountryCode.RussianFederation],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Russia Ruble\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20BD\",\n    symbol_native: \"\\u20BD\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  RwandaFranc: {\n    code: \"RWF\" /* RwandaFranc */,\n    countries: [CountryCode.Rwanda],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"Rwanda Franc\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"RF\",\n    symbol_native: \"RF\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  SaudiArabiaRiyal: {\n    code: \"SAR\" /* SaudiArabiaRiyal */,\n    countries: [CountryCode.SaudiArabia],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Saudi Arabia Riyal\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\uFDFC\",\n    symbol_native: \"\\uFDFC\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  SerbiaDinar: {\n    code: \"RSD\" /* SerbiaDinar */,\n    countries: [CountryCode.Serbia],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"Serbia Dinar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u0414\\u0438\\u043D.\",\n    symbol_native: \"\\u0414\\u0438\\u043D.\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  SeychellesRupee: {\n    code: \"SCR\" /* SeychellesRupee */,\n    countries: [CountryCode.Seychelles],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Seychelles Rupee\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20A8\",\n    symbol_native: \"\\u20A8\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  SingaporeDollar: {\n    code: \"SGD\" /* SingaporeDollar */,\n    countries: [CountryCode.Singapore],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Singapore Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  SlovakiaKoruna: {\n    code: \"SKK\" /* SlovakiaKoruna */,\n    countries: [CountryCode.Slovakia],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Slovakia Koruna\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"Sk\",\n    symbol_native: \"Sk\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  SloveniaTolar: {\n    code: \"SIT\" /* SloveniaTolar */,\n    countries: [CountryCode.Slovenia],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Slovenia Tolar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"SIT\",\n    symbol_native: \"SIT\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  SolomonIslandsDollar: {\n    code: \"SBD\" /* SolomonIslandsDollar */,\n    countries: [CountryCode.SolomonIslands],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Solomon Islands Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  SomaliaShilling: {\n    code: \"SOS\" /* SomaliaShilling */,\n    countries: [CountryCode.Somalia],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"Somalia Shilling\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"S\",\n    symbol_native: \"S\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  SouthAfricaRand: {\n    code: \"ZAR\" /* SouthAfricaRand */,\n    countries: [CountryCode.SouthAfrica],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"South Africa Rand\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"R\",\n    symbol_native: \"R\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  SouthKoreaWon: {\n    code: \"KRW\" /* SouthKoreaWon */,\n    countries: [CountryCode.SouthKorea],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"South Korea Won\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20A9\",\n    symbol_native: \"\\u20A9\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  SriLankaRupee: {\n    code: \"LKR\" /* SriLankaRupee */,\n    countries: [CountryCode.SriLanka],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Sri Lanka Rupee\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20A8\",\n    symbol_native: \"\\u20A8\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  SudanPound: {\n    code: \"SDG\" /* SudanPound */,\n    countries: [CountryCode.Sudan],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Sudan Pound\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\xA3\",\n    symbol_native: \"\\xA3\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  SurinameDollar: {\n    code: \"SRD\" /* SurinameDollar */,\n    countries: [CountryCode.Suriname],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Suriname Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  SwazilandLilangeni: {\n    code: \"SZL\" /* SwazilandLilangeni */,\n    countries: [CountryCode.Swaziland],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Swaziland Lilangeni\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"E\",\n    symbol_native: \"E\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  SwedenKrona: {\n    code: \"SEK\" /* SwedenKrona */,\n    countries: [CountryCode.Sweden],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Sweden Krona\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"kr\",\n    symbol_native: \"kr\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  SwitzerlandFranc: {\n    code: \"CHF\" /* SwitzerlandFranc */,\n    countries: [CountryCode.Switzerland],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Switzerland Franc\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"CHF\",\n    symbol_native: \"CHF\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  SyriaPound: {\n    code: \"SYP\" /* SyriaPound */,\n    countries: [CountryCode.Syria],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Syria Pound\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\xA3\",\n    symbol_native: \"\\xA3\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  TaiwanNewDollar: {\n    code: \"TWD\" /* TaiwanNewDollar */,\n    countries: [CountryCode.Taiwan],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Taiwan New Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"NT$\",\n    symbol_native: \"NT$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  TajikistanSomoni: {\n    code: \"TJS\" /* TajikistanSomoni */,\n    countries: [CountryCode.Tajikistan],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Tajikistan Somoni\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"TJS\",\n    symbol_native: \"TJS\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  TanzaniaShilling: {\n    code: \"TZS\" /* TanzaniaShilling */,\n    countries: [CountryCode.Tanzania],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Tanzania Shilling\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"TSh\",\n    symbol_native: \"TSh\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  ThailandBaht: {\n    code: \"THB\" /* ThailandBaht */,\n    countries: [CountryCode.Thailand],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Thailand Baht\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u0E3F\",\n    symbol_native: \"\\u0E3F\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  TunisiaDinar: {\n    code: \"TND\" /* TunisiaDinar */,\n    countries: [CountryCode.Tunisia],\n    decimal_digits: 3,\n    decimal_separator: \",\",\n    name: \"Tunisia Dinar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u062F.\\u062A\",\n    symbol_native: \"\\u062F.\\u062A\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  TurkeyLira: {\n    code: \"TRY\" /* TurkeyLira */,\n    countries: [CountryCode.Turkey],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Turkey Lira\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20BA\",\n    symbol_native: \"\\u20BA\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  TurkmenistanManat: {\n    code: \"TMT\" /* TurkmenistanManat */,\n    countries: [CountryCode.Turkmenistan],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Turkmenistan Manat\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"m\",\n    symbol_native: \"m\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  UgandaShilling: {\n    code: \"UGX\" /* UgandaShilling */,\n    countries: [CountryCode.Uganda],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"Uganda Shilling\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"USh\",\n    symbol_native: \"USh\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  UkraineHryvnia: {\n    code: \"UAH\" /* UkraineHryvnia */,\n    countries: [CountryCode.Ukraine],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Ukraine Hryvnia\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20B4\",\n    symbol_native: \"\\u20B4\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  UnitedArabEmiratesDirham: {\n    code: \"AED\" /* UnitedArabEmiratesDirham */,\n    countries: [CountryCode.UnitedArabEmirates],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"United Arab Emirates Dirham\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u062F.\\u0625\",\n    symbol_native: \"\\u062F.\\u0625\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  UnitedKingdomPound: {\n    code: \"GBP\" /* UnitedKingdomPound */,\n    countries: [CountryCode.UnitedKingdom],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"United Kingdom Pound\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\xA3\",\n    symbol_native: \"\\xA3\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  UnitedStatesDollar: {\n    code: \"USD\" /* UnitedStatesDollar */,\n    countries: [CountryCode.UnitedStates],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"United States Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$\",\n    symbol_native: \"$\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  UruguayPeso: {\n    code: \"UYU\" /* UruguayPeso */,\n    countries: [CountryCode.Uruguay],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Uruguay Peso\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"$U\",\n    symbol_native: \"$U\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  UzbekistanSom: {\n    code: \"UZS\" /* UzbekistanSom */,\n    countries: [CountryCode.Uzbekistan],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Uzbekistan Som\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"UZS\",\n    symbol_native: \"UZS\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  VanuatuVatu: {\n    code: \"VUV\" /* VanuatuVatu */,\n    countries: [CountryCode.Vanuatu],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"Vanuatu Vatu\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"VT\",\n    symbol_native: \"VT\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  VenezuelaBolivar: {\n    code: \"VEF\" /* VenezuelaBolivar */,\n    countries: [CountryCode.Venezuela],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Venezuela Bolivar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"Bs. F\",\n    symbol_native: \"Bs. F\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  VietnamDong: {\n    code: \"VND\" /* VietnamDong */,\n    countries: [CountryCode.Vietnam],\n    decimal_digits: 0,\n    decimal_separator: \",\",\n    name: \"Vietnam Dong\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20AB\",\n    symbol_native: \"\\u20AB\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  YemenRial: {\n    code: \"YER\" /* YemenRial */,\n    countries: [CountryCode.Yemen],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Yemen Rial\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\uFDFC\",\n    symbol_native: \"\\uFDFC\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  ZambiaKwacha: {\n    code: \"ZMW\" /* ZambiaKwacha */,\n    countries: [CountryCode.Zambia],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Zambia Kwacha\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"ZK\",\n    symbol_native: \"ZK\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  },\n  ZimbabweDollar: {\n    code: \"ZWL\" /* ZimbabweDollar */,\n    countries: [CountryCode.Zimbabwe],\n    decimal_digits: 2,\n    decimal_separator: \",\",\n    name: \"Zimbabwe Dollar\",\n    negative_sign: \"-\",\n    positive_sign: \"\",\n    rounding: 0,\n    symbol: \"\\u20AB\",\n    symbol_native: \"\\u20AB\",\n    symbol_placement: \"before\",\n    thousands_separator: \".\"\n  }\n};\nvar CryptoCurrency = /* @__PURE__ */ ((CryptoCurrency2) => {\n  CryptoCurrency2[\"Bitcoin\"] = \"BTC\";\n  CryptoCurrency2[\"Ethereum\"] = \"ETH\";\n  CryptoCurrency2[\"Litecoin\"] = \"LTC\";\n  CryptoCurrency2[\"Ripple\"] = \"XRP\";\n  CryptoCurrency2[\"Dash\"] = \"DASH\";\n  CryptoCurrency2[\"Zcash\"] = \"ZEC\";\n  CryptoCurrency2[\"Dogecoin\"] = \"DOGE\";\n  CryptoCurrency2[\"Monero\"] = \"XMR\";\n  CryptoCurrency2[\"BitcoinCash\"] = \"BCH\";\n  CryptoCurrency2[\"EOS\"] = \"EOS\";\n  CryptoCurrency2[\"Binance\"] = \"BNB\";\n  CryptoCurrency2[\"Stellar\"] = \"XLM\";\n  CryptoCurrency2[\"Cardano\"] = \"ADA\";\n  CryptoCurrency2[\"IOTA\"] = \"IOTA\";\n  CryptoCurrency2[\"Tezos\"] = \"XTZ\";\n  CryptoCurrency2[\"NEO\"] = \"NEO\";\n  CryptoCurrency2[\"TRON\"] = \"TRX\";\n  CryptoCurrency2[\"EOSClassic\"] = \"EOSC\";\n  CryptoCurrency2[\"Ontology\"] = \"ONT\";\n  CryptoCurrency2[\"VeChain\"] = \"VEN\";\n  CryptoCurrency2[\"QTUM\"] = \"QTUM\";\n  CryptoCurrency2[\"Lisk\"] = \"LSK\";\n  CryptoCurrency2[\"Waves\"] = \"WAVES\";\n  CryptoCurrency2[\"OmiseGO\"] = \"OMG\";\n  CryptoCurrency2[\"Zilliqa\"] = \"ZIL\";\n  CryptoCurrency2[\"BitcoinGold\"] = \"BTG\";\n  CryptoCurrency2[\"Decred\"] = \"DCR\";\n  CryptoCurrency2[\"Stratis\"] = \"STRAT\";\n  CryptoCurrency2[\"Populous\"] = \"PPT\";\n  CryptoCurrency2[\"Augur\"] = \"REP\";\n  CryptoCurrency2[\"Golem\"] = \"GNT\";\n  CryptoCurrency2[\"Siacoin\"] = \"SC\";\n  CryptoCurrency2[\"BasicAttentionToken\"] = \"BAT\";\n  CryptoCurrency2[\"ZCoin\"] = \"XZC\";\n  CryptoCurrency2[\"StratisHedged\"] = \"SNT\";\n  CryptoCurrency2[\"VeChainHedged\"] = \"VEN\";\n  CryptoCurrency2[\"PowerLedger\"] = \"POWR\";\n  CryptoCurrency2[\"WavesHedged\"] = \"WAVE\";\n  CryptoCurrency2[\"ZilliqaHedged\"] = \"ZRX\";\n  CryptoCurrency2[\"BitcoinDiamond\"] = \"BCD\";\n  CryptoCurrency2[\"DigiByte\"] = \"DGB\";\n  CryptoCurrency2[\"DigiByteHedged\"] = \"DGB\";\n  CryptoCurrency2[\"Bytecoin\"] = \"BCN\";\n  CryptoCurrency2[\"BytecoinHedged\"] = \"BCN\";\n  return CryptoCurrency2;\n})(CryptoCurrency || {});\n\nvar LanguageCode = /* @__PURE__ */ ((LanguageCode2) => {\n  LanguageCode2[\"Afrikaans\"] = \"af\";\n  LanguageCode2[\"Albanian\"] = \"sq\";\n  LanguageCode2[\"Amharic\"] = \"am\";\n  LanguageCode2[\"Arabic\"] = \"ar\";\n  LanguageCode2[\"Armenian\"] = \"hy\";\n  LanguageCode2[\"Azerbaijani\"] = \"az\";\n  LanguageCode2[\"Bashkir\"] = \"ba\";\n  LanguageCode2[\"Basque\"] = \"eu\";\n  LanguageCode2[\"Belarusian\"] = \"be\";\n  LanguageCode2[\"Bengali\"] = \"bn\";\n  LanguageCode2[\"Berber\"] = \"ber\";\n  LanguageCode2[\"Bhutani\"] = \"dz\";\n  LanguageCode2[\"Bihari\"] = \"bh\";\n  LanguageCode2[\"Bislama\"] = \"bi\";\n  LanguageCode2[\"Bosnian\"] = \"bs\";\n  LanguageCode2[\"Breten\"] = \"br\";\n  LanguageCode2[\"Bulgarian\"] = \"bg\";\n  LanguageCode2[\"Burmese\"] = \"my\";\n  LanguageCode2[\"Cantonese\"] = \"yue\";\n  LanguageCode2[\"Catalan\"] = \"ca\";\n  LanguageCode2[\"Chinese\"] = \"zh\";\n  LanguageCode2[\"Chuvash\"] = \"cv\";\n  LanguageCode2[\"Corsican\"] = \"co\";\n  LanguageCode2[\"Croatian\"] = \"hr\";\n  LanguageCode2[\"Czech\"] = \"cs\";\n  LanguageCode2[\"Danish\"] = \"da\";\n  LanguageCode2[\"Dari\"] = \"prs\";\n  LanguageCode2[\"Divehi\"] = \"dv\";\n  LanguageCode2[\"Dutch\"] = \"nl\";\n  LanguageCode2[\"English\"] = \"en\";\n  LanguageCode2[\"Esperanto\"] = \"eo\";\n  LanguageCode2[\"Estonian\"] = \"et\";\n  LanguageCode2[\"Faroese\"] = \"fo\";\n  LanguageCode2[\"Farsi\"] = \"fa\";\n  LanguageCode2[\"Filipino\"] = \"fil\";\n  LanguageCode2[\"Finnish\"] = \"fi\";\n  LanguageCode2[\"French\"] = \"fr\";\n  LanguageCode2[\"Frisian\"] = \"fy\";\n  LanguageCode2[\"Galician\"] = \"gl\";\n  LanguageCode2[\"Georgian\"] = \"ka\";\n  LanguageCode2[\"German\"] = \"de\";\n  LanguageCode2[\"Greek\"] = \"el\";\n  LanguageCode2[\"Greenlandic\"] = \"kl\";\n  LanguageCode2[\"Gujarati\"] = \"gu\";\n  LanguageCode2[\"Haitian\"] = \"ht\";\n  LanguageCode2[\"Hausa\"] = \"ha\";\n  LanguageCode2[\"Hebrew\"] = \"he\";\n  LanguageCode2[\"Hindi\"] = \"hi\";\n  LanguageCode2[\"Hungarian\"] = \"hu\";\n  LanguageCode2[\"Icelandic\"] = \"is\";\n  LanguageCode2[\"Igbo\"] = \"ig\";\n  LanguageCode2[\"Indonesian\"] = \"id\";\n  LanguageCode2[\"Irish\"] = \"ga\";\n  LanguageCode2[\"Italian\"] = \"it\";\n  LanguageCode2[\"Japanese\"] = \"ja\";\n  LanguageCode2[\"Javanese\"] = \"jv\";\n  LanguageCode2[\"Kannada\"] = \"kn\";\n  LanguageCode2[\"Karelian\"] = \"krl\";\n  LanguageCode2[\"Kazakh\"] = \"kk\";\n  LanguageCode2[\"Khmer\"] = \"km\";\n  LanguageCode2[\"Komi\"] = \"kv\";\n  LanguageCode2[\"Konkani\"] = \"kok\";\n  LanguageCode2[\"Korean\"] = \"ko\";\n  LanguageCode2[\"Kurdish\"] = \"ku\";\n  LanguageCode2[\"Kyrgyz\"] = \"ky\";\n  LanguageCode2[\"Lao\"] = \"lo\";\n  LanguageCode2[\"Latin\"] = \"la\";\n  LanguageCode2[\"Latvian\"] = \"lv\";\n  LanguageCode2[\"Lithuanian\"] = \"lt\";\n  LanguageCode2[\"Luxembourgish\"] = \"lb\";\n  LanguageCode2[\"Ossetian\"] = \"os\";\n  LanguageCode2[\"Macedonian\"] = \"mk\";\n  LanguageCode2[\"Malagasy\"] = \"mg\";\n  LanguageCode2[\"Malay\"] = \"ms\";\n  LanguageCode2[\"Malayalam\"] = \"ml\";\n  LanguageCode2[\"Maltese\"] = \"mt\";\n  LanguageCode2[\"Maori\"] = \"mi\";\n  LanguageCode2[\"Marathi\"] = \"mr\";\n  LanguageCode2[\"Mari\"] = \"mhr\";\n  LanguageCode2[\"Mongolian\"] = \"mn\";\n  LanguageCode2[\"Montenegrin\"] = \"me\";\n  LanguageCode2[\"Nepali\"] = \"ne\";\n  LanguageCode2[\"NorthernSotho\"] = \"nso\";\n  LanguageCode2[\"Norwegian\"] = \"no\";\n  LanguageCode2[\"NorwegianBokmal\"] = \"nb\";\n  LanguageCode2[\"NorwegianNynorsk\"] = \"nn\";\n  LanguageCode2[\"Oriya\"] = \"or\";\n  LanguageCode2[\"Pashto\"] = \"ps\";\n  LanguageCode2[\"Persian\"] = \"fa\";\n  LanguageCode2[\"Polish\"] = \"pl\";\n  LanguageCode2[\"Portuguese\"] = \"pt\";\n  LanguageCode2[\"Punjabi\"] = \"pa\";\n  LanguageCode2[\"Quechua\"] = \"qu\";\n  LanguageCode2[\"Romanian\"] = \"ro\";\n  LanguageCode2[\"Russian\"] = \"ru\";\n  LanguageCode2[\"Sakha\"] = \"sah\";\n  LanguageCode2[\"Sami\"] = \"se\";\n  LanguageCode2[\"Samoan\"] = \"sm\";\n  LanguageCode2[\"Sanskrit\"] = \"sa\";\n  LanguageCode2[\"Scots\"] = \"gd\";\n  LanguageCode2[\"Serbian\"] = \"sr\";\n  LanguageCode2[\"SerbianCyrillic\"] = \"sr-Cyrl\";\n  LanguageCode2[\"Sesotho\"] = \"st\";\n  LanguageCode2[\"Shona\"] = \"sn\";\n  LanguageCode2[\"Sindhi\"] = \"sd\";\n  LanguageCode2[\"Sinhala\"] = \"si\";\n  LanguageCode2[\"Slovak\"] = \"sk\";\n  LanguageCode2[\"Slovenian\"] = \"sl\";\n  LanguageCode2[\"Somali\"] = \"so\";\n  LanguageCode2[\"Spanish\"] = \"es\";\n  LanguageCode2[\"Sudanese\"] = \"su\";\n  LanguageCode2[\"Sutu\"] = \"sx\";\n  LanguageCode2[\"Swahili\"] = \"sw\";\n  LanguageCode2[\"Swedish\"] = \"sv\";\n  LanguageCode2[\"Syriac\"] = \"syr\";\n  LanguageCode2[\"Tagalog\"] = \"tl\";\n  LanguageCode2[\"Tajik\"] = \"tg\";\n  LanguageCode2[\"Tamazight\"] = \"tmh\";\n  LanguageCode2[\"Tamil\"] = \"ta\";\n  LanguageCode2[\"Tatar\"] = \"tt\";\n  LanguageCode2[\"Telugu\"] = \"te\";\n  LanguageCode2[\"Thai\"] = \"th\";\n  LanguageCode2[\"Tibetan\"] = \"bo\";\n  LanguageCode2[\"Tsonga\"] = \"ts\";\n  LanguageCode2[\"Tswana\"] = \"tn\";\n  LanguageCode2[\"Turkish\"] = \"tr\";\n  LanguageCode2[\"Turkmen\"] = \"tk\";\n  LanguageCode2[\"Ukrainian\"] = \"uk\";\n  LanguageCode2[\"Urdu\"] = \"ur\";\n  LanguageCode2[\"Uzbek\"] = \"uz\";\n  LanguageCode2[\"Vietnamese\"] = \"vi\";\n  LanguageCode2[\"Welsh\"] = \"cy\";\n  LanguageCode2[\"Xhosa\"] = \"xh\";\n  LanguageCode2[\"Yiddish\"] = \"yi\";\n  LanguageCode2[\"Yoruba\"] = \"yo\";\n  LanguageCode2[\"Zulu\"] = \"zu\";\n  return LanguageCode2;\n})(LanguageCode || {});\n\nvar LocaleCode = /* @__PURE__ */ ((LocaleCode2) => {\n  LocaleCode2[\"Afrikaans\"] = \"af\";\n  LocaleCode2[\"AfrikaansSouthAfrica\"] = \"af-ZA\";\n  LocaleCode2[\"Albanian\"] = \"sq\";\n  LocaleCode2[\"AlbanianAlbania\"] = \"sq-AL\";\n  LocaleCode2[\"Amharic\"] = \"am\";\n  LocaleCode2[\"AmharicEthiopia\"] = \"am-ET\";\n  LocaleCode2[\"Arabic\"] = \"ar\";\n  LocaleCode2[\"ArabicAlgeria\"] = \"ar-DZ\";\n  LocaleCode2[\"ArabicBahrain\"] = \"ar-BH\";\n  LocaleCode2[\"ArabicEgypt\"] = \"ar-EG\";\n  LocaleCode2[\"ArabicIraq\"] = \"ar-IQ\";\n  LocaleCode2[\"ArabicJordan\"] = \"ar-JO\";\n  LocaleCode2[\"ArabicKuwait\"] = \"ar-KW\";\n  LocaleCode2[\"ArabicLebanon\"] = \"ar-LB\";\n  LocaleCode2[\"ArabicLibya\"] = \"ar-LY\";\n  LocaleCode2[\"ArabicMorocco\"] = \"ar-MA\";\n  LocaleCode2[\"ArabicOman\"] = \"ar-OM\";\n  LocaleCode2[\"ArabicQatar\"] = \"ar-QA\";\n  LocaleCode2[\"ArabicSaudiArabia\"] = \"ar-SA\";\n  LocaleCode2[\"ArabicSyria\"] = \"ar-SY\";\n  LocaleCode2[\"ArabicTunisia\"] = \"ar-TN\";\n  LocaleCode2[\"ArabicUnitedArabEmirates\"] = \"ar-AE\";\n  LocaleCode2[\"ArabicYemen\"] = \"ar-YE\";\n  LocaleCode2[\"Armenian\"] = \"hy\";\n  LocaleCode2[\"ArmenianArmenia\"] = \"hy-AM\";\n  LocaleCode2[\"Azerbaijani\"] = \"az\";\n  LocaleCode2[\"AzerbaijaniAzerbaijan\"] = \"az-AZ\";\n  LocaleCode2[\"AzerbaijaniCyrillicAzerbaijan\"] = \"az-Cyrl-AZ\";\n  LocaleCode2[\"Bashkir\"] = \"ba\";\n  LocaleCode2[\"Basque\"] = \"eu\";\n  LocaleCode2[\"BasqueSpain\"] = \"eu-ES\";\n  LocaleCode2[\"Belarusian\"] = \"be\";\n  LocaleCode2[\"BelarusianBelarus\"] = \"be-BY\";\n  LocaleCode2[\"Bengali\"] = \"bn\";\n  LocaleCode2[\"BengaliBangladesh\"] = \"bn-BD\";\n  LocaleCode2[\"BengaliIndia\"] = \"bn-IN\";\n  LocaleCode2[\"Berber\"] = \"ber\";\n  LocaleCode2[\"Bhutani\"] = \"dz\";\n  LocaleCode2[\"BhutaniBhutan\"] = \"dz-BT\";\n  LocaleCode2[\"Bosnian\"] = \"bs\";\n  LocaleCode2[\"BosnianBosniaAndHerzegovina\"] = \"bs-BA\";\n  LocaleCode2[\"Breton\"] = \"br\";\n  LocaleCode2[\"Bulgarian\"] = \"bg\";\n  LocaleCode2[\"BulgarianBosniaAndHerzegovina\"] = \"bg-BG\";\n  LocaleCode2[\"BulgarianBulgaria\"] = \"bg-BG\";\n  LocaleCode2[\"Burmese\"] = \"my\";\n  LocaleCode2[\"BurmeseMyanmar\"] = \"my-MM\";\n  LocaleCode2[\"Cantonese\"] = \"yue\";\n  LocaleCode2[\"CantoneseHongKong\"] = \"yue-HK\";\n  LocaleCode2[\"Catalan\"] = \"ca\";\n  LocaleCode2[\"CatalanSpain\"] = \"ca-ES\";\n  LocaleCode2[\"Chechen\"] = \"ce\";\n  LocaleCode2[\"Cherokee\"] = \"chr\";\n  LocaleCode2[\"Chinese\"] = \"zh\";\n  LocaleCode2[\"ChineseSimplified\"] = \"zh-Hans\";\n  LocaleCode2[\"ChineseSimplifiedChina\"] = \"zh-Hans-CN\";\n  LocaleCode2[\"ChineseSimplifiedHongKong\"] = \"zh-Hans-HK\";\n  LocaleCode2[\"ChineseSimplifiedMacau\"] = \"zh-Hans-MO\";\n  LocaleCode2[\"ChineseSimplifiedSingapore\"] = \"zh-Hans-SG\";\n  LocaleCode2[\"ChineseTraditional\"] = \"zh-Hant\";\n  LocaleCode2[\"ChineseTraditionalHongKong\"] = \"zh-Hant-HK\";\n  LocaleCode2[\"ChineseTraditionalMacau\"] = \"zh-Hant-MO\";\n  LocaleCode2[\"ChineseTraditionalSingapore\"] = \"zh-Hant-SG\";\n  LocaleCode2[\"ChineseTraditionalTaiwan\"] = \"zh-Hant-TW\";\n  LocaleCode2[\"Chuvash\"] = \"cv\";\n  LocaleCode2[\"CorsicanFrance\"] = \"co-FR\";\n  LocaleCode2[\"Croatian\"] = \"hr\";\n  LocaleCode2[\"CroatianBosniaAndHerzegovina\"] = \"hr-BA\";\n  LocaleCode2[\"CroatianCroatia\"] = \"hr-HR\";\n  LocaleCode2[\"Czech\"] = \"cs\";\n  LocaleCode2[\"CzechCzechRepublic\"] = \"cs-CZ\";\n  LocaleCode2[\"Danish\"] = \"da\";\n  LocaleCode2[\"DanishDenmark\"] = \"da-DK\";\n  LocaleCode2[\"Dari\"] = \"prs\";\n  LocaleCode2[\"DariAfghanistan\"] = \"prs-AF\";\n  LocaleCode2[\"Divehi\"] = \"dv\";\n  LocaleCode2[\"DivehiMaldives\"] = \"dv-MV\";\n  LocaleCode2[\"Dutch\"] = \"nl\";\n  LocaleCode2[\"DutchBelgium\"] = \"nl-BE\";\n  LocaleCode2[\"DutchNetherlands\"] = \"nl-NL\";\n  LocaleCode2[\"English\"] = \"en\";\n  LocaleCode2[\"EnglishAustralia\"] = \"en-AU\";\n  LocaleCode2[\"EnglishBelgium\"] = \"en-BE\";\n  LocaleCode2[\"EnglishBelize\"] = \"en-BZ\";\n  LocaleCode2[\"EnglishCanada\"] = \"en-CA\";\n  LocaleCode2[\"EnglishCaribbean\"] = \"en-029\";\n  LocaleCode2[\"EnglishIreland\"] = \"en-IE\";\n  LocaleCode2[\"EnglishJamaica\"] = \"en-JM\";\n  LocaleCode2[\"EnglishNewZealand\"] = \"en-NZ\";\n  LocaleCode2[\"EnglishPhilippines\"] = \"en-PH\";\n  LocaleCode2[\"EnglishSingapore\"] = \"en-SG\";\n  LocaleCode2[\"EnglishSouthAfrica\"] = \"en-ZA\";\n  LocaleCode2[\"EnglishTrinidadAndTobago\"] = \"en-TT\";\n  LocaleCode2[\"EnglishUnitedKingdom\"] = \"en-GB\";\n  LocaleCode2[\"EnglishUnitedStates\"] = \"en-US\";\n  LocaleCode2[\"EnglishZimbabwe\"] = \"en-ZW\";\n  LocaleCode2[\"Esperanto\"] = \"eo\";\n  LocaleCode2[\"Estonian\"] = \"et\";\n  LocaleCode2[\"EstonianEstonia\"] = \"et-EE\";\n  LocaleCode2[\"Faroese\"] = \"fo\";\n  LocaleCode2[\"FaroeseFaroeIslands\"] = \"fo-FO\";\n  LocaleCode2[\"Farsi\"] = \"fa\";\n  LocaleCode2[\"FarsiIran\"] = \"fa-IR\";\n  LocaleCode2[\"Filipino\"] = \"fil\";\n  LocaleCode2[\"FilipinoPhilippines\"] = \"fil-PH\";\n  LocaleCode2[\"Finnish\"] = \"fi\";\n  LocaleCode2[\"FinnishFinland\"] = \"fi-FI\";\n  LocaleCode2[\"French\"] = \"fr\";\n  LocaleCode2[\"FrenchBelgium\"] = \"fr-BE\";\n  LocaleCode2[\"FrenchCanada\"] = \"fr-CA\";\n  LocaleCode2[\"FrenchFrance\"] = \"fr-FR\";\n  LocaleCode2[\"FrenchLuxembourg\"] = \"fr-LU\";\n  LocaleCode2[\"FrenchMonaco\"] = \"fr-MC\";\n  LocaleCode2[\"FrenchReunion\"] = \"fr-RE\";\n  LocaleCode2[\"FrenchSwitzerland\"] = \"fr-CH\";\n  LocaleCode2[\"Frisian\"] = \"fy\";\n  LocaleCode2[\"FrisianNetherlands\"] = \"fy-NL\";\n  LocaleCode2[\"Galician\"] = \"gl\";\n  LocaleCode2[\"GalicianSpain\"] = \"gl-ES\";\n  LocaleCode2[\"Georgian\"] = \"ka\";\n  LocaleCode2[\"GeorgianGeorgia\"] = \"ka-GE\";\n  LocaleCode2[\"German\"] = \"de\";\n  LocaleCode2[\"GermanAustria\"] = \"de-AT\";\n  LocaleCode2[\"GermanBelgium\"] = \"de-BE\";\n  LocaleCode2[\"GermanGermany\"] = \"de-DE\";\n  LocaleCode2[\"GermanLiechtenstein\"] = \"de-LI\";\n  LocaleCode2[\"GermanLuxembourg\"] = \"de-LU\";\n  LocaleCode2[\"GermanSwitzerland\"] = \"de-CH\";\n  LocaleCode2[\"Greenlandic\"] = \"kl\";\n  LocaleCode2[\"GreenlandicGreenland\"] = \"kl-GL\";\n  LocaleCode2[\"Greek\"] = \"el\";\n  LocaleCode2[\"GreekGreece\"] = \"el-GR\";\n  LocaleCode2[\"Gujarati\"] = \"gu\";\n  LocaleCode2[\"GujaratiIndia\"] = \"gu-IN\";\n  LocaleCode2[\"Haitian\"] = \"ht\";\n  LocaleCode2[\"Hausa\"] = \"ha\";\n  LocaleCode2[\"HausaGhana\"] = \"ha-GH\";\n  LocaleCode2[\"HausaNiger\"] = \"ha-NE\";\n  LocaleCode2[\"HausaNigeria\"] = \"ha-NG\";\n  LocaleCode2[\"Hebrew\"] = \"he\";\n  LocaleCode2[\"HebrewIsrael\"] = \"he-IL\";\n  LocaleCode2[\"Hindi\"] = \"hi\";\n  LocaleCode2[\"HindiIndia\"] = \"hi-IN\";\n  LocaleCode2[\"Hungarian\"] = \"hu\";\n  LocaleCode2[\"HungarianHungary\"] = \"hu-HU\";\n  LocaleCode2[\"Icelandic\"] = \"is\";\n  LocaleCode2[\"IcelandicIceland\"] = \"is-IS\";\n  LocaleCode2[\"Igbo\"] = \"ig\";\n  LocaleCode2[\"IgboNigeria\"] = \"ig-NG\";\n  LocaleCode2[\"Indonesian\"] = \"id\";\n  LocaleCode2[\"IndonesianIndonesia\"] = \"id-ID\";\n  LocaleCode2[\"Irish\"] = \"ga\";\n  LocaleCode2[\"IrishIreland\"] = \"ga-IE\";\n  LocaleCode2[\"Italian\"] = \"it\";\n  LocaleCode2[\"ItalianItaly\"] = \"it-IT\";\n  LocaleCode2[\"ItalianSwitzerland\"] = \"it-CH\";\n  LocaleCode2[\"Japanese\"] = \"ja\";\n  LocaleCode2[\"JapaneseJapan\"] = \"ja-JP\";\n  LocaleCode2[\"Javanese\"] = \"jv\";\n  LocaleCode2[\"Kannada\"] = \"kn\";\n  LocaleCode2[\"KannadaIndia\"] = \"kn-IN\";\n  LocaleCode2[\"Karelian\"] = \"krl\";\n  LocaleCode2[\"Kazakh\"] = \"kk\";\n  LocaleCode2[\"KazakhKazakhstan\"] = \"kk-KZ\";\n  LocaleCode2[\"Khmer\"] = \"km\";\n  LocaleCode2[\"KhmerCambodia\"] = \"km-KH\";\n  LocaleCode2[\"KinyarwandaRwanda\"] = \"rw-RW\";\n  LocaleCode2[\"Komi\"] = \"kv\";\n  LocaleCode2[\"Konkani\"] = \"kok\";\n  LocaleCode2[\"KonkaniIndia\"] = \"kok-IN\";\n  LocaleCode2[\"Korean\"] = \"ko\";\n  LocaleCode2[\"KoreanSouthKorea\"] = \"ko-KR\";\n  LocaleCode2[\"Kurdish\"] = \"ku\";\n  LocaleCode2[\"KurdishIraq\"] = \"ku-IQ\";\n  LocaleCode2[\"KurdishTurkey\"] = \"ku-TR\";\n  LocaleCode2[\"Kyrgyz\"] = \"ky\";\n  LocaleCode2[\"KyrgyzKyrgyzstan\"] = \"ky-KG\";\n  LocaleCode2[\"Lao\"] = \"lo\";\n  LocaleCode2[\"LaoLaos\"] = \"lo-LA\";\n  LocaleCode2[\"Latin\"] = \"la\";\n  LocaleCode2[\"Latvian\"] = \"lv\";\n  LocaleCode2[\"LatvianLatvia\"] = \"lv-LV\";\n  LocaleCode2[\"Lithuanian\"] = \"lt\";\n  LocaleCode2[\"LithuanianLithuania\"] = \"lt-LT\";\n  LocaleCode2[\"Luxembourgish\"] = \"lb\";\n  LocaleCode2[\"LuxembourgishBelgium\"] = \"lb-LU\";\n  LocaleCode2[\"LuxembourgishLuxembourg\"] = \"lb-LU\";\n  LocaleCode2[\"Macedonian\"] = \"mk\";\n  LocaleCode2[\"MacedonianNorthMacedonia\"] = \"mk-MK\";\n  LocaleCode2[\"Malagasy\"] = \"mg\";\n  LocaleCode2[\"Malay\"] = \"ms\";\n  LocaleCode2[\"MalayBrunei\"] = \"ms-BN\";\n  LocaleCode2[\"MalayIndia\"] = \"ms-IN\";\n  LocaleCode2[\"MalayMalaysia\"] = \"ms-MY\";\n  LocaleCode2[\"MalaySingapore\"] = \"ms-SG\";\n  LocaleCode2[\"Malayalam\"] = \"ml\";\n  LocaleCode2[\"MalayalamIndia\"] = \"ml-IN\";\n  LocaleCode2[\"Maltese\"] = \"mt\";\n  LocaleCode2[\"MalteseMalta\"] = \"mt-MT\";\n  LocaleCode2[\"Maori\"] = \"mi\";\n  LocaleCode2[\"MaoriNewZealand\"] = \"mi-NZ\";\n  LocaleCode2[\"Marathi\"] = \"mr\";\n  LocaleCode2[\"MarathiIndia\"] = \"mr-IN\";\n  LocaleCode2[\"Mari\"] = \"chm\";\n  LocaleCode2[\"Mongolian\"] = \"mn\";\n  LocaleCode2[\"MongolianMongolia\"] = \"mn-MN\";\n  LocaleCode2[\"Montenegrin\"] = \"me\";\n  LocaleCode2[\"MontenegrinMontenegro\"] = \"me-ME\";\n  LocaleCode2[\"Nepali\"] = \"ne\";\n  LocaleCode2[\"NepaliNepal\"] = \"ne-NP\";\n  LocaleCode2[\"NorthernSotho\"] = \"ns\";\n  LocaleCode2[\"NorthernSothoSouthAfrica\"] = \"ns-ZA\";\n  LocaleCode2[\"Norwegian\"] = \"nb\";\n  LocaleCode2[\"NorwegianBokmalNorway\"] = \"nb-NO\";\n  LocaleCode2[\"NorwegianNynorskNorway\"] = \"nn-NO\";\n  LocaleCode2[\"Oriya\"] = \"or\";\n  LocaleCode2[\"OriyaIndia\"] = \"or-IN\";\n  LocaleCode2[\"Ossetian\"] = \"os\";\n  LocaleCode2[\"Pashto\"] = \"ps\";\n  LocaleCode2[\"PashtoAfghanistan\"] = \"ps-AF\";\n  LocaleCode2[\"Persian\"] = \"fa\";\n  LocaleCode2[\"PersianIran\"] = \"fa-IR\";\n  LocaleCode2[\"Polish\"] = \"pl\";\n  LocaleCode2[\"PolishPoland\"] = \"pl-PL\";\n  LocaleCode2[\"Portuguese\"] = \"pt\";\n  LocaleCode2[\"PortugueseBrazil\"] = \"pt-BR\";\n  LocaleCode2[\"PortuguesePortugal\"] = \"pt-PT\";\n  LocaleCode2[\"Punjabi\"] = \"pa\";\n  LocaleCode2[\"PunjabiIndia\"] = \"pa-IN\";\n  LocaleCode2[\"PunjabiPakistan\"] = \"pa-PK\";\n  LocaleCode2[\"Quechua\"] = \"qu\";\n  LocaleCode2[\"QuechuaBolivia\"] = \"qu-BO\";\n  LocaleCode2[\"QuechuaEcuador\"] = \"qu-EC\";\n  LocaleCode2[\"QuechuaPeru\"] = \"qu-PE\";\n  LocaleCode2[\"Romanian\"] = \"ro\";\n  LocaleCode2[\"RomanianRomania\"] = \"ro-RO\";\n  LocaleCode2[\"Russian\"] = \"ru\";\n  LocaleCode2[\"RussianKazakhstan\"] = \"ru-KZ\";\n  LocaleCode2[\"RussianKyrgyzstan\"] = \"ru-KG\";\n  LocaleCode2[\"RussianRussia\"] = \"ru-RU\";\n  LocaleCode2[\"RussianUkraine\"] = \"ru-UA\";\n  LocaleCode2[\"Sakha\"] = \"sah\";\n  LocaleCode2[\"Sanskrit\"] = \"sa\";\n  LocaleCode2[\"SanskritIndia\"] = \"sa-IN\";\n  LocaleCode2[\"Sami\"] = \"se\";\n  LocaleCode2[\"SamiNorway\"] = \"se-NO\";\n  LocaleCode2[\"SamiSweden\"] = \"se-SE\";\n  LocaleCode2[\"SamiFinland\"] = \"se-FI\";\n  LocaleCode2[\"Samoan\"] = \"sm\";\n  LocaleCode2[\"SamoanSamoa\"] = \"sm-WS\";\n  LocaleCode2[\"Scots\"] = \"gd\";\n  LocaleCode2[\"Serbian\"] = \"sr\";\n  LocaleCode2[\"SerbianBosniaAndHerzegovina\"] = \"sr-BA\";\n  LocaleCode2[\"SerbianSerbiaAndMontenegro\"] = \"sr-SP\";\n  LocaleCode2[\"SerbianCyrillic\"] = \"sr-SP-Cyrl\";\n  LocaleCode2[\"SerbianCyrillicBosniaAndHerzegovina\"] = \"sr-Cyrl-BA\";\n  LocaleCode2[\"SerbianCyrillicSerbiaAndMontenegro\"] = \"sr-Cyrl-SP\";\n  LocaleCode2[\"Sesotho\"] = \"st\";\n  LocaleCode2[\"SesothoSouthAfrica\"] = \"st-ZA\";\n  LocaleCode2[\"Shona\"] = \"sn\";\n  LocaleCode2[\"ShonaZimbabwe\"] = \"sn-ZW\";\n  LocaleCode2[\"Sindhi\"] = \"sd\";\n  LocaleCode2[\"SindhiPakistan\"] = \"sd-PK\";\n  LocaleCode2[\"Sinhala\"] = \"si\";\n  LocaleCode2[\"SinhalaSriLanka\"] = \"si-LK\";\n  LocaleCode2[\"Slovak\"] = \"sk\";\n  LocaleCode2[\"SlovakSlovakia\"] = \"sk-SK\";\n  LocaleCode2[\"Slovenian\"] = \"sl\";\n  LocaleCode2[\"SlovenianSlovenia\"] = \"sl-SI\";\n  LocaleCode2[\"Somali\"] = \"so\";\n  LocaleCode2[\"SomaliSomalia\"] = \"so-SO\";\n  LocaleCode2[\"Spanish\"] = \"es\";\n  LocaleCode2[\"SpanishArgentina\"] = \"es-AR\";\n  LocaleCode2[\"SpanishBolivia\"] = \"es-BO\";\n  LocaleCode2[\"SpanishChile\"] = \"es-CL\";\n  LocaleCode2[\"SpanishColombia\"] = \"es-CO\";\n  LocaleCode2[\"SpanishCostaRica\"] = \"es-CR\";\n  LocaleCode2[\"SpanishCuba\"] = \"es-CU\";\n  LocaleCode2[\"SpanishDominicanRepublic\"] = \"es-DO\";\n  LocaleCode2[\"SpanishEcuador\"] = \"es-EC\";\n  LocaleCode2[\"SpanishEquatorialGuinea\"] = \"es-GQ\";\n  LocaleCode2[\"SpanishElSalvador\"] = \"es-SV\";\n  LocaleCode2[\"SpanishGuatemala\"] = \"es-GT\";\n  LocaleCode2[\"SpanishHonduras\"] = \"es-HN\";\n  LocaleCode2[\"SpanishMexico\"] = \"es-MX\";\n  LocaleCode2[\"SpanishNicaragua\"] = \"es-NI\";\n  LocaleCode2[\"SpanishPanama\"] = \"es-PA\";\n  LocaleCode2[\"SpanishParaguay\"] = \"es-PY\";\n  LocaleCode2[\"SpanishPeru\"] = \"es-PE\";\n  LocaleCode2[\"SpanishPuertoRico\"] = \"es-PR\";\n  LocaleCode2[\"SpanishSpain\"] = \"es-ES\";\n  LocaleCode2[\"SpanishUnitedStates\"] = \"es-US\";\n  LocaleCode2[\"SpanishUruguay\"] = \"es-UY\";\n  LocaleCode2[\"SpanishVenezuela\"] = \"es-VE\";\n  LocaleCode2[\"Sudanese\"] = \"su\";\n  LocaleCode2[\"Sutu\"] = \"st\";\n  LocaleCode2[\"SutuSouthAfrica\"] = \"st-ZA\";\n  LocaleCode2[\"Swahili\"] = \"sw\";\n  LocaleCode2[\"SwahiliKenya\"] = \"sw-KE\";\n  LocaleCode2[\"Swedish\"] = \"sv\";\n  LocaleCode2[\"SwedishFinland\"] = \"sv-FI\";\n  LocaleCode2[\"SwedishSweden\"] = \"sv-SE\";\n  LocaleCode2[\"Syriac\"] = \"syr\";\n  LocaleCode2[\"SyriacSyria\"] = \"syr-SY\";\n  LocaleCode2[\"Tajik\"] = \"tg\";\n  LocaleCode2[\"TajikTajikistan\"] = \"tg-TJ\";\n  LocaleCode2[\"Tagalog\"] = \"tl\";\n  LocaleCode2[\"TagalogPhilippines\"] = \"tl-PH\";\n  LocaleCode2[\"Tamazight\"] = \"tmh\";\n  LocaleCode2[\"Tamil\"] = \"ta\";\n  LocaleCode2[\"TamilIndia\"] = \"ta-IN\";\n  LocaleCode2[\"Tatar\"] = \"tt\";\n  LocaleCode2[\"Telugu\"] = \"te\";\n  LocaleCode2[\"TeluguIndia\"] = \"te-IN\";\n  LocaleCode2[\"Thai\"] = \"th\";\n  LocaleCode2[\"ThaiThailand\"] = \"th-TH\";\n  LocaleCode2[\"Tibetan\"] = \"bo\";\n  LocaleCode2[\"TibetanBhutan\"] = \"bo-BT\";\n  LocaleCode2[\"TibetanChina\"] = \"bo-CN\";\n  LocaleCode2[\"TibetanIndia\"] = \"bo-IN\";\n  LocaleCode2[\"Tsonga\"] = \"ts\";\n  LocaleCode2[\"Tswana\"] = \"tn\";\n  LocaleCode2[\"TswanaSouthAfrica\"] = \"tn-ZA\";\n  LocaleCode2[\"Turkish\"] = \"tr\";\n  LocaleCode2[\"TurkishTurkey\"] = \"tr-TR\";\n  LocaleCode2[\"Turkmen\"] = \"tk\";\n  LocaleCode2[\"Ukrainian\"] = \"uk\";\n  LocaleCode2[\"UkrainianUkraine\"] = \"uk-UA\";\n  LocaleCode2[\"Urdu\"] = \"ur\";\n  LocaleCode2[\"UrduAfghanistan\"] = \"ur-AF\";\n  LocaleCode2[\"UrduIndia\"] = \"ur-IN\";\n  LocaleCode2[\"UrduPakistan\"] = \"ur-PK\";\n  LocaleCode2[\"Uzbek\"] = \"uz\";\n  LocaleCode2[\"UzbekCyrillic\"] = \"uz-Cyrl-UZ\";\n  LocaleCode2[\"UzbekLatin\"] = \"uz-Latn-UZ\";\n  LocaleCode2[\"UzbekUzbekistan\"] = \"uz-UZ\";\n  LocaleCode2[\"Vietnamese\"] = \"vi\";\n  LocaleCode2[\"VietnameseVietnam\"] = \"vi-VN\";\n  LocaleCode2[\"Welsh\"] = \"cy\";\n  LocaleCode2[\"WelshUnitedKingdom\"] = \"cy-GB\";\n  LocaleCode2[\"Xhosa\"] = \"xh\";\n  LocaleCode2[\"XhosaSouthAfrica\"] = \"xh-ZA\";\n  LocaleCode2[\"Yiddish\"] = \"yi\";\n  LocaleCode2[\"Yoruba\"] = \"yo\";\n  LocaleCode2[\"YorubaNigeria\"] = \"yo-NG\";\n  LocaleCode2[\"ZhuyinMandarinChina\"] = \"yue-Hant-CN\";\n  LocaleCode2[\"Zulu\"] = \"zu\";\n  LocaleCode2[\"ZuluSouthAfrica\"] = \"zu-ZA\";\n  return LocaleCode2;\n})(LocaleCode || {});\n\nvar TimezoneRegions = /* @__PURE__ */ ((TimezoneRegions2) => {\n  TimezoneRegions2[\"AfricaAbidjan\"] = \"Africa/Abidjan\";\n  TimezoneRegions2[\"AfricaAccra\"] = \"Africa/Accra\";\n  TimezoneRegions2[\"AfricaAddisAbaba\"] = \"Africa/Addis_Ababa\";\n  TimezoneRegions2[\"AfricaAlgiers\"] = \"Africa/Algiers\";\n  TimezoneRegions2[\"AfricaAsmara\"] = \"Africa/Asmara\";\n  TimezoneRegions2[\"AfricaBamako\"] = \"Africa/Bamako\";\n  TimezoneRegions2[\"AfricaBangui\"] = \"Africa/Bangui\";\n  TimezoneRegions2[\"AfricaBanjul\"] = \"Africa/Banjul\";\n  TimezoneRegions2[\"AfricaBissau\"] = \"Africa/Bissau\";\n  TimezoneRegions2[\"AfricaBlantyre\"] = \"Africa/Blantyre\";\n  TimezoneRegions2[\"AfricaBrazzaville\"] = \"Africa/Brazzaville\";\n  TimezoneRegions2[\"AfricaBujumbura\"] = \"Africa/Bujumbura\";\n  TimezoneRegions2[\"AfricaCairo\"] = \"Africa/Cairo\";\n  TimezoneRegions2[\"AfricaCasablanca\"] = \"Africa/Casablanca\";\n  TimezoneRegions2[\"AfricaCeuta\"] = \"Africa/Ceuta\";\n  TimezoneRegions2[\"AfricaConakry\"] = \"Africa/Conakry\";\n  TimezoneRegions2[\"AfricaDakar\"] = \"Africa/Dakar\";\n  TimezoneRegions2[\"AfricaDarEsSalaam\"] = \"Africa/Dar_es_Salaam\";\n  TimezoneRegions2[\"AfricaDjibouti\"] = \"Africa/Djibouti\";\n  TimezoneRegions2[\"AfricaDouala\"] = \"Africa/Douala\";\n  TimezoneRegions2[\"AfricaElAaiun\"] = \"Africa/El_Aaiun\";\n  TimezoneRegions2[\"AfricaFreetown\"] = \"Africa/Freetown\";\n  TimezoneRegions2[\"AfricaGaborone\"] = \"Africa/Gaborone\";\n  TimezoneRegions2[\"AfricaHarare\"] = \"Africa/Harare\";\n  TimezoneRegions2[\"AfricaJohannesburg\"] = \"Africa/Johannesburg\";\n  TimezoneRegions2[\"AfricaJuba\"] = \"Africa/Juba\";\n  TimezoneRegions2[\"AfricaKampala\"] = \"Africa/Kampala\";\n  TimezoneRegions2[\"AfricaKhartoum\"] = \"Africa/Khartoum\";\n  TimezoneRegions2[\"AfricaKigali\"] = \"Africa/Kigali\";\n  TimezoneRegions2[\"AfricaKinshasa\"] = \"Africa/Kinshasa\";\n  TimezoneRegions2[\"AfricaLagos\"] = \"Africa/Lagos\";\n  TimezoneRegions2[\"AfricaLibreville\"] = \"Africa/Libreville\";\n  TimezoneRegions2[\"AfricaLome\"] = \"Africa/Lome\";\n  TimezoneRegions2[\"AfricaLuanda\"] = \"Africa/Luanda\";\n  TimezoneRegions2[\"AfricaLubumbashi\"] = \"Africa/Lubumbashi\";\n  TimezoneRegions2[\"AfricaLusaka\"] = \"Africa/Lusaka\";\n  TimezoneRegions2[\"AfricaMalabo\"] = \"Africa/Malabo\";\n  TimezoneRegions2[\"AfricaMaputo\"] = \"Africa/Maputo\";\n  TimezoneRegions2[\"AfricaMaseru\"] = \"Africa/Maseru\";\n  TimezoneRegions2[\"AfricaMbabane\"] = \"Africa/Mbabane\";\n  TimezoneRegions2[\"AfricaMogadishu\"] = \"Africa/Mogadishu\";\n  TimezoneRegions2[\"AfricaMonrovia\"] = \"Africa/Monrovia\";\n  TimezoneRegions2[\"AfricaNairobi\"] = \"Africa/Nairobi\";\n  TimezoneRegions2[\"AfricaNdjamena\"] = \"Africa/Ndjamena\";\n  TimezoneRegions2[\"AfricaNiamey\"] = \"Africa/Niamey\";\n  TimezoneRegions2[\"AfricaNouakchott\"] = \"Africa/Nouakchott\";\n  TimezoneRegions2[\"AfricaOuagadougou\"] = \"Africa/Ouagadougou\";\n  TimezoneRegions2[\"AfricaPortoNovo\"] = \"Africa/Porto-Novo\";\n  TimezoneRegions2[\"AfricaSaoTome\"] = \"Africa/Sao_Tome\";\n  TimezoneRegions2[\"AfricaTripoli\"] = \"Africa/Tripoli\";\n  TimezoneRegions2[\"AfricaTunis\"] = \"Africa/Tunis\";\n  TimezoneRegions2[\"AfricaWindhoek\"] = \"Africa/Windhoek\";\n  TimezoneRegions2[\"AmericaAdak\"] = \"America/Adak\";\n  TimezoneRegions2[\"AmericaAnchorage\"] = \"America/Anchorage\";\n  TimezoneRegions2[\"AmericaAnguilla\"] = \"America/Anguilla\";\n  TimezoneRegions2[\"AmericaAntigua\"] = \"America/Antigua\";\n  TimezoneRegions2[\"AmericaAraguaina\"] = \"America/Araguaina\";\n  TimezoneRegions2[\"AmericaArgentinaBuenosAires\"] = \"America/Argentina/Buenos_Aires\";\n  TimezoneRegions2[\"AmericaArgentinaCatamarca\"] = \"America/Argentina/Catamarca\";\n  TimezoneRegions2[\"AmericaArgentinaCordoba\"] = \"America/Argentina/Cordoba\";\n  TimezoneRegions2[\"AmericaArgentinaJujuy\"] = \"America/Argentina/Jujuy\";\n  TimezoneRegions2[\"AmericaArgentinaLaRioja\"] = \"America/Argentina/La_Rioja\";\n  TimezoneRegions2[\"AmericaArgentinaMendoza\"] = \"America/Argentina/Mendoza\";\n  TimezoneRegions2[\"AmericaArgentinaRioGallegos\"] = \"America/Argentina/Rio_Gallegos\";\n  TimezoneRegions2[\"AmericaArgentinaSalta\"] = \"America/Argentina/Salta\";\n  TimezoneRegions2[\"AmericaArgentinaSanJuan\"] = \"America/Argentina/San_Juan\";\n  TimezoneRegions2[\"AmericaArgentinaSanLuis\"] = \"America/Argentina/San_Luis\";\n  TimezoneRegions2[\"AmericaArgentinaTucuman\"] = \"America/Argentina/Tucuman\";\n  TimezoneRegions2[\"AmericaArgentinaUshuaia\"] = \"America/Argentina/Ushuaia\";\n  TimezoneRegions2[\"AmericaAruba\"] = \"America/Aruba\";\n  TimezoneRegions2[\"AmericaAsuncion\"] = \"America/Asuncion\";\n  TimezoneRegions2[\"AmericaAtikokan\"] = \"America/Atikokan\";\n  TimezoneRegions2[\"AmericaAtka\"] = \"America/Atka\";\n  TimezoneRegions2[\"AmericaBahia\"] = \"America/Bahia\";\n  TimezoneRegions2[\"AmericaBahiaBanderas\"] = \"America/Bahia_Banderas\";\n  TimezoneRegions2[\"AmericaBarbados\"] = \"America/Barbados\";\n  TimezoneRegions2[\"AmericaBelem\"] = \"America/Belem\";\n  TimezoneRegions2[\"AmericaBelize\"] = \"America/Belize\";\n  TimezoneRegions2[\"AmericaBlancSablon\"] = \"America/Blanc-Sablon\";\n  TimezoneRegions2[\"AmericaBoaVista\"] = \"America/Boa_Vista\";\n  TimezoneRegions2[\"AmericaBogota\"] = \"America/Bogota\";\n  TimezoneRegions2[\"AmericaBoise\"] = \"America/Boise\";\n  TimezoneRegions2[\"AmericaCambridgeBay\"] = \"America/Cambridge_Bay\";\n  TimezoneRegions2[\"AmericaCampoGrande\"] = \"America/Campo_Grande\";\n  TimezoneRegions2[\"AmericaCancun\"] = \"America/Cancun\";\n  TimezoneRegions2[\"AmericaCaracas\"] = \"America/Caracas\";\n  TimezoneRegions2[\"AmericaCayenne\"] = \"America/Cayenne\";\n  TimezoneRegions2[\"AmericaCayman\"] = \"America/Cayman\";\n  TimezoneRegions2[\"AmericaChicago\"] = \"America/Chicago\";\n  TimezoneRegions2[\"AmericaChihuahua\"] = \"America/Chihuahua\";\n  TimezoneRegions2[\"AmericaCoralHarbour\"] = \"America/Coral_Harbour\";\n  TimezoneRegions2[\"AmericaCordoba\"] = \"America/Cordoba\";\n  TimezoneRegions2[\"AmericaCostaRica\"] = \"America/Costa_Rica\";\n  TimezoneRegions2[\"AmericaCreston\"] = \"America/Creston\";\n  TimezoneRegions2[\"AmericaCuiaba\"] = \"America/Cuiaba\";\n  TimezoneRegions2[\"AmericaCuracao\"] = \"America/Curacao\";\n  TimezoneRegions2[\"AmericaDanmarkshavn\"] = \"America/Danmarkshavn\";\n  TimezoneRegions2[\"AmericaDawson\"] = \"America/Dawson\";\n  TimezoneRegions2[\"AmericaDawsonCreek\"] = \"America/Dawson_Creek\";\n  TimezoneRegions2[\"AmericaDenver\"] = \"America/Denver\";\n  TimezoneRegions2[\"AmericaDetroit\"] = \"America/Detroit\";\n  TimezoneRegions2[\"AmericaDominica\"] = \"America/Dominica\";\n  TimezoneRegions2[\"AmericaEdmonton\"] = \"America/Edmonton\";\n  TimezoneRegions2[\"AmericaEirunepe\"] = \"America/Eirunepe\";\n  TimezoneRegions2[\"AmericaElSalvador\"] = \"America/El_Salvador\";\n  TimezoneRegions2[\"AmericaFortaleza\"] = \"America/Fortaleza\";\n  TimezoneRegions2[\"AmericaGlaceBay\"] = \"America/Glace_Bay\";\n  TimezoneRegions2[\"AmericaGodthab\"] = \"America/Godthab\";\n  TimezoneRegions2[\"AmericaGooseBay\"] = \"America/Goose_Bay\";\n  TimezoneRegions2[\"AmericaGrandTurk\"] = \"America/Grand_Turk\";\n  TimezoneRegions2[\"AmericaGrenada\"] = \"America/Grenada\";\n  TimezoneRegions2[\"AmericaGuadeloupe\"] = \"America/Guadeloupe\";\n  TimezoneRegions2[\"AmericaGuatemala\"] = \"America/Guatemala\";\n  TimezoneRegions2[\"AmericaGuayaquil\"] = \"America/Guayaquil\";\n  TimezoneRegions2[\"AmericaGuyana\"] = \"America/Guyana\";\n  TimezoneRegions2[\"AmericaHalifax\"] = \"America/Halifax\";\n  TimezoneRegions2[\"AmericaHavana\"] = \"America/Havana\";\n  TimezoneRegions2[\"AmericaHermosillo\"] = \"America/Hermosillo\";\n  TimezoneRegions2[\"AmericaIndianaIndianapolis\"] = \"America/Indiana/Indianapolis\";\n  TimezoneRegions2[\"AmericaIndianaKnox\"] = \"America/Indiana/Knox\";\n  TimezoneRegions2[\"AmericaIndianaMarengo\"] = \"America/Indiana/Marengo\";\n  TimezoneRegions2[\"AmericaIndianaPetersburg\"] = \"America/Indiana/Petersburg\";\n  TimezoneRegions2[\"AmericaIndianaTellCity\"] = \"America/Indiana/Tell_City\";\n  TimezoneRegions2[\"AmericaIndianaVevay\"] = \"America/Indiana/Vevay\";\n  TimezoneRegions2[\"AmericaIndianaVincennes\"] = \"America/Indiana/Vincennes\";\n  TimezoneRegions2[\"AmericaIndianaWinamac\"] = \"America/Indiana/Winamac\";\n  TimezoneRegions2[\"AmericaInuvik\"] = \"America/Inuvik\";\n  TimezoneRegions2[\"AmericaIqaluit\"] = \"America/Iqaluit\";\n  TimezoneRegions2[\"AmericaJamaica\"] = \"America/Jamaica\";\n  TimezoneRegions2[\"AmericaJuneau\"] = \"America/Juneau\";\n  TimezoneRegions2[\"AmericaKentuckyLouisville\"] = \"America/Kentucky/Louisville\";\n  TimezoneRegions2[\"AmericaKentuckyMonticello\"] = \"America/Kentucky/Monticello\";\n  TimezoneRegions2[\"AmericaKralendijk\"] = \"America/Kralendijk\";\n  TimezoneRegions2[\"AmericaLaPaz\"] = \"America/La_Paz\";\n  TimezoneRegions2[\"AmericaLima\"] = \"America/Lima\";\n  TimezoneRegions2[\"AmericaLosAngeles\"] = \"America/Los_Angeles\";\n  TimezoneRegions2[\"AmericaLouisville\"] = \"America/Louisville\";\n  TimezoneRegions2[\"AmericaLowerPrinces\"] = \"America/Lower_Princes\";\n  TimezoneRegions2[\"AmericaMaceio\"] = \"America/Maceio\";\n  TimezoneRegions2[\"AmericaManagua\"] = \"America/Managua\";\n  TimezoneRegions2[\"AmericaManaus\"] = \"America/Manaus\";\n  TimezoneRegions2[\"AmericaMarigot\"] = \"America/Marigot\";\n  TimezoneRegions2[\"AmericaMartinique\"] = \"America/Martinique\";\n  TimezoneRegions2[\"AmericaMatamoros\"] = \"America/Matamoros\";\n  TimezoneRegions2[\"AmericaMazatlan\"] = \"America/Mazatlan\";\n  TimezoneRegions2[\"AmericaMenominee\"] = \"America/Menominee\";\n  TimezoneRegions2[\"AmericaMerida\"] = \"America/Merida\";\n  TimezoneRegions2[\"AmericaMetlakatla\"] = \"America/Metlakatla\";\n  TimezoneRegions2[\"AmericaMexicoCity\"] = \"America/Mexico_City\";\n  TimezoneRegions2[\"AmericaMiquelon\"] = \"America/Miquelon\";\n  TimezoneRegions2[\"AmericaMoncton\"] = \"America/Moncton\";\n  TimezoneRegions2[\"AmericaMonterrey\"] = \"America/Monterrey\";\n  TimezoneRegions2[\"AmericaMontevideo\"] = \"America/Montevideo\";\n  TimezoneRegions2[\"AmericaMontserrat\"] = \"America/Montserrat\";\n  TimezoneRegions2[\"AmericaMontreal\"] = \"America/Montreal\";\n  TimezoneRegions2[\"AmericaNassau\"] = \"America/Nassau\";\n  TimezoneRegions2[\"AmericaNewYork\"] = \"America/New_York\";\n  TimezoneRegions2[\"AmericaNipigon\"] = \"America/Nipigon\";\n  TimezoneRegions2[\"AmericaNome\"] = \"America/Nome\";\n  TimezoneRegions2[\"AmericaNoronha\"] = \"America/Noronha\";\n  TimezoneRegions2[\"AmericaNorthDakotaBeulah\"] = \"America/North_Dakota/Beulah\";\n  TimezoneRegions2[\"AmericaNorthDakotaCenter\"] = \"America/North_Dakota/Center\";\n  TimezoneRegions2[\"AmericaNorthDakotaNewSalem\"] = \"America/North_Dakota/New_Salem\";\n  TimezoneRegions2[\"AmericaOjinaga\"] = \"America/Ojinaga\";\n  TimezoneRegions2[\"AmericaPanama\"] = \"America/Panama\";\n  TimezoneRegions2[\"AmericaPangnirtung\"] = \"America/Pangnirtung\";\n  TimezoneRegions2[\"AmericaParamaribo\"] = \"America/Paramaribo\";\n  TimezoneRegions2[\"AmericaPhoenix\"] = \"America/Phoenix\";\n  TimezoneRegions2[\"AmericaPortAuPrince\"] = \"America/Port-au-Prince\";\n  TimezoneRegions2[\"AmericaPortOfSpain\"] = \"America/Port_of_Spain\";\n  TimezoneRegions2[\"AmericaPortoVelho\"] = \"America/Porto_Velho\";\n  TimezoneRegions2[\"AmericaPuertoRico\"] = \"America/Puerto_Rico\";\n  TimezoneRegions2[\"AmericaRainyRiver\"] = \"America/Rainy_River\";\n  TimezoneRegions2[\"AmericaRankinInlet\"] = \"America/Rankin_Inlet\";\n  TimezoneRegions2[\"AmericaRecife\"] = \"America/Recife\";\n  TimezoneRegions2[\"AmericaRegina\"] = \"America/Regina\";\n  TimezoneRegions2[\"AmericaResolute\"] = \"America/Resolute\";\n  TimezoneRegions2[\"AmericaRioBranco\"] = \"America/Rio_Branco\";\n  TimezoneRegions2[\"AmericaSantaIsabel\"] = \"America/Santa_Isabel\";\n  TimezoneRegions2[\"AmericaSantarem\"] = \"America/Santarem\";\n  TimezoneRegions2[\"AmericaSantiago\"] = \"America/Santiago\";\n  TimezoneRegions2[\"AmericaSantoDomingo\"] = \"America/Santo_Domingo\";\n  TimezoneRegions2[\"AmericaSaoPaulo\"] = \"America/Sao_Paulo\";\n  TimezoneRegions2[\"AmericaScoresbysund\"] = \"America/Scoresbysund\";\n  TimezoneRegions2[\"AmericaShiprock\"] = \"America/Shiprock\";\n  TimezoneRegions2[\"AmericaSitka\"] = \"America/Sitka\";\n  TimezoneRegions2[\"AmericaStBarthelemy\"] = \"America/St_Barthelemy\";\n  TimezoneRegions2[\"AmericaStJohns\"] = \"America/St_Johns\";\n  TimezoneRegions2[\"AmericaStKitts\"] = \"America/St_Kitts\";\n  TimezoneRegions2[\"AmericaStLucia\"] = \"America/St_Lucia\";\n  TimezoneRegions2[\"AmericaStThomas\"] = \"America/St_Thomas\";\n  TimezoneRegions2[\"AmericaStVincent\"] = \"America/St_Vincent\";\n  TimezoneRegions2[\"AmericaSwiftCurrent\"] = \"America/Swift_Current\";\n  TimezoneRegions2[\"AmericaTegucigalpa\"] = \"America/Tegucigalpa\";\n  TimezoneRegions2[\"AmericaThule\"] = \"America/Thule\";\n  TimezoneRegions2[\"AmericaThunderBay\"] = \"America/Thunder_Bay\";\n  TimezoneRegions2[\"AmericaTijuana\"] = \"America/Tijuana\";\n  TimezoneRegions2[\"AmericaToronto\"] = \"America/Toronto\";\n  TimezoneRegions2[\"AmericaTortola\"] = \"America/Tortola\";\n  TimezoneRegions2[\"AmericaVancouver\"] = \"America/Vancouver\";\n  TimezoneRegions2[\"AmericaWhitehorse\"] = \"America/Whitehorse\";\n  TimezoneRegions2[\"AmericaWinnipeg\"] = \"America/Winnipeg\";\n  TimezoneRegions2[\"AmericaYakutat\"] = \"America/Yakutat\";\n  TimezoneRegions2[\"AmericaYellowknife\"] = \"America/Yellowknife\";\n  TimezoneRegions2[\"AntarcticaCasey\"] = \"Antarctica/Casey\";\n  TimezoneRegions2[\"AntarcticaDavis\"] = \"Antarctica/Davis\";\n  TimezoneRegions2[\"AntarcticaDumontDUrville\"] = \"Antarctica/DumontDUrville\";\n  TimezoneRegions2[\"AntarcticaMacquarie\"] = \"Antarctica/Macquarie\";\n  TimezoneRegions2[\"AntarcticaMawson\"] = \"Antarctica/Mawson\";\n  TimezoneRegions2[\"AntarcticaMcMurdo\"] = \"Antarctica/McMurdo\";\n  TimezoneRegions2[\"AntarcticaPalmer\"] = \"Antarctica/Palmer\";\n  TimezoneRegions2[\"AntarcticaRothera\"] = \"Antarctica/Rothera\";\n  TimezoneRegions2[\"AntarcticaSyowa\"] = \"Antarctica/Syowa\";\n  TimezoneRegions2[\"AntarcticaTroll\"] = \"Antarctica/Troll\";\n  TimezoneRegions2[\"AntarcticaVostok\"] = \"Antarctica/Vostok\";\n  TimezoneRegions2[\"ArcticLongyearbyen\"] = \"Arctic/Longyearbyen\";\n  TimezoneRegions2[\"AsiaAden\"] = \"Asia/Aden\";\n  TimezoneRegions2[\"AsiaAlmaty\"] = \"Asia/Almaty\";\n  TimezoneRegions2[\"AsiaAmman\"] = \"Asia/Amman\";\n  TimezoneRegions2[\"AsiaAnadyr\"] = \"Asia/Anadyr\";\n  TimezoneRegions2[\"AsiaAqtau\"] = \"Asia/Aqtau\";\n  TimezoneRegions2[\"AsiaAqtobe\"] = \"Asia/Aqtobe\";\n  TimezoneRegions2[\"AsiaAshgabat\"] = \"Asia/Ashgabat\";\n  TimezoneRegions2[\"AsiaBaghdad\"] = \"Asia/Baghdad\";\n  TimezoneRegions2[\"AsiaBahrain\"] = \"Asia/Bahrain\";\n  TimezoneRegions2[\"AsiaBaku\"] = \"Asia/Baku\";\n  TimezoneRegions2[\"AsiaBangkok\"] = \"Asia/Bangkok\";\n  TimezoneRegions2[\"AsiaBarnaul\"] = \"Asia/Barnaul\";\n  TimezoneRegions2[\"AsiaBeirut\"] = \"Asia/Beirut\";\n  TimezoneRegions2[\"AsiaBishkek\"] = \"Asia/Bishkek\";\n  TimezoneRegions2[\"AsiaBrunei\"] = \"Asia/Brunei\";\n  TimezoneRegions2[\"AsiaChita\"] = \"Asia/Chita\";\n  TimezoneRegions2[\"AsiaChoibalsan\"] = \"Asia/Choibalsan\";\n  TimezoneRegions2[\"AsiaColombo\"] = \"Asia/Colombo\";\n  TimezoneRegions2[\"AsiaDamascus\"] = \"Asia/Damascus\";\n  TimezoneRegions2[\"AsiaDhaka\"] = \"Asia/Dhaka\";\n  TimezoneRegions2[\"AsiaDili\"] = \"Asia/Dili\";\n  TimezoneRegions2[\"AsiaDubai\"] = \"Asia/Dubai\";\n  TimezoneRegions2[\"AsiaDushanbe\"] = \"Asia/Dushanbe\";\n  TimezoneRegions2[\"AsiaFamagusta\"] = \"Asia/Famagusta\";\n  TimezoneRegions2[\"AsiaGaza\"] = \"Asia/Gaza\";\n  TimezoneRegions2[\"AsiaHebron\"] = \"Asia/Hebron\";\n  TimezoneRegions2[\"AsiaHoChiMinh\"] = \"Asia/Ho_Chi_Minh\";\n  TimezoneRegions2[\"AsiaHongKong\"] = \"Asia/Hong_Kong\";\n  TimezoneRegions2[\"AsiaHovd\"] = \"Asia/Hovd\";\n  TimezoneRegions2[\"AsiaIrkutsk\"] = \"Asia/Irkutsk\";\n  TimezoneRegions2[\"AsiaJakarta\"] = \"Asia/Jakarta\";\n  TimezoneRegions2[\"AsiaJayapura\"] = \"Asia/Jayapura\";\n  TimezoneRegions2[\"AsiaJerusalem\"] = \"Asia/Jerusalem\";\n  TimezoneRegions2[\"AsiaKabul\"] = \"Asia/Kabul\";\n  TimezoneRegions2[\"AsiaKamchatka\"] = \"Asia/Kamchatka\";\n  TimezoneRegions2[\"AsiaKarachi\"] = \"Asia/Karachi\";\n  TimezoneRegions2[\"AsiaKathmandu\"] = \"Asia/Kathmandu\";\n  TimezoneRegions2[\"AsiaKhandyga\"] = \"Asia/Khandyga\";\n  TimezoneRegions2[\"AsiaKolkata\"] = \"Asia/Kolkata\";\n  TimezoneRegions2[\"AsiaKrasnoyarsk\"] = \"Asia/Krasnoyarsk\";\n  TimezoneRegions2[\"AsiaKualaLumpur\"] = \"Asia/Kuala_Lumpur\";\n  TimezoneRegions2[\"AsiaKuching\"] = \"Asia/Kuching\";\n  TimezoneRegions2[\"AsiaKuwait\"] = \"Asia/Kuwait\";\n  TimezoneRegions2[\"AsiaMacau\"] = \"Asia/Macau\";\n  TimezoneRegions2[\"AsiaMagadan\"] = \"Asia/Magadan\";\n  TimezoneRegions2[\"AsiaMakassar\"] = \"Asia/Makassar\";\n  TimezoneRegions2[\"AsiaManila\"] = \"Asia/Manila\";\n  TimezoneRegions2[\"AsiaMuscat\"] = \"Asia/Muscat\";\n  TimezoneRegions2[\"AsiaNicosia\"] = \"Asia/Nicosia\";\n  TimezoneRegions2[\"AsiaNovokuznetsk\"] = \"Asia/Novokuznetsk\";\n  TimezoneRegions2[\"AsiaNovosibirsk\"] = \"Asia/Novosibirsk\";\n  TimezoneRegions2[\"AsiaOmsk\"] = \"Asia/Omsk\";\n  TimezoneRegions2[\"AsiaOral\"] = \"Asia/Oral\";\n  TimezoneRegions2[\"AsiaPhnomPenh\"] = \"Asia/Phnom_Penh\";\n  TimezoneRegions2[\"AsiaPontianak\"] = \"Asia/Pontianak\";\n  TimezoneRegions2[\"AsiaPyongyang\"] = \"Asia/Pyongyang\";\n  TimezoneRegions2[\"AsiaQatar\"] = \"Asia/Qatar\";\n  TimezoneRegions2[\"AsiaQyzylorda\"] = \"Asia/Qyzylorda\";\n  TimezoneRegions2[\"AsiaRangoon\"] = \"Asia/Rangoon\";\n  TimezoneRegions2[\"AsiaRiyadh\"] = \"Asia/Riyadh\";\n  TimezoneRegions2[\"AsiaSakhalin\"] = \"Asia/Sakhalin\";\n  TimezoneRegions2[\"AsiaSamarkand\"] = \"Asia/Samarkand\";\n  TimezoneRegions2[\"AsiaSeoul\"] = \"Asia/Seoul\";\n  TimezoneRegions2[\"AsiaShanghai\"] = \"Asia/Shanghai\";\n  TimezoneRegions2[\"AsiaSingapore\"] = \"Asia/Singapore\";\n  TimezoneRegions2[\"AsiaSrednekolymsk\"] = \"Asia/Srednekolymsk\";\n  TimezoneRegions2[\"AsiaTaipei\"] = \"Asia/Taipei\";\n  TimezoneRegions2[\"AsiaTashkent\"] = \"Asia/Tashkent\";\n  TimezoneRegions2[\"AsiaTbilisi\"] = \"Asia/Tbilisi\";\n  TimezoneRegions2[\"AsiaTehran\"] = \"Asia/Tehran\";\n  TimezoneRegions2[\"AsiaThimphu\"] = \"Asia/Thimphu\";\n  TimezoneRegions2[\"AsiaTokyo\"] = \"Asia/Tokyo\";\n  TimezoneRegions2[\"AsiaTomsk\"] = \"Asia/Tomsk\";\n  TimezoneRegions2[\"AsiaUlaanbaatar\"] = \"Asia/Ulaanbaatar\";\n  TimezoneRegions2[\"AsiaUrumqi\"] = \"Asia/Urumqi\";\n  TimezoneRegions2[\"AsiaUstNera\"] = \"Asia/Ust-Nera\";\n  TimezoneRegions2[\"AsiaVientiane\"] = \"Asia/Vientiane\";\n  TimezoneRegions2[\"AsiaVladivostok\"] = \"Asia/Vladivostok\";\n  TimezoneRegions2[\"AsiaYakutsk\"] = \"Asia/Yakutsk\";\n  TimezoneRegions2[\"AsiaYekaterinburg\"] = \"Asia/Yekaterinburg\";\n  TimezoneRegions2[\"AsiaYerevan\"] = \"Asia/Yerevan\";\n  TimezoneRegions2[\"AtlanticAzores\"] = \"Atlantic/Azores\";\n  TimezoneRegions2[\"AtlanticBermuda\"] = \"Atlantic/Bermuda\";\n  TimezoneRegions2[\"AtlanticCanary\"] = \"Atlantic/Canary\";\n  TimezoneRegions2[\"AtlanticCapeVerde\"] = \"Atlantic/Cape_Verde\";\n  TimezoneRegions2[\"AtlanticFaroe\"] = \"Atlantic/Faroe\";\n  TimezoneRegions2[\"AtlanticMadeira\"] = \"Atlantic/Madeira\";\n  TimezoneRegions2[\"AtlanticReykjavik\"] = \"Atlantic/Reykjavik\";\n  TimezoneRegions2[\"AtlanticSouthGeorgia\"] = \"Atlantic/South_Georgia\";\n  TimezoneRegions2[\"AtlanticStHelena\"] = \"Atlantic/St_Helena\";\n  TimezoneRegions2[\"AtlanticStanley\"] = \"Atlantic/Stanley\";\n  TimezoneRegions2[\"AustraliaAdelaide\"] = \"Australia/Adelaide\";\n  TimezoneRegions2[\"AustraliaBrisbane\"] = \"Australia/Brisbane\";\n  TimezoneRegions2[\"AustraliaBrokenHill\"] = \"Australia/Broken_Hill\";\n  TimezoneRegions2[\"AustraliaCanberra\"] = \"Australia/Canberra\";\n  TimezoneRegions2[\"AustraliaCurrie\"] = \"Australia/Currie\";\n  TimezoneRegions2[\"AustraliaDarwin\"] = \"Australia/Darwin\";\n  TimezoneRegions2[\"AustraliaEucla\"] = \"Australia/Eucla\";\n  TimezoneRegions2[\"AustraliaHobart\"] = \"Australia/Hobart\";\n  TimezoneRegions2[\"AustraliaLindeman\"] = \"Australia/Lindeman\";\n  TimezoneRegions2[\"AustraliaLordHowe\"] = \"Australia/Lord_Howe\";\n  TimezoneRegions2[\"AustraliaMelbourne\"] = \"Australia/Melbourne\";\n  TimezoneRegions2[\"AustraliaPerth\"] = \"Australia/Perth\";\n  TimezoneRegions2[\"AustraliaSydney\"] = \"Australia/Sydney\";\n  TimezoneRegions2[\"EuropeAmsterdam\"] = \"Europe/Amsterdam\";\n  TimezoneRegions2[\"EuropeAndorra\"] = \"Europe/Andorra\";\n  TimezoneRegions2[\"EuropeAthens\"] = \"Europe/Athens\";\n  TimezoneRegions2[\"EuropeBelgrade\"] = \"Europe/Belgrade\";\n  TimezoneRegions2[\"EuropeBerlin\"] = \"Europe/Berlin\";\n  TimezoneRegions2[\"EuropeBratislava\"] = \"Europe/Bratislava\";\n  TimezoneRegions2[\"EuropeBrussels\"] = \"Europe/Brussels\";\n  TimezoneRegions2[\"EuropeBucharest\"] = \"Europe/Bucharest\";\n  TimezoneRegions2[\"EuropeBudapest\"] = \"Europe/Budapest\";\n  TimezoneRegions2[\"EuropeBusingen\"] = \"Europe/Busingen\";\n  TimezoneRegions2[\"EuropeChisinau\"] = \"Europe/Chisinau\";\n  TimezoneRegions2[\"EuropeCopenhagen\"] = \"Europe/Copenhagen\";\n  TimezoneRegions2[\"EuropeDublin\"] = \"Europe/Dublin\";\n  TimezoneRegions2[\"EuropeGibraltar\"] = \"Europe/Gibraltar\";\n  TimezoneRegions2[\"EuropeGuernsey\"] = \"Europe/Guernsey\";\n  TimezoneRegions2[\"EuropeHelsinki\"] = \"Europe/Helsinki\";\n  TimezoneRegions2[\"EuropeIsleOfMan\"] = \"Europe/Isle_of_Man\";\n  TimezoneRegions2[\"EuropeIstanbul\"] = \"Europe/Istanbul\";\n  TimezoneRegions2[\"EuropeJersey\"] = \"Europe/Jersey\";\n  TimezoneRegions2[\"EuropeKaliningrad\"] = \"Europe/Kaliningrad\";\n  TimezoneRegions2[\"EuropeKiev\"] = \"Europe/Kiev\";\n  TimezoneRegions2[\"EuropeKirov\"] = \"Europe/Kirov\";\n  TimezoneRegions2[\"EuropeLisbon\"] = \"Europe/Lisbon\";\n  TimezoneRegions2[\"EuropeLjubljana\"] = \"Europe/Ljubljana\";\n  TimezoneRegions2[\"EuropeLondon\"] = \"Europe/London\";\n  TimezoneRegions2[\"EuropeLuxembourg\"] = \"Europe/Luxembourg\";\n  TimezoneRegions2[\"EuropeMadrid\"] = \"Europe/Madrid\";\n  TimezoneRegions2[\"EuropeMalta\"] = \"Europe/Malta\";\n  TimezoneRegions2[\"EuropeMariehamn\"] = \"Europe/Mariehamn\";\n  TimezoneRegions2[\"EuropeMinsk\"] = \"Europe/Minsk\";\n  TimezoneRegions2[\"EuropeMonaco\"] = \"Europe/Monaco\";\n  TimezoneRegions2[\"EuropeMoscow\"] = \"Europe/Moscow\";\n  TimezoneRegions2[\"EuropeOslo\"] = \"Europe/Oslo\";\n  TimezoneRegions2[\"EuropeParis\"] = \"Europe/Paris\";\n  TimezoneRegions2[\"EuropePodgorica\"] = \"Europe/Podgorica\";\n  TimezoneRegions2[\"EuropePrague\"] = \"Europe/Prague\";\n  TimezoneRegions2[\"EuropeRiga\"] = \"Europe/Riga\";\n  TimezoneRegions2[\"EuropeRome\"] = \"Europe/Rome\";\n  TimezoneRegions2[\"EuropeSamara\"] = \"Europe/Samara\";\n  TimezoneRegions2[\"EuropeSanMarino\"] = \"Europe/San_Marino\";\n  TimezoneRegions2[\"EuropeSarajevo\"] = \"Europe/Sarajevo\";\n  TimezoneRegions2[\"EuropeSimferopol\"] = \"Europe/Simferopol\";\n  TimezoneRegions2[\"EuropeSkopje\"] = \"Europe/Skopje\";\n  TimezoneRegions2[\"EuropeSofia\"] = \"Europe/Sofia\";\n  TimezoneRegions2[\"EuropeStockholm\"] = \"Europe/Stockholm\";\n  TimezoneRegions2[\"EuropeTallinn\"] = \"Europe/Tallinn\";\n  TimezoneRegions2[\"EuropeTirane\"] = \"Europe/Tirane\";\n  TimezoneRegions2[\"EuropeUzhgorod\"] = \"Europe/Uzhgorod\";\n  TimezoneRegions2[\"EuropeVaduz\"] = \"Europe/Vaduz\";\n  TimezoneRegions2[\"EuropeVatican\"] = \"Europe/Vatican\";\n  TimezoneRegions2[\"EuropeVienna\"] = \"Europe/Vienna\";\n  TimezoneRegions2[\"EuropeVilnius\"] = \"Europe/Vilnius\";\n  TimezoneRegions2[\"EuropeVolgograd\"] = \"Europe/Volgograd\";\n  TimezoneRegions2[\"EuropeWarsaw\"] = \"Europe/Warsaw\";\n  TimezoneRegions2[\"EuropeZagreb\"] = \"Europe/Zagreb\";\n  TimezoneRegions2[\"EuropeZaporozhye\"] = \"Europe/Zaporozhye\";\n  TimezoneRegions2[\"EuropeZurich\"] = \"Europe/Zurich\";\n  TimezoneRegions2[\"GMT\"] = \"GMT\";\n  TimezoneRegions2[\"IndianAntananarivo\"] = \"Indian/Antananarivo\";\n  TimezoneRegions2[\"IndianChagos\"] = \"Indian/Chagos\";\n  TimezoneRegions2[\"IndianChristmas\"] = \"Indian/Christmas\";\n  TimezoneRegions2[\"IndianCocos\"] = \"Indian/Cocos\";\n  TimezoneRegions2[\"IndianComoro\"] = \"Indian/Comoro\";\n  TimezoneRegions2[\"IndianKerguelen\"] = \"Indian/Kerguelen\";\n  TimezoneRegions2[\"IndianMahe\"] = \"Indian/Mahe\";\n  TimezoneRegions2[\"IndianMaldives\"] = \"Indian/Maldives\";\n  TimezoneRegions2[\"IndianMauritius\"] = \"Indian/Mauritius\";\n  TimezoneRegions2[\"IndianMayotte\"] = \"Indian/Mayotte\";\n  TimezoneRegions2[\"IndianReunion\"] = \"Indian/Reunion\";\n  TimezoneRegions2[\"PacificApia\"] = \"Pacific/Apia\";\n  TimezoneRegions2[\"PacificAuckland\"] = \"Pacific/Auckland\";\n  TimezoneRegions2[\"PacificBougainville\"] = \"Pacific/Bougainville\";\n  TimezoneRegions2[\"PacificChatham\"] = \"Pacific/Chatham\";\n  TimezoneRegions2[\"PacificChuuk\"] = \"Pacific/Chuuk\";\n  TimezoneRegions2[\"PacificEaster\"] = \"Pacific/Easter\";\n  TimezoneRegions2[\"PacificEfate\"] = \"Pacific/Efate\";\n  TimezoneRegions2[\"PacificEnderbury\"] = \"Pacific/Enderbury\";\n  TimezoneRegions2[\"PacificFakaofo\"] = \"Pacific/Fakaofo\";\n  TimezoneRegions2[\"PacificFiji\"] = \"Pacific/Fiji\";\n  TimezoneRegions2[\"PacificFunafuti\"] = \"Pacific/Funafuti\";\n  TimezoneRegions2[\"PacificGalapagos\"] = \"Pacific/Galapagos\";\n  TimezoneRegions2[\"PacificGambier\"] = \"Pacific/Gambier\";\n  TimezoneRegions2[\"PacificGuadalcanal\"] = \"Pacific/Guadalcanal\";\n  TimezoneRegions2[\"PacificGuam\"] = \"Pacific/Guam\";\n  TimezoneRegions2[\"PacificHonolulu\"] = \"Pacific/Honolulu\";\n  TimezoneRegions2[\"PacificJohnston\"] = \"Pacific/Johnston\";\n  TimezoneRegions2[\"PacificKiritimati\"] = \"Pacific/Kiritimati\";\n  TimezoneRegions2[\"PacificKosrae\"] = \"Pacific/Kosrae\";\n  TimezoneRegions2[\"PacificKwajalein\"] = \"Pacific/Kwajalein\";\n  TimezoneRegions2[\"PacificMajuro\"] = \"Pacific/Majuro\";\n  TimezoneRegions2[\"PacificMarquesas\"] = \"Pacific/Marquesas\";\n  TimezoneRegions2[\"PacificMidway\"] = \"Pacific/Midway\";\n  TimezoneRegions2[\"PacificNauru\"] = \"Pacific/Nauru\";\n  TimezoneRegions2[\"PacificNiue\"] = \"Pacific/Niue\";\n  TimezoneRegions2[\"PacificNorfolk\"] = \"Pacific/Norfolk\";\n  TimezoneRegions2[\"PacificNoumea\"] = \"Pacific/Noumea\";\n  TimezoneRegions2[\"PacificPagoPago\"] = \"Pacific/Pago_Pago\";\n  TimezoneRegions2[\"PacificPalau\"] = \"Pacific/Palau\";\n  TimezoneRegions2[\"PacificPitcairn\"] = \"Pacific/Pitcairn\";\n  TimezoneRegions2[\"PacificPohnpei\"] = \"Pacific/Pohnpei\";\n  TimezoneRegions2[\"PacificPonape\"] = \"Pacific/Ponape\";\n  TimezoneRegions2[\"PacificPortMoresby\"] = \"Pacific/Port_Moresby\";\n  TimezoneRegions2[\"PacificRarotonga\"] = \"Pacific/Rarotonga\";\n  TimezoneRegions2[\"PacificSaipan\"] = \"Pacific/Saipan\";\n  TimezoneRegions2[\"PacificSamoa\"] = \"Pacific/Samoa\";\n  TimezoneRegions2[\"PacificTahiti\"] = \"Pacific/Tahiti\";\n  TimezoneRegions2[\"PacificTarawa\"] = \"Pacific/Tarawa\";\n  TimezoneRegions2[\"PacificTongatapu\"] = \"Pacific/Tongatapu\";\n  TimezoneRegions2[\"PacificTruk\"] = \"Pacific/Truk\";\n  TimezoneRegions2[\"PacificWake\"] = \"Pacific/Wake\";\n  TimezoneRegions2[\"PacificWallis\"] = \"Pacific/Wallis\";\n  TimezoneRegions2[\"PacificYap\"] = \"Pacific/Yap\";\n  return TimezoneRegions2;\n})(TimezoneRegions || {});\n\nvar TimezoneOffset = /* @__PURE__ */ ((TimezoneOffset2) => {\n  TimezoneOffset2[\"UTC_MINUS_12\"] = \"UTC-12\";\n  TimezoneOffset2[\"UTC_MINUS_11_30\"] = \"UTC-11:30\";\n  TimezoneOffset2[\"UTC_MINUS_11\"] = \"UTC-11\";\n  TimezoneOffset2[\"UTC_MINUS_10_30\"] = \"UTC-10:30\";\n  TimezoneOffset2[\"UTC_MINUS_10\"] = \"UTC-10\";\n  TimezoneOffset2[\"UTC_MINUS_9_30\"] = \"UTC-9:30\";\n  TimezoneOffset2[\"UTC_MINUS_9\"] = \"UTC-09\";\n  TimezoneOffset2[\"UTC_MINUS_8_45\"] = \"UTC-8:45\";\n  TimezoneOffset2[\"UTC_MINUS_8\"] = \"UTC-08\";\n  TimezoneOffset2[\"UTC_MINUS_7\"] = \"UTC-07\";\n  TimezoneOffset2[\"UTC_MINUS_6_30\"] = \"UTC-6:30\";\n  TimezoneOffset2[\"UTC_MINUS_6\"] = \"UTC-06\";\n  TimezoneOffset2[\"UTC_MINUS_5_45\"] = \"UTC-5:45\";\n  TimezoneOffset2[\"UTC_MINUS_5_30\"] = \"UTC-5:30\";\n  TimezoneOffset2[\"UTC_MINUS_5\"] = \"UTC-05\";\n  TimezoneOffset2[\"UTC_MINUS_4_30\"] = \"UTC-4:30\";\n  TimezoneOffset2[\"UTC_MINUS_4\"] = \"UTC-04\";\n  TimezoneOffset2[\"UTC_MINUS_3_30\"] = \"UTC-3:30\";\n  TimezoneOffset2[\"UTC_MINUS_3\"] = \"UTC-03\";\n  TimezoneOffset2[\"UTC_MINUS_2_30\"] = \"UTC-2:30\";\n  TimezoneOffset2[\"UTC_MINUS_2\"] = \"UTC-02\";\n  TimezoneOffset2[\"UTC_MINUS_1\"] = \"UTC-01\";\n  TimezoneOffset2[\"UTC_0\"] = \"UTC+00\";\n  TimezoneOffset2[\"UTC_PLUS_1\"] = \"UTC+01\";\n  TimezoneOffset2[\"UTC_PLUS_2\"] = \"UTC+02\";\n  TimezoneOffset2[\"UTC_PLUS_3\"] = \"UTC+03\";\n  TimezoneOffset2[\"UTC_PLUS_3_30\"] = \"UTC+3:30\";\n  TimezoneOffset2[\"UTC_PLUS_4\"] = \"UTC+04\";\n  TimezoneOffset2[\"UTC_PLUS_4_30\"] = \"UTC+4:30\";\n  TimezoneOffset2[\"UTC_PLUS_5\"] = \"UTC+05\";\n  TimezoneOffset2[\"UTC_PLUS_5_30\"] = \"UTC+5:30\";\n  TimezoneOffset2[\"UTC_PLUS_5_45\"] = \"UTC+5:45\";\n  TimezoneOffset2[\"UTC_PLUS_6\"] = \"UTC+06\";\n  TimezoneOffset2[\"UTC_PLUS_6_30\"] = \"UTC+6:30\";\n  TimezoneOffset2[\"UTC_PLUS_7\"] = \"UTC+07\";\n  TimezoneOffset2[\"UTC_PLUS_8\"] = \"UTC+08\";\n  TimezoneOffset2[\"UTC_PLUS_8_45\"] = \"UTC+8:45\";\n  TimezoneOffset2[\"UTC_PLUS_9\"] = \"UTC+09\";\n  TimezoneOffset2[\"UTC_PLUS_9_30\"] = \"UTC+9:30\";\n  TimezoneOffset2[\"UTC_PLUS_10\"] = \"UTC+10\";\n  TimezoneOffset2[\"UTC_PLUS_10_30\"] = \"UTC+10:30\";\n  TimezoneOffset2[\"UTC_PLUS_11\"] = \"UTC+11\";\n  TimezoneOffset2[\"UTC_PLUS_11_30\"] = \"UTC+11:30\";\n  TimezoneOffset2[\"UTC_PLUS_12\"] = \"UTC+12\";\n  TimezoneOffset2[\"UTC_PLUS_12_45\"] = \"UTC+12:45\";\n  TimezoneOffset2[\"UTC_PLUS_13\"] = \"UTC+13\";\n  TimezoneOffset2[\"UTC_PLUS_13_45\"] = \"UTC+13:45\";\n  TimezoneOffset2[\"UTC_PLUS_14\"] = \"UTC+14\";\n  return TimezoneOffset2;\n})(TimezoneOffset || {});\n\nvar Timezones = /* @__PURE__ */ ((Timezones2) => {\n  Timezones2[\"AcreTime\"] = \"ACT\";\n  Timezones2[\"AfghanistanTime\"] = \"AFT\";\n  Timezones2[\"AIXCentralEuropeanTime\"] = \"DFT\";\n  Timezones2[\"AlaskaDaylightTime\"] = \"AKDT\";\n  Timezones2[\"AlaskaStandardTime\"] = \"AKST\";\n  Timezones2[\"AlmaAtaTime\"] = \"ALMT\";\n  Timezones2[\"AmazonSummerTime\"] = \"AMST\";\n  Timezones2[\"AmazonTime\"] = \"AMT\";\n  Timezones2[\"AnadyrTime\"] = \"ANAT\";\n  Timezones2[\"AqtobeTime\"] = \"AQTT\";\n  Timezones2[\"ArabiaStandardTime\"] = \"AST\";\n  Timezones2[\"ArgentinaTime\"] = \"ART\";\n  Timezones2[\"ArmeniaTime\"] = \"AMT\";\n  Timezones2[\"ASEANCommonTime\"] = \"ASEAN\";\n  Timezones2[\"AtlanticDaylightTime\"] = \"ADT\";\n  Timezones2[\"AtlanticStandardTime\"] = \"AST\";\n  Timezones2[\"AustralianCentralDaylightSavingTime\"] = \"ACDT\";\n  Timezones2[\"AustralianCentralStandardTime\"] = \"ACST\";\n  Timezones2[\"AustralianCentralWesternStandardTime\"] = \"ACWST\";\n  Timezones2[\"AustralianEasternDaylightSavingTime\"] = \"AEDT\";\n  Timezones2[\"AustralianEasternStandardTime\"] = \"AEST\";\n  Timezones2[\"AustralianEasternTime\"] = \"AET\";\n  Timezones2[\"AustralianWesternStandardTime\"] = \"AWST\";\n  Timezones2[\"AzerbaijanTime\"] = \"AZT\";\n  Timezones2[\"AzoresStandardTime\"] = \"AZOT\";\n  Timezones2[\"AzoresSummerTime\"] = \"AZOST\";\n  Timezones2[\"BakerIslandTime\"] = \"BIT\";\n  Timezones2[\"BangladeshStandardTime\"] = \"BST\";\n  Timezones2[\"BhutanTime\"] = \"BTT\";\n  Timezones2[\"BoliviaTime\"] = \"BOT\";\n  Timezones2[\"BougainvilleStandardTime\"] = \"BST\";\n  Timezones2[\"BrasiliaSummerTime\"] = \"BRST\";\n  Timezones2[\"BrasiliaTime\"] = \"BRT\";\n  Timezones2[\"BritishIndianOceanTime\"] = \"BIOT\";\n  Timezones2[\"BritishSummerTime\"] = \"BST\";\n  Timezones2[\"BruneiTime\"] = \"BNT\";\n  Timezones2[\"CapeVerdeTime\"] = \"CVT\";\n  Timezones2[\"CentralAfricaTime\"] = \"CAT\";\n  Timezones2[\"CentralDaylightTime\"] = \"CDT\";\n  Timezones2[\"CentralEuropeanSummerTime\"] = \"CEST\";\n  Timezones2[\"CentralEuropeanTime\"] = \"CET\";\n  Timezones2[\"CentralIndonesiaTime\"] = \"WITA\";\n  Timezones2[\"CentralStandardTime\"] = \"CST\";\n  Timezones2[\"CentralTime\"] = \"CT\";\n  Timezones2[\"CentralWesternStandardTime\"] = \"CWST\";\n  Timezones2[\"ChamorroStandardTime\"] = \"CHST\";\n  Timezones2[\"ChathamDaylightTime\"] = \"CHADT\";\n  Timezones2[\"ChathamStandardTime\"] = \"CHAST\";\n  Timezones2[\"ChileStandardTime\"] = \"CLT\";\n  Timezones2[\"ChileSummerTime\"] = \"CLST\";\n  Timezones2[\"ChinaStandardTime\"] = \"CST\";\n  Timezones2[\"ChoibalsanStandardTime\"] = \"CHOT\";\n  Timezones2[\"ChoibalsanSummerTime\"] = \"CHOST\";\n  Timezones2[\"ChristmasIslandTime\"] = \"CXT\";\n  Timezones2[\"ChuukTime\"] = \"CHUT\";\n  Timezones2[\"ClipptertonIslandStandardTime\"] = \"CIST\";\n  Timezones2[\"CocosIslandsTime\"] = \"CCT\";\n  Timezones2[\"ColombiaSummerTime\"] = \"COST\";\n  Timezones2[\"ColombiaTime\"] = \"COT\";\n  Timezones2[\"CookIslandTime\"] = \"CKT\";\n  Timezones2[\"CoordinatedUniversalTime\"] = \"UTC\";\n  Timezones2[\"CubaDaylightTime\"] = \"CDT\";\n  Timezones2[\"CubaStandardTime\"] = \"CST\";\n  Timezones2[\"DavisTime\"] = \"DAVT\";\n  Timezones2[\"DumontDUrvilleTime\"] = \"DDUT\";\n  Timezones2[\"EastAfricaTime\"] = \"EAT\";\n  Timezones2[\"EasterIslandStandardTime\"] = \"EAST\";\n  Timezones2[\"EasterIslandSummerTime\"] = \"EASST\";\n  Timezones2[\"EasternCaribbeanTime\"] = \"ECT\";\n  Timezones2[\"EasternDaylightTime\"] = \"EDT\";\n  Timezones2[\"EasternEuropeanSummerTime\"] = \"EEST\";\n  Timezones2[\"EasternEuropeanTime\"] = \"EET\";\n  Timezones2[\"EasternGreenlandSummerTime\"] = \"EGST\";\n  Timezones2[\"EasternGreenlandTime\"] = \"EGT\";\n  Timezones2[\"EasternIndonesianTime\"] = \"WIT\";\n  Timezones2[\"EasternStandardTime\"] = \"EST\";\n  Timezones2[\"EasternTime\"] = \"ET\";\n  Timezones2[\"EcuadorTime\"] = \"ECT\";\n  Timezones2[\"FalklandIslandsSummerTime\"] = \"FKST\";\n  Timezones2[\"FalklandIslandsTime\"] = \"FKT\";\n  Timezones2[\"FernandoDeNoronhaTime\"] = \"FNT\";\n  Timezones2[\"FijiTime\"] = \"FJT\";\n  Timezones2[\"FrenchGuianaTime\"] = \"GFT\";\n  Timezones2[\"FrenchSouthernAndAntarcticTime\"] = \"TFT\";\n  Timezones2[\"FurtherEasternEuropeanTime\"] = \"FET\";\n  Timezones2[\"GalapagosTime\"] = \"GALT\";\n  Timezones2[\"GambierIslandTime\"] = \"GIT\";\n  Timezones2[\"GambierIslandsTime\"] = \"GAMT\";\n  Timezones2[\"GeorgiaStandardTime\"] = \"GET\";\n  Timezones2[\"GilbertIslandTime\"] = \"GILT\";\n  Timezones2[\"GreenwichMeanTime\"] = \"GMT\";\n  Timezones2[\"GulfStandardTime\"] = \"GST\";\n  Timezones2[\"GuyanaTime\"] = \"GYT\";\n  Timezones2[\"HawaiiAleutianDaylightTime\"] = \"HDT\";\n  Timezones2[\"HawaiiAleutianStandardTime\"] = \"HST\";\n  Timezones2[\"HeardAndMcDonaldIslandsTime\"] = \"HMT\";\n  Timezones2[\"HeureAvanceeDEuropeCentraleTime\"] = \"HAEC\";\n  Timezones2[\"HongKongTime\"] = \"HKT\";\n  Timezones2[\"HovdSummerTime\"] = \"HOVST\";\n  Timezones2[\"HovdTime\"] = \"HOVT\";\n  Timezones2[\"IndianOceanTime\"] = \"IOT\";\n  Timezones2[\"IndianStandardTime\"] = \"IST\";\n  Timezones2[\"IndochinaTime\"] = \"ICT\";\n  Timezones2[\"InternationalDayLineWestTime\"] = \"IDLW\";\n  Timezones2[\"IranDaylightTime\"] = \"IRDT\";\n  Timezones2[\"IranStandardTime\"] = \"IRST\";\n  Timezones2[\"IrishStandardTime\"] = \"IST\";\n  Timezones2[\"IrkutskSummerTime\"] = \"IRKST\";\n  Timezones2[\"IrkutskTime\"] = \"IRKT\";\n  Timezones2[\"IsraelDaylightTime\"] = \"IDT\";\n  Timezones2[\"IsraelStandardTime\"] = \"IST\";\n  Timezones2[\"JapanStandardTime\"] = \"JST\";\n  Timezones2[\"KaliningradTime\"] = \"KALT\";\n  Timezones2[\"KamchatkaTime\"] = \"KAMT\";\n  Timezones2[\"KoreaStandardTime\"] = \"KST\";\n  Timezones2[\"KosraeTime\"] = \"KOST\";\n  Timezones2[\"KrasnoyarskSummerTime\"] = \"KRAST\";\n  Timezones2[\"KrasnoyarskTime\"] = \"KRAT\";\n  Timezones2[\"KyrgyzstanTime\"] = \"KGT\";\n  Timezones2[\"LineIslandsTime\"] = \"LINT\";\n  Timezones2[\"KazakhstanStandardTime\"] = \"KAST\";\n  Timezones2[\"LordHoweStandardTime\"] = \"LHST\";\n  Timezones2[\"LordHoweSummerTime\"] = \"LHST\";\n  Timezones2[\"MacquarieIslandStationTime\"] = \"MIST\";\n  Timezones2[\"MagadanTime\"] = \"MAGT\";\n  Timezones2[\"MalaysiaStandardTime\"] = \"MST\";\n  Timezones2[\"MalaysiaTime\"] = \"MYT\";\n  Timezones2[\"MaldivesTime\"] = \"MVT\";\n  Timezones2[\"MarquesasIslandsTime\"] = \"MART\";\n  Timezones2[\"MarshallIslandsTime\"] = \"MHT\";\n  Timezones2[\"MauritiusTime\"] = \"MUT\";\n  Timezones2[\"MawsonStationTime\"] = \"MAWT\";\n  Timezones2[\"MiddleEuropeanSummerTime\"] = \"MEDT\";\n  Timezones2[\"MiddleEuropeanTime\"] = \"MET\";\n  Timezones2[\"MoscowTime\"] = \"MSK\";\n  Timezones2[\"MountainDaylightTime\"] = \"MDT\";\n  Timezones2[\"MountainStandardTime\"] = \"MST\";\n  Timezones2[\"MyanmarStandardTime\"] = \"MMT\";\n  Timezones2[\"NepalTime\"] = \"NCT\";\n  Timezones2[\"NauruTime\"] = \"NRT\";\n  Timezones2[\"NewCaledoniaTime\"] = \"NCT\";\n  Timezones2[\"NewZealandDaylightTime\"] = \"NZDT\";\n  Timezones2[\"NewZealandStandardTime\"] = \"NZST\";\n  Timezones2[\"NewfoundlandDaylightTime\"] = \"NDT\";\n  Timezones2[\"NewfoundlandStandardTime\"] = \"NST\";\n  Timezones2[\"NewfoundlandTime\"] = \"NT\";\n  Timezones2[\"NiueTime\"] = \"NUT\";\n  Timezones2[\"NorfolkIslandTime\"] = \"NFT\";\n  Timezones2[\"NovosibirskTime\"] = \"NOVT\";\n  Timezones2[\"OmskTime\"] = \"OMST\";\n  Timezones2[\"OralTime\"] = \"ORAT\";\n  Timezones2[\"PacificDaylightTime\"] = \"PDT\";\n  Timezones2[\"PacificStandardTime\"] = \"PST\";\n  Timezones2[\"PakistanStandardTime\"] = \"PKT\";\n  Timezones2[\"PalauTime\"] = \"PWT\";\n  Timezones2[\"PapuaNewGuineaTime\"] = \"PGT\";\n  Timezones2[\"ParaguaySummerTime\"] = \"PYST\";\n  Timezones2[\"ParaguayTime\"] = \"PYT\";\n  Timezones2[\"PeruTime\"] = \"PET\";\n  Timezones2[\"PhilippineStandardTime\"] = \"PHST\";\n  Timezones2[\"PhilippineTime\"] = \"PHT\";\n  Timezones2[\"PhoenixIslandTime\"] = \"PHOT\";\n  Timezones2[\"PitcairnTime\"] = \"PST\";\n  Timezones2[\"PohnpeiStandardTime\"] = \"PONT\";\n  Timezones2[\"ReunionTime\"] = \"RET\";\n  Timezones2[\"RotheraResearchStationTime\"] = \"ROTT\";\n  Timezones2[\"SaintPierreAndMiquelonDaylightTime\"] = \"PMDT\";\n  Timezones2[\"SaintPierreAndMiquelonStandardTime\"] = \"PMST\";\n  Timezones2[\"SakhalinIslandTime\"] = \"SAKT\";\n  Timezones2[\"SamaraTime\"] = \"SAMT\";\n  Timezones2[\"SamoaDaylightTime\"] = \"SDT\";\n  Timezones2[\"SamoaStandardTime\"] = \"SST\";\n  Timezones2[\"SeychellesTime\"] = \"SCT\";\n  Timezones2[\"ShowaStationTime\"] = \"SYOT\";\n  Timezones2[\"SingaporeStandardTime\"] = \"SST\";\n  Timezones2[\"SingaporeTime\"] = \"SGT\";\n  Timezones2[\"SolomonIslandsTime\"] = \"SBT\";\n  Timezones2[\"SouthAfricanStandardTime\"] = \"SAST\";\n  Timezones2[\"SouthGeorgiaAndTheSouthSandwichIslandsTime\"] = \"GST\";\n  Timezones2[\"SrednekolymskTime\"] = \"SRET\";\n  Timezones2[\"SriLankaStandardTime\"] = \"SLST\";\n  Timezones2[\"SurinameTime\"] = \"SRT\";\n  Timezones2[\"TahitiTime\"] = \"TAHT\";\n  Timezones2[\"TajikistanTime\"] = \"TJT\";\n  Timezones2[\"ThailandStandardTime\"] = \"THA\";\n  Timezones2[\"TimorLesteTime\"] = \"TLT\";\n  Timezones2[\"TokelauTime\"] = \"TKT\";\n  Timezones2[\"TongaTime\"] = \"TOT\";\n  Timezones2[\"TurkeyTime\"] = \"TRT\";\n  Timezones2[\"TurkmenistanTime\"] = \"TMT\";\n  Timezones2[\"TuvaluTime\"] = \"TVT\";\n  Timezones2[\"UlaanbaatarStandardTime\"] = \"ULAT\";\n  Timezones2[\"UlaanbaatarSummerTime\"] = \"ULAST\";\n  Timezones2[\"UruguayStandardTime\"] = \"UYT\";\n  Timezones2[\"UruguaySummerTime\"] = \"UYST\";\n  Timezones2[\"UzbekistanTime\"] = \"UZT\";\n  Timezones2[\"VanuatuTime\"] = \"VUT\";\n  Timezones2[\"VenezuelaStandardTime\"] = \"VET\";\n  Timezones2[\"VladivostokTime\"] = \"VLAT\";\n  Timezones2[\"VolgogradTime\"] = \"VOLT\";\n  Timezones2[\"VostokStationTime\"] = \"VOST\";\n  Timezones2[\"WakeIslandTime\"] = \"WAKT\";\n  Timezones2[\"WestAfricaSummerTime\"] = \"WAST\";\n  Timezones2[\"WestAfricaTime\"] = \"WAT\";\n  Timezones2[\"WestGreenlandSummerTime\"] = \"WGST\";\n  Timezones2[\"WestGreenlandTime\"] = \"WGT\";\n  Timezones2[\"WestKazakhstanTime\"] = \"WKT\";\n  Timezones2[\"WesternEuropeanSummerTime\"] = \"WEDT\";\n  Timezones2[\"WesternEuropeanTime\"] = \"WET\";\n  Timezones2[\"WesternIndonesianTime\"] = \"WIT\";\n  Timezones2[\"WesternStandardTime\"] = \"WST\";\n  Timezones2[\"YakutskTime\"] = \"YAKT\";\n  Timezones2[\"YekaterinburgTime\"] = \"YEKT\";\n  return Timezones2;\n})(Timezones || {});\nconst AcreTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"ACT\" /* AcreTime */,\n  name: \"Acre Time\",\n  offset: TimezoneOffset.UTC_MINUS_5\n};\nconst AfghanistanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"AFT\" /* AfghanistanTime */,\n  name: \"Afghanistan Time\",\n  offset: TimezoneOffset.UTC_PLUS_4_30\n};\nconst AIXCentralEuropeanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"DFT\" /* AIXCentralEuropeanTime */,\n  name: \"AIX Central European Time\",\n  offset: TimezoneOffset.UTC_PLUS_1\n};\nconst AlaskaDaylightTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"AKDT\" /* AlaskaDaylightTime */,\n  name: \"Alaska Daylight Time\",\n  offset: TimezoneOffset.UTC_MINUS_8\n};\nconst AlaskaStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"AKST\" /* AlaskaStandardTime */,\n  name: \"Alaska Standard Time\",\n  offset: TimezoneOffset.UTC_MINUS_9\n};\nconst AlmaAtaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"ALMT\" /* AlmaAtaTime */,\n  name: \"Alma-Ata Time\",\n  offset: TimezoneOffset.UTC_PLUS_6\n};\nconst AmazonSummerTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"AMST\" /* AmazonSummerTime */,\n  name: \"Amazon Summer Time\",\n  offset: TimezoneOffset.UTC_MINUS_3\n};\nconst AmazonTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"AMT\" /* AmazonTime */,\n  name: \"Amazon Time\",\n  offset: TimezoneOffset.UTC_MINUS_4\n};\nconst AnadyrTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"ANAT\" /* AnadyrTime */,\n  name: \"Anadyr Time\",\n  offset: TimezoneOffset.UTC_PLUS_12\n};\nconst AqtobeTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"AQTT\" /* AqtobeTime */,\n  name: \"Aqtobe Time\",\n  offset: TimezoneOffset.UTC_PLUS_5\n};\nconst ArabiaStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"AST\" /* ArabiaStandardTime */,\n  name: \"Arabia Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_3\n};\nconst ArgentinaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"ART\" /* ArgentinaTime */,\n  name: \"Argentina Time\",\n  offset: TimezoneOffset.UTC_MINUS_3\n};\nconst ArmeniaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"AMT\" /* ArmeniaTime */,\n  name: \"Armenia Time\",\n  offset: TimezoneOffset.UTC_PLUS_4\n};\nconst AtlanticDaylightTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"ADT\" /* AtlanticDaylightTime */,\n  name: \"Atlantic Daylight Time\",\n  offset: TimezoneOffset.UTC_MINUS_3\n};\nconst AtlanticStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"AST\" /* AtlanticStandardTime */,\n  name: \"Atlantic Standard Time\",\n  offset: TimezoneOffset.UTC_MINUS_4\n};\nconst AustralianCentralDaylightSavingTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"ACDT\" /* AustralianCentralDaylightSavingTime */,\n  name: \"Australian Central Daylight Saving Time\",\n  offset: TimezoneOffset.UTC_PLUS_10_30\n};\nconst AustralianCentralStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"ACST\" /* AustralianCentralStandardTime */,\n  name: \"Australian Central Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_9_30\n};\nconst AustralianCentralWesternStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"ACWST\" /* AustralianCentralWesternStandardTime */,\n  name: \"Australian Central Western Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_8_45\n};\nconst AustralianEasternDaylightSavingTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"AEDT\" /* AustralianEasternDaylightSavingTime */,\n  name: \"Australian Eastern Daylight Saving Time\",\n  offset: TimezoneOffset.UTC_PLUS_11\n};\nconst AustralianEasternStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"AEST\" /* AustralianEasternStandardTime */,\n  name: \"Australian Eastern Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_10\n};\nconst AustralianEasternTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"AET\" /* AustralianEasternTime */,\n  name: \"Australian Eastern Time\",\n  offset: TimezoneOffset.UTC_PLUS_10\n};\nconst AustralianWesternStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"AWST\" /* AustralianWesternStandardTime */,\n  name: \"Australian Western Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_8\n};\nconst AzerbaijanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"AZT\" /* AzerbaijanTime */,\n  name: \"Azerbaijan Time\",\n  offset: TimezoneOffset.UTC_PLUS_4\n};\nconst AzoresStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"AZOT\" /* AzoresStandardTime */,\n  name: \"Azores Standard Time\",\n  offset: TimezoneOffset.UTC_MINUS_1\n};\nconst AzoresSummerTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"AZOST\" /* AzoresSummerTime */,\n  name: \"Azores Summer Time\",\n  offset: TimezoneOffset.UTC_0\n};\nconst BakerIslandTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"BIT\" /* BakerIslandTime */,\n  name: \"Baker Island Time\",\n  offset: TimezoneOffset.UTC_MINUS_12\n};\nconst BangladeshStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"BST\" /* BangladeshStandardTime */,\n  name: \"Bangladesh Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_6\n};\nconst BhutanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"BTT\" /* BhutanTime */,\n  name: \"Bhutan Time\",\n  offset: TimezoneOffset.UTC_PLUS_6\n};\nconst BoliviaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"BOT\" /* BoliviaTime */,\n  name: \"Bolivia Time\",\n  offset: TimezoneOffset.UTC_MINUS_4\n};\nconst BougainvilleStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"BST\" /* BougainvilleStandardTime */,\n  name: \"Bougainville Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_11\n};\nconst BrasiliaSummerTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"BRST\" /* BrasiliaSummerTime */,\n  name: \"Brasilia Summer Time\",\n  offset: TimezoneOffset.UTC_MINUS_2\n};\nconst BrasiliaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"BRT\" /* BrasiliaTime */,\n  name: \"Brasilia Time\",\n  offset: TimezoneOffset.UTC_MINUS_3\n};\nconst BritishIndianOceanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"BIOT\" /* BritishIndianOceanTime */,\n  name: \"British Indian Ocean Time\",\n  offset: TimezoneOffset.UTC_PLUS_6\n};\nconst BritishSummerTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"BST\" /* BritishSummerTime */,\n  name: \"British Summer Time\",\n  offset: TimezoneOffset.UTC_PLUS_1\n};\nconst BruneiTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"BNT\" /* BruneiTime */,\n  name: \"Brunei Time\",\n  offset: TimezoneOffset.UTC_PLUS_8\n};\nconst CapeVerdeTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"CVT\" /* CapeVerdeTime */,\n  name: \"Cape Verde Time\",\n  offset: TimezoneOffset.UTC_MINUS_1\n};\nconst CentralAfricaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"CAT\" /* CentralAfricaTime */,\n  name: \"Central Africa Time\",\n  offset: TimezoneOffset.UTC_PLUS_2\n};\nconst CentralDaylightTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"CDT\" /* CentralDaylightTime */,\n  name: \"Central Daylight Time\",\n  offset: TimezoneOffset.UTC_MINUS_5\n};\nconst CentralEuropeanSummerTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"CEST\" /* CentralEuropeanSummerTime */,\n  name: \"Central European Summer Time\",\n  offset: TimezoneOffset.UTC_PLUS_2\n};\nconst CentralEuropeanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"CET\" /* CentralEuropeanTime */,\n  name: \"Central European Time\",\n  offset: TimezoneOffset.UTC_PLUS_1\n};\nconst CentralIndonesiaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"WITA\" /* CentralIndonesiaTime */,\n  name: \"Central Indonesia Time\",\n  offset: TimezoneOffset.UTC_PLUS_8\n};\nconst CentralStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"CST\" /* CentralStandardTime */,\n  name: \"Central Standard Time\",\n  offset: TimezoneOffset.UTC_MINUS_6\n};\nconst CentralTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"CT\" /* CentralTime */,\n  name: \"Central Time\",\n  offset: TimezoneOffset.UTC_MINUS_5\n};\nconst CentralWesternStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"CWST\" /* CentralWesternStandardTime */,\n  name: \"Central Western Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_8_45\n};\nconst ChamorroStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"CHST\" /* ChamorroStandardTime */,\n  name: \"Chamorro Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_10\n};\nconst ChathamDaylightTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"CHADT\" /* ChathamDaylightTime */,\n  name: \"Chatham Daylight Time\",\n  offset: TimezoneOffset.UTC_PLUS_13_45\n};\nconst ChathamStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"CHAST\" /* ChathamStandardTime */,\n  name: \"Chatham Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_12_45\n};\nconst ChileStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"CLT\" /* ChileStandardTime */,\n  name: \"Chile Standard Time\",\n  offset: TimezoneOffset.UTC_MINUS_4\n};\nconst ChileSummerTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"CLST\" /* ChileSummerTime */,\n  name: \"Chile Summer Time\",\n  offset: TimezoneOffset.UTC_MINUS_3\n};\nconst ChinaStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"CST\" /* ChinaStandardTime */,\n  name: \"China Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_8\n};\nconst ChoibalsanStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"CHOT\" /* ChoibalsanStandardTime */,\n  name: \"Choibalsan Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_8\n};\nconst ChoibalsanSummerTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"CHOST\" /* ChoibalsanSummerTime */,\n  name: \"Choibalsan Summer Time\",\n  offset: TimezoneOffset.UTC_PLUS_9\n};\nconst ChristmasIslandTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"CXT\" /* ChristmasIslandTime */,\n  name: \"Christmas Island Time\",\n  offset: TimezoneOffset.UTC_PLUS_7\n};\nconst ChuukTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"CHUT\" /* ChuukTime */,\n  name: \"Chuuk Time\",\n  offset: TimezoneOffset.UTC_PLUS_10\n};\nconst ClipptertonIslandStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"CIST\" /* ClipptertonIslandStandardTime */,\n  name: \"Clippterton Island Standard Time\",\n  offset: TimezoneOffset.UTC_MINUS_8\n};\nconst CocosIslandsTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"CCT\" /* CocosIslandsTime */,\n  name: \"Cocos Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_6_30\n};\nconst ColombiaSummerTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"COST\" /* ColombiaSummerTime */,\n  name: \"Colombia Summer Time\",\n  offset: TimezoneOffset.UTC_MINUS_4\n};\nconst ColombiaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"COT\" /* ColombiaTime */,\n  name: \"Colombia Time\",\n  offset: TimezoneOffset.UTC_MINUS_5\n};\nconst CookIslandTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"CKT\" /* CookIslandTime */,\n  name: \"Cook Island Time\",\n  offset: TimezoneOffset.UTC_MINUS_10\n};\nconst CoordinatedUniversalTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"UTC\" /* CoordinatedUniversalTime */,\n  name: \"Coordinated Universal Time\",\n  offset: TimezoneOffset.UTC_0\n};\nconst CubaDaylightTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"CDT\" /* CubaDaylightTime */,\n  name: \"Cuba Daylight Time\",\n  offset: TimezoneOffset.UTC_MINUS_4\n};\nconst CubaStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"CST\" /* CubaStandardTime */,\n  name: \"Cuba Standard Time\",\n  offset: TimezoneOffset.UTC_MINUS_5\n};\nconst DavisTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"DAVT\" /* DavisTime */,\n  name: \"Davis Time\",\n  offset: TimezoneOffset.UTC_PLUS_7\n};\nconst DumontDUrvilleTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"DDUT\" /* DumontDUrvilleTime */,\n  name: \"Dumont D'Urville Time\",\n  offset: TimezoneOffset.UTC_PLUS_10\n};\nconst EastAfricaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"EAT\" /* EastAfricaTime */,\n  name: \"East Africa Time\",\n  offset: TimezoneOffset.UTC_PLUS_3\n};\nconst EasterIslandStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"EAST\" /* EasterIslandStandardTime */,\n  name: \"Easter Island Standard Time\",\n  offset: TimezoneOffset.UTC_MINUS_6\n};\nconst EasterIslandSummerTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"EASST\" /* EasterIslandSummerTime */,\n  name: \"Easter Island Summer Time\",\n  offset: TimezoneOffset.UTC_MINUS_5\n};\nconst EasternCaribbeanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"ECT\" /* EasternCaribbeanTime */,\n  name: \"Eastern Caribbean Time\",\n  offset: TimezoneOffset.UTC_MINUS_4\n};\nconst EasternDaylightTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"EDT\" /* EasternDaylightTime */,\n  name: \"Eastern Daylight Time\",\n  offset: TimezoneOffset.UTC_MINUS_4\n};\nconst EasternEuropeanSummerTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"EEST\" /* EasternEuropeanSummerTime */,\n  name: \"Eastern European Summer Time\",\n  offset: TimezoneOffset.UTC_PLUS_3\n};\nconst EasternEuropeanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"EET\" /* EasternEuropeanTime */,\n  name: \"Eastern European Time\",\n  offset: TimezoneOffset.UTC_PLUS_2\n};\nconst EasternGreenlandSummerTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"EGST\" /* EasternGreenlandSummerTime */,\n  name: \"Eastern Greenland Summer Time\",\n  offset: TimezoneOffset.UTC_0\n};\nconst EasternGreenlandTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"EGT\" /* EasternGreenlandTime */,\n  name: \"Eastern Greenland Time\",\n  offset: TimezoneOffset.UTC_MINUS_1\n};\nconst EasternIndonesianTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"WIT\" /* EasternIndonesianTime */,\n  name: \"Eastern Indonesian Time\",\n  offset: TimezoneOffset.UTC_PLUS_9\n};\nconst EasternStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"EST\" /* EasternStandardTime */,\n  name: \"Eastern Standard Time\",\n  offset: TimezoneOffset.UTC_MINUS_5\n};\nconst EasternTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"ET\" /* EasternTime */,\n  name: \"Eastern Time\",\n  offset: TimezoneOffset.UTC_MINUS_5\n};\nconst EcuadorTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"ECT\" /* EcuadorTime */,\n  name: \"Ecuador Time\",\n  offset: TimezoneOffset.UTC_MINUS_5\n};\nconst FalklandIslandsSummerTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"FKST\" /* FalklandIslandsSummerTime */,\n  name: \"Falkland Islands Summer Time\",\n  offset: TimezoneOffset.UTC_MINUS_3\n};\nconst FalklandIslandsTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"FKT\" /* FalklandIslandsTime */,\n  name: \"Falkland Islands Time\",\n  offset: TimezoneOffset.UTC_MINUS_4\n};\nconst FernandoDeNoronhaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"FNT\" /* FernandoDeNoronhaTime */,\n  name: \"Fernando de Noronha Time\",\n  offset: TimezoneOffset.UTC_MINUS_2\n};\nconst FijiTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"FJT\" /* FijiTime */,\n  name: \"Fiji Time\",\n  offset: TimezoneOffset.UTC_PLUS_12\n};\nconst FrenchGuianaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"GFT\" /* FrenchGuianaTime */,\n  name: \"French Guiana Time\",\n  offset: TimezoneOffset.UTC_MINUS_3\n};\nconst FrenchSouthernAndAntarcticTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"TFT\" /* FrenchSouthernAndAntarcticTime */,\n  name: \"French Southern and Antarctic Time\",\n  offset: TimezoneOffset.UTC_PLUS_5\n};\nconst FurtherEasternEuropeanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"FET\" /* FurtherEasternEuropeanTime */,\n  name: \"Further Eastern European Time\",\n  offset: TimezoneOffset.UTC_PLUS_3\n};\nconst GalapagosTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"GALT\" /* GalapagosTime */,\n  name: \"Galapagos Time\",\n  offset: TimezoneOffset.UTC_MINUS_6\n};\nconst GambierIslandTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"GIT\" /* GambierIslandTime */,\n  name: \"Gambier Island Time\",\n  offset: TimezoneOffset.UTC_MINUS_9\n};\nconst GambierIslandsTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"GAMT\" /* GambierIslandsTime */,\n  name: \"Gambier Islands Time\",\n  offset: TimezoneOffset.UTC_MINUS_9\n};\nconst GeorgiaStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"GET\" /* GeorgiaStandardTime */,\n  name: \"Georgia Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_4\n};\nconst GilbertIslandTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"GILT\" /* GilbertIslandTime */,\n  name: \"Gilbert Island Time\",\n  offset: TimezoneOffset.UTC_PLUS_12\n};\nconst GreenwichMeanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"GMT\" /* GreenwichMeanTime */,\n  name: \"Greenwich Mean Time\",\n  offset: TimezoneOffset.UTC_0\n};\nconst GulfStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"GST\" /* GulfStandardTime */,\n  name: \"Gulf Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_4\n};\nconst GuyanaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"GYT\" /* GuyanaTime */,\n  name: \"Guyana Time\",\n  offset: TimezoneOffset.UTC_MINUS_4\n};\nconst HawaiiAleutianDaylightTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"HDT\" /* HawaiiAleutianDaylightTime */,\n  name: \"Hawaii-Aleutian Daylight Time\",\n  offset: TimezoneOffset.UTC_MINUS_9\n};\nconst HawaiiAleutianStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"HST\" /* HawaiiAleutianStandardTime */,\n  name: \"Hawaii-Aleutian Standard Time\",\n  offset: TimezoneOffset.UTC_MINUS_10\n};\nconst HeardAndMcDonaldIslandsTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"HMT\" /* HeardAndMcDonaldIslandsTime */,\n  name: \"Heard and McDonald Islands Time\",\n  offset: TimezoneOffset.UTC_PLUS_5\n};\nconst HongKongTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"HKT\" /* HongKongTime */,\n  name: \"Hong Kong Time\",\n  offset: TimezoneOffset.UTC_PLUS_8\n};\nconst HovdSummerTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"HOVST\" /* HovdSummerTime */,\n  name: \"Hovd Summer Time\",\n  offset: TimezoneOffset.UTC_PLUS_8\n};\nconst HovdTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"HOVT\" /* HovdTime */,\n  name: \"Hovd Time\",\n  offset: TimezoneOffset.UTC_PLUS_7\n};\nconst IndianOceanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"IOT\" /* IndianOceanTime */,\n  name: \"Indian Ocean Time\",\n  offset: TimezoneOffset.UTC_PLUS_3\n};\nconst IndianStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"IST\" /* IndianStandardTime */,\n  name: \"Indian Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_5_30\n};\nconst IndochinaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"ICT\" /* IndochinaTime */,\n  name: \"Indochina Time\",\n  offset: TimezoneOffset.UTC_PLUS_7\n};\nconst InternationalDayLineWestTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"IDLW\" /* InternationalDayLineWestTime */,\n  name: \"International Day Line West Time\",\n  offset: TimezoneOffset.UTC_MINUS_12\n};\nconst IranDaylightTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"IRDT\" /* IranDaylightTime */,\n  name: \"Iran Daylight Time\",\n  offset: TimezoneOffset.UTC_PLUS_4_30\n};\nconst IranStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"IRST\" /* IranStandardTime */,\n  name: \"Iran Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_3_30\n};\nconst IrishStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"IST\" /* IrishStandardTime */,\n  name: \"Irish Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_1\n};\nconst IrkutskTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"IRKT\" /* IrkutskTime */,\n  name: \"Irkutsk Time\",\n  offset: TimezoneOffset.UTC_PLUS_8\n};\nconst IsraelDaylightTime = {\n  dst: {\n    is: true,\n    uses: true\n  },\n  id: \"IDT\" /* IsraelDaylightTime */,\n  name: \"Israel Daylight Time\",\n  offset: TimezoneOffset.UTC_PLUS_3\n};\nconst IsraelStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"IST\" /* IsraelStandardTime */,\n  name: \"Israel Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_2\n};\nconst JapanStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"JST\" /* JapanStandardTime */,\n  name: \"Japan Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_9\n};\nconst KaliningradTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"KALT\" /* KaliningradTime */,\n  name: \"Kaliningrad Time\",\n  offset: TimezoneOffset.UTC_PLUS_2\n};\nconst KamchatkaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"KAMT\" /* KamchatkaTime */,\n  name: \"Kamchatka Time\",\n  offset: TimezoneOffset.UTC_PLUS_12\n};\nconst KoreaStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"KST\" /* KoreaStandardTime */,\n  name: \"Korea Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_9\n};\nconst KosraeTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"KOST\" /* KosraeTime */,\n  name: \"Kosrae Time\",\n  offset: TimezoneOffset.UTC_PLUS_11\n};\nconst KrasnoyarskTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"KRAT\" /* KrasnoyarskTime */,\n  name: \"Krasnoyarsk Time\",\n  offset: TimezoneOffset.UTC_PLUS_7\n};\nconst KyrgyzstanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"KGT\" /* KyrgyzstanTime */,\n  name: \"Kyrgyzstan Time\",\n  offset: TimezoneOffset.UTC_PLUS_6\n};\nconst LineIslandsTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"LINT\" /* LineIslandsTime */,\n  name: \"Line Islands Time\",\n  offset: TimezoneOffset.UTC_PLUS_14\n};\nconst LordHoweStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"LHST\" /* LordHoweStandardTime */,\n  name: \"Lord Howe Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_10_30\n};\nconst LordHoweSummerTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"LHST\" /* LordHoweSummerTime */,\n  name: \"Lord Howe Summer Time\",\n  offset: TimezoneOffset.UTC_PLUS_11\n};\nconst MacquarieIslandStationTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"MIST\" /* MacquarieIslandStationTime */,\n  name: \"Macquarie Island Station Time\",\n  offset: TimezoneOffset.UTC_PLUS_11\n};\nconst MagadanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"MAGT\" /* MagadanTime */,\n  name: \"Magadan Time\",\n  offset: TimezoneOffset.UTC_PLUS_12\n};\nconst MalaysiaStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"MST\" /* MalaysiaStandardTime */,\n  name: \"Malaysia Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_8\n};\nconst MalaysiaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"MYT\" /* MalaysiaTime */,\n  name: \"Malaysia Time\",\n  offset: TimezoneOffset.UTC_PLUS_8\n};\nconst MaldivesTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"MVT\" /* MaldivesTime */,\n  name: \"Maldives Time\",\n  offset: TimezoneOffset.UTC_PLUS_5\n};\nconst MarquesasIslandsTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"MART\" /* MarquesasIslandsTime */,\n  name: \"Marquesas Islands Time\",\n  offset: TimezoneOffset.UTC_PLUS_9_30\n};\nconst MarshallIslandsTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"MHT\" /* MarshallIslandsTime */,\n  name: \"Marshall Islands Time\",\n  offset: TimezoneOffset.UTC_PLUS_12\n};\nconst MauritiusTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"MUT\" /* MauritiusTime */,\n  name: \"Mauritius Time\",\n  offset: TimezoneOffset.UTC_PLUS_4\n};\nconst MawsonStationTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"MAWT\" /* MawsonStationTime */,\n  name: \"Mawson Station Time\",\n  offset: TimezoneOffset.UTC_PLUS_5\n};\nconst MiddleEuropeanSummerTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"MEDT\" /* MiddleEuropeanSummerTime */,\n  name: \"Middle European Summer Time\",\n  offset: TimezoneOffset.UTC_PLUS_2\n};\nconst MiddleEuropeanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"MET\" /* MiddleEuropeanTime */,\n  name: \"Middle European Time\",\n  offset: TimezoneOffset.UTC_PLUS_1\n};\nconst MoscowTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"MSK\" /* MoscowTime */,\n  name: \"Moscow Time\",\n  offset: TimezoneOffset.UTC_PLUS_3\n};\nconst MountainDaylightTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"MDT\" /* MountainDaylightTime */,\n  name: \"Mountain Daylight Time\",\n  offset: TimezoneOffset.UTC_MINUS_6\n};\nconst MountainStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"MST\" /* MountainStandardTime */,\n  name: \"Mountain Standard Time\",\n  offset: TimezoneOffset.UTC_MINUS_7\n};\nconst MyanmarStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"MMT\" /* MyanmarStandardTime */,\n  name: \"Myanmar Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_6_30\n};\nconst NepalTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"NCT\" /* NepalTime */,\n  name: \"Nepal Time\",\n  offset: TimezoneOffset.UTC_PLUS_5_45\n};\nconst NauruTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"NRT\" /* NauruTime */,\n  name: \"Nauru Time\",\n  offset: TimezoneOffset.UTC_PLUS_12\n};\nconst NewCaledoniaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"NCT\" /* NewCaledoniaTime */,\n  name: \"New Caledonia Time\",\n  offset: TimezoneOffset.UTC_PLUS_11\n};\nconst NewZealandDaylightTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"NZDT\" /* NewZealandDaylightTime */,\n  name: \"New Zealand Daylight Time\",\n  offset: TimezoneOffset.UTC_PLUS_13\n};\nconst NewZealandStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"NZST\" /* NewZealandStandardTime */,\n  name: \"New Zealand Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_12\n};\nconst NewfoundlandDaylightTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"NDT\" /* NewfoundlandDaylightTime */,\n  name: \"Newfoundland Daylight Time\",\n  offset: TimezoneOffset.UTC_MINUS_2_30\n};\nconst NewfoundlandTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"NT\" /* NewfoundlandTime */,\n  name: \"Newfoundland Time\",\n  offset: TimezoneOffset.UTC_MINUS_3_30\n};\nconst NiueTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"NUT\" /* NiueTime */,\n  name: \"Niue Time\",\n  offset: TimezoneOffset.UTC_MINUS_11\n};\nconst NorfolkIslandTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"NFT\" /* NorfolkIslandTime */,\n  name: \"Norfolk Island Time\",\n  offset: TimezoneOffset.UTC_PLUS_11\n};\nconst NovosibirskTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"NOVT\" /* NovosibirskTime */,\n  name: \"Novosibirsk Time\",\n  offset: TimezoneOffset.UTC_PLUS_7\n};\nconst OmskTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"OMST\" /* OmskTime */,\n  name: \"Omsk Time\",\n  offset: TimezoneOffset.UTC_PLUS_6\n};\nconst OralTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"ORAT\" /* OralTime */,\n  name: \"Oral Time\",\n  offset: TimezoneOffset.UTC_PLUS_5\n};\nconst PacificDaylightTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"PDT\" /* PacificDaylightTime */,\n  name: \"Pacific Daylight Time\",\n  offset: TimezoneOffset.UTC_MINUS_7\n};\nconst PacificStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"PST\" /* PacificStandardTime */,\n  name: \"Pacific Standard Time\",\n  offset: TimezoneOffset.UTC_MINUS_8\n};\nconst PakistanStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"PKT\" /* PakistanStandardTime */,\n  name: \"Pakistan Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_5\n};\nconst PalauTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"PWT\" /* PalauTime */,\n  name: \"Palau Time\",\n  offset: TimezoneOffset.UTC_PLUS_9\n};\nconst PapuaNewGuineaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"PGT\" /* PapuaNewGuineaTime */,\n  name: \"Papua New Guinea Time\",\n  offset: TimezoneOffset.UTC_PLUS_10\n};\nconst ParaguaySummerTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"PYST\" /* ParaguaySummerTime */,\n  name: \"Paraguay Summer Time\",\n  offset: TimezoneOffset.UTC_MINUS_3\n};\nconst ParaguayTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"PYT\" /* ParaguayTime */,\n  name: \"Paraguay Time\",\n  offset: TimezoneOffset.UTC_MINUS_4\n};\nconst PeruTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"PET\" /* PeruTime */,\n  name: \"Peru Time\",\n  offset: TimezoneOffset.UTC_MINUS_5\n};\nconst PhilippineStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"PHST\" /* PhilippineStandardTime */,\n  name: \"Philippine Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_8\n};\nconst PhillipineTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"PHT\" /* PhilippineTime */,\n  name: \"Philippine Time\",\n  offset: TimezoneOffset.UTC_PLUS_8\n};\nconst PhoenixIslandTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"PHOT\" /* PhoenixIslandTime */,\n  name: \"Phoenix Island Time\",\n  offset: TimezoneOffset.UTC_PLUS_13\n};\nconst PitcairnTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"PST\" /* PitcairnTime */,\n  name: \"Pitcairn Time\",\n  offset: TimezoneOffset.UTC_MINUS_8\n};\nconst PohnpeiStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"PONT\" /* PohnpeiStandardTime */,\n  name: \"Pohnpei Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_11\n};\nconst ReunionTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"RET\" /* ReunionTime */,\n  name: \"Reunion Time\",\n  offset: TimezoneOffset.UTC_PLUS_4\n};\nconst RotheraResearchStationTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"ROTT\" /* RotheraResearchStationTime */,\n  name: \"Rothera Research Station Time\",\n  offset: TimezoneOffset.UTC_MINUS_3\n};\nconst SaintPierreAndMiquelonDaylightTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"PMDT\" /* SaintPierreAndMiquelonDaylightTime */,\n  name: \"Saint Pierre and Miquelon Daylight Time\",\n  offset: TimezoneOffset.UTC_MINUS_2\n};\nconst SaintPierreAndMiquelonStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"PMST\" /* SaintPierreAndMiquelonStandardTime */,\n  name: \"Saint Pierre and Miquelon Standard Time\",\n  offset: TimezoneOffset.UTC_MINUS_3\n};\nconst SakhalinIslandTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"SAKT\" /* SakhalinIslandTime */,\n  name: \"Sakhalin Island Time\",\n  offset: TimezoneOffset.UTC_PLUS_11\n};\nconst SamaraTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"SAMT\" /* SamaraTime */,\n  name: \"Samara Time\",\n  offset: TimezoneOffset.UTC_PLUS_4\n};\nconst SamoaDaylightTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"SDT\" /* SamoaDaylightTime */,\n  name: \"Samoa Daylight Time\",\n  offset: TimezoneOffset.UTC_MINUS_10\n};\nconst SamoaStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"SST\" /* SamoaStandardTime */,\n  name: \"Samoa Standard Time\",\n  offset: TimezoneOffset.UTC_MINUS_11\n};\nconst SeychellesTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"SCT\" /* SeychellesTime */,\n  name: \"Seychelles Time\",\n  offset: TimezoneOffset.UTC_PLUS_4\n};\nconst ShowaStationTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"SYOT\" /* ShowaStationTime */,\n  name: \"Showa Station Time\",\n  offset: TimezoneOffset.UTC_PLUS_3\n};\nconst SingaporeStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"SST\" /* SingaporeStandardTime */,\n  name: \"Singapore Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_8\n};\nconst SingaporeTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"SGT\" /* SingaporeTime */,\n  name: \"Singapore Time\",\n  offset: TimezoneOffset.UTC_PLUS_8\n};\nconst SolomonIslandsTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"SBT\" /* SolomonIslandsTime */,\n  name: \"Solomon Islands Time\",\n  offset: TimezoneOffset.UTC_PLUS_11\n};\nconst SouthAfricanStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"SAST\" /* SouthAfricanStandardTime */,\n  name: \"South African Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_2\n};\nconst SouthGeorgiaAndTheSouthSandwichIslandsTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"GST\" /* SouthGeorgiaAndTheSouthSandwichIslandsTime */,\n  name: \"South Georgia and the South Sandwich Islands Time\",\n  offset: TimezoneOffset.UTC_MINUS_2\n};\nconst SrednekolymskTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"SRET\" /* SrednekolymskTime */,\n  name: \"Srednekolymsk Time\",\n  offset: TimezoneOffset.UTC_PLUS_11\n};\nconst SriLankaStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"SLST\" /* SriLankaStandardTime */,\n  name: \"Sri Lanka Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_5_30\n};\nconst SurinameTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"SRT\" /* SurinameTime */,\n  name: \"Suriname Time\",\n  offset: TimezoneOffset.UTC_MINUS_3\n};\nconst TahitiTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"TAHT\" /* TahitiTime */,\n  name: \"Tahiti Time\",\n  offset: TimezoneOffset.UTC_MINUS_10\n};\nconst TajikistanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"TJT\" /* TajikistanTime */,\n  name: \"Tajikistan Time\",\n  offset: TimezoneOffset.UTC_PLUS_5\n};\nconst ThailandStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"THA\" /* ThailandStandardTime */,\n  name: \"Thailand Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_7\n};\nconst TimorLesteTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"TLT\" /* TimorLesteTime */,\n  name: \"Timor-Leste Time\",\n  offset: TimezoneOffset.UTC_PLUS_9\n};\nconst TokelauTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"TKT\" /* TokelauTime */,\n  name: \"Tokelau Time\",\n  offset: TimezoneOffset.UTC_PLUS_13\n};\nconst TongaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"TOT\" /* TongaTime */,\n  name: \"Tonga Time\",\n  offset: TimezoneOffset.UTC_PLUS_13\n};\nconst TurkeyTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"TRT\" /* TurkeyTime */,\n  name: \"Turkey Time\",\n  offset: TimezoneOffset.UTC_PLUS_3\n};\nconst TurkmenistanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"TMT\" /* TurkmenistanTime */,\n  name: \"Turkmenistan Time\",\n  offset: TimezoneOffset.UTC_PLUS_5\n};\nconst TuvaluTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"TVT\" /* TuvaluTime */,\n  name: \"Tuvalu Time\",\n  offset: TimezoneOffset.UTC_PLUS_12\n};\nconst UlaanbaatarStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"ULAT\" /* UlaanbaatarStandardTime */,\n  name: \"Ulaanbaatar Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_8\n};\nconst UlaanbaatarSummerTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"ULAST\" /* UlaanbaatarSummerTime */,\n  name: \"Ulaanbaatar Summer Time\",\n  offset: TimezoneOffset.UTC_PLUS_9\n};\nconst UruguayStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"UYT\" /* UruguayStandardTime */,\n  name: \"Uruguay Standard Time\",\n  offset: TimezoneOffset.UTC_MINUS_3\n};\nconst UruguaySummerTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"UYST\" /* UruguaySummerTime */,\n  name: \"Uruguay Summer Time\",\n  offset: TimezoneOffset.UTC_MINUS_2\n};\nconst UzbekistanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"UZT\" /* UzbekistanTime */,\n  name: \"Uzbekistan Time\",\n  offset: TimezoneOffset.UTC_PLUS_5\n};\nconst VanuatuTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"VUT\" /* VanuatuTime */,\n  name: \"Vanuatu Time\",\n  offset: TimezoneOffset.UTC_PLUS_11\n};\nconst VenezuelaStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"VET\" /* VenezuelaStandardTime */,\n  name: \"Venezuela Standard Time\",\n  offset: TimezoneOffset.UTC_MINUS_4\n};\nconst VladivostokTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"VLAT\" /* VladivostokTime */,\n  name: \"Vladivostok Time\",\n  offset: TimezoneOffset.UTC_PLUS_10\n};\nconst VolgogradTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"VOLT\" /* VolgogradTime */,\n  name: \"Volgograd Time\",\n  offset: TimezoneOffset.UTC_PLUS_4\n};\nconst VostokStationTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"VOST\" /* VostokStationTime */,\n  name: \"Vostok Station Time\",\n  offset: TimezoneOffset.UTC_PLUS_6\n};\nconst WakeIslandTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"WAKT\" /* WakeIslandTime */,\n  name: \"Wake Island Time\",\n  offset: TimezoneOffset.UTC_PLUS_12\n};\nconst WestAfricaSummerTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"WAST\" /* WestAfricaSummerTime */,\n  name: \"West Africa Summer Time\",\n  offset: TimezoneOffset.UTC_PLUS_2\n};\nconst WestAfricaTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"WAT\" /* WestAfricaTime */,\n  name: \"West Africa Time\",\n  offset: TimezoneOffset.UTC_PLUS_1\n};\nconst WestGreenlandSummerTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"WGST\" /* WestGreenlandSummerTime */,\n  name: \"West Greenland Summer Time\",\n  offset: TimezoneOffset.UTC_MINUS_2\n};\nconst WestGreenlandTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"WGT\" /* WestGreenlandTime */,\n  name: \"West Greenland Time\",\n  offset: TimezoneOffset.UTC_MINUS_3\n};\nconst WestKazakhstanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"WKT\" /* WestKazakhstanTime */,\n  name: \"West Kazakhstan Time\",\n  offset: TimezoneOffset.UTC_PLUS_5\n};\nconst WesternEuropeanSummerTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"WEDT\" /* WesternEuropeanSummerTime */,\n  name: \"Western European Summer Time\",\n  offset: TimezoneOffset.UTC_PLUS_1\n};\nconst WesternEuropeanTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"WET\" /* WesternEuropeanTime */,\n  name: \"Western European Time\",\n  offset: TimezoneOffset.UTC_0\n};\nconst WesternIndonesianTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"WIT\" /* WesternIndonesianTime */,\n  name: \"Western Indonesian Time\",\n  offset: TimezoneOffset.UTC_PLUS_7\n};\nconst WesternStandardTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"WST\" /* WesternStandardTime */,\n  name: \"Western Standard Time\",\n  offset: TimezoneOffset.UTC_PLUS_8\n};\nconst YakutskTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"YAKT\" /* YakutskTime */,\n  name: \"Yakutsk Time\",\n  offset: TimezoneOffset.UTC_PLUS_9\n};\nconst YekaterinburgTime = {\n  dst: {\n    is: false,\n    uses: true\n  },\n  id: \"YEKT\" /* YekaterinburgTime */,\n  name: \"Yekaterinburg Time\",\n  offset: TimezoneOffset.UTC_PLUS_5\n};\n\nvar Region = /* @__PURE__ */ ((Region2) => {\n  Region2[\"Africa\"] = \"Africa\";\n  Region2[\"Americas\"] = \"Americas\";\n  Region2[\"Asia\"] = \"Asia\";\n  Region2[\"Europe\"] = \"Europe\";\n  Region2[\"Oceania\"] = \"Oceania\";\n  Region2[\"Polar\"] = \"Polar\";\n  return Region2;\n})(Region || {});\nvar SubRegion = /* @__PURE__ */ ((SubRegion2) => {\n  SubRegion2[\"CentralAmerica\"] = \"Central America\";\n  SubRegion2[\"EasternAsia\"] = \"Eastern Asia\";\n  SubRegion2[\"EasternEurope\"] = \"Eastern Europe\";\n  SubRegion2[\"EasternAfrica\"] = \"Eastern Africa\";\n  SubRegion2[\"MiddleAfrica\"] = \"Middle Africa\";\n  SubRegion2[\"MiddleEast\"] = \"Middle East\";\n  SubRegion2[\"NorthernAfrica\"] = \"Northern Africa\";\n  SubRegion2[\"NorthernAmerica\"] = \"Northern America\";\n  SubRegion2[\"NorthernEurope\"] = \"Northern Europe\";\n  SubRegion2[\"Polynesia\"] = \"Polynesia\";\n  SubRegion2[\"SouthAmerica\"] = \"South America\";\n  SubRegion2[\"SouthernAfrica\"] = \"Southern Africa\";\n  SubRegion2[\"SouthernAsia\"] = \"Southern Asia\";\n  SubRegion2[\"SouthernEurope\"] = \"Southern Europe\";\n  SubRegion2[\"WesternAfrica\"] = \"Western Africa\";\n  SubRegion2[\"WesternAsia\"] = \"Western Asia\";\n  SubRegion2[\"WesternEurope\"] = \"Western Europe\";\n  SubRegion2[\"WesternAustralia\"] = \"Western Australia\";\n  return SubRegion2;\n})(SubRegion || {});\n\nconst Countries = {\n  Afghanistan: {\n    i18n: {\n      calling_codes: [93],\n      currencies: [CurrencyCode.AfghanistanAfghani],\n      languages: [\n        LocaleCode.Pashto,\n        LocaleCode.Dari,\n        LocaleCode.Turkmen,\n        LocaleCode.Uzbek\n      ],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_4_30],\n        regions: [TimezoneRegions.AsiaKabul],\n        timezones: [Timezones.AfghanistanTime]\n      }\n    },\n    id: CountryCode.Afghanistan,\n    info: {\n      flag: {\n        emoji: \"\\u{1F1E6}\\u{1F1EB}\",\n        emoji_unicode: \"U+1F1E6 U+1F1EB\",\n        svg: \"https://www.countryflags.io/af/flat/64.svg\"\n      },\n      tld: [\".af\"]\n    },\n    iso: {\n      alpha2: CountryCode.Afghanistan,\n      alpha3: \"AFG\",\n      numeric: \"004\"\n    },\n    name: {\n      alt_spellings: [\"AF\", \"Af\\u0121\\u0101nist\\u0101n\"],\n      demonym: \"Afghan\",\n      native: {\n        endonym: \"\\u0627\\u0641\\u063A\\u0627\\u0646\\u0633\\u062A\\u0627\\u0646\"\n      },\n      official: \"Islamic Republic of Afghanistan\",\n      short: \"Afghanistan\",\n      translations: {\n        [LocaleCode.Afrikaans]: \"Afghanistan\",\n        [LocaleCode.Albanian]: \"Shqip\\xEBri\",\n        [LocaleCode.Amharic]: \"\\u12A0\\u134D\\u130B\\u1295\",\n        [LocaleCode.Arabic]: \"\\u0623\\u0641\\u063A\\u0627\\u0646\\u0633\\u062A\\u0627\\u0646\",\n        [LocaleCode.Armenian]: \"\\u0540\\u0561\\u0575\\u0561\\u057D\\u057F\\u0561\\u0576\",\n        [LocaleCode.Azerbaijani]: \"Az\\u0259rbaycan\",\n        [LocaleCode.Bashkir]: \"\\u0410\\u0444\\u0433\\u0430\\u043D\\u0438\\u0441\\u0442\\u0430\\u043D\",\n        [LocaleCode.Basque]: \"Afganist\\xE1n\",\n        [LocaleCode.Belarusian]: \"\\u0410\\u0444\\u0433\\u0430\\u043D\\u0438\\u0441\\u0442\\u0430\\u043D\",\n        [LocaleCode.Bengali]: \"\\u0986\\u09AB\\u0997\\u09BE\\u09A8\\u09BF\\u09B8\\u09CD\\u09A4\\u09BE\\u09A8\",\n        [LocaleCode.Berber]: \"\\u0623\\u0641\\u063A\\u0627\\u0646\\u0633\\u062A\\u0627\\u0646\",\n        [LocaleCode.Bhutani]: \"\\u0F60\\u0F56\\u0FB2\\u0F74\\u0F42\\u0F0B\\u0F61\\u0F74\\u0F63\\u0F0B\\u0F66\\u0FA4\\u0FB2\\u0F7C\\u0F51\\u0F0B\\u0F40\\u0FB1\\u0F72\\u0F0B\\u0F51\\u0F7C\\u0F53\\u0F0B\\u0F63\\u0F7A\\u0F0B\\u0F66\\u0F90\\u0F51\\u0F0B\\u0F46\\u0F0D\",\n        [LocaleCode.Bosnian]: \"\\u0410\\u0444\\u0433\\u0430\\u043D\\u0438\\u0441\\u0442\\u0430\\u043D\",\n        [LocaleCode.Breton]: \"Afganistan\",\n        [LocaleCode.Bulgarian]: \"\\u0410\\u0444\\u0433\\u0430\\u043D\\u0438\\u0441\\u0442\\u0430\\u043D\",\n        [LocaleCode.Burmese]: \"\\u1021\\u102C\\u1019\\u1001\\u103B\\u1004\\u103A\\u1010\\u1031\\u102C\\u103A\",\n        [LocaleCode.Catalan]: \"Afganistan\",\n        [LocaleCode.Chinese]: \"\\u963F\\u5BCC\\u6C57\",\n        [LocaleCode.Croatian]: \"Afganistan\",\n        [LocaleCode.Czech]: \"Afganistan\",\n        [LocaleCode.Danish]: \"Afghanistan\",\n        [LocaleCode.Dutch]: \"Afghanistan\",\n        [LocaleCode.English]: \"Afghanistan\",\n        [LocaleCode.Esperanto]: \"Afganistan\",\n        [LocaleCode.Estonian]: \"Afganistan\",\n        [LocaleCode.Finnish]: \"Afghanistan\",\n        [LocaleCode.French]: \"Afghanistan\",\n        [LocaleCode.Frisian]: \"Afghanistan\",\n        [LocaleCode.Galician]: \"Afganist\\xE1n\",\n        [LocaleCode.Georgian]: \"\\u10D0\\u10D5\\u10E6\\u10D0\\u10DC\\u10D4\\u10D7\\u10D8\",\n        [LocaleCode.German]: \"Afghanistan\",\n        [LocaleCode.Greenlandic]: \"Afghanistan\",\n        [LocaleCode.Greek]: \"\\u0391\\u03C6\\u03B3\\u03B1\\u03BD\\u03B9\\u03C3\\u03C4\\u03AC\\u03BD\",\n        [LocaleCode.Gujarati]: \"\\u0A85\\u0AAB\\u0A97\\u0ABE\\u0AA8\\u0ABF\\u0AB8\\u0ACD\\u0AA4\\u0ABE\\u0AA8\",\n        [LocaleCode.Haitian]: \"Afghanistan\",\n        [LocaleCode.Hausa]: \"Afghanistan\",\n        [LocaleCode.Hebrew]: \"\\u05D0\\u05E4\\u05D2\\u05E0\\u05D9\\u05E1\\u05D8\\u05DF\",\n        [LocaleCode.Hindi]: \"\\u0905\\u092B\\u0917\\u093E\\u0928\\u093F\\u0938\\u094D\\u0924\\u093E\\u0928\",\n        [LocaleCode.Hungarian]: \"Afganistan\",\n        [LocaleCode.Icelandic]: \"Afghanistan\",\n        [LocaleCode.Igbo]: \"Afghanistan\",\n        [LocaleCode.Indonesian]: \"Afghanistan\",\n        [LocaleCode.Irish]: \"Afghanistan\",\n        [LocaleCode.Italian]: \"Afghanistan\",\n        [LocaleCode.Japanese]: \"\\u30A2\\u30D5\\u30AC\\u30CB\\u30B9\\u30BF\\u30F3\",\n        [LocaleCode.Javanese]: \"Afghanistan\",\n        [LocaleCode.Kannada]: \"\\u0C85\\u0CAB\\u0C97\\u0CBE\\u0CA8\\u0CBF\\u0CB8\\u0CCD\\u0CA4\\u0CBE\\u0CA8\",\n        [LocaleCode.Kazakh]: \"\\u0410\\u0444\\u0433\\u0430\\u043D\\u0438\\u0441\\u0442\\u0430\\u043D\",\n        [LocaleCode.Khmer]: \"\\u17A2\\u17B6\\u17A0\\u17D2\\u179C\\u17D2\\u179A\\u17B7\\u1780\",\n        [LocaleCode.Korean]: \"\\uC544\\uD504\\uAC00\\uB2C8\\uC2A4\\uD0C4\",\n        [LocaleCode.Kurdish]: \"Afghanistan\",\n        [LocaleCode.Kyrgyz]: \"\\u0410\\u0444\\u0433\\u0430\\u043D\\u0438\\u0441\\u0442\\u0430\\u043D\",\n        [LocaleCode.Lao]: \"\\u0EAD\\u0EB2\\u0E9F\\u0EB2\\u0EA5\\u0EBD\\u0E99\",\n        [LocaleCode.Latin]: \"Afghanistan\",\n        [LocaleCode.Latvian]: \"Afghanistan\",\n        [LocaleCode.Lithuanian]: \"Afganistanas\",\n        [LocaleCode.Luxembourgish]: \"Afghanistan\",\n        [LocaleCode.Macedonian]: \"\\u0410\\u0444\\u0433\\u0430\\u043D\\u0438\\u0441\\u0442\\u0430\\u043D\",\n        [LocaleCode.Malagasy]: \"Afghanistan\",\n        [LocaleCode.Malay]: \"Afghanistan\",\n        [LocaleCode.Malayalam]: \"\\u0D05\\u0D2B\\u0D17\\u0D3E\\u0D28\\u0D3F\\u0D38\\u0D4D\\u0D24\\u0D3E\\u0D28\",\n        [LocaleCode.Maltese]: \"Afghanistan\",\n        [LocaleCode.Maori]: \"Afghanistan\",\n        [LocaleCode.Marathi]: \"\\u0905\\u092B\\u0917\\u093E\\u0928\\u093F\\u0938\\u094D\\u0924\\u093E\\u0928\",\n        [LocaleCode.Mongolian]: \"\\u0410\\u0444\\u0433\\u0430\\u043D\\u0438\\u0441\\u0442\\u0430\\u043D\",\n        [LocaleCode.Nepali]: \"\\u0905\\u092B\\u0917\\u093E\\u0928\\u093F\\u0938\\u094D\\u0924\\u093E\\u0928\",\n        [LocaleCode.Norwegian]: \"Afghanistan\",\n        [LocaleCode.Pashto]: \"\\u0627\\u0641\\u063A\\u0627\\u0646\\u0633\\u062A\\u0627\\u0646\",\n        [LocaleCode.Persian]: \"\\u0627\\u0641\\u063A\\u0627\\u0646\\u0633\\u062A\\u0627\\u0646\",\n        [LocaleCode.Polish]: \"Afganistan\",\n        [LocaleCode.Portuguese]: \"Afghanistan\",\n        [LocaleCode.Punjabi]: \"Afghanistan\",\n        [LocaleCode.Romanian]: \"Afghanistan\",\n        [LocaleCode.Polish]: \"Afganistan\",\n        [LocaleCode.Russian]: \"\\u0410\\u0444\\u0433\\u0430\\u043D\\u0438\\u0441\\u0442\\u0430\\u043D\",\n        [LocaleCode.Samoan]: \"Afghanistan\",\n        [LocaleCode.Sanskrit]: \"\\u0905\\u092B\\u0917\\u093E\\u0928\\u093F\\u0938\\u094D\\u0924\\u093E\\u0928\",\n        [LocaleCode.Scots]: \"Afghanistan\",\n        [LocaleCode.Serbian]: \"\\u0410\\u0444\\u0433\\u0430\\u043D\\u0438\\u0441\\u0442\\u0430\\u043D\",\n        [LocaleCode.Sesotho]: \"Afghanistan\",\n        [LocaleCode.Shona]: \"Afghanistan\",\n        [LocaleCode.Sindhi]: \"Afghanistan\",\n        [LocaleCode.Sinhala]: \"\\u0D86\\u0D9C\\u0DCA\\u200D\\u0DBB\\u0DDC\\u0D9A\\u0DCA\\u0D9A\\u0DD2\\u0DBA\\u0DCF\\u0DC0\",\n        [LocaleCode.Slovak]: \"Afganistan\",\n        [LocaleCode.Slovenian]: \"Afganistan\",\n        [LocaleCode.Somali]: \"Afghanistan\",\n        [LocaleCode.Spanish]: \"Afganist\\xE1n\",\n        [LocaleCode.Sudanese]: \"Afghanistan\",\n        [LocaleCode.Swahili]: \"Afghanistan\",\n        [LocaleCode.Swedish]: \"Afghanistan\",\n        [LocaleCode.Tagalog]: \"Afghanistan\",\n        [LocaleCode.Tajik]: \"\\u0410\\u0444\\u0433\\u0430\\u043D\\u0438\\u0441\\u0442\\u0430\\u043D\",\n        [LocaleCode.Tatar]: \"\\u0410\\u0444\\u0433\\u0430\\u043D\\u0438\\u0441\\u0442\\u0430\\u043D\",\n        [LocaleCode.Tamil]: \"\\u0B86\\u0BAA\\u0BCD\\u0BAA\\u0B95\\u0BBE\\u0BA9\\u0BBF\\u0BB8\\u0BCD\\u0BA4\\u0BBE\\u0BA9\\u0BCD\",\n        [LocaleCode.Telugu]: \"\\u0C06\\u0C2B\\u0C4D\\u0C18\\u0C28\\u0C3F\\u0C38\\u0C4D\\u0C24\\u0C3E\\u0C28\\u0C4D\",\n        [LocaleCode.Thai]: \"\\u0E2D\\u0E31\\u0E1F\\u0E01\\u0E32\\u0E19\\u0E34\\u0E2A\\u0E16\\u0E32\\u0E19\",\n        [LocaleCode.Tibetan]: \"\\u0F68\\u0F55\\u0F0B\\u0F42\\u0F7A\\u0F0B\\u0F53\\u0F72\\u0F66\\u0F72\\u0F0B\\u0F4F\\u0F7A\\u0F53\\u0F66\\u0F72\\u0F0D\",\n        [LocaleCode.Turkish]: \"Afganistan\",\n        [LocaleCode.Ukrainian]: \"\\u0410\\u0444\\u0433\\u0430\\u043D\\u0438\\u0441\\u0442\\u0430\\u043D\",\n        [LocaleCode.Urdu]: \"\\u0627\\u0641\\u063A\\u0627\\u0646\\u0633\\u062A\\u0627\\u0646\",\n        [LocaleCode.Uzbek]: \"\\u0410\\u0444\\u0433\\u0430\\u043D\\u0438\\u0441\\u0442\\u0430\\u043D\",\n        [LocaleCode.Vietnamese]: \"Afghanistan\",\n        [LocaleCode.Welsh]: \"Afghanistan\",\n        [LocaleCode.Xhosa]: \"Afghanistan\",\n        [LocaleCode.Yiddish]: \"Afghanistan\",\n        [LocaleCode.Yoruba]: \"Afghanistan\",\n        [LocaleCode.Zulu]: \"Afghanistan\"\n      }\n    },\n    statistics: {\n      demographics: {\n        age: {\n          distribution: [\n            { age: \"0 to 14 years\", percentage: 15.3 },\n            { age: \"15 to 64 years\", percentage: 66.7 },\n            { age: \"65 years and over\", percentage: 14.6 }\n          ],\n          median_age: 35.5\n        },\n        population: {\n          largest_city: \"Kabul\",\n          total: 341e5\n        }\n      },\n      geography: {\n        area: 652230,\n        region: Region.Asia,\n        sub_region: SubRegion.SouthernAsia\n      },\n      government: {\n        capital: \"Kabul\",\n        type: \"Islamic Emirate\"\n      }\n    }\n  },\n  Albania: {\n    i18n: {\n      calling_codes: [355],\n      currencies: [CurrencyCode.AlbaniaLek],\n      languages: [LocaleCode.Albanian, LocaleCode.Greek, LocaleCode.Turkish],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_1],\n        regions: [TimezoneRegions.EuropeBrussels],\n        timezones: [Timezones.CentralEuropeanTime]\n      }\n    },\n    id: CountryCode.Albania,\n    info: {\n      flag: {\n        emoji: \"\\u{1F1E6}\\u{1F1F1}\",\n        emoji_unicode: \"U+1F1E6 U+1F1F1\",\n        svg: \"https://www.countryflags.io/al/flat/64.svg\"\n      },\n      tld: [\".al\"]\n    },\n    iso: {\n      alpha2: CountryCode.Albania,\n      alpha3: \"ALB\",\n      numeric: \"008\"\n    },\n    name: {\n      alt_spellings: [\"AL\", \"Shqip\\xEBri\", \"Shqip\\xEBria\", \"Shqipnia\"],\n      demonym: \"Albanian\",\n      native: {\n        endonym: \"Shqip\\xEBri\"\n      },\n      official: \"Republic of Albania\",\n      short: \"Albania\",\n      translations: {\n        [LocaleCode.Afrikaans]: \"Albania\",\n        [LocaleCode.Albanian]: \"Albania\",\n        [LocaleCode.Amharic]: \"\\u12A0\\u120D\\u1263\\u1295\\u12EB\",\n        [LocaleCode.Arabic]: \"\\u0623\\u0644\\u0628\\u0627\\u0646\\u064A\\u0627\",\n        [LocaleCode.Armenian]: \"\\u0540\\u0561\\u0575\\u0561\\u057D\\u057F\\u0561\\u0576\",\n        [LocaleCode.Azerbaijani]: \"Az\\u0259rbaycan\",\n        [LocaleCode.Bashkir]: \"\\u0410\\u043B\\u0431\\u0430\\u043D\\u0438\\u044F\",\n        [LocaleCode.Basque]: \"Albania\",\n        [LocaleCode.Belarusian]: \"\\u0410\\u043B\\u0431\\u0430\\u043D\\u0438\\u044F\",\n        [LocaleCode.Bengali]: \"\\u0986\\u09B2\\u09AC\\u09BE\\u09A8\\u09BF\\u09AF\\u09BC\\u09BE\",\n        [LocaleCode.Berber]: \"\\u0623\\u0644\\u0628\\u0627\\u0646\\u064A\\u0627\",\n        [LocaleCode.Bhutani]: \"\\u0F60\\u0F56\\u0FB2\\u0F74\\u0F42\\u0F0B\\u0F61\\u0F74\\u0F63\\u0F0B\",\n        [LocaleCode.Bosnian]: \"Albanija\",\n        [LocaleCode.Breton]: \"Albania\",\n        [LocaleCode.Bulgarian]: \"\\u0410\\u043B\\u0431\\u0430\\u043D\\u0438\\u044F\",\n        [LocaleCode.Burmese]: \"\\u1021\\u102C\\u1019\\u1001\\u103B\\u1004\\u103A\\u1010\\u1031\\u102C\\u103A\",\n        [LocaleCode.Catalan]: \"Alb\\xE0nia\",\n        [LocaleCode.Chinese]: \"\\u963F\\u5C14\\u5DF4\\u5C3C\\u4E9A\",\n        [LocaleCode.Croatian]: \"Albanija\",\n        [LocaleCode.Czech]: \"Alb\\xE1nie\",\n        [LocaleCode.Danish]: \"Albanien\",\n        [LocaleCode.Dutch]: \"Albani\\xEB\",\n        [LocaleCode.English]: \"Albania\",\n        [LocaleCode.Esperanto]: \"Albanio\",\n        [LocaleCode.Estonian]: \"Albaania\",\n        [LocaleCode.Finnish]: \"Albania\",\n        [LocaleCode.French]: \"Albanie\",\n        [LocaleCode.Frisian]: \"Albani\\xEB\",\n        [LocaleCode.Galician]: \"Alb\\xE2nia\",\n        [LocaleCode.Georgian]: \"\\u10D0\\u10DA\\u10D1\\u10D0\\u10DC\\u10D8\\u10D0\",\n        [LocaleCode.German]: \"Albanien\",\n        [LocaleCode.Greenlandic]: \"Albania\",\n        [LocaleCode.Greek]: \"\\u0391\\u03BB\\u03B2\\u03B1\\u03BD\\u03AF\\u03B1\",\n        [LocaleCode.Gujarati]: \"\\u0A85\\u0AB2\\u0AAC\\u0AA8\\u0ABF\\u0AAF\\u0ABE\",\n        [LocaleCode.Haitian]: \"Albanais\",\n        [LocaleCode.Hausa]: \"Albania\",\n        [LocaleCode.Hebrew]: \"\\u05D0\\u05DC\\u05D1\\u05E0\\u05D9\\u05D4\",\n        [LocaleCode.Hindi]: \"\\u0905\\u0932\\u094D\\u092C\\u093E\\u0928\\u093F\\u092F\\u093E\",\n        [LocaleCode.Hungarian]: \"Alb\\xE1nia\",\n        [LocaleCode.Icelandic]: \"Alb\\xFAnir\",\n        [LocaleCode.Igbo]: \"Albania\",\n        [LocaleCode.Indonesian]: \"Albania\",\n        [LocaleCode.Irish]: \"Alb\\xE1in\",\n        [LocaleCode.Italian]: \"Albania\",\n        [LocaleCode.Japanese]: \"\\u30A2\\u30EB\\u30D0\\u30CB\\u30A2\",\n        [LocaleCode.Javanese]: \"Albania\",\n        [LocaleCode.Kannada]: \"\\u0C85\\u0CB2\\u0CCD\\u0CAC\\u0CBE\\u0CA8\\u0CBF\\u0CAF\\u0CBE\",\n        [LocaleCode.Kazakh]: \"\\u0410\\u043B\\u0431\\u0430\\u043D\\u0438\\u044F\",\n        [LocaleCode.Khmer]: \"\\u17A2\\u17B6\\u17A0\\u17D2\\u179C\\u17D2\\u179A\\u17C1\\u179F\\u17CA\\u17B8\",\n        [LocaleCode.Korean]: \"\\uC54C\\uBC14\\uB2C8\\uC544\",\n        [LocaleCode.Kurdish]: \"\\u0622\\u0644\\u0628\\u0627\\u0646\\u06CC\\u0627\",\n        [LocaleCode.Kyrgyz]: \"\\u0410\\u043B\\u0431\\u0430\\u043D\\u0438\\u044F\",\n        [LocaleCode.Lao]: \"\\u0EAD\\u0EB2\\u0EA5\\u0EB2\\u0E99\\u0EB5\",\n        [LocaleCode.Latin]: \"Albania\",\n        [LocaleCode.Latvian]: \"Alb\\u0101nija\",\n        [LocaleCode.Lithuanian]: \"Albanija\",\n        [LocaleCode.Luxembourgish]: \"Albani\\xEB\",\n        [LocaleCode.Macedonian]: \"\\u0410\\u043B\\u0431\\u0430\\u043D\\u0438\\u0458\\u0430\",\n        [LocaleCode.Malagasy]: \"Albania\",\n        [LocaleCode.Malay]: \"Albania\",\n        [LocaleCode.Malayalam]: \"\\u0D05\\u0D32\\u0D4D\\u0D2C\\u0D3E\\u0D28\\u0D3F\\u0D2F\\u0D3E\",\n        [LocaleCode.Maltese]: \"Albania\",\n        [LocaleCode.Maori]: \"Albania\",\n        [LocaleCode.Marathi]: \"\\u0905\\u0932\\u094D\\u092C\\u093E\\u0928\\u093F\\u092F\\u093E\",\n        [LocaleCode.Mongolian]: \"\\u0410\\u043B\\u0431\\u0430\\u043D\\u0438\\u044F\",\n        [LocaleCode.Nepali]: \"\\u0905\\u0932\\u094D\\u092C\\u093E\\u0928\\u093F\\u092F\\u093E\",\n        [LocaleCode.Norwegian]: \"Albania\",\n        [LocaleCode.Pashto]: \"\\u0627\\u0627\\u0644\\u0628\\u0627\\u0646\\u06CC\",\n        [LocaleCode.Persian]: \"\\u0622\\u0644\\u0628\\u0627\\u0646\\u06CC\",\n        [LocaleCode.Polish]: \"Albania\",\n        [LocaleCode.Portuguese]: \"Alb\\xE2nia\",\n        [LocaleCode.Punjabi]: \"\\u0A05\\u0A32\\u0A2C\\u0A28\\u0A40\\u0A06\",\n        [LocaleCode.Romanian]: \"Alb\\u0103n\",\n        [LocaleCode.Russian]: \"\\u0410\\u043B\\u0431\\u0430\\u043D\\u0438\\u044F\",\n        [LocaleCode.Samoan]: \"Albania\",\n        [LocaleCode.Sanskrit]: \"Albani\",\n        [LocaleCode.Scots]: \"Alb\\xE0inia\",\n        [LocaleCode.Serbian]: \"\\u0410\\u043B\\u0431\\u0430\\u043D\\u0438\\u0458\\u0430\",\n        [LocaleCode.Sesotho]: \"Albania\",\n        [LocaleCode.Shona]: \"Albania\",\n        [LocaleCode.Sindhi]: \"Albania\",\n        [LocaleCode.Sinhala]: \"\\u0D87\\u0DBD\\u0DCA\\u0DB6\\u0DCF\\u0DB1\\u0DD2\\u0DBA\",\n        [LocaleCode.Slovak]: \"Alb\\xE1nsko\",\n        [LocaleCode.Slovenian]: \"Albanija\",\n        [LocaleCode.Somali]: \"Albania\",\n        [LocaleCode.Spanish]: \"Albania\",\n        [LocaleCode.Sudanese]: \"Albania\",\n        [LocaleCode.Swahili]: \"Albania\",\n        [LocaleCode.Swedish]: \"Albanien\",\n        [LocaleCode.Tagalog]: \"Albania\",\n        [LocaleCode.Tajik]: \"\\u0410\\u043B\\u0431\\u0430\\u043D\\u0438\\u044F\",\n        [LocaleCode.Tamil]: \"\\u0B85\\u0BB2\\u0BCD\\u0BAA\\u0BBE\\u0BA9\\u0BBF\\u0BAF\\u0BBE\",\n        [LocaleCode.Tatar]: \"\\u0410\\u043B\\u0431\\u0430\\u043D\\u0438\\u044F\",\n        [LocaleCode.Telugu]: \"\\u0C05\\u0C32\\u0C4D\\u0C2C\\u0C3E\\u0C28\\u0C3F\\u0C2F\\u0C3E\",\n        [LocaleCode.Thai]: \"\\u0E2D\\u0E31\\u0E25\\u0E41\\u0E1A\\u0E19\\u0E34\\u0E19\\u0E35\",\n        [LocaleCode.Tibetan]: \"\\u0F68\\u0F63\\u0F0B\\u0F56\\u0F72\\u0F0B\\u0F53\\u0F72\\u0F0B\\u0F61\\u0F72\",\n        [LocaleCode.Turkish]: \"Albaniye\",\n        [LocaleCode.Ukrainian]: \"\\u0410\\u043B\\u0431\\u0430\\u043D\\u0456\\u044F\",\n        [LocaleCode.Urdu]: \"\\u0622\\u0644\\u0628\\u0627\\u0646\\u06CC\",\n        [LocaleCode.Uzbek]: \"\\u0410\\u043B\\u0431\\u0430\\u043D\\u0438\\u044F\",\n        [LocaleCode.Vietnamese]: \"Albanie\",\n        [LocaleCode.Welsh]: \"Albania\",\n        [LocaleCode.Xhosa]: \"Albania\",\n        [LocaleCode.Yiddish]: \"\\u05D0\\u05DC\\u05D1\\u05E0\\u05D9\\u05E9\",\n        [LocaleCode.Yoruba]: \"Albania\",\n        [LocaleCode.Zulu]: \"Albania\"\n      }\n    },\n    statistics: {\n      demographics: {\n        age: {\n          distribution: [\n            { age: \"0 to 14 years\", percentage: 15.3 },\n            { age: \"15 to 64 years\", percentage: 66.7 },\n            { age: \"65 years and over\", percentage: 14.6 }\n          ],\n          median_age: 35.5\n        },\n        population: {\n          largest_city: \"Tirana\",\n          total: 2853e3\n        }\n      },\n      geography: {\n        area: 28748,\n        region: Region.Europe,\n        sub_region: SubRegion.SouthernEurope\n      },\n      government: {\n        capital: \"Tirana\",\n        type: \"Republic\"\n      }\n    }\n  },\n  Algeria: {\n    i18n: {\n      calling_codes: [213],\n      currencies: [CurrencyCode.AlgeriaDinar],\n      languages: [\n        LocaleCode.Arabic,\n        LocaleCode.French,\n        LocaleCode.Berber,\n        LocaleCode.Tamazight\n      ],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_1, TimezoneOffset.UTC_PLUS_2],\n        regions: [TimezoneRegions.AfricaAlgiers],\n        timezones: [Timezones.CentralEuropeanTime]\n      }\n    },\n    id: CountryCode.Algeria,\n    info: {\n      flag: {\n        emoji: \"\\u{1F1E9}\\u{1F1FF}\",\n        emoji_unicode: \"U+1F1E9 U+1F1FF\",\n        svg: \"https://www.countryflags.io/dz/flat/64.svg\"\n      },\n      tld: [\".dz\", \".\\u062C\\u0632\\u0627\\u0626\\u0631\"]\n    },\n    iso: {\n      alpha2: CountryCode.Algeria,\n      alpha3: \"DZA\",\n      numeric: \"012\"\n    },\n    name: {\n      alt_spellings: [\"DZ\", \"Dzayer\", \"Alg\\xE9rie\"],\n      demonym: \"Algerian\",\n      native: {\n        endonym: \"\\u0627\\u0644\\u062C\\u0632\\u0627\\u0626\\u0631\"\n      },\n      official: \"People's Democratic Republic of Algeria\",\n      short: \"Algeria\",\n      translations: {\n        [LocaleCode.Afrikaans]: \"Algerije\",\n        [LocaleCode.Albanian]: \"Algeria\",\n        [LocaleCode.Amharic]: \"\\u12A0\\u120D\\u1300\\u122D\\u1235\",\n        [LocaleCode.Arabic]: \"\\u0627\\u0644\\u062C\\u0632\\u0627\\u0626\\u0631\",\n        [LocaleCode.Armenian]: \"\\u0531\\u056C\\u0563\\u0578\\u0580\\u056B\\u0561\",\n        [LocaleCode.Azerbaijani]: \"Az\\u0259rbaycan\",\n        [LocaleCode.Bashkir]: \"\\u0410\\u043B\\u0436\\u0438\\u0440\",\n        [LocaleCode.Basque]: \"Algeria\",\n        [LocaleCode.Belarusian]: \"\\u0410\\u043B\\u0436\\u0438\\u0440\",\n        [LocaleCode.Bengali]: \"\\u0986\\u09B2\\u099C\\u09C7\\u09B0\",\n        [LocaleCode.Berber]: \"\\u062C\\u0632\\u0627\\u0626\\u0631\",\n        [LocaleCode.Bhutani]: \"\\u0F62\\u0FAB\\u0F7C\\u0F44\\u0F0B\\u0F41\",\n        [LocaleCode.Bosnian]: \"Al\\u017Eir\",\n        [LocaleCode.Breton]: \"Algeria\",\n        [LocaleCode.Bulgarian]: \"\\u0410\\u043B\\u0436\\u0438\\u0440\",\n        [LocaleCode.Burmese]: \"\\u1021\\u102C\\u101B\\u1015\\u103A\",\n        [LocaleCode.Catalan]: \"Alg\\xE8ria\",\n        [LocaleCode.Chinese]: \"\\u963F\\u5C14\\u53CA\\u5229\\u4E9A\",\n        [LocaleCode.Croatian]: \"Al\\u017Eir\",\n        [LocaleCode.Czech]: \"Al\\u017E\\xEDrsko\",\n        [LocaleCode.Danish]: \"Algeriet\",\n        [LocaleCode.Dutch]: \"Algerije\",\n        [LocaleCode.English]: \"Algeria\",\n        [LocaleCode.Esperanto]: \"Al\\u011Derio\",\n        [LocaleCode.Estonian]: \"Al\\u017Eira\",\n        [LocaleCode.Finnish]: \"Algeria\",\n        [LocaleCode.French]: \"Alg\\xE9rie\",\n        [LocaleCode.Frisian]: \"Algeri\\xEB\",\n        [LocaleCode.Galician]: \"Alxeria\",\n        [LocaleCode.Georgian]: \"\\u10D0\\u10DA\\u10D2\\u10D8\\u10E3\\u10E0\\u10D8\",\n        [LocaleCode.German]: \"Algerien\",\n        [LocaleCode.Greenlandic]: \"Algeria\",\n        [LocaleCode.Greek]: \"\\u0391\\u03BB\\u03B3\\u03B5\\u03C1\\u03AF\\u03B1\",\n        [LocaleCode.Gujarati]: \"\\u0A86\\u0AB2\\u0AC7\\u0A97\\u0AB0\\u0ABF\\u0AAF\\u0ABE\",\n        [LocaleCode.Haitian]: \"Alg\\xE9rie\",\n        [LocaleCode.Hausa]: \"Algeria\",\n        [LocaleCode.Hebrew]: \"\\u05D0\\u05DC\\u05D2\\u05F3\\u05D9\\u05E8\\u05D9\\u05D4\",\n        [LocaleCode.Hindi]: \"\\u0906\\u0932\\u094D\\u0917\\u0947\\u0930\\u093F\\u092F\\u093E\",\n        [LocaleCode.Hungarian]: \"Alg\\xE1r\",\n        [LocaleCode.Icelandic]: \"Alg\\xFAra\",\n        [LocaleCode.Igbo]: \"Algeria\",\n        [LocaleCode.Indonesian]: \"Aljir\",\n        [LocaleCode.Irish]: \"Alg\\xE9rie\",\n        [LocaleCode.Italian]: \"Algeria\",\n        [LocaleCode.Japanese]: \"\\u30A2\\u30EB\\u30B8\\u30A7\\u30EA\\u30A2\",\n        [LocaleCode.Javanese]: \"Aljir\",\n        [LocaleCode.Kannada]: \"\\u0C86\\u0CB2\\u0CCD\\u0C97\\u0CC7\\u0CB0\\u0CBF\\u0CAF\\u0CA8\\u0CCD\",\n        [LocaleCode.Kazakh]: \"\\u0410\\u043B\\u0436\\u0438\\u0440\",\n        [LocaleCode.Khmer]: \"\\u17A2\\u17B6\\u179B\\u17CB\\u1794\\u17B6\\u1793\\u17B8\",\n        [LocaleCode.Korean]: \"\\uC54C\\uC81C\\uB9AC\",\n        [LocaleCode.Kurdish]: \"\\u062C\\u0632\\u0627\\u06CC\\u0631 \\u0627\\u0644\\u062C\\u0632\\u0627\\u06CC\\u0631\",\n        [LocaleCode.Kyrgyz]: \"\\u0410\\u043B\\u0436\\u0438\\u0440\",\n        [LocaleCode.Lao]: \"\\u0EAD\\u0EB2\\u0EA5\\u0EB2\\u0E88\\u0EB5\\u0E99\",\n        [LocaleCode.Latin]: \"Algeria\",\n        [LocaleCode.Latvian]: \"Al\\u017E\\u012Brija\",\n        [LocaleCode.Lithuanian]: \"Al\\u017Eyras\",\n        [LocaleCode.Luxembourgish]: \"Algeria\",\n        [LocaleCode.Macedonian]: \"\\u0410\\u043B\\u0436\\u0438\\u0440\",\n        [LocaleCode.Malagasy]: \"Alg\\xE9rie\",\n        [LocaleCode.Malay]: \"Aljir\",\n        [LocaleCode.Malayalam]: \"\\u0D06\\u0D32\\u0D02\\u0D17\\u0D47\\u0D30\\u0D3F\\u0D2F\\u0D7B\",\n        [LocaleCode.Maltese]: \"Alg\\xE9rie\",\n        [LocaleCode.Maori]: \"Algeria\",\n        [LocaleCode.Marathi]: \"\\u0906\\u0932\\u094D\\u0917\\u0947\\u0930\\u093F\\u092F\\u093E\",\n        [LocaleCode.Mongolian]: \"\\u0410\\u043B\\u0436\\u0438\\u0440\",\n        [LocaleCode.Nepali]: \"\\u0906\\u0932\\u094D\\u0917\\u0947\\u0930\\u093F\\u092F\\u093E\",\n        [LocaleCode.Norwegian]: \"Algeria\",\n        [LocaleCode.Pashto]: \"\\u0627\\u0644\\u062C\\u0632\\u0627\\u0626\\u0631\",\n        [LocaleCode.Persian]: \"\\u062C\\u0632\\u0627\\u06CC\\u0631 \\u0627\\u0644\\u0639\\u0631\\u0628\",\n        [LocaleCode.Polish]: \"Algieria\",\n        [LocaleCode.Portuguese]: \"Alg\\xE9ria\",\n        [LocaleCode.Punjabi]: \"\\u0A06\\u0A32\\u0A47\\u0A17\\u0A40\\u0A06\",\n        [LocaleCode.Romanian]: \"Algeria\",\n        [LocaleCode.Russian]: \"\\u0410\\u043B\\u0436\\u0438\\u0440\",\n        [LocaleCode.Samoan]: \"Algeria\",\n        [LocaleCode.Sanskrit]: \"\\u0906\\u0932\\u094D\\u0917\\u0947\\u0930\\u093F\\u092F\\u093E\",\n        [LocaleCode.Scots]: \"Algeria\",\n        [LocaleCode.Serbian]: \"\\u0410\\u043B\\u0436\\u0438\\u0440\",\n        [LocaleCode.Sesotho]: \"Algeria\",\n        [LocaleCode.Shona]: \"Algeria\",\n        [LocaleCode.Sindhi]: \"Algeria\",\n        [LocaleCode.Sinhala]: \"\\u0D86\\u0DBD\\u0DCA\\u0DB6\\u0DCF\\u0DB1\\u0DD2\\u0DBA\",\n        [LocaleCode.Slovak]: \"Al\\u017E\\xEDrsko\",\n        [LocaleCode.Slovenian]: \"Al\\u017Eir\",\n        [LocaleCode.Somali]: \"Algeria\",\n        [LocaleCode.Spanish]: \"Algeria\",\n        [LocaleCode.Sudanese]: \"Aljir\",\n        [LocaleCode.Swahili]: \"Aljir\",\n        [LocaleCode.Swedish]: \"Algeriet\",\n        [LocaleCode.Tagalog]: \"Algeria\",\n        [LocaleCode.Tajik]: \"\\u0410\\u043B\\u0436\\u0438\\u0440\",\n        [LocaleCode.Tamil]: \"\\u0B86\\u0BB2\\u0BCD\\u0B95\\u0BC7\\u0BB0\\u0BBF\\u0BAF\\u0BBE\",\n        [LocaleCode.Tatar]: \"\\u0410\\u043B\\u0436\\u0438\\u0440\",\n        [LocaleCode.Telugu]: \"\\u0C06\\u0C32\\u0C4D\\u0C17\\u0C47\\u0C30\\u0C3F\\u0C2F\\u0C3E\",\n        [LocaleCode.Thai]: \"\\u0E2D\\u0E32\\u0E23\\u0E32\\u0E01\\u0E2D\\u0E19\",\n        [LocaleCode.Tibetan]: \"\\u0F68\\u0F63\\u0F9F\\u0F72\\u0F0B\\u0F62\\u0F72\\u0F0B\\u0F61\\u0F72\",\n        [LocaleCode.Turkish]: \"Cezayir\",\n        [LocaleCode.Ukrainian]: \"\\u0410\\u043B\\u0436\\u0438\\u0440\",\n        [LocaleCode.Urdu]: \"\\u0622\\u0644\\u062C\\u06CC\\u0631\",\n        [LocaleCode.Uzbek]: \"\\u0410\\u043B\\u0436\\u0438\\u0440\",\n        [LocaleCode.Vietnamese]: \"\\u1EA2\\u0301\\u1EA1\\u1EA3\\u1EAD\\u1EB5\",\n        [LocaleCode.Welsh]: \"Algeria\",\n        [LocaleCode.Xhosa]: \"Algeria\",\n        [LocaleCode.Yiddish]: \"\\u05D0\\u05DC\\u05D2\\u05F3\\u05D9\\u05E8\\u05D9\\u05D4\",\n        [LocaleCode.Yoruba]: \"Algeria\",\n        [LocaleCode.Zulu]: \"Algeria\"\n      }\n    },\n    statistics: {\n      demographics: {\n        age: {\n          distribution: [\n            { age: \"0 to 14 years\", percentage: 15.3 },\n            { age: \"15 to 64 years\", percentage: 66.7 },\n            { age: \"65 years and over\", percentage: 14.6 }\n          ],\n          median_age: 35.5\n        },\n        population: {\n          largest_city: \"Oran\",\n          total: 371e5\n        }\n      },\n      geography: {\n        area: 2381740,\n        region: Region.Africa,\n        sub_region: SubRegion.NorthernAfrica\n      },\n      government: {\n        capital: \"Algiers\",\n        type: \"Republic\"\n      }\n    }\n  },\n  AmericanSamoa: {\n    i18n: {\n      calling_codes: [1684],\n      currencies: [CurrencyCode.AmericanSamoaTala],\n      languages: [LocaleCode.English, LocaleCode.Samoan],\n      tz: {\n        offsets: [TimezoneOffset.UTC_MINUS_11],\n        regions: [TimezoneRegions.PacificSamoa],\n        timezones: [Timezones.SamoaStandardTime]\n      }\n    },\n    id: CountryCode.AmericanSamoa,\n    info: {\n      flag: {\n        emoji: \"\\u{1F1E6}\\u{1F1F8}\",\n        emoji_unicode: \"U+1F1E6 U+1F1F8\",\n        svg: \"https://www.countryflags.io/as/flat/64.svg\"\n      },\n      tld: [\".as\"]\n    },\n    iso: {\n      alpha2: CountryCode.AmericanSamoa,\n      alpha3: \"ASM\",\n      numeric: \"016\"\n    },\n    name: {\n      alt_spellings: [\"AS\", \"Amerika S\\u0101moa\", \"Amelika S\\u0101moa\", \"S\\u0101moa Amelika\"],\n      demonym: \"American Samoan\",\n      native: {\n        endonym: \"American Samoa\"\n      },\n      official: \"American Samoa\",\n      short: \"American Samoa\",\n      translations: {\n        [LocaleCode.Afrikaans]: \"Amerikaans Samoa\",\n        [LocaleCode.Albanian]: \"Samoa Amerikane\",\n        [LocaleCode.Amharic]: \"\\u1233\\u121E\\u12A0\\u122D\",\n        [LocaleCode.Arabic]: \"\\u0633\\u0627\\u0645\\u0648\\u0627 \\u0627\\u0644\\u0623\\u0645\\u0631\\u064A\\u0643\\u064A\\u0629\",\n        [LocaleCode.Armenian]: \"\\u054D\\u0561\\u0570\\u0561\\u0574\\u0561\\u056C\\u056B\\u0561\",\n        [LocaleCode.Azerbaijani]: \"Samoa Amerikana\",\n        [LocaleCode.Bashkir]: \"\\u0410\\u043C\\u0435\\u0440\\u0438\\u043A\\u0430\\u043D\\u0441\\u043A\\u0438 \\u0421\\u0430\\u043C\\u043E\\u0430\",\n        [LocaleCode.Basque]: \"Samoa Amerikana\",\n        [LocaleCode.Belarusian]: \"\\u0410\\u043C\\u0435\\u0440\\u0438\\u043A\\u0430\\u043D\\u0441\\u043A\\u0430\\u044F \\u0421\\u0430\\u043C\\u043E\\u0430\",\n        [LocaleCode.Bengali]: \"\\u0986\\u09AE\\u09C7\\u09B0\\u09BF\\u0995\\u09BE\\u09A8 \\u09B8\\u09BE\\u09AE\\u09CB\\u09AF\\u09BC\\u09BE\",\n        [LocaleCode.Berber]: \"\\u062C\\u0632\\u0631 \\u0633\\u0627\\u0645\\u0648\\u0627 \\u0627\\u0644\\u0623\\u0645\\u0631\\u064A\\u0643\\u064A\\u0629\",\n        [LocaleCode.Bhutani]: \"\\u0F68\\u0F62\\u0F92\\u0FB1\\u0F0B\\u0F58\\u0F72\\u0F0B\\u0F51\\u0F58\\u0F44\\u0F66\\u0F0B\\u0F66\\u0FA4\\u0FB2\\u0F7C\\u0F51\\u0F0B\\u0F40\\u0FB1\\u0F72\\u0F0B\\u0F66\\u0F90\\u0F56\\u0F66\\u0F0B\\u0F62\\u0F92\\u0FB1\\u0F74\\u0F51\\u0F0B\\u0F46\\u0F7A\\u0F53\\u0F0B\\u0F54\\u0F7C\\u0F0D\",\n        [LocaleCode.Bosnian]: \"Ameri\\u010Dka Samoa\",\n        [LocaleCode.Breton]: \"Samoa Amerikan\",\n        [LocaleCode.Bulgarian]: \"\\u0410\\u043C\\u0435\\u0440\\u0438\\u043A\\u0430\\u043D\\u0441\\u043A\\u0430 \\u0421\\u0430\\u043C\\u043E\\u0430\",\n        [LocaleCode.Burmese]: \"\\u1021\\u1019\\u1039\\u1038\\u1019\\u101B\\u102D\\u102F\\u1018\\u102C\\u101E\\u102C\",\n        [LocaleCode.Catalan]: \"Samoa Americana\",\n        [LocaleCode.Chinese]: \"\\u7F8E\\u5C5E\\u8428\\u6469\\u4E9A\",\n        [LocaleCode.Croatian]: \"Ameri\\u010Dka Samoa\",\n        [LocaleCode.Czech]: \"Americk\\xE1 Samoa\",\n        [LocaleCode.Danish]: \"Amerikansk Samoa\",\n        [LocaleCode.Dutch]: \"Amerikaans Samoa\",\n        [LocaleCode.English]: \"American Samoa\",\n        [LocaleCode.Esperanto]: \"Samoa Amerika\",\n        [LocaleCode.Estonian]: \"Ameerika Samoa\",\n        [LocaleCode.Finnish]: \"Amerikka Samoa\",\n        [LocaleCode.French]: \"American Samoa\",\n        [LocaleCode.Frisian]: \"Amerikaans Samoa\",\n        [LocaleCode.Galician]: \"Samoa Americana\",\n        [LocaleCode.Georgian]: \"\\u10D0\\u10DB\\u10D4\\u10E0\\u10D8\\u10D9\\u10D8\\u10E1 \\u10E1\\u10D0\\u10DB\\u10DD\\u10D0\",\n        [LocaleCode.German]: \"Amerikanisch-Samoa\",\n        [LocaleCode.Greenlandic]: \"Amerikaans Samoa\",\n        [LocaleCode.Greek]: \"\\u0391\\u03BC\\u03B5\\u03C1\\u03B9\\u03BA\\u03B1\\u03BD\\u03B9\\u03BA\\u03AE \\u03A3\\u03B1\\u03BC\\u03CC\\u03B1\",\n        [LocaleCode.Gujarati]: \"\\u0A86\\u0AAE\\u0AC7\\u0AB0\\u0ABF\\u0A95\\u0AA8 \\u0AB8\\u0ABE\\u0AAE\\u0ACB\\u0AAF\\u0ABE\",\n        [LocaleCode.Haitian]: \"Amerikaans Samoa\",\n        [LocaleCode.Hausa]: \"Amerikaans Samoa\",\n        [LocaleCode.Hebrew]: \"\\u05D0\\u05DE\\u05E8\\u05D9\\u05E7\\u05E0\\u05D9\\u05D4 \\u05E1\\u05DE\\u05D5\\u05D0\\u05D4\",\n        [LocaleCode.Hindi]: \"\\u0905\\u092E\\u0947\\u0930\\u093F\\u0915\\u093E \\u0938\\u092E\\u094B\\u0906\",\n        [LocaleCode.Hungarian]: \"Amerikai Szamoa\",\n        [LocaleCode.Icelandic]: \"Amerikai Szamoa\",\n        [LocaleCode.Igbo]: \"Ikina Amerika\",\n        [LocaleCode.Indonesian]: \"Samoa Amerika\",\n        [LocaleCode.Irish]: \"Samoa Amerikana\",\n        [LocaleCode.Italian]: \"Samoa Americane\",\n        [LocaleCode.Japanese]: \"\\u30A2\\u30E1\\u30EA\\u30AB\\u9818\\u30B5\\u30E2\\u30A2\",\n        [LocaleCode.Javanese]: \"Samoa Amerika\",\n        [LocaleCode.Kannada]: \"\\u0C85\\u0CAE\\u0CC7\\u0CB0\\u0CBF\\u0C95\\u0CA8\\u0CCD \\u0CB8\\u0CAE\\u0CCB\\u0C86\",\n        [LocaleCode.Kazakh]: \"\\u0410\\u043C\\u0435\\u0440\\u0438\\u043A\\u0430\\u043D\\u0441\\u043A\\u0438\\u0439 \\u0421\\u0430\\u043C\\u043E\\u0430\",\n        [LocaleCode.Khmer]: \"\\u17A2\\u17B6\\u1798\\u17C9\\u17B6\\u179A\\u17B8\\u179F\\u17D2\\u178F\\u1784\\u17CB\",\n        [LocaleCode.Korean]: \"\\uC544\\uBA54\\uB9AC\\uCE74 \\uC0AC\\uBAA8\\uC544\",\n        [LocaleCode.Kurdish]: \"Amerikaans Samoa\",\n        [LocaleCode.Kyrgyz]: \"\\u0410\\u043C\\u0435\\u0440\\u0438\\u043A\\u0430\\u043D\\u0441\\u043A\\u0438\\u0439 \\u0421\\u0430\\u043C\\u043E\\u0430\",\n        [LocaleCode.Lao]: \"\\u0EAD\\u0EB2\\u0EA1\\u0EB2\\u0E99\\u0EB2\\u0E94\\u0EB2\\u0EA1\\u0EB2\\u0E99\\u0EB2\\u0E94\",\n        [LocaleCode.Latin]: \"Samoa Amerikana\",\n        [LocaleCode.Latvian]: \"Amerikas Samoa\",\n        [LocaleCode.Lithuanian]: \"Amerikos Samoa\",\n        [LocaleCode.Luxembourgish]: \"Amerikaans Samoa\",\n        [LocaleCode.Macedonian]: \"\\u0410\\u043C\\u0435\\u0440\\u0438\\u043A\\u0430\\u043D\\u0441\\u043A\\u0430 \\u0421\\u0430\\u043C\\u043E\\u0430\",\n        [LocaleCode.Malagasy]: \"Samoa Amerika\",\n        [LocaleCode.Malay]: \"Amerika Samo\",\n        [LocaleCode.Malayalam]: \"\\u0D05\\u0D2E\\u0D47\\u0D30\\u0D3F\\u0D15\\u0D4D\\u0D15\\u0D28\\u0D4D\\u0D31\\u0D4D \\u0D38\\u0D2E\\u0D4B\\u0D06\",\n        [LocaleCode.Maltese]: \"Samoa Amerika\",\n        [LocaleCode.Maori]: \"Samoa Amerika\",\n        [LocaleCode.Marathi]: \"\\u0905\\u092E\\u0947\\u0930\\u093F\\u0915\\u093E \\u0938\\u092E\\u094B\\u0906\",\n        [LocaleCode.Mongolian]: \"\\u0410\\u043C\\u0435\\u0440\\u0438\\u043A\\u0430\\u043D\\u0441\\u043A\\u0438\\u0439 \\u0421\\u0430\\u043C\\u043E\\u0430\",\n        [LocaleCode.Nepali]: \"\\u0905\\u092E\\u0947\\u0930\\u093F\\u0915\\u093E \\u0938\\u092E\\u094B\\u0906\",\n        [LocaleCode.Norwegian]: \"Amerikansk Samoa\",\n        [LocaleCode.Pashto]: \"\\u0627\\u0645\\u0631\\u06CC\\u06A9\\u0627\\u06CC \\u0633\\u0645\\u0648\\u0627\",\n        [LocaleCode.Persian]: \"\\u0622\\u0645\\u0631\\u06CC\\u06A9\\u0627\\u06CC \\u0633\\u0645\\u0648\\u0627\",\n        [LocaleCode.Polish]: \"Samoa Ameryka\\u0144skie\",\n        [LocaleCode.Portuguese]: \"Samoa Americana\",\n        [LocaleCode.Punjabi]: \"\\u0A05\\u0A2E\\u0A30\\u0A40\\u0A15\\u0A40 \\u0A38\\u0A3E\\u0A2E\\u0A4B\\u0A06\",\n        [LocaleCode.Romanian]: \"Samoa americane\",\n        [LocaleCode.Russian]: \"\\u0410\\u043C\\u0435\\u0440\\u0438\\u043A\\u0430\\u043D\\u0441\\u043A\\u0430\\u044F \\u0421\\u0430\\u043C\\u043E\\u0430\",\n        [LocaleCode.Samoan]: \"Samoa Amerika\",\n        [LocaleCode.Sanskrit]: \"\\u0905\\u092E\\u0947\\u0930\\u093F\\u0915\\u093E \\u0938\\u092E\\u094B\\u0906\",\n        [LocaleCode.Scots]: \"Amerikaans Samoa\",\n        [LocaleCode.Serbian]: \"\\u0410\\u043C\\u0435\\u0440\\u0438\\u043A\\u0430\\u043D\\u0441\\u043A\\u0430 \\u0421\\u0430\\u043C\\u043E\\u0430\",\n        [LocaleCode.Sesotho]: \"Amerikaans Samoa\",\n        [LocaleCode.Shona]: \"Amerikaans Samoa\",\n        [LocaleCode.Sindhi]: \"Amerikaans Samoa\",\n        [LocaleCode.Sinhala]: \"\\u0D86\\u0DBB\\u0DCA\\u0DA2\\u0DD2\\u0DB1\\u0DCF\\u0DB1\\u0DD4 \\u0DC3\\u0DD0\\u0DB8\\u0DD0\\u0DBD\\u0DCA\\u0DC0\",\n        [LocaleCode.Slovak]: \"Amerikaans Samoa\",\n        [LocaleCode.Slovenian]: \"Amerikaans Samoa\",\n        [LocaleCode.Somali]: \"Amerikaans Samoa\",\n        [LocaleCode.Spanish]: \"Samoa Americana\",\n        [LocaleCode.Sudanese]: \"Amerikaans Samoa\",\n        [LocaleCode.Swahili]: \"Amerikaans Samoa\",\n        [LocaleCode.Swedish]: \"Amerikansk Samoa\",\n        [LocaleCode.Tagalog]: \"Amerikaans Samoa\",\n        [LocaleCode.Tajik]: \"\\u0410\\u043C\\u0435\\u0440\\u0438\\u043A\\u0430\\u043D\\u0441\\u043A\\u0438 \\u0441\\u0430\\u043C\\u043E\\u0430\",\n        [LocaleCode.Tamil]: \"\\u0B85\\u0BAE\\u0BC6\\u0BB0\\u0BBF\\u0B95\\u0BCD \\u0B9A\\u0BAE\\u0BCB\\u0BB5\\u0BBE\",\n        [LocaleCode.Tatar]: \"\\u0410\\u043C\\u0435\\u0440\\u0438\\u043A\\u0430\\u043D\\u0441\\u043A\\u0438 \\u0441\\u0430\\u043C\\u043E\\u0430\",\n        [LocaleCode.Telugu]: \"\\u0C05\\u0C2E\\u0C46\\u0C30\\u0C3F\\u0C15\\u0C4D \\u0C38\\u0C2E\\u0C4B\\u0C35\\u0C3E\",\n        [LocaleCode.Thai]: \"\\u0E2A\\u0E2B\\u0E23\\u0E32\\u0E0A\\u0E2D\\u0E32\\u0E13\\u0E32\\u0E08\\u0E31\\u0E01\\u0E23\\u0E41\\u0E2D\\u0E1F\\u0E23\\u0E34\\u0E01\\u0E32\",\n        [LocaleCode.Tibetan]: \"\\u0F68\\u0F7A\\u0F0B\\u0F62\\u0F72\\u0F0B\\u0F40\\u0F0B\\u0F68\\u0F7A\\u0F0B\\u0F58\\u0F72\\u0F0B\\u0F51\\u0F74\\u0F0B\\u0F61\\u0F72\\u0F0B\\u0F62\\u0F72\\u0F0B\\u0F40\",\n        [LocaleCode.Turkish]: \"Amerikan Samoas\\u0131\",\n        [LocaleCode.Ukrainian]: \"\\u0410\\u043C\\u0435\\u0440\\u0438\\u043A\\u0430\\u043D\\u0441\\u044C\\u043A\\u0430 \\u0421\\u0430\\u043C\\u043E\\u0430\",\n        [LocaleCode.Urdu]: \"\\u0627\\u0645\\u0631\\u06CC\\u06A9\\u06CC \\u0633\\u0645\\u0648\\u0627\",\n        [LocaleCode.Uzbek]: \"\\u0410\\u043C\\u0435\\u0440\\u0438\\u043A\\u0430\\u043D\\u0441\\u043A\\u0438 \\u0441\\u0430\\u043C\\u043E\\u0430\",\n        [LocaleCode.Vietnamese]: \"Amerikaans Samoa\",\n        [LocaleCode.Welsh]: \"Amerikaans Samoa\",\n        [LocaleCode.Xhosa]: \"Amerikaans Samoa\",\n        [LocaleCode.Yiddish]: \"Amerikaans Samoa\",\n        [LocaleCode.Yoruba]: \"Amerikaans Samoa\",\n        [LocaleCode.Zulu]: \"Amerikaans Samoa\"\n      }\n    },\n    statistics: {\n      demographics: {\n        age: {\n          distribution: [\n            { age: \"0 to 14 years\", percentage: 15.3 },\n            { age: \"15 to 64 years\", percentage: 66.7 },\n            { age: \"65 years and over\", percentage: 14.6 }\n          ],\n          median_age: 35.5\n        },\n        population: {\n          largest_city: \"Pago Pago\",\n          total: 558e3\n        }\n      },\n      geography: {\n        area: 199,\n        region: Region.Oceania,\n        sub_region: SubRegion.Polynesia\n      },\n      government: {\n        capital: \"Pago Pago\",\n        type: \"Nonmetropolitan Territory of the US\"\n      }\n    }\n  },\n  Andorra: {\n    i18n: {\n      calling_codes: [376],\n      currencies: [CurrencyCode.Euro],\n      languages: [LocaleCode.Catalan, LocaleCode.Spanish],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_1, TimezoneOffset.UTC_PLUS_2],\n        regions: [TimezoneRegions.EuropeAndorra],\n        timezones: [Timezones.CentralEuropeanTime]\n      }\n    },\n    id: CountryCode.Andorra,\n    info: {\n      flag: {\n        emoji: \"\\u{1F1E6}\\u{1F1F4}\",\n        emoji_unicode: \"U+1F1E6 U+1F1F4\",\n        svg: \"https://www.countryflags.io/ad/flat/64.svg\"\n      },\n      tld: [\".ad\"]\n    },\n    iso: {\n      alpha2: CountryCode.Andorra,\n      alpha3: \"AND\",\n      numeric: \"020\"\n    },\n    name: {\n      alt_spellings: [\"AD\", \"Principality of Andorra\", \"Principat d'Andorra\"],\n      demonym: \"Andorran\",\n      native: {\n        endonym: \"Andorra\"\n      },\n      official: \"Principality of Andorra\",\n      short: \"Andorra\",\n      translations: {\n        [LocaleCode.Afrikaans]: \"Andorra\",\n        [LocaleCode.Albanian]: \"Andorra\",\n        [LocaleCode.Amharic]: \"\\u12A0\\u1295\\u12F6\\u122B\",\n        [LocaleCode.Arabic]: \"\\u0623\\u0646\\u062F\\u0648\\u0631\\u0627\",\n        [LocaleCode.Armenian]: \"\\u0540\\u0561\\u0576\\u0564\\u0561\\u0580\\u0561\\u057E\\u0561\\u0575\\u0584\",\n        [LocaleCode.Azerbaijani]: \"Andorra\",\n        [LocaleCode.Bashkir]: \"\\u0410\\u043D\\u0434\\u043E\\u0440\\u0430\",\n        [LocaleCode.Basque]: \"Andorra\",\n        [LocaleCode.Belarusian]: \"\\u0410\\u043D\\u0434\\u043E\\u0440\\u0440\\u0430\",\n        [LocaleCode.Bengali]: \"\\u0985\\u09A8\\u09CD\\u09A1\\u09CB\\u09B0\\u09BE\",\n        [LocaleCode.Berber]: \"\\u0623\\u0646\\u062F\\u0648\\u0631\\u0627\",\n        [LocaleCode.Bhutani]: \"\\u0F68\\u0F53\\u0F0B\\u0F4C\\u0F7C\\u0F0B\",\n        [LocaleCode.Bosnian]: \"Andora\",\n        [LocaleCode.Breton]: \"Andorra\",\n        [LocaleCode.Bulgarian]: \"\\u0410\\u043D\\u0434\\u043E\\u0440\\u0430\",\n        [LocaleCode.Burmese]: \"\\u1021\\u1014\\u1039\\u1010\\u102C\\u101B\\u102D\\u102F\\u1038\",\n        [LocaleCode.Catalan]: \"Andorra\",\n        [LocaleCode.Chinese]: \"\\u5B89\\u9053\\u5C14\",\n        [LocaleCode.Croatian]: \"Andora\",\n        [LocaleCode.Czech]: \"Andorra\",\n        [LocaleCode.Danish]: \"Andorra\",\n        [LocaleCode.Dutch]: \"Andorra\",\n        [LocaleCode.English]: \"Andorra\",\n        [LocaleCode.Esperanto]: \"Andora\",\n        [LocaleCode.Estonian]: \"Andorra\",\n        [LocaleCode.Finnish]: \"Andorra\",\n        [LocaleCode.French]: \"Andorra\",\n        [LocaleCode.Frisian]: \"Andorra\",\n        [LocaleCode.Galician]: \"Andorra\",\n        [LocaleCode.Georgian]: \"\\u12A0\\u1295\\u12F6\\u122B\",\n        [LocaleCode.German]: \"Andorra\",\n        [LocaleCode.Greek]: \"\\u0391\\u03BD\\u03B4\\u03CC\\u03C1\\u03B1\",\n        [LocaleCode.Hebrew]: \"\\u05D0\\u05E0\\u05D3\\u05D5\\u05E8\\u05D4\",\n        [LocaleCode.Hindi]: \"\\u0905\\u0902\\u0921\\u094B\\u0930\\u093E\",\n        [LocaleCode.Hungarian]: \"Andorra\",\n        [LocaleCode.Icelandic]: \"Andorra\",\n        [LocaleCode.Igbo]: \"Andorra\",\n        [LocaleCode.Indonesian]: \"Andorra\",\n        [LocaleCode.Irish]: \"Andorra\",\n        [LocaleCode.Italian]: \"Andorra\",\n        [LocaleCode.Japanese]: \"\\u30A2\\u30F3\\u30C9\\u30E9\",\n        [LocaleCode.Javanese]: \"Andorra\",\n        [LocaleCode.Kannada]: \"\\u0C85\\u0C82\\u0CA1\\u0CCB\\u0CB0\\u0CBF\\u0CAF\\u0CA8\\u0CCD\",\n        [LocaleCode.Kazakh]: \"\\u0410\\u043D\\u0434\\u043E\\u0440\\u0440\\u0430\",\n        [LocaleCode.Khmer]: \"\\u17A2\\u1784\\u17CB\\u178A\\u17B6\\u179A\\u17B6\",\n        [LocaleCode.Korean]: \"\\uC548\\uB3C4\\uB77C\",\n        [LocaleCode.Kurdish]: \"Andorra\",\n        [LocaleCode.Kyrgyz]: \"\\u0410\\u043D\\u0434\\u043E\\u0440\\u0440\\u0430\",\n        [LocaleCode.Lao]: \"\\u0EAD\\u0EB1\\u0E99\\u0EC2\\u0E94\\u0EA3\\u0EB2\",\n        [LocaleCode.Latin]: \"Andorra\",\n        [LocaleCode.Latvian]: \"Andora\",\n        [LocaleCode.Lithuanian]: \"Andora\",\n        [LocaleCode.Luxembourgish]: \"Andorra\",\n        [LocaleCode.Macedonian]: \"\\u0410\\u043D\\u0434\\u043E\\u0440\\u0440\\u0430\",\n        [LocaleCode.Malagasy]: \"Andorra\",\n        [LocaleCode.Malay]: \"Andorra\",\n        [LocaleCode.Malayalam]: \"\\u0D05\\u0D02\\u0D21\\u0D4B\\u0D30\\u0D3F\\u0D2F\\u0D28\\u0D4D\",\n        [LocaleCode.Maltese]: \"Andorra\",\n        [LocaleCode.Maori]: \"Andorra\",\n        [LocaleCode.Marathi]: \"\\u0905\\u0902\\u0921\\u094B\\u0930\\u093E\",\n        [LocaleCode.Mongolian]: \"\\u0410\\u043D\\u0434\\u043E\\u0440\\u0440\\u0430\",\n        [LocaleCode.Nepali]: \"\\u0905\\u0902\\u0921\\u094B\\u0930\\u093E\",\n        [LocaleCode.Norwegian]: \"Andorra\",\n        [LocaleCode.Pashto]: \"\\u0622\\u0646\\u062F\\u0648\\u0631\\u0627\",\n        [LocaleCode.Persian]: \"\\u0622\\u0646\\u062F\\u0648\\u0631\\u0627\",\n        [LocaleCode.Polish]: \"Andora\",\n        [LocaleCode.Portuguese]: \"Andorra\",\n        [LocaleCode.Punjabi]: \"\\u0A05\\u0A70\\u0A21\\u0A4B\\u0A30\\u0A3E\",\n        [LocaleCode.Romanian]: \"Andorra\",\n        [LocaleCode.Russian]: \"\\u0410\\u043D\\u0434\\u043E\\u0440\\u0440\\u0430\",\n        [LocaleCode.Samoan]: \"Andorra\",\n        [LocaleCode.Sanskrit]: \"\\u0905\\u0902\\u0921\\u094B\\u0930\\u093E\",\n        [LocaleCode.Scots]: \"Andorra\",\n        [LocaleCode.Serbian]: \"\\u0410\\u043D\\u0434\\u043E\\u0440\\u0440\\u0430\",\n        [LocaleCode.Sesotho]: \"Andorra\",\n        [LocaleCode.Shona]: \"Andorra\",\n        [LocaleCode.Sindhi]: \"\\u0905\\u0902\\u0921\\u094B\\u0930\\u093E\",\n        [LocaleCode.Sinhala]: \"\\u0D86\\u0DB1\\u0DCA\\u0DAF\\u0DDA\",\n        [LocaleCode.Slovak]: \"Andorra\",\n        [LocaleCode.Slovenian]: \"Andora\",\n        [LocaleCode.Somali]: \"Andorra\",\n        [LocaleCode.Spanish]: \"Andorra\",\n        [LocaleCode.Sudanese]: \"Andorra\",\n        [LocaleCode.Swahili]: \"Andorra\",\n        [LocaleCode.Swedish]: \"Andorra\",\n        [LocaleCode.Tagalog]: \"Andorra\",\n        [LocaleCode.Tajik]: \"\\u0410\\u043D\\u0434\\u043E\\u0440\\u0440\\u0430\",\n        [LocaleCode.Tamil]: \"\\u0B85\\u0BA9\\u0BCB\\u0BB0\\u0BCD\\u0B9F\\u0BBE\",\n        [LocaleCode.Tatar]: \"\\u0410\\u043D\\u0434\\u043E\\u0440\\u0440\\u0430\",\n        [LocaleCode.Telugu]: \"\\u0C05\\u0C02\\u0C21\\u0C4B\\u0C30\\u0C4D\\u0C30\\u0C3E\",\n        [LocaleCode.Thai]: \"\\u0E2D\\u0E31\\u0E19\\u0E14\\u0E2D\\u0E23\\u0E4C\\u0E23\\u0E32\",\n        [LocaleCode.Tibetan]: \"\\u0F68\\u0F53\\u0F0B\\u0F4C\\u0F7C\\u0F0B\",\n        [LocaleCode.Turkish]: \"Andora\",\n        [LocaleCode.Ukrainian]: \"\\u0410\\u043D\\u0434\\u043E\\u0440\\u0440\\u0430\",\n        [LocaleCode.Urdu]: \"\\u0622\\u0646\\u062F\\u0648\\u0631\\u0627\",\n        [LocaleCode.Uzbek]: \"\\u0410\\u043D\\u0434\\u043E\\u0440\\u0440\\u0430\",\n        [LocaleCode.Vietnamese]: \"Andorra\",\n        [LocaleCode.Welsh]: \"Andorra\",\n        [LocaleCode.Xhosa]: \"Andorra\",\n        [LocaleCode.Yiddish]: \"\\u05D0\\u05E0\\u05D3\\u05D5\\u05E8\\u05D4\",\n        [LocaleCode.Yoruba]: \"Andorra\",\n        [LocaleCode.Zulu]: \"Andorra\"\n      }\n    },\n    statistics: {\n      demographics: {\n        age: {\n          distribution: [\n            { age: \"0 to 14 years\", percentage: 15.3 },\n            { age: \"15 to 64 years\", percentage: 66.7 },\n            { age: \"65 years and over\", percentage: 14.6 }\n          ],\n          median_age: 35.5\n        },\n        population: {\n          largest_city: \"Andorra la Vella\",\n          total: 78e3\n        }\n      },\n      geography: {\n        area: 468,\n        region: Region.Europe,\n        sub_region: SubRegion.SouthernEurope\n      },\n      government: {\n        capital: \"Andorra la Vella\",\n        type: \"Constitutional Monarchy\"\n      }\n    }\n  },\n  Angola: {\n    i18n: {\n      calling_codes: [244],\n      currencies: [CurrencyCode.AngolaKwanza],\n      languages: [\n        LocaleCode.Portuguese,\n        LocaleCode.Spanish,\n        LocaleCode.French,\n        LocaleCode.Italian,\n        LocaleCode.German,\n        LocaleCode.English\n      ],\n      tz: {\n        offsets: [\n          TimezoneOffset.UTC_0,\n          TimezoneOffset.UTC_PLUS_1,\n          TimezoneOffset.UTC_PLUS_2\n        ],\n        regions: [TimezoneRegions.AfricaLuanda],\n        timezones: [Timezones.WestAfricaTime]\n      }\n    },\n    id: CountryCode.Angola,\n    info: {\n      flag: {\n        emoji: \"\\u{1F1E6}\\u{1F1EC}\",\n        emoji_unicode: \"U+1F1E6 U+1F1EC\",\n        svg: \"https://www.countryflags.io/ao/flat/64.svg\"\n      },\n      tld: [\".ao\"]\n    },\n    iso: {\n      alpha2: CountryCode.Angola,\n      alpha3: \"AGO\",\n      numeric: \"024\"\n    },\n    name: {\n      alt_spellings: [\"AO\", \"Rep\\xFAblica de Angola\", \"\\u0281\\u025Bpublika de an\"],\n      demonym: \"Angolan\",\n      native: {\n        endonym: \"Angola\"\n      },\n      official: \"Republic of Angola\",\n      short: \"Angola\",\n      translations: {\n        [LocaleCode.Afrikaans]: \"Angola\",\n        [LocaleCode.Albanian]: \"Ang\\xF2la\",\n        [LocaleCode.Amharic]: \"\\u12A0\\u1295\\u130E\\u120A\\u12EB\",\n        [LocaleCode.Arabic]: \"\\u0623\\u0646\\u063A\\u0648\\u0644\\u0627\",\n        [LocaleCode.Armenian]: \"\\u0540\\u0561\\u0576\\u0563\\u0561\\u056C\\u0561\\u056F\\u0561\",\n        [LocaleCode.Azerbaijani]: \"Ang\\u0259l\",\n        [LocaleCode.Bashkir]: \"\\u0410\\u043D\\u0433\\u043E\\u043B\\u0430\",\n        [LocaleCode.Basque]: \"Angola\",\n        [LocaleCode.Belarusian]: \"\\u0410\\u043D\\u0433\\u043E\\u043B\\u0430\",\n        [LocaleCode.Bengali]: \"\\u0985\\u0999\\u09CD\\u0997\\u09B2\\u09BE\",\n        [LocaleCode.Berber]: \"Angola\",\n        [LocaleCode.Bhutani]: \"\\u0F60\\u0F56\\u0FB2\\u0F74\\u0F42\",\n        [LocaleCode.Bosnian]: \"Angola\",\n        [LocaleCode.Breton]: \"Angola\",\n        [LocaleCode.Bulgarian]: \"\\u0410\\u043D\\u0433\\u043E\\u043B\\u0430\",\n        [LocaleCode.Burmese]: \"\\u1021\\u1004\\u103A\\u1039\\u1002\\u101C\\u102D\\u1010\\u103A\",\n        [LocaleCode.Catalan]: \"Angola\",\n        [LocaleCode.Chinese]: \"\\u5B89\\u54E5\\u62C9\",\n        [LocaleCode.Croatian]: \"Angola\",\n        [LocaleCode.Czech]: \"Angola\",\n        [LocaleCode.Danish]: \"Angola\",\n        [LocaleCode.Dutch]: \"Angola\",\n        [LocaleCode.English]: \"Angola\",\n        [LocaleCode.Esperanto]: \"Angolo\",\n        [LocaleCode.Estonian]: \"Angola\",\n        [LocaleCode.Finnish]: \"Angola\",\n        [LocaleCode.French]: \"Angola\",\n        [LocaleCode.Frisian]: \"Angola\",\n        [LocaleCode.Galician]: \"Angola\",\n        [LocaleCode.Georgian]: \"\\u10D0\\u10DC\\u10D2\\u10DD\\u10DA\\u10D0\",\n        [LocaleCode.German]: \"Angola\",\n        [LocaleCode.Greenlandic]: \"Angola\",\n        [LocaleCode.Greek]: \"\\u0391\\u03B3\\u03BA\\u03CC\\u03BB\\u03B1\",\n        [LocaleCode.Gujarati]: \"\\u0A85\\u0A82\\u0A97\\u0ACB\\u0AB2\\u0ABE\",\n        [LocaleCode.Haitian]: \"Angola\",\n        [LocaleCode.Hausa]: \"Angola\",\n        [LocaleCode.Hebrew]: \"\\u05D0\\u05E0\\u05D2\\u05D5\\u05DC\\u05D4\",\n        [LocaleCode.Hindi]: \"\\u0905\\u0919\\u094D\\u0917\\u094B\\u0932\\u093E\",\n        [LocaleCode.Hungarian]: \"Angola\",\n        [LocaleCode.Icelandic]: \"Angola\",\n        [LocaleCode.Igbo]: \"Angola\",\n        [LocaleCode.Indonesian]: \"Angola\",\n        [LocaleCode.Irish]: \"Angola\",\n        [LocaleCode.Italian]: \"Angola\",\n        [LocaleCode.Japanese]: \"\\u30A2\\u30F3\\u30B4\\u30E9\",\n        [LocaleCode.Javanese]: \"Anggol\",\n        [LocaleCode.Kannada]: \"\\u0C85\\u0C82\\u0C97\\u0CCB\\u0CB2\\u0CBE\",\n        [LocaleCode.Kazakh]: \"\\u0410\\u043D\\u0433\\u043E\\u043B\\u0430\",\n        [LocaleCode.Khmer]: \"\\u17A2\\u1784\\u17CB\\u1780\\u17B6\\u179B\\u17A2\\u1784\\u17CB\\u1782\\u17D2\\u179B\\u17C1\\u179F\",\n        [LocaleCode.Korean]: \"\\uC559\\uACE8\\uB77C\",\n        [LocaleCode.Kurdish]: \"Angola\",\n        [LocaleCode.Kyrgyz]: \"\\u0410\\u043D\\u0433\\u043E\\u043B\\u0430\",\n        [LocaleCode.Lao]: \"\\u0EAD\\u0EB0\\u0E99\\u0EB2\\u0E94\\u0EB2\",\n        [LocaleCode.Latin]: \"Angola\",\n        [LocaleCode.Latvian]: \"Angola\",\n        [LocaleCode.Lithuanian]: \"Angola\",\n        [LocaleCode.Luxembourgish]: \"Angola\",\n        [LocaleCode.Macedonian]: \"\\u0410\\u043D\\u0433\\u043E\\u043B\\u0430\",\n        [LocaleCode.Malagasy]: \"Angola\",\n        [LocaleCode.Malay]: \"Angola\",\n        [LocaleCode.Malayalam]: \"\\u0D05\\u0D02\\u0D17\\u0D4B\\u0D33\\u0D3E\",\n        [LocaleCode.Maltese]: \"Angola\",\n        [LocaleCode.Maori]: \"Angola\",\n        [LocaleCode.Marathi]: \"\\u0905\\u0919\\u094D\\u0917\\u094B\\u0932\\u093E\",\n        [LocaleCode.Mongolian]: \"\\u0410\\u043D\\u0433\\u043E\\u043B\\u0430\",\n        [LocaleCode.Nepali]: \"\\u0905\\u0919\\u094D\\u0917\\u094B\\u0932\\u093E\",\n        [LocaleCode.Norwegian]: \"Angola\",\n        [LocaleCode.Pashto]: \"\\u0627\\u0646\\u06AB\\u0648\\u0644\\u0627\",\n        [LocaleCode.Persian]: \"\\u0622\\u0646\\u06AF\\u0648\\u0644\\u0627\",\n        [LocaleCode.Polish]: \"Angola\",\n        [LocaleCode.Portuguese]: \"Angola\",\n        [LocaleCode.Punjabi]: \"\\u0A05\\u0A19\\u0A4D\\u0A17\\u0A4B\\u0A32\\u0A3E\",\n        [LocaleCode.Romanian]: \"Angole\",\n        [LocaleCode.Russian]: \"\\u0410\\u043D\\u0433\\u043E\\u043B\\u0430\",\n        [LocaleCode.Samoan]: \"Angola\",\n        [LocaleCode.Sanskrit]: \"\\u0905\\u0919\\u094D\\u0917\\u094B\\u0932\\u093E\",\n        [LocaleCode.Scots]: \"Angola\",\n        [LocaleCode.Serbian]: \"\\u0410\\u043D\\u0433\\u043E\\u043B\\u0430\",\n        [LocaleCode.Sesotho]: \"Angola\",\n        [LocaleCode.Shona]: \"Angola\",\n        [LocaleCode.Sindhi]: \"\\u0905\\u0919\\u094D\\u0917\\u094B\\u0932\\u093E\",\n        [LocaleCode.Sinhala]: \"\\u0D86\\u0D9C\\u0DBD\\u0DD2\\u0DBA\\u0DCF\\u0DC0\",\n        [LocaleCode.Slovak]: \"Angola\",\n        [LocaleCode.Slovenian]: \"Angola\",\n        [LocaleCode.Somali]: \"Angola\",\n        [LocaleCode.Spanish]: \"Angola\",\n        [LocaleCode.Sudanese]: \"Angola\",\n        [LocaleCode.Swahili]: \"Angola\",\n        [LocaleCode.Swedish]: \"Angola\",\n        [LocaleCode.Tagalog]: \"Angola\",\n        [LocaleCode.Tajik]: \"\\u0410\\u043D\\u0433\\u043E\\u043B\\u0430\",\n        [LocaleCode.Tamil]: \"\\u0B85\\u0B99\\u0BCD\\u0B95\\u0BCB\\u0BB2\\u0BBE\",\n        [LocaleCode.Tatar]: \"\\u0410\\u043D\\u0433\\u043E\\u043B\\u0430\",\n        [LocaleCode.Telugu]: \"\\u0C05\\u0C02\\u0C17\\u0C4B\\u0C32\\u0C3E\",\n        [LocaleCode.Thai]: \"\\u0E2D\\u0E07\\u0E04\\u0E4C\\u0E01\\u0E32\\u0E23\\u0E2D\\u0E32\\u0E19\\u0E32\\u0E21\\u0E34\\u0E2A\\u0E16\\u0E32\\u0E19\",\n        [LocaleCode.Tibetan]: \"\\u0F68\\u0F44\\u0F0B\\u0F63\\u0F7C\\u0F0B\",\n        [LocaleCode.Turkish]: \"Angola\",\n        [LocaleCode.Ukrainian]: \"\\u0410\\u043D\\u0433\\u043E\\u043B\\u0430\",\n        [LocaleCode.Urdu]: \"\\u0627\\u0646\\u06AF\\u0648\\u0644\\u0627\",\n        [LocaleCode.Uzbek]: \"Angola\",\n        [LocaleCode.Vietnamese]: \"Angola\",\n        [LocaleCode.Xhosa]: \"Angola\",\n        [LocaleCode.Welsh]: \"Angola\",\n        [LocaleCode.Yiddish]: \"\\u05D0\\u05E0\\u05D2\\u05D5\\u05DC\\u05D4\",\n        [LocaleCode.Yoruba]: \"Angola\",\n        [LocaleCode.Zulu]: \"Angola\"\n      }\n    }\n  },\n  Anguilla: {\n    i18n: {\n      calling_codes: [1264],\n      currencies: [\n        CurrencyCode.DominicaDollar,\n        CurrencyCode.EastCaribbeanDollar,\n        CurrencyCode.Euro,\n        CurrencyCode.UnitedStatesDollar,\n        CurrencyCode.BritishPound\n      ],\n      languages: [LocaleCode.English, LocaleCode.Spanish],\n      tz: {\n        offsets: [TimezoneOffset.UTC_MINUS_4],\n        regions: [TimezoneRegions.AmericaAnguilla],\n        timezones: [Timezones.AtlanticStandardTime]\n      }\n    },\n    id: CountryCode.Anguilla,\n    info: {\n      flag: {\n        emoji: \"\\u{1F1E6}\\u{1F1EC}\",\n        emoji_unicode: \"U+1F1E6 U+1F1EC\",\n        svg: \"https://www.countryflags.io/ai/flat/64.svg\"\n      },\n      tld: [\".ai\"]\n    },\n    iso: {\n      alpha2: CountryCode.Anguilla,\n      alpha3: \"AIA\",\n      numeric: \"660\"\n    },\n    name: {\n      alt_spellings: [\"AI\"],\n      demonym: \"Anguillian\",\n      native: {\n        endonym: \"Anguilla\"\n      },\n      official: \"Anguilla\",\n      short: \"Anguilla\",\n      translations: {\n        [LocaleCode.Afrikaans]: \"Anguilla\",\n        [LocaleCode.Albanian]: \"Anguilla\",\n        [LocaleCode.Amharic]: \"\\u12A0\\u1295\\u1309\\u120B\",\n        [LocaleCode.Arabic]: \"\\u0623\\u0646\\u063A\\u0648\\u064A\\u0644\\u0627\",\n        [LocaleCode.Armenian]: \"\\u0531\\u0576\\u0563\\u056B\\u056C\\u0561\",\n        [LocaleCode.Azerbaijani]: \"Az\\u0259rbaycan\",\n        [LocaleCode.Bashkir]: \"\\u0410\\u043D\\u0433\\u0438\\u043B\\u0438\",\n        [LocaleCode.Basque]: \"Angila\",\n        [LocaleCode.Belarusian]: \"\\u0410\\u043D\\u0433\\u0438\\u043B\\u0438\",\n        [LocaleCode.Bengali]: \"\\u0985\\u0999\\u09CD\\u0997\\u09C0\\u09B2\\u09BE\",\n        [LocaleCode.Berber]: \"\\u0623\\u0646\\u063A\\u0648\\u064A\\u0644\\u0627\",\n        [LocaleCode.Bhutani]: \"\\u0F68\\u0F44\\u0F0B\\u0F63\\u0F7C\\u0F0B\",\n        [LocaleCode.Bosnian]: \"Angila\",\n        [LocaleCode.Breton]: \"Angila\",\n        [LocaleCode.Bulgarian]: \"\\u0410\\u043D\\u0433\\u0438\\u043B\\u0438\",\n        [LocaleCode.Burmese]: \"\\u1021\\u1004\\u103A\\u1039\\u1002\\u101C\\u102D\\u1010\\u103A\",\n        [LocaleCode.Catalan]: \"Angilla\",\n        [LocaleCode.Chinese]: \"\\u5B89\\u572D\\u62C9\",\n        [LocaleCode.Croatian]: \"Angila\",\n        [LocaleCode.Czech]: \"Anguilla\",\n        [LocaleCode.Danish]: \"Anguilla\",\n        [LocaleCode.Dutch]: \"Anguilla\",\n        [LocaleCode.English]: \"Anguilla\",\n        [LocaleCode.Esperanto]: \"Angila\",\n        [LocaleCode.Estonian]: \"Anguilla\",\n        [LocaleCode.Finnish]: \"Anguilla\",\n        [LocaleCode.French]: \"Anguilla\",\n        [LocaleCode.Frisian]: \"Angila\",\n        [LocaleCode.Galician]: \"Anguilla\",\n        [LocaleCode.Georgian]: \"\\u10D0\\u10DC\\u10D2\\u10D8\\u10DA\\u10D0\",\n        [LocaleCode.German]: \"Anguilla\",\n        [LocaleCode.Greenlandic]: \"Anguilla\",\n        [LocaleCode.Greek]: \"\\u0391\\u03BD\\u03B3\\u03BA\\u03C5\\u03BB\\u03AC\",\n        [LocaleCode.Gujarati]: \"\\u0A85\\u0A82\\u0A97\\u0ACD\\u0AAF\\u0ABE\\u0AB2\\u0ABE\",\n        [LocaleCode.Haitian]: \"Anguilla\",\n        [LocaleCode.Hausa]: \"Anguilla\",\n        [LocaleCode.Hebrew]: \"\\u05D0\\u05E0\\u05D2\\u05D5\\u05D9\\u05D0\\u05DC\\u05D4\",\n        [LocaleCode.Hindi]: \"\\u0905\\u0902\\u0917\\u094D\\u0935\\u0947\\u0932\\u093E\",\n        [LocaleCode.Hungarian]: \"Anguilla\",\n        [LocaleCode.Icelandic]: \"Anguilla\",\n        [LocaleCode.Igbo]: \"Anguilla\",\n        [LocaleCode.Indonesian]: \"Anguilla\",\n        [LocaleCode.Irish]: \"Anguilla\",\n        [LocaleCode.Italian]: \"Anguilla\",\n        [LocaleCode.Japanese]: \"\\u30A2\\u30F3\\u30AE\\u30E9\",\n        [LocaleCode.Javanese]: \"Anguilla\",\n        [LocaleCode.Kannada]: \"\\u0C85\\u0C82\\u0C97\\u0CCD\\u0CB5\\u0CC7\\u0CB2\\u0CBE\",\n        [LocaleCode.Kazakh]: \"\\u0410\\u043D\\u0433\\u0438\\u043B\\u0438\",\n        [LocaleCode.Khmer]: \"\\u17A2\\u1784\\u17CB\\u1780\\u17B6\\u179A\\u17A0\\u17D2\\u1782\\u17B8\\u1798\",\n        [LocaleCode.Korean]: \"\\uC575\\uADC8\\uB77C\",\n        [LocaleCode.Kurdish]: \"Anguilla\",\n        [LocaleCode.Kyrgyz]: \"\\u0410\\u043D\\u0433\\u0438\\u043B\\u0438\",\n        [LocaleCode.Lao]: \"\\u0EAD\\u0EB0\\u0E99\\u0EB0\\u0E88\\u0EB3\",\n        [LocaleCode.Latin]: \"Anguilla\",\n        [LocaleCode.Latvian]: \"Anguilla\",\n        [LocaleCode.Lithuanian]: \"Anguilla\",\n        [LocaleCode.Luxembourgish]: \"Angilla\",\n        [LocaleCode.Macedonian]: \"\\u0410\\u043D\\u0433\\u0438\\u043B\\u0438\",\n        [LocaleCode.Malagasy]: \"Angila\",\n        [LocaleCode.Malay]: \"Anguilla\",\n        [LocaleCode.Malayalam]: \"\\u0D05\\u0D02\\u0D17\\u0D4D\\u0D35\\u0D47\\u0D32\\u0D3E\",\n        [LocaleCode.Maltese]: \"Anguilla\",\n        [LocaleCode.Maori]: \"Anguilla\",\n        [LocaleCode.Marathi]: \"\\u0905\\u0902\\u0917\\u094D\\u0935\\u0947\\u0932\\u093E\",\n        [LocaleCode.Mongolian]: \"\\u0410\\u043D\\u0433\\u0438\\u043B\\u0438\",\n        [LocaleCode.Nepali]: \"\\u0905\\u0902\\u0917\\u094D\\u0935\\u0947\\u0932\\u093E\",\n        [LocaleCode.Norwegian]: \"Anguilla\",\n        [LocaleCode.Pashto]: \"\\u0622\\u0646\\u06AF\\u0648\\u0644\\u0627\",\n        [LocaleCode.Persian]: \"\\u0622\\u0646\\u06AF\\u0648\\u0644\\u0627\",\n        [LocaleCode.Polish]: \"Anguilla\",\n        [LocaleCode.Portuguese]: \"Anguilla\",\n        [LocaleCode.Punjabi]: \"\\u0A05\\u0A02\\u0A17\\u0A40\\u0A32\\u0A3E\",\n        [LocaleCode.Romanian]: \"Anguilla\",\n        [LocaleCode.Russian]: \"\\u0410\\u043D\\u0433\\u0438\\u043B\\u0438\",\n        [LocaleCode.Samoan]: \"Anguilla\",\n        [LocaleCode.Sanskrit]: \"\\u0905\\u0902\\u0917\\u094D\\u0935\\u0947\\u0932\\u093E\",\n        [LocaleCode.Scots]: \"Anguilla\",\n        [LocaleCode.Serbian]: \"\\u0410\\u043D\\u0433\\u0438\\u043B\\u0438\",\n        [LocaleCode.Sesotho]: \"Anguilla\",\n        [LocaleCode.Shona]: \"Anguilla\",\n        [LocaleCode.Sindhi]: \"\\u0905\\u0902\\u0917\\u094D\\u0935\\u0947\\u0932\\u093E\",\n        [LocaleCode.Sinhala]: \"\\u0D86\\u0D82\\u0D9C\\u0DD2\\u0DBD\\u0DCF\\u0DC0\",\n        [LocaleCode.Slovak]: \"Anguilla\",\n        [LocaleCode.Slovenian]: \"Anguilla\",\n        [LocaleCode.Somali]: \"Anguilla\",\n        [LocaleCode.Spanish]: \"Anguilla\",\n        [LocaleCode.Sudanese]: \"Anguilla\",\n        [LocaleCode.Swahili]: \"Anguilla\",\n        [LocaleCode.Swedish]: \"Anguilla\",\n        [LocaleCode.Tagalog]: \"Anguilla\",\n        [LocaleCode.Tajik]: \"\\u0410\\u043D\\u0433\\u0438\\u043B\\u0438\",\n        [LocaleCode.Tamil]: \"\\u0B85\\u0B99\\u0BCD\\u0B95\\u0BC8\\u0BB2\\u0BBE\",\n        [LocaleCode.Tatar]: \"\\u0410\\u043D\\u0433\\u0438\\u043B\\u0438\",\n        [LocaleCode.Telugu]: \"\\u0C05\\u0C02\\u0C17\\u0C4D\\u0C35\\u0C47\\u0C32\\u0C3E\",\n        [LocaleCode.Thai]: \"\\u0E2D\\u0E31\\u0E07\\u0E01\\u0E32\\u0E25\\u0E32\",\n        [LocaleCode.Tibetan]: \"\\u0F68\\u0F44\\u0F0B\\u0F63\\u0F72\\u0F0B\",\n        [LocaleCode.Turkish]: \"Anguilla\",\n        [LocaleCode.Ukrainian]: \"\\u0410\\u043D\\u0433\\u0438\\u043B\\u0438\",\n        [LocaleCode.Urdu]: \"\\u0622\\u0646\\u06AF\\u0648\\u0644\\u0627\",\n        [LocaleCode.Uzbek]: \"\\u0410\\u043D\\u0433\\u0438\\u043B\\u0438\",\n        [LocaleCode.Vietnamese]: \"Anguilla\",\n        [LocaleCode.Welsh]: \"Anguilla\",\n        [LocaleCode.Xhosa]: \"Anguilla\",\n        [LocaleCode.Yiddish]: \"Anguilla\",\n        [LocaleCode.Yoruba]: \"Anguilla\",\n        [LocaleCode.Zulu]: \"Anguilla\"\n      }\n    }\n  },\n  Antarctica: {\n    i18n: {\n      calling_codes: [672],\n      currencies: [CurrencyCode.UnitedStatesDollar, CurrencyCode.Euro],\n      languages: [\n        LocaleCode.English,\n        LocaleCode.Spanish,\n        LocaleCode.French,\n        LocaleCode.Portuguese,\n        LocaleCode.Italian,\n        LocaleCode.Dutch,\n        LocaleCode.German,\n        LocaleCode.Swedish,\n        LocaleCode.Norwegian,\n        LocaleCode.Danish,\n        LocaleCode.Finnish\n      ],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_1, TimezoneOffset.UTC_PLUS_2],\n        regions: [\n          TimezoneRegions.AntarcticaCasey,\n          TimezoneRegions.AntarcticaDavis,\n          TimezoneRegions.AntarcticaMcMurdo,\n          TimezoneRegions.AntarcticaPalmer,\n          TimezoneRegions.AntarcticaRothera\n        ],\n        timezones: [\n          Timezones.AtlanticStandardTime,\n          Timezones.CentralTime,\n          Timezones.EasternTime,\n          Timezones.AtlanticStandardTime,\n          Timezones.AzoresStandardTime,\n          Timezones.NewfoundlandStandardTime\n        ]\n      }\n    },\n    id: CountryCode.Antarctica,\n    info: {\n      flag: {\n        emoji: \"\\u{1F1E6}\\u{1F1F6}\",\n        emoji_unicode: \"U+1F1E6 U+1F1F6\",\n        svg: \"https://www.countryflags.io/aq/flat/64.svg\"\n      },\n      tld: [\".aq\"]\n    },\n    iso: {\n      alpha2: CountryCode.Antarctica,\n      alpha3: \"ATA\",\n      numeric: \"010\"\n    },\n    name: {\n      alt_spellings: [\"AQ\"],\n      demonym: \"Antarctican\",\n      native: {\n        endonym: \"Antarctica\"\n      },\n      official: \"Antarctica\",\n      short: \"Antarctica\",\n      translations: {\n        [LocaleCode.Afrikaans]: \"Antarctica\",\n        [LocaleCode.Albanian]: \"Antarktika\",\n        [LocaleCode.Amharic]: \"\\u12A0\\u1295\\u1272\\u120D\\u12AB\\u1293\",\n        [LocaleCode.Arabic]: \"\\u0623\\u0646\\u062A\\u0627\\u0631\\u0643\\u062A\\u064A\\u0643\\u0627\",\n        [LocaleCode.Armenian]: \"\\u0540\\u0561\\u0576\\u0561\\u0580\\u0561\\u057F\\u056F\\u0578\",\n        [LocaleCode.Azerbaijani]: \"Az\\u0259rbaycan\",\n        [LocaleCode.Bashkir]: \"\\u0410\\u043D\\u0442\\u0430\\u0440\\u043A\\u0442\\u0438\\u043A\\u0430\",\n        [LocaleCode.Basque]: \"Antarktika\",\n        [LocaleCode.Belarusian]: \"\\u0410\\u043D\\u0442\\u0430\\u0440\\u043A\\u0442\\u0438\\u043A\\u0430\",\n        [LocaleCode.Bengali]: \"\\u0985\\u09A8\\u09CD\\u09A4\\u09B0\\u09BE\\u09B6\\u09CD\\u09AC\\u09C0\",\n        [LocaleCode.Berber]: \"\\u0623\\u0646\\u062A\\u0627\\u0631\\u0643\\u062A\\u064A\\u0643\\u0627\",\n        [LocaleCode.Bhutani]: \"\\u0F68\\u0F44\\u0F0B\\u0F63\\u0F72\\u0F0B\",\n        [LocaleCode.Bosnian]: \"Antarktika\",\n        [LocaleCode.Breton]: \"Antarktika\",\n        [LocaleCode.Bulgarian]: \"\\u0410\\u043D\\u0442\\u0430\\u0440\\u043A\\u0442\\u0438\\u043A\\u0430\",\n        [LocaleCode.Burmese]: \"\\u1021\\u1014\\u1039\\u1010\\u102C\\u101B\\u102E\\u1038\\u101A\\u102C\\u1038\",\n        [LocaleCode.Catalan]: \"Ant\\xE0rtida\",\n        [LocaleCode.Chinese]: \"\\u5357\\u6781\\u6D32\",\n        [LocaleCode.Croatian]: \"Antarktika\",\n        [LocaleCode.Czech]: \"Antarktida\",\n        [LocaleCode.Danish]: \"Antarktis\",\n        [LocaleCode.Dutch]: \"Antarctica\",\n        [LocaleCode.English]: \"Antarctica\",\n        [LocaleCode.Esperanto]: \"Antarktika\",\n        [LocaleCode.Estonian]: \"Antarktika\",\n        [LocaleCode.Finnish]: \"Antarktis\",\n        [LocaleCode.French]: \"Antarctica\",\n        [LocaleCode.Frisian]: \"Antarktis\",\n        [LocaleCode.Galician]: \"Ant\\xE1rtida\",\n        [LocaleCode.Georgian]: \"\\u10D0\\u10DC\\u10E2\\u10D0\\u10E0\\u10E5\\u10E2\\u10D8\\u10D9\\u10D0\",\n        [LocaleCode.German]: \"Antarktis\",\n        [LocaleCode.Greenlandic]: \"Antarktis\",\n        [LocaleCode.Greek]: \"\\u0391\\u03BD\\u03C4\\u03B1\\u03C1\\u03BA\\u03C4\\u03B9\\u03BA\\u03AE\",\n        [LocaleCode.Gujarati]: \"\\u0A85\\u0AA8\\u0ACD\\u0AA4\\u0AB0\\u0ABE\\u0AB6\\u0ACD\\u0AB5\\u0AC0\",\n        [LocaleCode.Haitian]: \"Antarctica\",\n        [LocaleCode.Hausa]: \"Antarktika\",\n        [LocaleCode.Hebrew]: \"\\u05D0\\u05E0\\u05D8\\u05E8\\u05E7\\u05D8\\u05D9\\u05E7\\u05D4\",\n        [LocaleCode.Hindi]: \"\\u0905\\u0928\\u094D\\u0924\\u0930\\u0915\\u094D\\u0937\\u0947\\u0924\\u094D\\u0930\",\n        [LocaleCode.Hungarian]: \"Antarktika\",\n        [LocaleCode.Icelandic]: \"Antarktis\",\n        [LocaleCode.Igbo]: \"Antarktika\",\n        [LocaleCode.Indonesian]: \"Antarktika\",\n        [LocaleCode.Irish]: \"Antarktika\",\n        [LocaleCode.Italian]: \"Antartide\",\n        [LocaleCode.Japanese]: \"\\u5357\\u6975\",\n        [LocaleCode.Javanese]: \"Antarktika\",\n        [LocaleCode.Kannada]: \"\\u0C85\\u0CA8\\u0CCD\\u0CA4\\u0CB0\\u0CBE\\u0CB6\\u0CCD\\u0CB5\\u0CBF\",\n        [LocaleCode.Kazakh]: \"\\u0410\\u043D\\u0442\\u0430\\u0440\\u043A\\u0442\\u0438\\u043A\\u0430\",\n        [LocaleCode.Khmer]: \"\\u17A2\\u1784\\u17CB\\u179F\\u17D2\\u1780\\u179A\\u17A2\\u17B6\\u1798\\u17C9\\u17BB\\u1799\",\n        [LocaleCode.Korean]: \"\\uC564\\uD2F0\\uCE74\\uD1A0\\uB2C9\",\n        [LocaleCode.Kurdish]: \"Antarktika\",\n        [LocaleCode.Kyrgyz]: \"\\u0410\\u043D\\u0442\\u0430\\u0440\\u043A\\u0442\\u0438\\u043A\\u0430\",\n        [LocaleCode.Lao]: \"\\u0EAD\\u0EB0\\u0E99\\u0EAD\\u0EA5\\u0EB2\\u0E81\\u0EB4\\u0EAA\\u0EB0\",\n        [LocaleCode.Latin]: \"Antarctica\",\n        [LocaleCode.Latvian]: \"Antarktika\",\n        [LocaleCode.Lithuanian]: \"Antarktis\",\n        [LocaleCode.Luxembourgish]: \"Antarktis\",\n        [LocaleCode.Macedonian]: \"\\u0410\\u043D\\u0442\\u0430\\u0440\\u043A\\u0442\\u0438\\u043A\\u0430\",\n        [LocaleCode.Malagasy]: \"Antarctica\",\n        [LocaleCode.Malay]: \"Antarktika\",\n        [LocaleCode.Malayalam]: \"\\u0D05\\u0D28\\u0D4D\\u0D24\\u0D30\\u0D3E\\u0D36\\u0D4D\\u0D35\\u0D3F\",\n        [LocaleCode.Maltese]: \"Antarktika\",\n        [LocaleCode.Maori]: \"Antarktika\",\n        [LocaleCode.Marathi]: \"\\u0905\\u0928\\u094D\\u0924\\u0930\\u093E\\u0936\\u094D\\u0935\\u093F\\u0915\\u093E\",\n        [LocaleCode.Mongolian]: \"\\u0410\\u043D\\u0442\\u0430\\u0440\\u043A\\u0442\\u0438\\u043A\\u0430\",\n        [LocaleCode.Nepali]: \"\\u0905\\u0928\\u094D\\u0924\\u0930\\u093E\\u0936\\u094D\\u0935\\u093F\\u0915\\u093E\",\n        [LocaleCode.Norwegian]: \"Antarktis\",\n        [LocaleCode.Pashto]: \"\\u0627\\u0646\\u062A\\u0627\\u0631\\u0643\\u062A\\u064A\\u0643\\u0627\",\n        [LocaleCode.Persian]: \"\\u0622\\u0646\\u062A\\u0627\\u0631\\u06A9\\u062A\\u06CC\\u06A9\\u0627\",\n        [LocaleCode.Polish]: \"Antarktyka\",\n        [LocaleCode.Portuguese]: \"Ant\\xE1rtida\",\n        [LocaleCode.Punjabi]: \"\\u0A05\\u0A28\\u0A4D\\u0A24\\u0A30\\u0A3E\\u0A36\\u0A3F\\u0A15\\u0A3E\",\n        [LocaleCode.Romanian]: \"Antarctica\",\n        [LocaleCode.Russian]: \"\\u0410\\u043D\\u0442\\u0430\\u0440\\u043A\\u0442\\u0438\\u043A\\u0430\",\n        [LocaleCode.Samoan]: \"Antarktika\",\n        [LocaleCode.Sanskrit]: \"\\u0905\\u0928\\u094D\\u0924\\u0930\\u093E\\u0936\\u094D\\u0935\\u093F\\u0915\\u093E\",\n        [LocaleCode.Scots]: \"Antarktika\",\n        [LocaleCode.Serbian]: \"\\u0410\\u043D\\u0442\\u0430\\u0440\\u043A\\u0442\\u0438\\u043A\\u0430\",\n        [LocaleCode.Sesotho]: \"Antarktika\",\n        [LocaleCode.Shona]: \"Antarktika\",\n        [LocaleCode.Sindhi]: \"Antarktika\",\n        [LocaleCode.Sinhala]: \"\\u0D86\\u0DB1\\u0DCA\\u0DA7\\u0DCA\\u0DA7\\u0DD2\\u0D9A\\u0DCF\\u0DC0\",\n        [LocaleCode.Slovak]: \"Antarktika\",\n        [LocaleCode.Slovenian]: \"Antarktika\",\n        [LocaleCode.Somali]: \"Antarktika\",\n        [LocaleCode.Spanish]: \"Ant\\xE1rtida\",\n        [LocaleCode.Sudanese]: \"Antarktika\",\n        [LocaleCode.Swahili]: \"Antarktika\",\n        [LocaleCode.Swedish]: \"Antarktis\",\n        [LocaleCode.Tagalog]: \"Antarktika\",\n        [LocaleCode.Tajik]: \"\\u0410\\u043D\\u0442\\u0430\\u0440\\u043A\\u0442\\u0438\\u043A\\u0430\",\n        [LocaleCode.Tamil]: \"\\u0B85\\u0BA9\\u0BCD\\u0BA4\\u0BBE\\u0BB0\\u0BCD\\u0B95\\u0BCD\\u0B95\\u0BBF\\u0B95\\u0BCD\",\n        [LocaleCode.Tatar]: \"\\u0410\\u043D\\u0442\\u0430\\u0440\\u043A\\u0442\\u0438\\u043A\\u0430\",\n        [LocaleCode.Telugu]: \"\\u0C05\\u0C28\\u0C4D\\u0C24\\u0C30\\u0C3E\\u0C36\\u0C4D\\u0C35\\u0C3F\\u0C15\\u0C3E\",\n        [LocaleCode.Thai]: \"\\u0E20\\u0E39\\u0E21\\u0E34\\u0E20\\u0E32\\u0E04\\u0E2D\\u0E32\\u0E19\\u0E31\\u0E19\\u0E15\\u0E34\\u0E01\\u0E32\",\n        [LocaleCode.Tibetan]: \"\\u0F68\\u0F7A\\u0F53\\u0F0B\\u0F4A\\u0F72\\u0F4A\\u0F7A\\u0F53\\u0F0B\\u0F40\\u0F72\\u0F66\\u0F72\\u0F0B\\u0F68\\u0F7A\\u0F53\\u0F0B\\u0F4A\\u0F72\\u0F4A\\u0F7A\\u0F53\\u0F0B\\u0F40\\u0F72\\u0F66\\u0F72\",\n        [LocaleCode.Turkish]: \"Antarktika\",\n        [LocaleCode.Ukrainian]: \"\\u0410\\u043D\\u0442\\u0430\\u0440\\u043A\\u0442\\u0438\\u043A\\u0430\",\n        [LocaleCode.Urdu]: \"\\u0627\\u0646\\u062A\\u0627\\u0631\\u06A9\\u062A\\u06CC\\u06A9\\u0627\",\n        [LocaleCode.Uzbek]: \"\\u0410\\u043D\\u0442\\u0430\\u0440\\u043A\\u0442\\u0438\\u043A\\u0430\",\n        [LocaleCode.Vietnamese]: \"\\u0110\\u1EA5t Antarktik\",\n        [LocaleCode.Welsh]: \"Antarktika\",\n        [LocaleCode.Xhosa]: \"Antarktika\",\n        [LocaleCode.Yiddish]: \"Antarktika\",\n        [LocaleCode.Yoruba]: \"Antarktika\",\n        [LocaleCode.Zulu]: \"Antarktika\"\n      }\n    }\n  },\n  Armenia: {\n    i18n: {\n      calling_codes: [374],\n      currencies: [CurrencyCode.ArmeniaDram],\n      languages: [LocaleCode.Armenian],\n      tz: {\n        offsets: [TimezoneOffset.UTC_PLUS_4],\n        regions: [TimezoneRegions.AsiaJakarta],\n        timezones: [Timezones.ArmeniaTime]\n      }\n    },\n    id: CountryCode.Armenia,\n    info: {\n      flag: {\n        emoji: \"\\u{1F1E6}\\u{1F1F2}\",\n        emoji_unicode: \"U+1F1E6 U+1F1F2\",\n        svg: \"https://www.countryflags.io/am/flat/64.svg\"\n      },\n      tld: [\".am\"]\n    },\n    iso: {\n      alpha2: CountryCode.Armenia,\n      alpha3: \"ARM\",\n      numeric: \"051\"\n    },\n    name: {\n      alt_spellings: [\"AM\", \"Hayastan\", \"Republic of Armenia\", \"\\u0540\\u0561\\u0575\\u0561\\u057D\\u057F\\u0561\\u0576\"],\n      demonym: \"Armenian\",\n      native: {\n        endonym: \"\\u0540\\u0561\\u0575\\u0561\\u057D\\u057F\\u0561\\u0576\"\n      },\n      official: \"Republic of Armenia\",\n      short: \"Armenia\",\n      translations: {\n        [LocaleCode.Afrikaans]: \"Armeni\\xEB\",\n        [LocaleCode.Albanian]: \"Armenia\",\n        [LocaleCode.Amharic]: \"\\u12A0\\u121B\\u122D\\u129B\",\n        [LocaleCode.Arabic]: \"\\u0623\\u0631\\u0645\\u064A\\u0646\\u064A\\u0627\",\n        [LocaleCode.Armenian]: \"\\u0540\\u0561\\u0575\\u0561\\u057D\\u057F\\u0561\\u0576\",\n        [LocaleCode.Azerbaijani]: \"Az\\u0259rbaycan\",\n        [LocaleCode.Bashkir]: \"\\u0410\\u0440\\u043C\\u0435\\u043D\\u0438\\u044F\",\n        [LocaleCode.Basque]: \"Arm\\xE9nia\",\n        [LocaleCode.Belarusian]: \"\\u0410\\u0440\\u043C\\u0435\\u043D\\u0438\\u044F\",\n        [LocaleCode.Bengali]: \"\\u0986\\u09B0\\u09CD\\u09AE\\u09C7\\u09A8\\u09BF\",\n        [LocaleCode.Berber]: \"\\u0623\\u0631\\u0645\\u064A\\u0646\\u064A\\u0627\",\n        [LocaleCode.Bhutani]: \"\\u0F62\\u0F92\\u0FB1\\u0F0B\\u0F53\\u0F42\",\n        [LocaleCode.Bosnian]: \"Armenija\",\n        [LocaleCode.Breton]: \"Armeni\\xEB\",\n        [LocaleCode.Bulgarian]: \"\\u0410\\u0440\\u043C\\u0435\\u043D\\u0438\\u044F\",\n        [LocaleCode.Burmese]: \"\\u1021\\u102C\\u1019\\u1010\\u102D\\u1010\\u1039\",\n        [LocaleCode.Catalan]: \"Arm\\xE8nia\",\n        [LocaleCode.Chinese]: \"\\u4E9A\\u7F8E\\u5C3C\\u4E9A\",\n        [LocaleCode.Croatian]: \"Armenija\",\n        [LocaleCode.Czech]: \"Arm\\xE9nie\",\n        [LocaleCode.Danish]: \"Armenien\",\n        [LocaleCode.Dutch]: \"Armeni\\xEB\",\n        [LocaleCode.English]: \"Armenia\",\n        [LocaleCode.Esperanto]: \"Armenia\",\n        [LocaleCode.Estonian]: \"Armeenia\",\n        [LocaleCode.Finnish]: \"Armenia\",\n        [LocaleCode.French]: \"Armenia\",\n        [LocaleCode.Frisian]: \"Armeenia\",\n        [LocaleCode.Galician]: \"Arm\\xE9nia\",\n        [LocaleCode.Georgian]: \"\\u10D0\\u10E0\\u10DB\\u10DD\\u10DC\\u10D8\",\n        [LocaleCode.German]: \"Armenien\",\n        [LocaleCode.Greenlandic]: \"Armenia\",\n        [LocaleCode.Greek]: \"\\u0391\\u03C1\\u03BC\\u03B5\\u03BD\\u03AF\\u03B1\",\n        [LocaleCode.Gujarati]: \"\\u0A85\\u0AB0\\u0ACD\\u0AAE\\u0AC7\\u0AA8\\u0ABF\",\n        [LocaleCode.Haitian]: \"Armenia\",\n        [LocaleCode.Hausa]: \"Armenia\",\n        [LocaleCode.Hebrew]: \"\\u05D0\\u05E8\\u05DE\\u05E0\\u05D9\\u05D4\",\n        [LocaleCode.Hindi]: \"\\u0905\\u05E8\\u05DE\\u05E0\\u093F\\u092F\\u093E\",\n        [LocaleCode.Hungarian]: \"\\xD6rm\\xE9nyorsz\\xE1g\",\n        [LocaleCode.Icelandic]: \"Armenia\",\n        [LocaleCode.Igbo]: \"Armenia\",\n        [LocaleCode.Indonesian]: \"Armenia\",\n        [LocaleCode.Irish]: \"Armenia\",\n        [LocaleCode.Italian]: \"Armenia\",\n        [LocaleCode.Japanese]: \"\\u30A2\\u30EB\\u30E1\\u30CB\\u30A2\",\n        [LocaleCode.Javanese]: \"Armenia\",\n        [LocaleCode.Kannada]: \"\\u0C85\\u0CB0\\u0CCD\\u0CAE\\u0CC7\\u0CA8\\u0CBF\",\n        [LocaleCode.Kazakh]: \"\\u0410\\u0440\\u043C\\u0435\\u043D\\u0438\\u044F\",\n        [LocaleCode.Khmer]: \"\\u17A2\\u17B6\\u1798\\u17C9\\u17C1\\u179A\\u17B8\",\n        [LocaleCode.Korean]: \"\\uC544\\uB974\\uBA54\\uB2C8\\uC544\",\n        [LocaleCode.Kurdish]: \"Armenia\",\n        [LocaleCode.Kyrgyz]: \"\\u0410\\u0440\\u043C\\u0435\\u043D\\u0438\\u044F\",\n        [LocaleCode.Lao]: \"\\u0EAD\\u0EB2\\u0EAB\\u0EBC\\u0E99\\u0EB2\",\n        [LocaleCode.Latin]: \"Armenia\",\n        [LocaleCode.Latvian]: \"Armeenia\",\n        [LocaleCode.Lithuanian]: \"Arm\\u0117nija\",\n        [LocaleCode.Luxembourgish]: \"Armenien\",\n        [LocaleCode.Macedonian]: \"\\u0410\\u0440\\u043C\\u0435\\u043D\\u0438\\u0458\\u0430\",\n        [LocaleCode.Malagasy]: \"Armenia\",\n        [LocaleCode.Malay]: \"Armenia\",\n        [LocaleCode.Malayalam]: \"\\u0D05\\u0D30\\u0D4D\\u200D\\u0D2E\\u0D47\\u0D28\\u0D3F\",\n        [LocaleCode.Maltese]: \"Armenia\",\n        [LocaleCode.Maori]: \"Armenia\",\n        [LocaleCode.Marathi]: \"\\u0905\\u0930\\u094D\\u092E\\u0947\\u0928\\u093F\",\n        [LocaleCode.Mongolian]: \"\\u0410\\u0440\\u043C\\u0435\\u043D\\u0438\\u044F\",\n        [LocaleCode.Nepali]: \"\\u0905\\u0930\\u094D\\u092E\\u0947\\u0928\\u093F\",\n        [LocaleCode.Norwegian]: \"Armenia\",\n        [LocaleCode.Pashto]: \"\\u0622\\u0631\\u0645\\u06CC\\u0646\\u06CC\\u0627\",\n        [LocaleCode.Persian]: \"\\u0627\\u0631\\u0645\\u0646\\u0633\\u062A\\u0627\\u0646\",\n        [LocaleCode.Polish]: \"Armenia\",\n        [LocaleCode.Portuguese]: \"Armenia\",\n        [LocaleCode.Punjabi]: \"\\u0A05\\u0A30\\u0A2E\\u0A40\\u0A28\\u0A40\",\n        [LocaleCode.Romanian]: \"Armenia\",\n        [LocaleCode.Russian]: \"\\u0410\\u0440\\u043C\\u0435\\u043D\\u0438\\u044F\",\n        [LocaleCode.Samoan]: \"Armenia\",\n        [LocaleCode.Sanskrit]: \"Armenia\",\n        [LocaleCode.Scots]: \"Armenia\",\n        [LocaleCode.Serbian]: \"\\u0410\\u0440\\u043C\\u0435\\u043D\\u0438\\u0458\\u0430\",\n        [LocaleCode.Sesotho]: \"Armenia\",\n        [LocaleCode.Shona]: \"Armenia\",\n        [LocaleCode.Sindhi]: \"Armenia\",\n        [LocaleCode.Sinhala]: \"\\u0D86\\u0DBB\\u0DCA\\u0DB8\\u0DD3\\u0DB1\\u0DD2\",\n        [LocaleCode.Slovak]: \"Armenia\",\n        [LocaleCode.Slovenian]: \"Armenija\",\n        [LocaleCode.Somali]: \"Armenia\",\n        [LocaleCode.Spanish]: \"Armenia\",\n        [LocaleCode.Sudanese]: \"Armenia\",\n        [LocaleCode.Swahili]: \"Armenia\",\n        [LocaleCode.Swedish]: \"Armenien\",\n        [LocaleCode.Tagalog]: \"Armenia\",\n        [LocaleCode.Tajik]: \"\\u0410\\u0440\\u043C\\u0435\\u043D\\u0438\\u044F\",\n        [LocaleCode.Tamil]: \"\\u0B85\\u0BB0\\u0BCD\\u0BAE\\u0BC7\\u0BA9\\u0BBF\\u0BAF\\u0BA9\\u0BCD\",\n        [LocaleCode.Tatar]: \"\\u0410\\u0440\\u043C\\u0435\\u043D\\u0438\\u044F\",\n        [LocaleCode.Telugu]: \"\\u0C05\\u0C30\\u0C4D\\u0C2E\\u0C47\\u0C28\\u0C3F\",\n        [LocaleCode.Thai]: \"\\u0E2D\\u0E32\\u0E23\\u0E4C\\u0E40\\u0E21\\u0E19\\u0E34\\u0E2A\\u0E16\\u0E32\\u0E19\",\n        [LocaleCode.Tibetan]: \"\\u0F68\\u0F62\\u0F0B\\u0F58\\u0F7A\\u0F0B\\u0F53\\u0F72\\u0F0B\\u0F61\\u0F74\\u0F0D\",\n        [LocaleCode.Turkish]: \"Ermenistan\",\n        [LocaleCode.Ukrainian]: \"\\u0410\\u0440\\u043C\\u0435\\u043D\\u0456\\u044F\",\n        [LocaleCode.Urdu]: \"\\u0627\\u0631\\u0645\\u0646\\u0633\\u062A\\u0627\\u0646\",\n        [LocaleCode.Uzbek]: \"\\u0410\\u0440\\u043C\\u0435\\u043D\\u0438\\u044F\",\n        [LocaleCode.Vietnamese]: \"Armenia\",\n        [LocaleCode.Welsh]: \"Armenia\",\n        [LocaleCode.Xhosa]: \"Armenia\",\n        [LocaleCode.Yiddish]: \"\\u05D0\\u05E8\\u05DE\\u05E0\\u05D9\\u05D4\",\n        [LocaleCode.Yoruba]: \"Armenia\",\n        [LocaleCode.Zulu]: \"Armenia\"\n      }\n    }\n  },\n  SomeCountry: {\n    i18n: {\n      calling_codes: [],\n      currencies: [],\n      languages: [],\n      tz: {\n        offsets: [],\n        regions: [],\n        timezones: []\n      }\n    },\n    id: CountryCode.AmericanSamoa,\n    info: {\n      flag: {\n        emoji: \"\",\n        emoji_unicode: \"\",\n        svg: \"\"\n      },\n      tld: []\n    },\n    iso: {\n      alpha2: CountryCode.AmericanSamoa,\n      alpha3: \"\",\n      numeric: \"\"\n    },\n    name: {\n      alt_spellings: [],\n      demonym: \"\",\n      native: {\n        endonym: \"\"\n      },\n      official: \"\",\n      short: \"\",\n      translations: {\n        [LocaleCode.Afrikaans]: \"\",\n        [LocaleCode.Albanian]: \"\",\n        [LocaleCode.Amharic]: \"\",\n        [LocaleCode.Arabic]: \"\",\n        [LocaleCode.Armenian]: \"\",\n        [LocaleCode.Azerbaijani]: \"\",\n        [LocaleCode.Bashkir]: \"\",\n        [LocaleCode.Basque]: \"\",\n        [LocaleCode.Belarusian]: \"\",\n        [LocaleCode.Bengali]: \"\",\n        [LocaleCode.Berber]: \"\",\n        [LocaleCode.Bhutani]: \"\",\n        [LocaleCode.Bosnian]: \"\",\n        [LocaleCode.Breton]: \"\",\n        [LocaleCode.Bulgarian]: \"\",\n        [LocaleCode.Burmese]: \"\",\n        [LocaleCode.Catalan]: \"\",\n        [LocaleCode.Chinese]: \"\",\n        [LocaleCode.Croatian]: \"\",\n        [LocaleCode.Czech]: \"\",\n        [LocaleCode.Danish]: \"\",\n        [LocaleCode.Dutch]: \"\",\n        [LocaleCode.English]: \"\",\n        [LocaleCode.Esperanto]: \"\",\n        [LocaleCode.Estonian]: \"\",\n        [LocaleCode.Finnish]: \"\",\n        [LocaleCode.French]: \"\",\n        [LocaleCode.Frisian]: \"\",\n        [LocaleCode.Galician]: \"\",\n        [LocaleCode.Georgian]: \"\",\n        [LocaleCode.German]: \"\",\n        [LocaleCode.Greenlandic]: \"\",\n        [LocaleCode.Greek]: \"\",\n        [LocaleCode.Gujarati]: \"\",\n        [LocaleCode.Haitian]: \"\",\n        [LocaleCode.Hausa]: \"\",\n        [LocaleCode.Hebrew]: \"\",\n        [LocaleCode.Hindi]: \"\",\n        [LocaleCode.Hungarian]: \"\",\n        [LocaleCode.Icelandic]: \"\",\n        [LocaleCode.Igbo]: \"\",\n        [LocaleCode.Indonesian]: \"\",\n        [LocaleCode.Irish]: \"\",\n        [LocaleCode.Italian]: \"\",\n        [LocaleCode.Japanese]: \"\",\n        [LocaleCode.Javanese]: \"\",\n        [LocaleCode.Kannada]: \"\",\n        [LocaleCode.Kazakh]: \"\",\n        [LocaleCode.Khmer]: \"\",\n        [LocaleCode.Korean]: \"\",\n        [LocaleCode.Kurdish]: \"\",\n        [LocaleCode.Kyrgyz]: \"\",\n        [LocaleCode.Lao]: \"\",\n        [LocaleCode.Latin]: \"\",\n        [LocaleCode.Latvian]: \"\",\n        [LocaleCode.Lithuanian]: \"\",\n        [LocaleCode.Luxembourgish]: \"\",\n        [LocaleCode.Macedonian]: \"\",\n        [LocaleCode.Malagasy]: \"\",\n        [LocaleCode.Malay]: \"\",\n        [LocaleCode.Malayalam]: \"\",\n        [LocaleCode.Maltese]: \"\",\n        [LocaleCode.Maori]: \"\",\n        [LocaleCode.Marathi]: \"\",\n        [LocaleCode.Mongolian]: \"\",\n        [LocaleCode.Nepali]: \"\",\n        [LocaleCode.Norwegian]: \"\",\n        [LocaleCode.Pashto]: \"\",\n        [LocaleCode.Persian]: \"\",\n        [LocaleCode.Polish]: \"\",\n        [LocaleCode.Portuguese]: \"\",\n        [LocaleCode.Punjabi]: \"\",\n        [LocaleCode.Romanian]: \"\",\n        [LocaleCode.Russian]: \"\",\n        [LocaleCode.Samoan]: \"\",\n        [LocaleCode.Sanskrit]: \"\",\n        [LocaleCode.Scots]: \"\",\n        [LocaleCode.Serbian]: \"\",\n        [LocaleCode.Sesotho]: \"\",\n        [LocaleCode.Shona]: \"\",\n        [LocaleCode.Sindhi]: \"\",\n        [LocaleCode.Sinhala]: \"\",\n        [LocaleCode.Slovak]: \"\",\n        [LocaleCode.Slovenian]: \"\",\n        [LocaleCode.Somali]: \"\",\n        [LocaleCode.Spanish]: \"\",\n        [LocaleCode.Sudanese]: \"\",\n        [LocaleCode.Swahili]: \"\",\n        [LocaleCode.Swedish]: \"\",\n        [LocaleCode.Tagalog]: \"\",\n        [LocaleCode.Tajik]: \"\",\n        [LocaleCode.Tamil]: \"\",\n        [LocaleCode.Tatar]: \"\",\n        [LocaleCode.Telugu]: \"\",\n        [LocaleCode.Thai]: \"\",\n        [LocaleCode.Tibetan]: \"\",\n        [LocaleCode.Turkish]: \"\",\n        [LocaleCode.Ukrainian]: \"\",\n        [LocaleCode.Urdu]: \"\",\n        [LocaleCode.Uzbek]: \"\",\n        [LocaleCode.Vietnamese]: \"\",\n        [LocaleCode.Welsh]: \"\",\n        [LocaleCode.Xhosa]: \"\",\n        [LocaleCode.Yiddish]: \"\",\n        [LocaleCode.Yoruba]: \"\",\n        [LocaleCode.Zulu]: \"\"\n      }\n    }\n  }\n};\n\nconst Afrikaans = {\n  id: LocaleCode.Afrikaans,\n  language: {\n    code: LanguageCode.Afrikaans,\n    name: \"Afrikaans\",\n    native: \"Afrikaans\"\n  },\n  name: \"Afrikaans\",\n  native_name: \"Afrikaans\",\n  rtl: false\n};\nconst AfrikaansSouthAfrica = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: \"South Africa\",\n    native: \"South Africa\"\n  },\n  id: LocaleCode.AfrikaansSouthAfrica,\n  language: {\n    code: LanguageCode.Afrikaans,\n    name: \"Afrikaans\",\n    native: \"Afrikaans\"\n  },\n  name: \"Afrikaans (South Africa)\",\n  native_name: \"Afrikaans (Suid-Afrika)\",\n  rtl: false\n};\nconst Albanian = {\n  id: LocaleCode.Albanian,\n  language: {\n    code: LanguageCode.Albanian,\n    name: \"Albanian\",\n    native: \"Shqip\"\n  },\n  name: \"Albanian\",\n  native_name: \"Shqip\",\n  rtl: false\n};\nconst AlbanianAlbania = {\n  country: {\n    code: CountryCode.Albania,\n    name: \"Albania\",\n    native: \"Shqip\\xEBria\"\n  },\n  id: LocaleCode.AlbanianAlbania,\n  language: {\n    code: LanguageCode.Albanian,\n    name: \"Albanian\",\n    native: \"Shqip\"\n  },\n  name: \"Albanian (Albania)\",\n  native_name: \"Shqip (Shqip\\xEBria)\",\n  rtl: false\n};\nconst Amharic = {\n  id: LocaleCode.Amharic,\n  language: {\n    code: LanguageCode.Amharic,\n    name: \"Amharic\",\n    native: \"\\u12A0\\u121B\\u122D\\u129B\"\n  },\n  name: \"Amharic\",\n  native_name: \"\\u12A0\\u121B\\u122D\\u129B\",\n  rtl: false\n};\nconst AmharicEthiopia = {\n  country: {\n    code: CountryCode.Ethiopia,\n    name: \"Ethiopia\",\n    native: \"\\u12A2\\u1275\\u12EE\\u1335\\u12EB\"\n  },\n  id: LocaleCode.AmharicEthiopia,\n  language: {\n    code: LanguageCode.Amharic,\n    name: \"Amharic\",\n    native: \"\\u12A0\\u121B\\u122D\\u129B\"\n  },\n  name: \"Amharic (Ethiopia)\",\n  native_name: \"\\u12A0\\u121B\\u122D\\u129B (\\u12A2\\u1275\\u12EE\\u1335\\u12EB)\",\n  rtl: false\n};\nconst Arabic = {\n  id: LocaleCode.Arabic,\n  language: {\n    code: LanguageCode.Arabic,\n    name: \"Arabic\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"\n  },\n  name: \"Arabic\",\n  native_name: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\",\n  rtl: true\n};\nconst ArabicAlgeria = {\n  country: {\n    code: CountryCode.Algeria,\n    name: \"Algeria\",\n    native: \"\\u0627\\u0644\\u062C\\u0632\\u0627\\u0626\\u0631\"\n  },\n  id: LocaleCode.ArabicAlgeria,\n  language: {\n    code: LanguageCode.Arabic,\n    name: \"Arabic\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"\n  },\n  name: \"Arabic (Algeria)\",\n  native_name: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 (\\u0627\\u0644\\u062C\\u0632\\u0627\\u0626\\u0631)\",\n  rtl: true\n};\nconst ArabicBahrain = {\n  country: {\n    code: CountryCode.Bahrain,\n    name: \"Bahrain\",\n    native: \"\\u0627\\u0644\\u0628\\u062D\\u0631\\u064A\\u0646\"\n  },\n  id: LocaleCode.ArabicBahrain,\n  language: {\n    code: LanguageCode.Arabic,\n    name: \"Arabic\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"\n  },\n  name: \"Arabic (Bahrain)\",\n  native_name: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 (\\u0627\\u0644\\u0628\\u062D\\u0631\\u064A\\u0646)\",\n  rtl: true\n};\nconst ArabicEgypt = {\n  country: {\n    code: CountryCode.Egypt,\n    name: \"Egypt\",\n    native: \"\\u0645\\u0635\\u0631\"\n  },\n  id: LocaleCode.ArabicEgypt,\n  language: {\n    code: LanguageCode.Arabic,\n    name: \"Arabic\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"\n  },\n  name: \"Arabic (Egypt)\",\n  native_name: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 (\\u0645\\u0635\\u0631)\",\n  rtl: true\n};\nconst ArabicIraq = {\n  country: {\n    code: CountryCode.Iraq,\n    name: \"Iraq\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\"\n  },\n  id: LocaleCode.ArabicIraq,\n  language: {\n    code: LanguageCode.Arabic,\n    name: \"Arabic\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"\n  },\n  name: \"Arabic (Iraq)\",\n  native_name: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 (\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642)\",\n  rtl: true\n};\nconst ArabicJordan = {\n  country: {\n    code: CountryCode.Jordan,\n    name: \"Jordan\",\n    native: \"\\u0627\\u0644\\u0623\\u0631\\u062F\\u0646\"\n  },\n  id: LocaleCode.ArabicJordan,\n  language: {\n    code: LanguageCode.Arabic,\n    name: \"Arabic\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"\n  },\n  name: \"Arabic (Jordan)\",\n  native_name: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 (\\u0627\\u0644\\u0623\\u0631\\u062F\\u0646)\",\n  rtl: true\n};\nconst ArabicKuwait = {\n  country: {\n    code: CountryCode.Kuwait,\n    name: \"Kuwait\",\n    native: \"\\u0627\\u0644\\u0643\\u0648\\u064A\\u062A\"\n  },\n  id: LocaleCode.ArabicKuwait,\n  language: {\n    code: LanguageCode.Arabic,\n    name: \"Arabic\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"\n  },\n  name: \"Arabic (Kuwait)\",\n  native_name: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 (\\u0627\\u0644\\u0643\\u0648\\u064A\\u062A)\",\n  rtl: true\n};\nconst ArabicLebanon = {\n  country: {\n    code: CountryCode.Lebanon,\n    name: \"Lebanon\",\n    native: \"\\u0644\\u0628\\u0646\\u0627\\u0646\"\n  },\n  id: LocaleCode.ArabicLebanon,\n  language: {\n    code: LanguageCode.Arabic,\n    name: \"Arabic\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"\n  },\n  name: \"Arabic (Lebanon)\",\n  native_name: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 (\\u0644\\u0628\\u0646\\u0627\\u0646)\",\n  rtl: true\n};\nconst ArabicLibya = {\n  country: {\n    code: CountryCode.Libya,\n    name: \"Libya\",\n    native: \"\\u0644\\u064A\\u0628\\u064A\\u0627\"\n  },\n  id: LocaleCode.ArabicLibya,\n  language: {\n    code: LanguageCode.Arabic,\n    name: \"Arabic\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"\n  },\n  name: \"Arabic (Libya)\",\n  native_name: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 (\\u0644\\u064A\\u0628\\u064A\\u0627)\",\n  rtl: true\n};\nconst ArabicMorocco = {\n  country: {\n    code: CountryCode.Morocco,\n    name: \"Morocco\",\n    native: \"\\u0627\\u0644\\u0645\\u063A\\u0631\\u0628\"\n  },\n  id: LocaleCode.ArabicMorocco,\n  language: {\n    code: LanguageCode.Arabic,\n    name: \"Arabic\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"\n  },\n  name: \"Arabic (Morocco)\",\n  native_name: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 (\\u0627\\u0644\\u0645\\u063A\\u0631\\u0628)\",\n  rtl: true\n};\nconst ArabicOman = {\n  country: {\n    code: CountryCode.Oman,\n    name: \"Oman\",\n    native: \"\\u0639\\u0645\\u0627\\u0646\"\n  },\n  id: LocaleCode.ArabicOman,\n  language: {\n    code: LanguageCode.Arabic,\n    name: \"Arabic\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"\n  },\n  name: \"Arabic (Oman)\",\n  native_name: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 (\\u0639\\u0645\\u0627\\u0646)\",\n  rtl: true\n};\nconst ArabicQatar = {\n  country: {\n    code: CountryCode.Qatar,\n    name: \"Qatar\",\n    native: \"\\u0642\\u0637\\u0631\"\n  },\n  id: LocaleCode.ArabicQatar,\n  language: {\n    code: LanguageCode.Arabic,\n    name: \"Arabic\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"\n  },\n  name: \"Arabic (Qatar)\",\n  native_name: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 (\\u0642\\u0637\\u0631)\",\n  rtl: true\n};\nconst ArabicSaudiArabia = {\n  country: {\n    code: CountryCode.SaudiArabia,\n    name: \"Saudi Arabia\",\n    native: \"\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062F\\u064A\\u0629\"\n  },\n  id: LocaleCode.ArabicSaudiArabia,\n  language: {\n    code: LanguageCode.Arabic,\n    name: \"Arabic\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"\n  },\n  name: \"Arabic (Saudi Arabia)\",\n  native_name: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 (\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062F\\u064A\\u0629)\",\n  rtl: true\n};\nconst ArabicTunisia = {\n  country: {\n    code: CountryCode.Tunisia,\n    name: \"Tunisia\",\n    native: \"\\u062A\\u0648\\u0646\\u0633\"\n  },\n  id: LocaleCode.ArabicTunisia,\n  language: {\n    code: LanguageCode.Arabic,\n    name: \"Arabic\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"\n  },\n  name: \"Arabic (Tunisia)\",\n  native_name: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 (\\u062A\\u0648\\u0646\\u0633)\",\n  rtl: true\n};\nconst ArabicUnitedArabEmirates = {\n  country: {\n    code: CountryCode.UnitedArabEmirates,\n    name: \"United Arab Emirates\",\n    native: \"\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062A \\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 \\u0627\\u0644\\u0645\\u062A\\u062D\\u062F\\u0629\"\n  },\n  id: LocaleCode.ArabicUnitedArabEmirates,\n  language: {\n    code: LanguageCode.Arabic,\n    name: \"Arabic\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"\n  },\n  name: \"Arabic (United Arab Emirates)\",\n  native_name: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 (\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062A \\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 \\u0627\\u0644\\u0645\\u062A\\u062D\\u062F\\u0629)\",\n  rtl: true\n};\nconst ArabicYemen = {\n  country: {\n    code: CountryCode.Yemen,\n    name: \"Yemen\",\n    native: \"\\u0627\\u0644\\u064A\\u0645\\u0646\"\n  },\n  id: LocaleCode.ArabicYemen,\n  language: {\n    code: LanguageCode.Arabic,\n    name: \"Arabic\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"\n  },\n  name: \"Arabic (Yemen)\",\n  native_name: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 (\\u0627\\u0644\\u064A\\u0645\\u0646)\",\n  rtl: true\n};\nconst Armenian = {\n  id: LocaleCode.Armenian,\n  language: {\n    code: LanguageCode.Armenian,\n    name: \"Armenian\",\n    native: \"\\u0540\\u0561\\u0575\\u0565\\u0580\\u0565\\u0576\"\n  },\n  name: \"Armenian\",\n  native_name: \"\\u0540\\u0561\\u0575\\u0565\\u0580\\u0565\\u0576\",\n  rtl: false\n};\nconst ArmenianArmenia = {\n  country: { code: CountryCode.Armenia, name: \"Armenia\", native: \"\\u0540\\u0561\\u0575\\u0561\\u057D\\u057F\\u0561\\u0576\" },\n  id: LocaleCode.ArmenianArmenia,\n  language: {\n    code: LanguageCode.Armenian,\n    name: \"Armenian\",\n    native: \"\\u0570\\u0561\\u0575\\u0565\\u0580\\u0565\\u0576\"\n  },\n  name: \"Armenian (Armenia)\",\n  native_name: \"\\u0570\\u0561\\u0575\\u0565\\u0580\\u0565\\u0576 (\\u0540\\u0561\\u0575\\u0561\\u057D\\u057F\\u0561\\u0576)\",\n  rtl: false\n};\nconst Azerbaijani = {\n  id: LocaleCode.Azerbaijani,\n  language: {\n    code: LanguageCode.Azerbaijani,\n    name: \"Azeribaijani\",\n    native: \"Az\\u0259rbaycan\"\n  },\n  name: \"Azeri\",\n  native_name: \"Az\\u0259rbaycan\",\n  rtl: false\n};\nconst AzerbaijaniAzerbaijan = {\n  country: {\n    code: CountryCode.Azerbaijan,\n    name: \"Azerbaijan\",\n    native: \"Az\\u0259rbaycan\"\n  },\n  id: LocaleCode.AzerbaijaniAzerbaijan,\n  language: {\n    code: LanguageCode.Azerbaijani,\n    name: \"Azerbaijani\",\n    native: \"Az\\u0259rbaycan\"\n  },\n  name: \"Azeri (Azerbaijan)\",\n  native_name: \"Az\\u0259rbaycan (Az\\u0259rbaycan)\",\n  rtl: false\n};\nconst Basque = {\n  id: LocaleCode.Basque,\n  language: {\n    code: LanguageCode.Basque,\n    name: \"Basque\",\n    native: \"Euskara\"\n  },\n  name: \"Basque\",\n  native_name: \"Euskara\",\n  rtl: false\n};\nconst BasqueSpain = {\n  country: {\n    code: CountryCode.Spain,\n    name: \"Spain\",\n    native: \"Espa\\xF1a\"\n  },\n  id: LocaleCode.BasqueSpain,\n  language: {\n    code: LanguageCode.Basque,\n    name: \"Basque\",\n    native: \"Euskara\"\n  },\n  name: \"Basque (Spain)\",\n  native_name: \"Euskara (Espa\\xF1a)\",\n  rtl: false\n};\nconst Belarusian = {\n  id: LocaleCode.Belarusian,\n  language: {\n    code: LanguageCode.Belarusian,\n    name: \"Belarusian\",\n    native: \"\\u0411\\u0435\\u043B\\u0430\\u0440\\u0443\\u0441\\u043A\\u0430\\u044F\"\n  },\n  name: \"Belarusian\",\n  native_name: \"\\u0411\\u0435\\u043B\\u0430\\u0440\\u0443\\u0441\\u043A\\u0430\\u044F\",\n  rtl: false\n};\nconst BelarusianBelarus = {\n  country: {\n    code: CountryCode.Belarus,\n    name: \"Belarus\",\n    native: \"\\u0411\\u0435\\u043B\\u0430\\u0440\\u0443\\u0441\\u044C\"\n  },\n  id: LocaleCode.BelarusianBelarus,\n  language: {\n    code: LanguageCode.Belarusian,\n    name: \"Belarusian\",\n    native: \"\\u0431\\u0435\\u043B\\u0430\\u0440\\u0443\\u0441\\u043A\\u0430\\u044F\"\n  },\n  name: \"Belarusian (Belarus)\",\n  native_name: \"\\u0431\\u0435\\u043B\\u0430\\u0440\\u0443\\u0441\\u043A\\u0430\\u044F (\\u0411\\u0435\\u043B\\u0430\\u0440\\u0443\\u0441\\u044C)\",\n  rtl: false\n};\nconst Bengali = {\n  id: LocaleCode.Bengali,\n  language: {\n    code: LanguageCode.Bengali,\n    name: \"Bengali\",\n    native: \"\\u09AC\\u09BE\\u0982\\u09B2\\u09BE\"\n  },\n  name: \"Bengali\",\n  native_name: \"\\u09AC\\u09BE\\u0982\\u09B2\\u09BE\",\n  rtl: false\n};\nconst BengaliBangladesh = {\n  country: {\n    code: CountryCode.Bangladesh,\n    name: \"Bangladesh\",\n    native: \"\\u09AC\\u09BE\\u0982\\u09B2\\u09BE\\u09A6\\u09C7\\u09B6\"\n  },\n  id: LocaleCode.BengaliBangladesh,\n  language: {\n    code: LanguageCode.Bengali,\n    name: \"Bengali\",\n    native: \"\\u09AC\\u09BE\\u0982\\u09B2\\u09BE\"\n  },\n  name: \"Bengali (Bangladesh)\",\n  native_name: \"\\u09AC\\u09BE\\u0982\\u09B2\\u09BE (\\u09AC\\u09BE\\u0982\\u09B2\\u09BE\\u09A6\\u09C7\\u09B6)\",\n  rtl: false\n};\nconst Bhutani = {\n  id: LocaleCode.Bhutani,\n  language: {\n    code: LanguageCode.Bhutani,\n    name: \"Bhutani\",\n    native: \"\\u0F56\\u0F7C\\u0F51\\u0F0B\\u0F61\\u0F72\\u0F42\"\n  },\n  name: \"Bhutani\",\n  native_name: \"\\u0F56\\u0F7C\\u0F51\\u0F0B\\u0F61\\u0F72\\u0F42\",\n  rtl: false\n};\nconst BhutaniBhutan = {\n  country: {\n    code: CountryCode.Bhutan,\n    name: \"Bhutan\",\n    native: \"\\u0F60\\u0F56\\u0FB2\\u0F74\\u0F42\"\n  },\n  id: LocaleCode.BhutaniBhutan,\n  language: {\n    code: LanguageCode.Bhutani,\n    name: \"Bhutani\",\n    native: \"\\u0F56\\u0F7C\\u0F51\\u0F0B\\u0F61\\u0F72\\u0F42\"\n  },\n  name: \"Bhutani (Bhutan)\",\n  native_name: \"\\u0F56\\u0F7C\\u0F51\\u0F0B\\u0F61\\u0F72\\u0F42 (\\u0F60\\u0F56\\u0FB2\\u0F74\\u0F42)\",\n  rtl: false\n};\nconst Bulgarian = {\n  id: LocaleCode.Bulgarian,\n  language: {\n    code: LanguageCode.Bulgarian,\n    name: \"Bulgarian\",\n    native: \"\\u0411\\u044A\\u043B\\u0433\\u0430\\u0440\\u0441\\u043A\\u0438\"\n  },\n  name: \"Bulgarian\",\n  native_name: \"\\u0411\\u044A\\u043B\\u0433\\u0430\\u0440\\u0441\\u043A\\u0438\",\n  rtl: false\n};\nconst BulgarianBulgaria = {\n  country: {\n    code: CountryCode.Bulgaria,\n    name: \"Bulgaria\",\n    native: \"\\u0411\\u044A\\u043B\\u0433\\u0430\\u0440\\u0438\\u044F\"\n  },\n  id: LocaleCode.BulgarianBulgaria,\n  language: {\n    code: LanguageCode.Bulgarian,\n    name: \"Bulgarian\",\n    native: \"\\u0431\\u044A\\u043B\\u0433\\u0430\\u0440\\u0441\\u043A\\u0438\"\n  },\n  name: \"Bulgarian (Bulgaria)\",\n  native_name: \"\\u0431\\u044A\\u043B\\u0433\\u0430\\u0440\\u0441\\u043A\\u0438 (\\u0411\\u044A\\u043B\\u0433\\u0430\\u0440\\u0438\\u044F)\",\n  rtl: false\n};\nconst Burmese = {\n  id: LocaleCode.Burmese,\n  language: {\n    code: LanguageCode.Burmese,\n    name: \"Burmese\",\n    native: \"\\u1017\\u1019\\u102C\\u1005\\u102C\"\n  },\n  name: \"Burmese\",\n  native_name: \"\\u1017\\u1019\\u102C\\u1005\\u102C\",\n  rtl: false\n};\nconst BurmeseMyanmar = {\n  country: {\n    code: CountryCode.Myanmar,\n    name: \"Myanmar\",\n    native: \"\\u1019\\u103C\\u1014\\u103A\\u1019\\u102C\"\n  },\n  id: LocaleCode.BurmeseMyanmar,\n  language: {\n    code: LanguageCode.Burmese,\n    name: \"Burmese\",\n    native: \"\\u1017\\u1019\\u102C\\u1005\\u102C\"\n  },\n  name: \"Burmese (Myanmar)\",\n  native_name: \"\\u1017\\u1019\\u102C\\u1005\\u102C (\\u1019\\u103C\\u1014\\u103A\\u1019\\u102C)\",\n  rtl: false\n};\nconst Cantonese = {\n  id: LocaleCode.Cantonese,\n  language: {\n    code: LanguageCode.Cantonese,\n    name: \"Cantonese\",\n    native: \"\\u5EE3\\u6771\\u8A71\"\n  },\n  name: \"Cantonese\",\n  native_name: \"\\u5EE3\\u6771\\u8A71\",\n  rtl: false\n};\nconst CantoneseHongKong = {\n  country: {\n    code: CountryCode.HongKong,\n    name: \"Hong Kong\",\n    native: \"\\u9999\\u6E2F\"\n  },\n  id: LocaleCode.CantoneseHongKong,\n  language: {\n    code: LanguageCode.Cantonese,\n    name: \"Cantonese\",\n    native: \"\\u5EE3\\u6771\\u8A71\"\n  },\n  name: \"Cantonese (Hong Kong)\",\n  native_name: \"\\u5EE3\\u6771\\u8A71 (\\u9999\\u6E2F)\",\n  rtl: false\n};\nconst Catalan = {\n  id: LocaleCode.Catalan,\n  language: {\n    code: LanguageCode.Catalan,\n    name: \"Catalan\",\n    native: \"Catal\\xE0\"\n  },\n  name: \"Catalan\",\n  native_name: \"Catal\\xE0\",\n  rtl: false\n};\nconst CatalanSpain = {\n  country: {\n    code: CountryCode.Spain,\n    name: \"Spain\",\n    native: \"Espa\\xF1a\"\n  },\n  id: LocaleCode.CatalanSpain,\n  language: {\n    code: LanguageCode.Catalan,\n    name: \"Catalan\",\n    native: \"Catal\\xE0\"\n  },\n  name: \"Catalan (Spain)\",\n  native_name: \"Catal\\xE0 (Espanya)\",\n  rtl: false\n};\nconst ChineseSimplified = {\n  id: LocaleCode.ChineseSimplified,\n  language: {\n    code: LanguageCode.Chinese,\n    name: \"Chinese\",\n    native: \"\\u4E2D\\u6587\"\n  },\n  name: \"Chinese (Simplified)\",\n  native_name: \"\\u4E2D\\u6587\",\n  rtl: false\n};\nconst ChineseSimplifiedChina = {\n  country: {\n    code: CountryCode.China,\n    name: \"China\",\n    native: \"\\u4E2D\\u56FD\"\n  },\n  id: LocaleCode.ChineseSimplifiedChina,\n  language: {\n    code: LanguageCode.Chinese,\n    name: \"Chinese\",\n    native: \"\\u4E2D\\u6587\"\n  },\n  name: \"Chinese (Simplified/China)\",\n  native_name: \"\\u4E2D\\u6587 (\\u4E2D\\u56FD)\",\n  rtl: false\n};\nconst ChineseSimplifiedHongKong = {\n  country: {\n    code: CountryCode.HongKong,\n    name: \"Hong Kong\",\n    native: \"\\u9999\\u6E2F\"\n  },\n  id: LocaleCode.ChineseSimplifiedHongKong,\n  language: {\n    code: LanguageCode.Chinese,\n    name: \"Chinese\",\n    native: \"\\u4E2D\\u6587\"\n  },\n  name: \"Chinese (Simplified/Hong Kong)\",\n  native_name: \"\\u4E2D\\u6587 (\\u9999\\u6E2F)\",\n  rtl: false\n};\nconst ChineseSimplifiedMacau = {\n  country: {\n    code: CountryCode.Macau,\n    name: \"Macau\",\n    native: \"\\u6FB3\\u9580\"\n  },\n  id: LocaleCode.ChineseSimplifiedMacau,\n  language: {\n    code: LanguageCode.Chinese,\n    name: \"Chinese\",\n    native: \"\\u4E2D\\u6587\"\n  },\n  name: \"Chinese (Simplified/Macau)\",\n  native_name: \"\\u4E2D\\u6587 (\\u6FB3\\u9580)\",\n  rtl: false\n};\nconst ChineseSimplifiedSingapore = {\n  country: {\n    code: CountryCode.Singapore,\n    name: \"Singapore\",\n    native: \"\\u65B0\\u52A0\\u5761\"\n  },\n  id: LocaleCode.ChineseSimplifiedSingapore,\n  language: {\n    code: LanguageCode.Chinese,\n    name: \"Chinese\",\n    native: \"\\u4E2D\\u6587\"\n  },\n  name: \"Chinese (Simplified/Singapore)\",\n  native_name: \"\\u4E2D\\u6587 (\\u65B0\\u52A0\\u5761)\",\n  rtl: false\n};\nconst ChineseTraditional = {\n  id: LocaleCode.ChineseTraditional,\n  language: {\n    code: LanguageCode.Chinese,\n    name: \"Chinese\",\n    native: \"\\u4E2D\\u6587\"\n  },\n  name: \"Chinese (Traditional)\",\n  native_name: \"\\u4E2D\\u6587\",\n  rtl: false\n};\nconst ChineseTraditionalHongKong = {\n  country: {\n    code: CountryCode.HongKong,\n    name: \"Hong Kong\",\n    native: \"\\u9999\\u6E2F\"\n  },\n  id: LocaleCode.ChineseTraditionalHongKong,\n  language: {\n    code: LanguageCode.Chinese,\n    name: \"Chinese (Traditional/Hong Kong)\",\n    native: \"\\u4E2D\\u6587\"\n  },\n  name: \"Chinese (Hong Kong)\",\n  native_name: \"\\u4E2D\\u6587 (\\u9999\\u6E2F)\",\n  rtl: false\n};\nconst ChineseTraditionalMacau = {\n  country: {\n    code: CountryCode.Macau,\n    name: \"Macau\",\n    native: \"\\u6FB3\\u9580\"\n  },\n  id: LocaleCode.ChineseTraditionalMacau,\n  language: {\n    code: LanguageCode.Chinese,\n    name: \"Chinese (Traditional/Macau)\",\n    native: \"\\u4E2D\\u6587\"\n  },\n  name: \"Chinese (Macau)\",\n  native_name: \"\\u4E2D\\u6587 (\\u6FB3\\u9580)\",\n  rtl: false\n};\nconst ChineseTraditionalSingapore = {\n  country: {\n    code: CountryCode.Singapore,\n    name: \"Singapore\",\n    native: \"\\u65B0\\u52A0\\u5761\"\n  },\n  id: LocaleCode.ChineseTraditionalSingapore,\n  language: {\n    code: LanguageCode.Chinese,\n    name: \"Chinese (Traditional/Singapore)\",\n    native: \"\\u4E2D\\u6587\"\n  },\n  name: \"Chinese (Singapore)\",\n  native_name: \"\\u4E2D\\u6587 (\\u65B0\\u52A0\\u5761)\",\n  rtl: false\n};\nconst Croatian = {\n  id: LocaleCode.Croatian,\n  language: {\n    code: LanguageCode.Croatian,\n    name: \"Croatian\",\n    native: \"Hrvatski\"\n  },\n  name: \"Croatian\",\n  native_name: \"Hrvatski\",\n  rtl: false\n};\nconst CroatianBosniaAndHerzegovina = {\n  country: {\n    code: CountryCode.BosniaAndHerzegovina,\n    name: \"Bosnia and Herzegovina\",\n    native: \"Bosna i Hercegovina\"\n  },\n  id: LocaleCode.CroatianBosniaAndHerzegovina,\n  language: {\n    code: LanguageCode.Croatian,\n    name: \"Croatian\",\n    native: \"Hrvatski\"\n  },\n  name: \"Croatian (Bosnia and Herzegovina)\",\n  native_name: \"Hrvatski (Bosna i Hercegovina)\",\n  rtl: false\n};\nconst CroatianCroatia = {\n  country: {\n    code: CountryCode.Croatia,\n    name: \"Croatia\",\n    native: \"Hrvatska\"\n  },\n  id: LocaleCode.CroatianCroatia,\n  language: {\n    code: LanguageCode.Croatian,\n    name: \"Croatian\",\n    native: \"Hrvatski\"\n  },\n  name: \"Croatian (Croatia)\",\n  native_name: \"Hrvatski (Hrvatska)\",\n  rtl: false\n};\nconst Czech = {\n  id: LocaleCode.Czech,\n  language: {\n    code: LanguageCode.Czech,\n    name: \"Czech\",\n    native: \"\\u010Ce\\u0161tina\"\n  },\n  name: \"Czech\",\n  native_name: \"\\u010Ce\\u0161tina\",\n  rtl: false\n};\nconst CzechCzechRepublic = {\n  country: {\n    code: CountryCode.CzechRepublic,\n    name: \"Czech Republic\",\n    native: \"\\u010Cesk\\xE1 republika\"\n  },\n  id: LocaleCode.CzechCzechRepublic,\n  language: {\n    code: LanguageCode.Czech,\n    name: \"Czech\",\n    native: \"\\u010Ce\\u0161tina\"\n  },\n  name: \"Czech (Czech Republic)\",\n  native_name: \"\\u010Ce\\u0161tina (\\u010Cesk\\xE1 republika)\",\n  rtl: false\n};\nconst Danish = {\n  id: LocaleCode.Danish,\n  language: {\n    code: LanguageCode.Danish,\n    name: \"Danish\",\n    native: \"Dansk\"\n  },\n  name: \"Danish\",\n  native_name: \"Dansk\",\n  rtl: false\n};\nconst DanishDenmark = {\n  country: {\n    code: CountryCode.Denmark,\n    name: \"Denmark\",\n    native: \"Danmark\"\n  },\n  id: LocaleCode.DanishDenmark,\n  language: {\n    code: LanguageCode.Danish,\n    name: \"Danish\",\n    native: \"Dansk\"\n  },\n  name: \"Danish (Denmark)\",\n  native_name: \"Dansk (Danmark)\",\n  rtl: false\n};\nconst Divehi = {\n  id: LocaleCode.Divehi,\n  language: {\n    code: LanguageCode.Divehi,\n    name: \"Divehi\",\n    native: \"\\u078B\\u07A8\\u0788\\u07AC\\u0780\\u07A8\\u0784\\u07A6\\u0790\\u07B0\"\n  },\n  name: \"Divehi\",\n  native_name: \"\\u078B\\u07A8\\u0788\\u07AC\\u0780\\u07A8\\u0784\\u07A6\\u0790\\u07B0\",\n  rtl: true\n};\nconst DivehiMaldives = {\n  country: {\n    code: CountryCode.Maldives,\n    name: \"Maldives\",\n    native: \"\\u078B\\u07A8\\u0788\\u07AC\\u0780\\u07A8 \\u0783\\u07A7\\u0787\\u07B0\\u0796\\u07AC\"\n  },\n  id: LocaleCode.DivehiMaldives,\n  language: {\n    code: LanguageCode.Divehi,\n    name: \"Divehi\",\n    native: \"\\u078B\\u07A8\\u0788\\u07AC\\u0780\\u07A8\\u0784\\u07A6\\u0790\\u07B0\"\n  },\n  name: \"Divehi (Maldives)\",\n  native_name: \"\\u078B\\u07A8\\u0788\\u07AC\\u0780\\u07A8\\u0784\\u07A6\\u0790\\u07B0 (\\u078B\\u07A8\\u0788\\u07AC\\u0780\\u07A8 \\u0783\\u07A7\\u0787\\u07B0\\u0796\\u07AC)\",\n  rtl: true\n};\nconst Dutch = {\n  id: LocaleCode.Dutch,\n  language: {\n    code: LanguageCode.Dutch,\n    name: \"Dutch\",\n    native: \"Nederlands\"\n  },\n  name: \"Dutch\",\n  native_name: \"Nederlands\",\n  rtl: false\n};\nconst DutchBelgium = {\n  country: {\n    code: CountryCode.Belgium,\n    name: \"Belgium\",\n    native: \"Belgi\\xEB\"\n  },\n  id: LocaleCode.DutchBelgium,\n  language: {\n    code: LanguageCode.Dutch,\n    name: \"Dutch\",\n    native: \"Nederlands\"\n  },\n  name: \"Dutch (Belgium)\",\n  native_name: \"Nederlands (Belgi\\xEB)\",\n  rtl: false\n};\nconst DutchNetherlands = {\n  country: {\n    code: CountryCode.Netherlands,\n    name: \"Netherlands\",\n    native: \"Nederland\"\n  },\n  id: LocaleCode.DutchNetherlands,\n  language: {\n    code: LanguageCode.Dutch,\n    name: \"Dutch\",\n    native: \"Nederlands\"\n  },\n  name: \"Dutch (Netherlands)\",\n  native_name: \"Nederlands (Nederland)\",\n  rtl: false\n};\nconst English = {\n  id: LocaleCode.English,\n  language: {\n    code: LanguageCode.English,\n    name: \"English\",\n    native: \"English\"\n  },\n  name: \"English\",\n  native_name: \"English\",\n  rtl: false\n};\nconst EnglishAustralia = {\n  country: {\n    code: CountryCode.Australia,\n    name: \"Australia\",\n    native: \"Australia\"\n  },\n  id: LocaleCode.EnglishAustralia,\n  language: {\n    code: LanguageCode.English,\n    name: \"English\",\n    native: \"English\"\n  },\n  name: \"English (Australia)\",\n  native_name: \"English (Australia)\",\n  rtl: false\n};\nconst EnglishBelgium = {\n  country: {\n    code: CountryCode.Belgium,\n    name: \"Belgium\",\n    native: \"Belgi\\xEB\"\n  },\n  id: LocaleCode.EnglishBelgium,\n  language: {\n    code: LanguageCode.English,\n    name: \"English\",\n    native: \"English\"\n  },\n  name: \"English (Belgium)\",\n  native_name: \"English (Belgi\\xEB)\",\n  rtl: false\n};\nconst EnglishCanada = {\n  country: {\n    code: CountryCode.Canada,\n    name: \"Canada\",\n    native: \"Canada\"\n  },\n  id: LocaleCode.EnglishCanada,\n  language: {\n    code: LanguageCode.English,\n    name: \"English\",\n    native: \"English\"\n  },\n  name: \"English (Canada)\",\n  native_name: \"English (Canada)\",\n  rtl: false\n};\nconst EnglishIreland = {\n  country: {\n    code: CountryCode.Ireland,\n    name: \"Ireland\",\n    native: \"\\xC9ire\"\n  },\n  id: LocaleCode.EnglishIreland,\n  language: {\n    code: LanguageCode.English,\n    name: \"English\",\n    native: \"English\"\n  },\n  name: \"English (Ireland)\",\n  native_name: \"English (\\xC9ire)\",\n  rtl: false\n};\nconst EnglishJamaica = {\n  country: {\n    code: CountryCode.Jamaica,\n    name: \"Jamaica\",\n    native: \"Jamaica\"\n  },\n  id: LocaleCode.EnglishJamaica,\n  language: {\n    code: LanguageCode.English,\n    name: \"English\",\n    native: \"English\"\n  },\n  name: \"English (Jamaica)\",\n  native_name: \"English (Jamaica)\",\n  rtl: false\n};\nconst EnglishNewZealand = {\n  country: {\n    code: CountryCode.NewZealand,\n    name: \"New Zealand\",\n    native: \"New Zealand\"\n  },\n  id: LocaleCode.EnglishNewZealand,\n  language: {\n    code: LanguageCode.English,\n    name: \"English\",\n    native: \"English\"\n  },\n  name: \"English (New Zealand)\",\n  native_name: \"English (New Zealand)\",\n  rtl: false\n};\nconst EnglishPhilippines = {\n  country: {\n    code: CountryCode.Philippines,\n    name: \"Philippines\",\n    native: \"Philippines\"\n  },\n  id: LocaleCode.EnglishPhilippines,\n  language: {\n    code: LanguageCode.English,\n    name: \"English\",\n    native: \"English\"\n  },\n  name: \"English (Philippines)\",\n  native_name: \"English (Philippines)\",\n  rtl: false\n};\nconst EnglishSingapore = {\n  country: {\n    code: CountryCode.Singapore,\n    name: \"Singapore\",\n    native: \"Singapore\"\n  },\n  id: LocaleCode.EnglishSingapore,\n  language: {\n    code: LanguageCode.English,\n    name: \"English\",\n    native: \"English\"\n  },\n  name: \"English (Singapore)\",\n  native_name: \"English (Singapore)\",\n  rtl: false\n};\nconst EnglishSouthAfrica = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: \"South Africa\",\n    native: \"South Africa\"\n  },\n  id: LocaleCode.EnglishSouthAfrica,\n  language: {\n    code: LanguageCode.English,\n    name: \"English\",\n    native: \"English\"\n  },\n  name: \"English (South Africa)\",\n  native_name: \"English (South Africa)\",\n  rtl: false\n};\nconst EnglishTrinidadAndTobago = {\n  country: {\n    code: CountryCode.TrinidadAndTobago,\n    name: \"Trinidad and Tobago\",\n    native: \"Trinidad and Tobago\"\n  },\n  id: LocaleCode.EnglishTrinidadAndTobago,\n  language: {\n    code: LanguageCode.English,\n    name: \"English\",\n    native: \"English\"\n  },\n  name: \"English (Trinidad and Tobago)\",\n  native_name: \"English (Trinidad and Tobago)\",\n  rtl: false\n};\nconst EnglishUnitedKingdom = {\n  country: {\n    code: CountryCode.UnitedKingdom,\n    name: \"United Kingdom\",\n    native: \"United Kingdom\"\n  },\n  id: LocaleCode.EnglishUnitedKingdom,\n  language: {\n    code: LanguageCode.English,\n    name: \"English\",\n    native: \"English\"\n  },\n  name: \"English (United Kingdom)\",\n  native_name: \"English (United Kingdom)\",\n  rtl: false\n};\nconst EnglishUnitedStates = {\n  country: {\n    code: CountryCode.UnitedStates,\n    name: \"United States\",\n    native: \"United States\"\n  },\n  id: LocaleCode.EnglishUnitedStates,\n  language: {\n    code: LanguageCode.English,\n    name: \"English\",\n    native: \"English\"\n  },\n  name: \"English (United States)\",\n  native_name: \"English (United States)\",\n  rtl: false\n};\nconst EnglishZimbabwe = {\n  country: {\n    code: CountryCode.Zimbabwe,\n    name: \"Zimbabwe\",\n    native: \"Zimbabwe\"\n  },\n  id: LocaleCode.EnglishZimbabwe,\n  language: {\n    code: LanguageCode.English,\n    name: \"English\",\n    native: \"English\"\n  },\n  name: \"English (Zimbabwe)\",\n  native_name: \"English (Zimbabwe)\",\n  rtl: false\n};\nconst Esperanto = {\n  id: LocaleCode.Esperanto,\n  language: {\n    code: LanguageCode.Esperanto,\n    name: \"Esperanto\",\n    native: \"Esperanto\"\n  },\n  name: \"Esperanto\",\n  native_name: \"Esperanto\",\n  rtl: false\n};\nconst Estonian = {\n  id: LocaleCode.Estonian,\n  language: {\n    code: LanguageCode.Estonian,\n    name: \"Estonian\",\n    native: \"Eesti\"\n  },\n  name: \"Estonian\",\n  native_name: \"Eesti\",\n  rtl: false\n};\nconst EstonianEstonia = {\n  country: {\n    code: CountryCode.Estonia,\n    name: \"Estonia\",\n    native: \"Eesti\"\n  },\n  id: LocaleCode.EstonianEstonia,\n  language: {\n    code: LanguageCode.Estonian,\n    name: \"Estonian\",\n    native: \"Eesti\"\n  },\n  name: \"Estonian (Estonia)\",\n  native_name: \"Eesti (Eesti)\",\n  rtl: false\n};\nconst Faroese = {\n  id: LocaleCode.Faroese,\n  language: {\n    code: LanguageCode.Faroese,\n    name: \"Faroese\",\n    native: \"F\\xF8royskt\"\n  },\n  name: \"Faroese\",\n  native_name: \"F\\xF8royskt\",\n  rtl: false\n};\nconst FaroeseFaroeIslands = {\n  country: {\n    code: CountryCode.FaroeIslands,\n    name: \"Faroe Islands\",\n    native: \"F\\xF8royar\"\n  },\n  id: LocaleCode.FaroeseFaroeIslands,\n  language: {\n    code: LanguageCode.Faroese,\n    name: \"Faroese\",\n    native: \"F\\xF8royskt\"\n  },\n  name: \"Faroese (Faroe Islands)\",\n  native_name: \"F\\xF8royskt (F\\xF8royar)\",\n  rtl: false\n};\nconst Farsi = {\n  id: LocaleCode.Farsi,\n  language: {\n    code: LanguageCode.Farsi,\n    name: \"Farsi\",\n    native: \"\\u0641\\u0627\\u0631\\u0633\\u06CC\"\n  },\n  name: \"Farsi\",\n  native_name: \"\\u0641\\u0627\\u0631\\u0633\\u06CC\",\n  rtl: true\n};\nconst FarsiIran = {\n  country: {\n    code: CountryCode.Iran,\n    name: \"Iran\",\n    native: \"\\u0627\\u06CC\\u0631\\u0627\\u0646\"\n  },\n  id: LocaleCode.FarsiIran,\n  language: {\n    code: LanguageCode.Farsi,\n    name: \"Farsi\",\n    native: \"\\u0641\\u0627\\u0631\\u0633\\u06CC\"\n  },\n  name: \"Farsi (Iran)\",\n  native_name: \"\\u0641\\u0627\\u0631\\u0633\\u06CC (\\u0627\\u06CC\\u0631\\u0627\\u0646)\",\n  rtl: true\n};\nconst Filipino = {\n  id: LocaleCode.Filipino,\n  language: {\n    code: LanguageCode.Filipino,\n    name: \"Filipino\",\n    native: \"Filipino\"\n  },\n  name: \"Filipino\",\n  native_name: \"Filipino\",\n  rtl: false\n};\nconst FilipinoPhilippines = {\n  country: {\n    code: CountryCode.Philippines,\n    name: \"Philippines\",\n    native: \"Pilipinas\"\n  },\n  id: LocaleCode.FilipinoPhilippines,\n  language: {\n    code: LanguageCode.Filipino,\n    name: \"Filipino\",\n    native: \"Filipino\"\n  },\n  name: \"Filipino (Philippines)\",\n  native_name: \"Filipino (Pilipinas)\",\n  rtl: false\n};\nconst Finnish = {\n  id: LocaleCode.Finnish,\n  language: {\n    code: LanguageCode.Finnish,\n    name: \"Finnish\",\n    native: \"Suomi\"\n  },\n  name: \"Finnish\",\n  native_name: \"Suomi\",\n  rtl: false\n};\nconst FinnishFinland = {\n  country: {\n    code: CountryCode.Finland,\n    name: \"Finland\",\n    native: \"Suomi\"\n  },\n  id: LocaleCode.FinnishFinland,\n  language: {\n    code: LanguageCode.Finnish,\n    name: \"Finnish\",\n    native: \"Suomi\"\n  },\n  name: \"Finnish (Finland)\",\n  native_name: \"Suomi (Suomi)\",\n  rtl: false\n};\nconst French = {\n  id: LocaleCode.French,\n  language: {\n    code: LanguageCode.French,\n    name: \"French\",\n    native: \"Fran\\xE7ais\"\n  },\n  name: \"French\",\n  native_name: \"Fran\\xE7ais\",\n  rtl: false\n};\nconst FrenchBelgium = {\n  country: {\n    code: CountryCode.Belgium,\n    name: \"Belgium\",\n    native: \"Belgique\"\n  },\n  id: LocaleCode.FrenchBelgium,\n  language: {\n    code: LanguageCode.French,\n    name: \"French\",\n    native: \"Fran\\xE7ais\"\n  },\n  name: \"French (Belgium)\",\n  native_name: \"Fran\\xE7ais (Belgique)\",\n  rtl: false\n};\nconst FrenchCanada = {\n  country: {\n    code: CountryCode.Canada,\n    name: \"Canada\",\n    native: \"Canada\"\n  },\n  id: LocaleCode.FrenchCanada,\n  language: {\n    code: LanguageCode.French,\n    name: \"French\",\n    native: \"Fran\\xE7ais\"\n  },\n  name: \"French (Canada)\",\n  native_name: \"Fran\\xE7ais (Canada)\",\n  rtl: false\n};\nconst FrenchFrance = {\n  country: {\n    code: CountryCode.France,\n    name: \"France\",\n    native: \"France\"\n  },\n  id: LocaleCode.FrenchFrance,\n  language: {\n    code: LanguageCode.French,\n    name: \"French\",\n    native: \"Fran\\xE7ais\"\n  },\n  name: \"French (France)\",\n  native_name: \"Fran\\xE7ais (France)\",\n  rtl: false\n};\nconst FrenchLuxembourg = {\n  country: {\n    code: CountryCode.Luxembourg,\n    name: \"Luxembourg\",\n    native: \"Luxembourg\"\n  },\n  id: LocaleCode.FrenchLuxembourg,\n  language: {\n    code: LanguageCode.French,\n    name: \"French\",\n    native: \"Fran\\xE7ais\"\n  },\n  name: \"French (Luxembourg)\",\n  native_name: \"Fran\\xE7ais (Luxembourg)\",\n  rtl: false\n};\nconst FrenchMonaco = {\n  country: {\n    code: CountryCode.Monaco,\n    name: \"Monaco\",\n    native: \"Monaco\"\n  },\n  id: LocaleCode.FrenchMonaco,\n  language: {\n    code: LanguageCode.French,\n    name: \"French\",\n    native: \"Fran\\xE7ais\"\n  },\n  name: \"French (Monaco)\",\n  native_name: \"Fran\\xE7ais (Monaco)\",\n  rtl: false\n};\nconst FrenchReunion = {\n  country: {\n    code: CountryCode.Reunion,\n    name: \"Reunion\",\n    native: \"La R\\xE9union\"\n  },\n  id: LocaleCode.FrenchReunion,\n  language: {\n    code: LanguageCode.French,\n    name: \"French\",\n    native: \"Fran\\xE7ais\"\n  },\n  name: \"French (Reunion)\",\n  native_name: \"Fran\\xE7ais (La R\\xE9union)\",\n  rtl: false\n};\nconst FrenchSwitzerland = {\n  country: {\n    code: CountryCode.Switzerland,\n    name: \"Switzerland\",\n    native: \"Suisse\"\n  },\n  id: LocaleCode.FrenchSwitzerland,\n  language: {\n    code: LanguageCode.French,\n    name: \"French\",\n    native: \"Fran\\xE7ais\"\n  },\n  name: \"French (Switzerland)\",\n  native_name: \"Fran\\xE7ais (Suisse)\",\n  rtl: false\n};\nconst Frisian = {\n  id: LocaleCode.Frisian,\n  language: {\n    code: LanguageCode.Frisian,\n    name: \"Frisian\",\n    native: \"Frysk\"\n  },\n  name: \"Frisian\",\n  native_name: \"Frysk\",\n  rtl: false\n};\nconst FrisianNetherlands = {\n  country: {\n    code: CountryCode.Netherlands,\n    name: \"Netherlands\",\n    native: \"Nederland\"\n  },\n  id: LocaleCode.FrisianNetherlands,\n  language: {\n    code: LanguageCode.Frisian,\n    name: \"Frisian\",\n    native: \"Frysk\"\n  },\n  name: \"Frisian (Netherlands)\",\n  native_name: \"Frysk (Nederland)\",\n  rtl: false\n};\nconst Galician = {\n  id: LocaleCode.Galician,\n  language: {\n    code: LanguageCode.Galician,\n    name: \"Galician\",\n    native: \"Galego\"\n  },\n  name: \"Galician\",\n  native_name: \"Galego\",\n  rtl: false\n};\nconst GalicianSpain = {\n  country: {\n    code: CountryCode.Spain,\n    name: \"Spain\",\n    native: \"Espa\\xF1a\"\n  },\n  id: LocaleCode.GalicianSpain,\n  language: {\n    code: LanguageCode.Galician,\n    name: \"Galician\",\n    native: \"Galego\"\n  },\n  name: \"Galician (Spain)\",\n  native_name: \"Galego (Espa\\xF1a)\",\n  rtl: false\n};\nconst Georgian = {\n  id: LocaleCode.Georgian,\n  language: {\n    code: LanguageCode.Georgian,\n    name: \"Georgian\",\n    native: \"\\u10E5\\u10D0\\u10E0\\u10D7\\u10E3\\u10DA\\u10D8\"\n  },\n  name: \"Georgian\",\n  native_name: \"\\u10E5\\u10D0\\u10E0\\u10D7\\u10E3\\u10DA\\u10D8\",\n  rtl: false\n};\nconst GeorgianGeorgia = {\n  country: {\n    code: CountryCode.Georgia,\n    name: \"Georgia\",\n    native: \"\\u10E1\\u10D0\\u10E5\\u10D0\\u10E0\\u10D7\\u10D5\\u10D4\\u10DA\\u10DD\"\n  },\n  id: LocaleCode.GeorgianGeorgia,\n  language: {\n    code: LanguageCode.Georgian,\n    name: \"Georgian\",\n    native: \"\\u10E5\\u10D0\\u10E0\\u10D7\\u10E3\\u10DA\\u10D8\"\n  },\n  name: \"Georgian (Georgia)\",\n  native_name: \"\\u10E5\\u10D0\\u10E0\\u10D7\\u10E3\\u10DA\\u10D8 (\\u10E1\\u10D0\\u10E5\\u10D0\\u10E0\\u10D7\\u10D5\\u10D4\\u10DA\\u10DD)\",\n  rtl: false\n};\nconst German = {\n  id: LocaleCode.German,\n  language: {\n    code: LanguageCode.German,\n    name: \"German\",\n    native: \"Deutsch\"\n  },\n  name: \"German\",\n  native_name: \"Deutsch\",\n  rtl: false\n};\nconst GermanAustria = {\n  country: {\n    code: CountryCode.Austria,\n    name: \"Austria\",\n    native: \"\\xD6sterreich\"\n  },\n  id: LocaleCode.GermanAustria,\n  language: {\n    code: LanguageCode.German,\n    name: \"German\",\n    native: \"Deutsch\"\n  },\n  name: \"German (Austria)\",\n  native_name: \"Deutsch (\\xD6sterreich)\",\n  rtl: false\n};\nconst GermanBelgium = {\n  country: {\n    code: CountryCode.Belgium,\n    name: \"Belgium\",\n    native: \"Belgi\\xEB\"\n  },\n  id: LocaleCode.GermanBelgium,\n  language: {\n    code: LanguageCode.German,\n    name: \"German\",\n    native: \"Deutsch\"\n  },\n  name: \"German (Belgium)\",\n  native_name: \"Deutsch (Belgi\\xEB)\",\n  rtl: false\n};\nconst GermanSwitzerland = {\n  country: {\n    code: CountryCode.Switzerland,\n    name: \"Switzerland\",\n    native: \"Suisse\"\n  },\n  id: LocaleCode.GermanSwitzerland,\n  language: {\n    code: LanguageCode.German,\n    name: \"German\",\n    native: \"Deutsch\"\n  },\n  name: \"German (Switzerland)\",\n  native_name: \"Deutsch (Suisse)\",\n  rtl: false\n};\nconst GermanLiechtenstein = {\n  country: {\n    code: CountryCode.Liechtenstein,\n    name: \"Liechtenstein\",\n    native: \"Liechtenstein\"\n  },\n  id: LocaleCode.GermanLiechtenstein,\n  language: {\n    code: LanguageCode.German,\n    name: \"German\",\n    native: \"Deutsch\"\n  },\n  name: \"German (Liechtenstein)\",\n  native_name: \"Deutsch (Liechtenstein)\",\n  rtl: false\n};\nconst GermanLuxembourg = {\n  country: {\n    code: CountryCode.Luxembourg,\n    name: \"Luxembourg\",\n    native: \"Luxembourg\"\n  },\n  id: LocaleCode.GermanLuxembourg,\n  language: {\n    code: LanguageCode.German,\n    name: \"German\",\n    native: \"Deutsch\"\n  },\n  name: \"German (Luxembourg)\",\n  native_name: \"Deutsch (Luxembourg)\",\n  rtl: false\n};\nconst Greek = {\n  id: LocaleCode.Greek,\n  language: {\n    code: LanguageCode.Greek,\n    name: \"Greek\",\n    native: \"\\u0395\\u03BB\\u03BB\\u03B7\\u03BD\\u03B9\\u03BA\\u03AC\"\n  },\n  name: \"Greek\",\n  native_name: \"\\u0395\\u03BB\\u03BB\\u03B7\\u03BD\\u03B9\\u03BA\\u03AC\",\n  rtl: false\n};\nconst GreekGreece = {\n  country: {\n    code: CountryCode.Greece,\n    name: \"Greece\",\n    native: \"\\u0395\\u03BB\\u03BB\\u03AC\\u03B4\\u03B1\"\n  },\n  id: LocaleCode.GreekGreece,\n  language: {\n    code: LanguageCode.Greek,\n    name: \"Greek\",\n    native: \"\\u0395\\u03BB\\u03BB\\u03B7\\u03BD\\u03B9\\u03BA\\u03AC\"\n  },\n  name: \"Greek (Greece)\",\n  native_name: \"\\u0395\\u03BB\\u03BB\\u03B7\\u03BD\\u03B9\\u03BA\\u03AC (\\u0395\\u03BB\\u03BB\\u03AC\\u03B4\\u03B1)\",\n  rtl: false\n};\nconst Greenlandic = {\n  id: LocaleCode.Greenlandic,\n  language: {\n    code: LanguageCode.Greenlandic,\n    name: \"Greenlandic\",\n    native: \"Kalaallisut\"\n  },\n  name: \"Greenlandic\",\n  native_name: \"Kalaallisut\",\n  rtl: false\n};\nconst GreenlandicGreenland = {\n  country: {\n    code: CountryCode.Greenland,\n    name: \"Greenland\",\n    native: \"Kalaallit Nunaat\"\n  },\n  id: LocaleCode.GreenlandicGreenland,\n  language: {\n    code: LanguageCode.Greenlandic,\n    name: \"Greenlandic\",\n    native: \"Kalaallisut\"\n  },\n  name: \"Greenlandic (Greenland)\",\n  native_name: \"Kalaallisut (Kalaallit Nunaat)\",\n  rtl: false\n};\nconst Gujarati = {\n  id: LocaleCode.Gujarati,\n  language: {\n    code: LanguageCode.Gujarati,\n    name: \"Gujarati\",\n    native: \"\\u0A97\\u0AC1\\u0A9C\\u0AB0\\u0ABE\\u0AA4\\u0AC0\"\n  },\n  name: \"Gujarati\",\n  native_name: \"\\u0A97\\u0AC1\\u0A9C\\u0AB0\\u0ABE\\u0AA4\\u0AC0\",\n  rtl: false\n};\nconst GujaratiIndia = {\n  country: {\n    code: CountryCode.India,\n    name: \"India\",\n    native: \"\\u092D\\u093E\\u0930\\u0924\"\n  },\n  id: LocaleCode.GujaratiIndia,\n  language: {\n    code: LanguageCode.Gujarati,\n    name: \"Gujarati\",\n    native: \"\\u0A97\\u0AC1\\u0A9C\\u0AB0\\u0ABE\\u0AA4\\u0AC0\"\n  },\n  name: \"Gujarati (India)\",\n  native_name: \"\\u0A97\\u0AC1\\u0A9C\\u0AB0\\u0ABE\\u0AA4\\u0AC0 (\\u092D\\u093E\\u0930\\u0924)\",\n  rtl: false\n};\nconst Hausa = {\n  id: LocaleCode.Hausa,\n  language: {\n    code: LanguageCode.Hausa,\n    name: \"Hausa\",\n    native: \"\\u0647\\u064E\\u0648\\u064F\\u0633\\u064E\"\n  },\n  name: \"Hausa\",\n  native_name: \"\\u0647\\u064E\\u0648\\u064F\\u0633\\u064E\",\n  rtl: false\n};\nconst HausaGhana = {\n  country: {\n    code: CountryCode.Ghana,\n    name: \"Ghana\",\n    native: \"Ghana\"\n  },\n  id: LocaleCode.HausaGhana,\n  language: {\n    code: LanguageCode.Hausa,\n    name: \"Hausa\",\n    native: \"\\u0647\\u064E\\u0648\\u064F\\u0633\\u064E\"\n  },\n  name: \"Hausa (Ghana)\",\n  native_name: \"\\u0647\\u064E\\u0648\\u064F\\u0633\\u064E (Ghana)\",\n  rtl: false\n};\nconst HausaNiger = {\n  country: {\n    code: CountryCode.Niger,\n    name: \"Niger\",\n    native: \"Niger\"\n  },\n  id: LocaleCode.HausaNiger,\n  language: {\n    code: LanguageCode.Hausa,\n    name: \"Hausa\",\n    native: \"\\u0647\\u064E\\u0648\\u064F\\u0633\\u064E\"\n  },\n  name: \"Hausa (Niger)\",\n  native_name: \"\\u0647\\u064E\\u0648\\u064F\\u0633\\u064E (Niger)\",\n  rtl: false\n};\nconst HausaNigeria = {\n  country: {\n    code: CountryCode.Nigeria,\n    name: \"Nigeria\",\n    native: \"Nigeria\"\n  },\n  id: LocaleCode.HausaNigeria,\n  language: {\n    code: LanguageCode.Hausa,\n    name: \"Hausa\",\n    native: \"\\u0647\\u064E\\u0648\\u064F\\u0633\\u064E\"\n  },\n  name: \"Hausa (Nigeria)\",\n  native_name: \"\\u0647\\u064E\\u0648\\u064F\\u0633\\u064E (Nigeria)\",\n  rtl: false\n};\nconst Hebrew = {\n  id: LocaleCode.Hebrew,\n  language: {\n    code: LanguageCode.Hebrew,\n    name: \"Hebrew\",\n    native: \"\\u05E2\\u05D1\\u05E8\\u05D9\\u05EA\"\n  },\n  name: \"Hebrew\",\n  native_name: \"\\u05E2\\u05D1\\u05E8\\u05D9\\u05EA\",\n  rtl: true\n};\nconst HebrewIsrael = {\n  country: {\n    code: CountryCode.Israel,\n    name: \"Hebrew\",\n    native: \"\"\n  },\n  id: LocaleCode.HebrewIsrael,\n  language: {\n    code: LanguageCode.Hebrew,\n    name: \"Hebrew\",\n    native: \"\"\n  },\n  name: \"Hebrew (Israel)\",\n  native_name: \"\",\n  rtl: true\n};\nconst Hindi = {\n  id: LocaleCode.Hindi,\n  language: {\n    code: LanguageCode.Hindi,\n    name: \"Hindi\",\n    native: \"\\u0939\\u093F\\u0928\\u094D\\u0926\\u0940\"\n  },\n  name: \"Hindi\",\n  native_name: \"\\u0939\\u093F\\u0928\\u094D\\u0926\\u0940\",\n  rtl: false\n};\nconst HindiIndia = {\n  country: {\n    code: CountryCode.India,\n    name: \"India\",\n    native: \"\\u092D\\u093E\\u0930\\u0924\"\n  },\n  id: LocaleCode.HindiIndia,\n  language: {\n    code: LanguageCode.Hindi,\n    name: \"Hindi\",\n    native: \"\\u092D\\u093E\\u0930\\u0924\\u0940\\u092F\"\n  },\n  name: \"Hindi (India)\",\n  native_name: \"\\u092D\\u093E\\u0930\\u0924\\u0940\\u092F\",\n  rtl: false\n};\nconst Hungarian = {\n  id: LocaleCode.Hungarian,\n  language: {\n    code: LanguageCode.Hungarian,\n    name: \"Hungarian\",\n    native: \"Magyar\"\n  },\n  name: \"Hungarian\",\n  native_name: \"Magyar\",\n  rtl: false\n};\nconst HungarianHungary = {\n  country: {\n    code: CountryCode.Hungary,\n    name: \"Hungary\",\n    native: \"Magyarorsz\\xE1g\"\n  },\n  id: LocaleCode.HungarianHungary,\n  language: {\n    code: LanguageCode.Hungarian,\n    name: \"Hungarian\",\n    native: \"Magyar\"\n  },\n  name: \"Hungarian (Hungary)\",\n  native_name: \"Magyar (Magyarorsz\\xE1g)\",\n  rtl: false\n};\nconst Icelandic = {\n  id: LocaleCode.Icelandic,\n  language: {\n    code: LanguageCode.Icelandic,\n    name: \"Icelandic\",\n    native: \"\\xCDslenska\"\n  },\n  name: \"Icelandic\",\n  native_name: \"\\xCDslenska\",\n  rtl: false\n};\nconst IcelandicIceland = {\n  country: {\n    code: CountryCode.Iceland,\n    name: \"Iceland\",\n    native: \"\\xCDsland\"\n  },\n  id: LocaleCode.IcelandicIceland,\n  language: {\n    code: LanguageCode.Icelandic,\n    name: \"Icelandic\",\n    native: \"\\xCDslenska\"\n  },\n  name: \"Icelandic (Iceland)\",\n  native_name: \"\\xCDslenska (\\xCDsland)\",\n  rtl: false\n};\nconst Igbo = {\n  id: LocaleCode.Igbo,\n  language: {\n    code: LanguageCode.Igbo,\n    name: \"Igbo\",\n    native: \"Igbo\"\n  },\n  name: \"Igbo\",\n  native_name: \"Igbo\",\n  rtl: false\n};\nconst Indonesian = {\n  id: LocaleCode.Indonesian,\n  language: {\n    code: LanguageCode.Indonesian,\n    name: \"Indonesian\",\n    native: \"Bahasa Indonesia\"\n  },\n  name: \"Indonesian\",\n  native_name: \"Bahasa Indonesia\",\n  rtl: false\n};\nconst IndonesianIndonesia = {\n  country: {\n    code: CountryCode.Indonesia,\n    name: \"Indonesia\",\n    native: \"Indonesia\"\n  },\n  id: LocaleCode.IndonesianIndonesia,\n  language: {\n    code: LanguageCode.Indonesian,\n    name: \"Indonesian\",\n    native: \"Bahasa Indonesia\"\n  },\n  name: \"Indonesian (Indonesia)\",\n  native_name: \"Bahasa Indonesia (Indonesia)\",\n  rtl: false\n};\nconst Irish = {\n  id: LocaleCode.Irish,\n  language: {\n    code: LanguageCode.Irish,\n    name: \"Irish\",\n    native: \"Gaeilge\"\n  },\n  name: \"Irish\",\n  native_name: \"Gaeilge\",\n  rtl: false\n};\nconst IrishIreland = {\n  country: {\n    code: CountryCode.Ireland,\n    name: \"Ireland\",\n    native: \"\\xC9ire\"\n  },\n  id: LocaleCode.IrishIreland,\n  language: {\n    code: LanguageCode.Irish,\n    name: \"Irish\",\n    native: \"Gaeilge\"\n  },\n  name: \"Irish (Ireland)\",\n  native_name: \"Gaeilge (\\xC9ire)\",\n  rtl: false\n};\nconst Italian = {\n  id: LocaleCode.Italian,\n  language: {\n    code: LanguageCode.Italian,\n    name: \"Italian\",\n    native: \"Italiano\"\n  },\n  name: \"Italian\",\n  native_name: \"Italiano\",\n  rtl: false\n};\nconst ItalianItaly = {\n  country: {\n    code: CountryCode.Italy,\n    name: \"Italy\",\n    native: \"Italia\"\n  },\n  id: LocaleCode.ItalianItaly,\n  language: {\n    code: LanguageCode.Italian,\n    name: \"Italian\",\n    native: \"Italiano\"\n  },\n  name: \"Italian (Italy)\",\n  native_name: \"Italiano (Italia)\",\n  rtl: false\n};\nconst ItalianSwitzerland = {\n  country: {\n    code: CountryCode.Switzerland,\n    name: \"Switzerland\",\n    native: \"Schweiz\"\n  },\n  id: LocaleCode.ItalianSwitzerland,\n  language: {\n    code: LanguageCode.Italian,\n    name: \"Italian\",\n    native: \"Italiano\"\n  },\n  name: \"Italian (Switzerland)\",\n  native_name: \"Italiano (Svizzera)\",\n  rtl: false\n};\nconst Japanese = {\n  id: LocaleCode.Japanese,\n  language: {\n    code: LanguageCode.Japanese,\n    name: \"Japanese\",\n    native: \"\\u65E5\\u672C\\u8A9E\"\n  },\n  name: \"Japanese\",\n  native_name: \"\\u65E5\\u672C\\u8A9E\",\n  rtl: false\n};\nconst JapaneseJapan = {\n  country: {\n    code: CountryCode.Japan,\n    name: \"Japan\",\n    native: \"\\u65E5\\u672C\"\n  },\n  id: LocaleCode.JapaneseJapan,\n  language: {\n    code: LanguageCode.Japanese,\n    name: \"Japanese\",\n    native: \"\\u65E5\\u672C\\u8A9E\"\n  },\n  name: \"Japanese (Japan)\",\n  native_name: \"\\u65E5\\u672C\\u8A9E (\\u65E5\\u672C)\",\n  rtl: false\n};\nconst Kannada = {\n  id: LocaleCode.Kannada,\n  language: {\n    code: LanguageCode.Kannada,\n    name: \"Kannada\",\n    native: \"\\u0C95\\u0CA8\\u0CCD\\u0CA8\\u0CA1\"\n  },\n  name: \"Kannada\",\n  native_name: \"\\u0C95\\u0CA8\\u0CCD\\u0CA8\\u0CA1\",\n  rtl: false\n};\nconst KannadaIndia = {\n  country: {\n    code: CountryCode.India,\n    name: \"India\",\n    native: \"\\u0CAD\\u0CBE\\u0CB0\\u0CA4\"\n  },\n  id: LocaleCode.KannadaIndia,\n  language: {\n    code: LanguageCode.Kannada,\n    name: \"Kannada\",\n    native: \"\\u0C95\\u0CA8\\u0CCD\\u0CA8\\u0CA1\"\n  },\n  name: \"Kannada (India)\",\n  native_name: \"\\u0C95\\u0CA8\\u0CCD\\u0CA8\\u0CA1 (\\u0CAD\\u0CBE\\u0CB0\\u0CA4)\",\n  rtl: false\n};\nconst Kazakh = {\n  id: LocaleCode.Kazakh,\n  language: {\n    code: LanguageCode.Kazakh,\n    name: \"Kazakh\",\n    native: \"\\u049A\\u0430\\u0437\\u0430\\u049B \\u0442\\u0456\\u043B\\u0456\"\n  },\n  name: \"Kazakh\",\n  native_name: \"\\u049A\\u0430\\u0437\\u0430\\u049B \\u0442\\u0456\\u043B\\u0456\",\n  rtl: false\n};\nconst KazakhKazakhstan = {\n  country: {\n    code: CountryCode.Kazakhstan,\n    name: \"Kazakhstan\",\n    native: \"\\u049A\\u0430\\u0437\\u0430\\u049B\\u0441\\u0442\\u0430\\u043D\"\n  },\n  id: LocaleCode.KazakhKazakhstan,\n  language: {\n    code: LanguageCode.Kazakh,\n    name: \"Kazakh\",\n    native: \"\\u049A\\u0430\\u0437\\u0430\\u049B \\u0442\\u0456\\u043B\\u0456\"\n  },\n  name: \"Kazakh (Kazakhstan)\",\n  native_name: \"\\u049A\\u0430\\u0437\\u0430\\u049B \\u0442\\u0456\\u043B\\u0456 (\\u049A\\u0430\\u0437\\u0430\\u049B\\u0441\\u0442\\u0430\\u043D)\",\n  rtl: false\n};\nconst Khmer = {\n  id: LocaleCode.Khmer,\n  language: {\n    code: LanguageCode.Khmer,\n    name: \"Khmer\",\n    native: \"\\u1797\\u17B6\\u179F\\u17B6\\u1781\\u17D2\\u1798\\u17C2\\u179A\"\n  },\n  name: \"Khmer\",\n  native_name: \"\\u1797\\u17B6\\u179F\\u17B6\\u1781\\u17D2\\u1798\\u17C2\\u179A\",\n  rtl: false\n};\nconst KhmerCambodia = {\n  country: {\n    code: CountryCode.Cambodia,\n    name: \"Cambodia\",\n    native: \"\\u1780\\u1798\\u17D2\\u1796\\u17BB\\u1787\\u17B6\"\n  },\n  id: LocaleCode.KhmerCambodia,\n  language: {\n    code: LanguageCode.Khmer,\n    name: \"Khmer\",\n    native: \"\\u1797\\u17B6\\u179F\\u17B6\\u1781\\u17D2\\u1798\\u17C2\\u179A\"\n  },\n  name: \"Khmer (Cambodia)\",\n  native_name: \"\\u1797\\u17B6\\u179F\\u17B6\\u1781\\u17D2\\u1798\\u17C2\\u179A (\\u1780\\u1798\\u17D2\\u1796\\u17BB\\u1787\\u17B6)\",\n  rtl: false\n};\nconst Konkani = {\n  id: LocaleCode.Konkani,\n  language: {\n    code: LanguageCode.Konkani,\n    name: \"Konkani\",\n    native: \"\\u0915\\u094B\\u0902\\u0915\\u0923\\u0940\"\n  },\n  name: \"Konkani\",\n  native_name: \"\\u0915\\u094B\\u0902\\u0915\\u0923\\u0940\",\n  rtl: false\n};\nconst KonkaniIndia = {\n  country: {\n    code: CountryCode.India,\n    name: \"India\",\n    native: \"\\u092D\\u093E\\u0930\\u0924\"\n  },\n  id: LocaleCode.KonkaniIndia,\n  language: {\n    code: LanguageCode.Konkani,\n    name: \"Konkani\",\n    native: \"\\u0915\\u094B\\u0902\\u0915\\u0923\\u0940\"\n  },\n  name: \"Konkani (India)\",\n  native_name: \"\\u0915\\u094B\\u0902\\u0915\\u0923\\u0940 (\\u092D\\u093E\\u0930\\u0924)\",\n  rtl: false\n};\nconst Korean = {\n  id: LocaleCode.Korean,\n  language: {\n    code: LanguageCode.Korean,\n    name: \"Korean\",\n    native: \"\\uD55C\\uAD6D\\uC5B4\"\n  },\n  name: \"Korean\",\n  native_name: \"\\uD55C\\uAD6D\\uC5B4\",\n  rtl: false\n};\nconst KoreanSouthKorea = {\n  country: {\n    code: CountryCode.SouthKorea,\n    name: \"South Korea\",\n    native: \"\\uB300\\uD55C\\uBBFC\\uAD6D\"\n  },\n  id: LocaleCode.KoreanSouthKorea,\n  language: {\n    code: LanguageCode.Korean,\n    name: \"Korean\",\n    native: \"\\uD55C\\uAD6D\\uC5B4\"\n  },\n  name: \"Korean (South Korea)\",\n  native_name: \"\\uD55C\\uAD6D\\uC5B4 (\\uB300\\uD55C\\uBBFC\\uAD6D)\",\n  rtl: false\n};\nconst Kurdish = {\n  id: LocaleCode.Kurdish,\n  language: {\n    code: LanguageCode.Kurdish,\n    name: \"Kurdish\",\n    native: \"Kurd\\xEE\"\n  },\n  name: \"Kurdish\",\n  native_name: \"Kurd\\xEE\",\n  rtl: false\n};\nconst KurdishIraq = {\n  country: {\n    code: CountryCode.Iraq,\n    name: \"Iraq\",\n    native: \"\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\"\n  },\n  id: LocaleCode.KurdishIraq,\n  language: {\n    code: LanguageCode.Kurdish,\n    name: \"Kurdish\",\n    native: \"Kurd\\xEE\"\n  },\n  name: \"Kurdish (Iraq)\",\n  native_name: \"Kurd\\xEE (\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642)\",\n  rtl: false\n};\nconst KurdishTurkey = {\n  country: {\n    code: CountryCode.Turkey,\n    name: \"Turkey\",\n    native: \"T\\xFCrkiye\"\n  },\n  id: LocaleCode.KurdishTurkey,\n  language: {\n    code: LanguageCode.Kurdish,\n    name: \"Kurdish\",\n    native: \"Kurd\\xEE\"\n  },\n  name: \"Kurdish (Turkey)\",\n  native_name: \"Kurd\\xEE (T\\xFCrkiye)\",\n  rtl: false\n};\nconst Kyrgyz = {\n  id: LocaleCode.Kyrgyz,\n  language: {\n    code: LanguageCode.Kyrgyz,\n    name: \"Kyrgyz\",\n    native: \"\\u041A\\u044B\\u0440\\u0433\\u044B\\u0437\\u0447\\u0430\"\n  },\n  name: \"Kyrgyz\",\n  native_name: \"\\u041A\\u044B\\u0440\\u0433\\u044B\\u0437\\u0447\\u0430\",\n  rtl: false\n};\nconst KyrgyzKyrgyzstan = {\n  country: {\n    code: CountryCode.Kyrgyzstan,\n    name: \"Kyrgyzstan\",\n    native: \"\\u041A\\u044B\\u0440\\u0433\\u044B\\u0437\\u0441\\u0442\\u0430\\u043D\"\n  },\n  id: LocaleCode.KyrgyzKyrgyzstan,\n  language: {\n    code: LanguageCode.Kyrgyz,\n    name: \"Kyrgyz\",\n    native: \"\\u041A\\u044B\\u0440\\u0433\\u044B\\u0437\\u0447\\u0430\"\n  },\n  name: \"Kyrgyz (Kyrgyzstan)\",\n  native_name: \"\\u041A\\u044B\\u0440\\u0433\\u044B\\u0437\\u0447\\u0430 (\\u041A\\u044B\\u0440\\u0433\\u044B\\u0437\\u0441\\u0442\\u0430\\u043D)\",\n  rtl: false\n};\nconst Lao = {\n  id: LocaleCode.Lao,\n  language: {\n    code: LanguageCode.Lao,\n    name: \"Lao\",\n    native: \"\\u0EA5\\u0EB2\\u0EA7\"\n  },\n  name: \"Lao\",\n  native_name: \"\\u0EA5\\u0EB2\\u0EA7\",\n  rtl: false\n};\nconst LaoLaos = {\n  country: {\n    code: CountryCode.Laos,\n    name: \"Laos\",\n    native: \"\\u0EAA.\\u0E9B.\\u0E9B\\u0EB0\\u0E8A\\u0EB2\\u0E97\\u0EB4\\u0E9B\\u0EB0\\u0EC4\\u0E95\"\n  },\n  id: LocaleCode.LaoLaos,\n  language: {\n    code: LanguageCode.Lao,\n    name: \"Lao\",\n    native: \"\\u0EA5\\u0EB2\\u0EA7\"\n  },\n  name: \"Lao (Laos)\",\n  native_name: \"\\u0EA5\\u0EB2\\u0EA7 (\\u0EAA.\\u0E9B.\\u0E9B\\u0EB0\\u0E8A\\u0EB2\\u0E97\\u0EB4\\u0E9B\\u0EB0\\u0EC4\\u0E95)\",\n  rtl: false\n};\nconst Latvian = {\n  id: LocaleCode.Latvian,\n  language: {\n    code: LanguageCode.Latvian,\n    name: \"Latvian\",\n    native: \"Latvie\\u0161u\"\n  },\n  name: \"Latvian\",\n  native_name: \"Latvie\\u0161u\",\n  rtl: false\n};\nconst LatvianLatvia = {\n  country: {\n    code: CountryCode.Latvia,\n    name: \"Latvia\",\n    native: \"Latvija\"\n  },\n  id: LocaleCode.LatvianLatvia,\n  language: {\n    code: LanguageCode.Latvian,\n    name: \"Latvian\",\n    native: \"Latvie\\u0161u\"\n  },\n  name: \"Latvian (Latvia)\",\n  native_name: \"Latvie\\u0161u (Latvija)\",\n  rtl: false\n};\nconst Lithuanian = {\n  id: LocaleCode.Lithuanian,\n  language: {\n    code: LanguageCode.Lithuanian,\n    name: \"Lithuanian\",\n    native: \"Lietuvi\\u0173\"\n  },\n  name: \"Lithuanian\",\n  native_name: \"Lietuvi\\u0173\",\n  rtl: false\n};\nconst LithuanianLithuania = {\n  country: {\n    code: CountryCode.Lithuania,\n    name: \"Lithuania\",\n    native: \"Lietuva\"\n  },\n  id: LocaleCode.LithuanianLithuania,\n  language: {\n    code: LanguageCode.Lithuanian,\n    name: \"Lithuanian\",\n    native: \"Lietuvi\\u0173\"\n  },\n  name: \"Lithuanian (Lithuania)\",\n  native_name: \"Lietuvi\\u0173 (Lietuva)\",\n  rtl: false\n};\nconst Luxembourgish = {\n  id: LocaleCode.Luxembourgish,\n  language: {\n    code: LanguageCode.Luxembourgish,\n    name: \"Luxembourgish\",\n    native: \"L\\xEBtzebuergesch\"\n  },\n  name: \"Luxembourgish\",\n  native_name: \"L\\xEBtzebuergesch\",\n  rtl: false\n};\nconst LuxembourgishBelgium = {\n  country: {\n    code: CountryCode.Belgium,\n    name: \"Belgium\",\n    native: \"Belgi\\xEB\"\n  },\n  id: LocaleCode.LuxembourgishBelgium,\n  language: {\n    code: LanguageCode.Luxembourgish,\n    name: \"Luxembourgish\",\n    native: \"L\\xEBtzebuergesch\"\n  },\n  name: \"Luxembourgish (Belgium)\",\n  native_name: \"L\\xEBtzebuergesch (Belgi\\xEB)\",\n  rtl: false\n};\nconst LuxembourgishLuxembourg = {\n  country: {\n    code: CountryCode.Luxembourg,\n    name: \"Luxembourg\",\n    native: \"Luxembourg\"\n  },\n  id: LocaleCode.LuxembourgishLuxembourg,\n  language: {\n    code: LanguageCode.Luxembourgish,\n    name: \"Luxembourgish\",\n    native: \"L\\xEBtzebuergesch\"\n  },\n  name: \"Luxembourgish (Luxembourg)\",\n  native_name: \"L\\xEBtzebuergesch (Luxembourg)\",\n  rtl: false\n};\nconst Macedonian = {\n  id: LocaleCode.Macedonian,\n  language: {\n    code: LanguageCode.Macedonian,\n    name: \"Macedonian\",\n    native: \"\\u041C\\u0430\\u043A\\u0435\\u0434\\u043E\\u043D\\u0441\\u043A\\u0438\"\n  },\n  name: \"Macedonian\",\n  native_name: \"\\u041C\\u0430\\u043A\\u0435\\u0434\\u043E\\u043D\\u0441\\u043A\\u0438\",\n  rtl: false\n};\nconst MacedonianNorthMacedonia = {\n  country: {\n    code: CountryCode.NorthMacedonia,\n    name: \"Macedonia\",\n    native: \"\\u0421\\u0435\\u0432\\u0435\\u0440\\u043D\\u0430 \\u041C\\u0430\\u043A\\u0435\\u0434\\u043E\\u043D\\u0438\\u0458\\u0430\"\n  },\n  id: LocaleCode.MacedonianNorthMacedonia,\n  language: {\n    code: LanguageCode.Macedonian,\n    name: \"Macedonian\",\n    native: \"\\u041C\\u0430\\u043A\\u0435\\u0434\\u043E\\u043D\\u0441\\u043A\\u0438\"\n  },\n  name: \"Macedonian (North Macedonia)\",\n  native_name: \"\\u041C\\u0430\\u043A\\u0435\\u0434\\u043E\\u043D\\u0441\\u043A\\u0438 (\\u0421\\u0435\\u0432\\u0435\\u0440\\u043D\\u0430 \\u041C\\u0430\\u043A\\u0435\\u0434\\u043E\\u043D\\u0438\\u0458\\u0430)\",\n  rtl: false\n};\nconst Malay = {\n  id: LocaleCode.Malay,\n  language: {\n    code: LanguageCode.Malay,\n    name: \"Malay\",\n    native: \"Bahasa Melayu\"\n  },\n  name: \"Malay\",\n  native_name: \"Bahasa Melayu\",\n  rtl: false\n};\nconst MalayBrunei = {\n  country: {\n    code: CountryCode.Brunei,\n    name: \"Brunei\",\n    native: \"Negara Brunei Darussalam\"\n  },\n  id: LocaleCode.MalayBrunei,\n  language: {\n    code: LanguageCode.Malay,\n    name: \"Malay\",\n    native: \"Bahasa Melayu\"\n  },\n  name: \"Malay (Brunei)\",\n  native_name: \"Bahasa Melayu (Negara Brunei Darussalam)\",\n  rtl: false\n};\nconst MalayMalaysia = {\n  country: {\n    code: CountryCode.Malaysia,\n    name: \"Malaysia\",\n    native: \"Malaysia\"\n  },\n  id: LocaleCode.MalayMalaysia,\n  language: {\n    code: LanguageCode.Malay,\n    name: \"Malay\",\n    native: \"Bahasa Melayu\"\n  },\n  name: \"Malay (Malaysia)\",\n  native_name: \"Bahasa Melayu (Malaysia)\",\n  rtl: false\n};\nconst MalaySingapore = {\n  country: {\n    code: CountryCode.Singapore,\n    name: \"Singapore\",\n    native: \"Singapore\"\n  },\n  id: LocaleCode.MalaySingapore,\n  language: {\n    code: LanguageCode.Malay,\n    name: \"Malay\",\n    native: \"Bahasa Melayu\"\n  },\n  name: \"Malay (Singapore)\",\n  native_name: \"Bahasa Melayu (Singapore)\",\n  rtl: false\n};\nconst MalayIndia = {\n  country: {\n    code: CountryCode.India,\n    name: \"India\",\n    native: \"\\u092D\\u093E\\u0930\\u0924\"\n  },\n  id: LocaleCode.MalayIndia,\n  language: {\n    code: LanguageCode.Malay,\n    name: \"Malay\",\n    native: \"Bahasa Melayu\"\n  },\n  name: \"Malay (India)\",\n  native_name: \"Bahasa Melayu (\\u092D\\u093E\\u0930\\u0924)\",\n  rtl: false\n};\nconst Maltese = {\n  id: LocaleCode.Maltese,\n  language: {\n    code: LanguageCode.Maltese,\n    name: \"Maltese\",\n    native: \"Malti\"\n  },\n  name: \"Maltese\",\n  native_name: \"Malti\",\n  rtl: false\n};\nconst MalteseMalta = {\n  country: {\n    code: CountryCode.Malta,\n    name: \"Malta\",\n    native: \"Malta\"\n  },\n  id: LocaleCode.MalteseMalta,\n  language: {\n    code: LanguageCode.Maltese,\n    name: \"Maltese\",\n    native: \"Malti\"\n  },\n  name: \"Maltese (Malta)\",\n  native_name: \"Malti (Malta)\",\n  rtl: false\n};\nconst Maori = {\n  id: LocaleCode.Maori,\n  language: {\n    code: LanguageCode.Maori,\n    name: \"Maori\",\n    native: \"M\\u0101ori\"\n  },\n  name: \"Maori\",\n  native_name: \"M\\u0101ori\",\n  rtl: false\n};\nconst MaoriNewZealand = {\n  country: {\n    code: CountryCode.NewZealand,\n    name: \"New Zealand\",\n    native: \"New Zealand\"\n  },\n  id: LocaleCode.MaoriNewZealand,\n  language: {\n    code: LanguageCode.Maori,\n    name: \"Maori\",\n    native: \"M\\u0101ori\"\n  },\n  name: \"Maori (New Zealand)\",\n  native_name: \"M\\u0101ori (New Zealand)\",\n  rtl: false\n};\nconst Marathi = {\n  id: LocaleCode.Marathi,\n  language: {\n    code: LanguageCode.Marathi,\n    name: \"Marathi\",\n    native: \"\\u092E\\u0930\\u093E\\u0920\\u0940\"\n  },\n  name: \"Marathi\",\n  native_name: \"\\u092E\\u0930\\u093E\\u0920\\u0940\",\n  rtl: false\n};\nconst MarathiIndia = {\n  country: {\n    code: CountryCode.India,\n    name: \"India\",\n    native: \"\\u092D\\u093E\\u0930\\u0924\"\n  },\n  id: LocaleCode.MarathiIndia,\n  language: {\n    code: LanguageCode.Marathi,\n    name: \"Marathi\",\n    native: \"\\u092E\\u0930\\u093E\\u0920\\u0940\"\n  },\n  name: \"Marathi (India)\",\n  native_name: \"\\u092E\\u0930\\u093E\\u0920\\u0940 (\\u092D\\u093E\\u0930\\u0924)\",\n  rtl: false\n};\nconst Mongolian = {\n  id: LocaleCode.Mongolian,\n  language: {\n    code: LanguageCode.Mongolian,\n    name: \"Mongolian\",\n    native: \"\\u041C\\u043E\\u043D\\u0433\\u043E\\u043B\"\n  },\n  name: \"Mongolian\",\n  native_name: \"\\u041C\\u043E\\u043D\\u0433\\u043E\\u043B\",\n  rtl: false\n};\nconst MongolianMongolia = {\n  country: {\n    code: CountryCode.Mongolia,\n    name: \"Mongolia\",\n    native: \"\\u041C\\u043E\\u043D\\u0433\\u043E\\u043B \\u0443\\u043B\\u0441\"\n  },\n  id: LocaleCode.MongolianMongolia,\n  language: {\n    code: LanguageCode.Mongolian,\n    name: \"Mongolian\",\n    native: \"\\u041C\\u043E\\u043D\\u0433\\u043E\\u043B\"\n  },\n  name: \"Mongolian (Mongolia)\",\n  native_name: \"\\u041C\\u043E\\u043D\\u0433\\u043E\\u043B (\\u041C\\u043E\\u043D\\u0433\\u043E\\u043B \\u0443\\u043B\\u0441)\",\n  rtl: false\n};\nconst Montenegrin = {\n  id: LocaleCode.Montenegrin,\n  language: {\n    code: LanguageCode.Montenegrin,\n    name: \"Montenegrin\",\n    native: \"\\u0426\\u0440\\u043D\\u0430 \\u0413\\u043E\\u0440\\u0430\\u043A\"\n  },\n  name: \"Montenegrin\",\n  native_name: \"\\u0426\\u0440\\u043D\\u0430 \\u0413\\u043E\\u0440\\u0430\\u043A\",\n  rtl: false\n};\nconst MontenegrinMontenegro = {\n  country: {\n    code: CountryCode.Montenegro,\n    name: \"Montenegro\",\n    native: \"\\u0426\\u0440\\u043D\\u0430 \\u0413\\u043E\\u0440\\u0430\\u043A\"\n  },\n  id: LocaleCode.MontenegrinMontenegro,\n  language: {\n    code: LanguageCode.Montenegrin,\n    name: \"Montenegrin\",\n    native: \"\\u0426\\u0440\\u043D\\u0430 \\u0413\\u043E\\u0440\\u0430\\u043A\"\n  },\n  name: \"Montenegrin (Montenegro)\",\n  native_name: \"\\u0426\\u0440\\u043D\\u0430 \\u0413\\u043E\\u0440\\u0430\\u043A (\\u0426\\u0440\\u043D\\u0430 \\u0413\\u043E\\u0440\\u0430\\u043A)\",\n  rtl: false\n};\nconst Nepali = {\n  id: LocaleCode.Nepali,\n  language: {\n    code: LanguageCode.Nepali,\n    name: \"Nepali\",\n    native: \"\\u0928\\u0947\\u092A\\u093E\\u0932\\u0940\"\n  },\n  name: \"Nepali\",\n  native_name: \"\\u0928\\u0947\\u092A\\u093E\\u0932\\u0940\",\n  rtl: false\n};\nconst NepaliNepal = {\n  country: {\n    code: CountryCode.Nepal,\n    name: \"Nepal\",\n    native: \"\\u0928\\u0947\\u092A\\u093E\\u0932\"\n  },\n  id: LocaleCode.NepaliNepal,\n  language: {\n    code: LanguageCode.Nepali,\n    name: \"Nepali\",\n    native: \"\\u0928\\u0947\\u092A\\u093E\\u0932\\u0940\"\n  },\n  name: \"Nepali (Nepal)\",\n  native_name: \"\\u0928\\u0947\\u092A\\u093E\\u0932\\u0940 (\\u0928\\u0947\\u092A\\u093E\\u0932)\",\n  rtl: false\n};\nconst NorthernSotho = {\n  id: LocaleCode.NorthernSotho,\n  language: {\n    code: LanguageCode.NorthernSotho,\n    name: \"Northern Sotho\",\n    native: \"Sesotho sa Leboa\"\n  },\n  name: \"Northern Sotho\",\n  native_name: \"Sesotho sa Leboa\",\n  rtl: false\n};\nconst NorthernSothoSouthAfrica = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: \"South Africa\",\n    native: \"South Africa\"\n  },\n  id: LocaleCode.NorthernSothoSouthAfrica,\n  language: {\n    code: LanguageCode.NorthernSotho,\n    name: \"Northern Sotho\",\n    native: \"Sesotho sa Leboa\"\n  },\n  name: \"Northern Sotho (South Africa)\",\n  native_name: \"Sesotho sa Leboa (South Africa)\",\n  rtl: false\n};\nconst Norwegian = {\n  id: LocaleCode.Norwegian,\n  language: {\n    code: LanguageCode.Norwegian,\n    name: \"Norwegian\",\n    native: \"Norsk\"\n  },\n  name: \"Norwegian\",\n  native_name: \"Norsk\",\n  rtl: false\n};\nconst NorwegianBokmalNorway = {\n  country: {\n    code: CountryCode.Norway,\n    name: \"Norway\",\n    native: \"Norge\"\n  },\n  id: LocaleCode.NorwegianBokmalNorway,\n  language: {\n    code: LanguageCode.NorwegianBokmal,\n    name: \"Norwegian\",\n    native: \"Norsk\"\n  },\n  name: \"Norwegian (Bokmal)\",\n  native_name: \"Norsk (Bokm\\xE5l)\",\n  rtl: false\n};\nconst NorwegianNynorskNorway = {\n  country: {\n    code: CountryCode.Norway,\n    name: \"Norway\",\n    native: \"Norge\"\n  },\n  id: LocaleCode.NorwegianNynorskNorway,\n  language: {\n    code: LanguageCode.NorwegianNynorsk,\n    name: \"Norwegian\",\n    native: \"Norsk\"\n  },\n  name: \"Norwegian (Nynorsk)\",\n  native_name: \"Norsk (Nynorsk)\",\n  rtl: false\n};\nconst Oriya = {\n  id: LocaleCode.Oriya,\n  language: {\n    code: LanguageCode.Oriya,\n    name: \"Oriya\",\n    native: \"\\u0B13\\u0B21\\u0B3C\\u0B3F\\u0B06\"\n  },\n  name: \"Oriya\",\n  native_name: \"\\u0B13\\u0B21\\u0B3C\\u0B3F\\u0B06\",\n  rtl: false\n};\nconst OriyaIndia = {\n  country: {\n    code: CountryCode.India,\n    name: \"India\",\n    native: \"\\u0B87\\u0BA8\\u0BCD\\u0BA4\\u0BBF\\u0BAF\\u0BBE\"\n  },\n  id: LocaleCode.OriyaIndia,\n  language: {\n    code: LanguageCode.Oriya,\n    name: \"Oriya\",\n    native: \"\\u0B13\\u0B21\\u0B3C\\u0B3F\\u0B06\"\n  },\n  name: \"Oriya (India)\",\n  native_name: \"\\u0B13\\u0B21\\u0B3C\\u0B3F\\u0B06 (\\u0B2D\\u0B3E\\u0B30\\u0B24)\",\n  rtl: false\n};\nconst Pashto = {\n  id: LocaleCode.Pashto,\n  language: {\n    code: LanguageCode.Pashto,\n    name: \"Pashto\",\n    native: \"\\u067E\\u069A\\u062A\\u0648\"\n  },\n  name: \"Pashto\",\n  native_name: \"\\u067E\\u069A\\u062A\\u0648\",\n  rtl: true\n};\nconst PashtoAfghanistan = {\n  country: {\n    code: CountryCode.Afghanistan,\n    name: \"Afghanistan\",\n    native: \"\\u0627\\u0641\\u063A\\u0627\\u0646\\u0633\\u062A\\u0627\\u0646\"\n  },\n  id: LocaleCode.PashtoAfghanistan,\n  language: {\n    code: LanguageCode.Pashto,\n    name: \"Pashto\",\n    native: \"\\u067E\\u069A\\u062A\\u0648\"\n  },\n  name: \"Pashto (Afghanistan)\",\n  native_name: \"\\u067E\\u069A\\u062A\\u0648 (\\u0627\\u0641\\u063A\\u0627\\u0646\\u0633\\u062A\\u0627\\u0646)\",\n  rtl: true\n};\nconst Persian = {\n  id: LocaleCode.Persian,\n  language: {\n    code: LanguageCode.Persian,\n    name: \"Persian\",\n    native: \"\\u0641\\u0627\\u0631\\u0633\\u06CC\"\n  },\n  name: \"Persian\",\n  native_name: \"\\u0641\\u0627\\u0631\\u0633\\u06CC\",\n  rtl: true\n};\nconst PersianIran = {\n  country: {\n    code: CountryCode.Iran,\n    name: \"Iran\",\n    native: \"\\u0627\\u06CC\\u0631\\u0627\\u0646\"\n  },\n  id: LocaleCode.PersianIran,\n  language: {\n    code: LanguageCode.Persian,\n    name: \"Persian\",\n    native: \"\\u0641\\u0627\\u0631\\u0633\\u06CC\"\n  },\n  name: \"Persian (Iran)\",\n  native_name: \"\\u0641\\u0627\\u0631\\u0633\\u06CC (\\u0627\\u06CC\\u0631\\u0627\\u0646)\",\n  rtl: true\n};\nconst Polish = {\n  id: LocaleCode.Polish,\n  language: {\n    code: LanguageCode.Polish,\n    name: \"Polish\",\n    native: \"Polski\"\n  },\n  name: \"Polish\",\n  native_name: \"Polski\",\n  rtl: false\n};\nconst PolishPoland = {\n  country: {\n    code: CountryCode.Poland,\n    name: \"Poland\",\n    native: \"Polska\"\n  },\n  id: LocaleCode.PolishPoland,\n  language: {\n    code: LanguageCode.Polish,\n    name: \"Polish\",\n    native: \"Polski\"\n  },\n  name: \"Polish (Poland)\",\n  native_name: \"Polski (Polska)\",\n  rtl: false\n};\nconst Portuguese = {\n  id: LocaleCode.Portuguese,\n  language: {\n    code: LanguageCode.Portuguese,\n    name: \"Portuguese\",\n    native: \"Portugu\\xEAs\"\n  },\n  name: \"Portuguese\",\n  native_name: \"Portugu\\xEAs\",\n  rtl: false\n};\nconst PortugueseBrazil = {\n  country: {\n    code: CountryCode.Brazil,\n    name: \"Brazil\",\n    native: \"Brasil\"\n  },\n  id: LocaleCode.PortugueseBrazil,\n  language: {\n    code: LanguageCode.Portuguese,\n    name: \"Portuguese\",\n    native: \"Portugu\\xEAs\"\n  },\n  name: \"Portuguese (Brazil)\",\n  native_name: \"Portugu\\xEAs (Brasil)\",\n  rtl: false\n};\nconst PortuguesePortugal = {\n  country: {\n    code: CountryCode.Portugal,\n    name: \"Portugal\",\n    native: \"Portugal\"\n  },\n  id: LocaleCode.PortuguesePortugal,\n  language: {\n    code: LanguageCode.Portuguese,\n    name: \"Portuguese\",\n    native: \"Portugu\\xEAs\"\n  },\n  name: \"Portuguese (Portugal)\",\n  native_name: \"Portugu\\xEAs (Portugal)\",\n  rtl: false\n};\nconst Punjabi = {\n  id: LocaleCode.Punjabi,\n  language: {\n    code: LanguageCode.Punjabi,\n    name: \"Punjabi\",\n    native: \"\\u0A2A\\u0A70\\u0A1C\\u0A3E\\u0A2C\\u0A40\"\n  },\n  name: \"Punjabi\",\n  native_name: \"\\u0A2A\\u0A70\\u0A1C\\u0A3E\\u0A2C\\u0A40\",\n  rtl: true\n};\nconst PunjabiPakistan = {\n  country: {\n    code: CountryCode.Pakistan,\n    name: \"Pakistan\",\n    native: \"\\u067E\\u0627\\u06A9\\u0633\\u062A\\u0627\\u0646\"\n  },\n  id: LocaleCode.PunjabiPakistan,\n  language: {\n    code: LanguageCode.Punjabi,\n    name: \"Punjabi\",\n    native: \"\\u0A2A\\u0A70\\u0A1C\\u0A3E\\u0A2C\\u0A40\"\n  },\n  name: \"Punjabi (Pakistan)\",\n  native_name: \"\\u0A2A\\u0A70\\u0A1C\\u0A3E\\u0A2C\\u0A40 (\\u067E\\u0627\\u06A9\\u0633\\u062A\\u0627\\u0646)\",\n  rtl: true\n};\nconst PunjabiIndia = {\n  country: {\n    code: CountryCode.India,\n    name: \"India\",\n    native: \"\\u0A2D\\u0A3E\\u0A30\\u0A24\"\n  },\n  id: LocaleCode.PunjabiIndia,\n  language: {\n    code: LanguageCode.Punjabi,\n    name: \"Punjabi\",\n    native: \"\\u0A2A\\u0A70\\u0A1C\\u0A3E\\u0A2C\\u0A40\"\n  },\n  name: \"Punjabi (India)\",\n  native_name: \"\\u0A2A\\u0A70\\u0A1C\\u0A3E\\u0A2C\\u0A40 (\\u0A2D\\u0A3E\\u0A30\\u0A24)\",\n  rtl: true\n};\nconst Quechua = {\n  id: LocaleCode.Quechua,\n  language: {\n    code: LanguageCode.Quechua,\n    name: \"Quechua\",\n    native: \"Runa Simi\"\n  },\n  name: \"Quechua\",\n  native_name: \"Runa Simi\",\n  rtl: false\n};\nconst QuechuaBolivia = {\n  country: {\n    code: CountryCode.Bolivia,\n    name: \"Bolivia\",\n    native: \"Bolivia\"\n  },\n  id: LocaleCode.QuechuaBolivia,\n  language: {\n    code: LanguageCode.Quechua,\n    name: \"Quechua\",\n    native: \"Runa Simi\"\n  },\n  name: \"Quechua (Bolivia)\",\n  native_name: \"Runa Simi (Bolivia)\",\n  rtl: false\n};\nconst QuechuaEcuador = {\n  country: {\n    code: CountryCode.Ecuador,\n    name: \"Ecuador\",\n    native: \"Ecuador\"\n  },\n  id: LocaleCode.QuechuaEcuador,\n  language: {\n    code: LanguageCode.Quechua,\n    name: \"Quechua\",\n    native: \"Runa Simi\"\n  },\n  name: \"Quechua (Ecuador)\",\n  native_name: \"Runa Simi (Ecuador)\",\n  rtl: false\n};\nconst QuechuaPeru = {\n  country: {\n    code: CountryCode.Peru,\n    name: \"Peru\",\n    native: \"Per\\xFA\"\n  },\n  id: LocaleCode.QuechuaPeru,\n  language: {\n    code: LanguageCode.Quechua,\n    name: \"Quechua\",\n    native: \"Runa Simi\"\n  },\n  name: \"Quechua (Peru)\",\n  native_name: \"Runa Simi (Per\\xFA)\",\n  rtl: false\n};\nconst Romanian = {\n  id: LocaleCode.Romanian,\n  language: {\n    code: LanguageCode.Romanian,\n    name: \"Romanian\",\n    native: \"Rom\\xE2n\\u0103\"\n  },\n  name: \"Romanian\",\n  native_name: \"Rom\\xE2n\\u0103\",\n  rtl: false\n};\nconst RomanianRomania = {\n  country: {\n    code: CountryCode.Romania,\n    name: \"Romania\",\n    native: \"Rom\\xE2nia\"\n  },\n  id: LocaleCode.RomanianRomania,\n  language: {\n    code: LanguageCode.Romanian,\n    name: \"Romanian\",\n    native: \"Rom\\xE2n\\u0103\"\n  },\n  name: \"Romanian (Romania)\",\n  native_name: \"Rom\\xE2n\\u0103 (Rom\\xE2nia)\",\n  rtl: false\n};\nconst Russian = {\n  id: LocaleCode.Russian,\n  language: {\n    code: LanguageCode.Russian,\n    name: \"Russian\",\n    native: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"\n  },\n  name: \"Russian\",\n  native_name: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\",\n  rtl: false\n};\nconst RussianRussia = {\n  country: {\n    code: CountryCode.RussianFederation,\n    name: \"Russian Federation\",\n    native: \"\\u0420\\u043E\\u0441\\u0441\\u0438\\u044F\"\n  },\n  id: LocaleCode.RussianRussia,\n  language: {\n    code: LanguageCode.Russian,\n    name: \"Russian\",\n    native: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"\n  },\n  name: \"Russian (Russia)\",\n  native_name: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439 (\\u0420\\u043E\\u0441\\u0441\\u0438\\u044F)\",\n  rtl: false\n};\nconst RussianUkraine = {\n  country: {\n    code: CountryCode.Ukraine,\n    name: \"Ukraine\",\n    native: \"\\u0423\\u043A\\u0440\\u0430\\u0457\\u043D\\u0430\"\n  },\n  id: LocaleCode.RussianUkraine,\n  language: {\n    code: LanguageCode.Russian,\n    name: \"Russian\",\n    native: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"\n  },\n  name: \"Russian (Ukraine)\",\n  native_name: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439 (\\u0423\\u043A\\u0440\\u0430\\u0457\\u043D\\u0430)\",\n  rtl: false\n};\nconst RussianKazakhstan = {\n  country: {\n    code: CountryCode.Kazakhstan,\n    name: \"Kazakhstan\",\n    native: \"\\u049A\\u0430\\u0437\\u0430\\u049B\\u0441\\u0442\\u0430\\u043D\"\n  },\n  id: LocaleCode.RussianKazakhstan,\n  language: {\n    code: LanguageCode.Russian,\n    name: \"Russian\",\n    native: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"\n  },\n  name: \"Russian (Kazakhstan)\",\n  native_name: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439 (\\u049A\\u0430\\u0437\\u0430\\u049B\\u0441\\u0442\\u0430\\u043D)\",\n  rtl: false\n};\nconst RussianKyrgyzstan = {\n  country: {\n    code: CountryCode.Kyrgyzstan,\n    name: \"Kyrgyzstan\",\n    native: \"\\u041A\\u044B\\u0440\\u0433\\u044B\\u0437\\u0447\\u0430\"\n  },\n  id: LocaleCode.RussianKyrgyzstan,\n  language: {\n    code: LanguageCode.Russian,\n    name: \"Russian\",\n    native: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"\n  },\n  name: \"Russian (Kyrgyzstan)\",\n  native_name: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439 (\\u041A\\u044B\\u0440\\u0433\\u044B\\u0437\\u0447\\u0430)\",\n  rtl: false\n};\nconst Sanskrit = {\n  id: LocaleCode.Sanskrit,\n  language: {\n    code: LanguageCode.Sanskrit,\n    name: \"Sanskrit\",\n    native: \"\\u0938\\u0902\\u0938\\u094D\\u0915\\u0943\\u0924\\u092E\\u094D\"\n  },\n  name: \"Sanskrit\",\n  native_name: \"\\u0938\\u0902\\u0938\\u094D\\u0915\\u0943\\u0924\\u092E\\u094D\",\n  rtl: false\n};\nconst SanskritIndia = {\n  country: {\n    code: CountryCode.India,\n    name: \"India\",\n    native: \"\\u092D\\u093E\\u0930\\u0924\"\n  },\n  id: LocaleCode.SanskritIndia,\n  language: {\n    code: LanguageCode.Sanskrit,\n    name: \"Sanskrit\",\n    native: \"\\u0938\\u0902\\u0938\\u094D\\u0915\\u0943\\u0924\\u092E\\u094D\"\n  },\n  name: \"Sanskrit (India)\",\n  native_name: \"\\u0938\\u0902\\u0938\\u094D\\u0915\\u0943\\u0924\\u092E\\u094D (\\u092D\\u093E\\u0930\\u0924)\",\n  rtl: false\n};\nconst Sami = {\n  id: LocaleCode.Sami,\n  language: {\n    code: LanguageCode.Sami,\n    name: \"Sami\",\n    native: \"S\\xE1megiella\"\n  },\n  name: \"Sami\",\n  native_name: \"S\\xE1megiella\",\n  rtl: false\n};\nconst SamiFinland = {\n  country: {\n    code: CountryCode.Finland,\n    name: \"Finland\",\n    native: \"Suomi\"\n  },\n  id: LocaleCode.SamiFinland,\n  language: {\n    code: LanguageCode.Sami,\n    name: \"Sami\",\n    native: \"S\\xE1megiella\"\n  },\n  name: \"Sami (Finland)\",\n  native_name: \"S\\xE1megiella (Suomi)\",\n  rtl: false\n};\nconst SamiNorway = {\n  country: {\n    code: CountryCode.Norway,\n    name: \"Norway\",\n    native: \"Norge\"\n  },\n  id: LocaleCode.SamiNorway,\n  language: {\n    code: LanguageCode.Sami,\n    name: \"Sami\",\n    native: \"S\\xE1megiella\"\n  },\n  name: \"Sami (Norway)\",\n  native_name: \"S\\xE1megiella (Norge)\",\n  rtl: false\n};\nconst SamiSweden = {\n  country: {\n    code: CountryCode.Sweden,\n    name: \"Sweden\",\n    native: \"Sverige\"\n  },\n  id: LocaleCode.SamiSweden,\n  language: {\n    code: LanguageCode.Sami,\n    name: \"Sami\",\n    native: \"S\\xE1megiella\"\n  },\n  name: \"Sami (Sweden)\",\n  native_name: \"S\\xE1megiella (Sverige)\",\n  rtl: false\n};\nconst Samoan = {\n  id: LocaleCode.Samoan,\n  language: {\n    code: LanguageCode.Samoan,\n    name: \"Samoan\",\n    native: \"Gagana fa\\u2019a S\\u0101moa\"\n  },\n  name: \"Samoan\",\n  native_name: \"Gagana fa\\u2019a S\\u0101moa\",\n  rtl: false\n};\nconst SamoanSamoa = {\n  country: {\n    code: CountryCode.Samoa,\n    name: \"Samoa\",\n    native: \"Samoa\"\n  },\n  id: LocaleCode.SamoanSamoa,\n  language: {\n    code: LanguageCode.Samoan,\n    name: \"Samoan\",\n    native: \"Gagana fa\\u2019a S\\u0101moa\"\n  },\n  name: \"Samoan (Samoa)\",\n  native_name: \"Gagana fa\\u2019a S\\u0101moa (Samoa)\",\n  rtl: false\n};\nconst Serbian = {\n  id: LocaleCode.Serbian,\n  language: {\n    code: LanguageCode.Serbian,\n    name: \"Serbian (Latin)\",\n    native: \"Srpski (Latinica)\"\n  },\n  name: \"Serbian (Latin)\",\n  native_name: \"Srpski (Latinica)\",\n  rtl: false\n};\nconst SerbianBosniaAndHerzegovina = {\n  country: {\n    code: CountryCode.BosniaAndHerzegovina,\n    name: \"Bosnia and Herzegovina\",\n    native: \"Bosna i Hercegovina\"\n  },\n  id: LocaleCode.SerbianBosniaAndHerzegovina,\n  language: {\n    code: LanguageCode.Serbian,\n    name: \"Serbian (Latin)\",\n    native: \"Srpski (Latinica)\"\n  },\n  name: \"Serbian (Latin) (Bosnia and Herzegovina)\",\n  native_name: \"Srpski (Latinica) (Bosna i Hercegovina)\",\n  rtl: false\n};\nconst SerbianSerbiaAndMontenegro = {\n  country: {\n    code: CountryCode.SerbiaAndMontenegro,\n    name: \"Serbia and Montenegro\",\n    native: \"Srbija i Crna Gora\"\n  },\n  id: LocaleCode.SerbianSerbiaAndMontenegro,\n  language: {\n    code: LanguageCode.Serbian,\n    name: \"Serbian (Latin)\",\n    native: \"Srpski (Latinica)\"\n  },\n  name: \"Serbian (Latin) (Serbia and Montenegro)\",\n  native_name: \"Srpski (Latinica) (Srbija i Crna Gora)\",\n  rtl: false\n};\nconst SerbianCyrillic = {\n  id: LocaleCode.SerbianCyrillic,\n  language: {\n    code: LanguageCode.SerbianCyrillic,\n    name: \"Serbian\",\n    native: \"\\u0421\\u0440\\u043F\\u0441\\u043A\\u0438\"\n  },\n  name: \"Serbian (Cyrillic)\",\n  native_name: \"\\u0421\\u0440\\u043F\\u0441\\u043A\\u0438 (\\u040B\\u0438\\u0440\\u0438\\u043B\\u0438\\u0446\\u0430)\",\n  rtl: false\n};\nconst SerbianCyrillicBosniaAndHerzegovina = {\n  country: {\n    code: CountryCode.BosniaAndHerzegovina,\n    name: \"Bosnia and Herzegovina\",\n    native: \"\\u0411\\u043E\\u0441\\u043D\\u0430 \\u0438 \\u0425\\u0435\\u0440\\u0446\\u0435\\u0433\\u043E\\u0432\\u0438\\u043D\\u0430\"\n  },\n  id: LocaleCode.SerbianCyrillicBosniaAndHerzegovina,\n  language: {\n    code: LanguageCode.SerbianCyrillic,\n    name: \"Serbian\",\n    native: \"\\u0421\\u0440\\u043F\\u0441\\u043A\\u0438\"\n  },\n  name: \"Serbian (Cyrillic, Bosnia and Herzegovina)\",\n  native_name: \"\\u0421\\u0440\\u043F\\u0441\\u043A\\u0438 (\\u040B\\u0438\\u0440\\u0438\\u043B\\u0438\\u0446\\u0430, \\u0411\\u043E\\u0441\\u043D\\u0430 \\u0438 \\u0425\\u0435\\u0440\\u0446\\u0435\\u0433\\u043E\\u0432\\u0438\\u043D\\u0430)\",\n  rtl: false\n};\nconst SerbianCyrillicSerbiaAndMontenegro = {\n  country: {\n    code: CountryCode.SerbiaAndMontenegro,\n    name: \"Serbia and Montenegro\",\n    native: \"\\u0421\\u0440\\u0431\\u0438\\u0458\\u0430 \\u0438 \\u0426\\u0440\\u043D\\u0430 \\u0413\\u043E\\u0440\\u0430\"\n  },\n  id: LocaleCode.SerbianCyrillicSerbiaAndMontenegro,\n  language: {\n    code: LanguageCode.SerbianCyrillic,\n    name: \"Serbian\",\n    native: \"\\u0421\\u0440\\u043F\\u0441\\u043A\\u0438\"\n  },\n  name: \"Serbian (Cyrillic, Serbia and Montenegro)\",\n  native_name: \"\\u0421\\u0440\\u043F\\u0441\\u043A\\u0438 (\\u040B\\u0438\\u0440\\u0438\\u043B\\u0438\\u0446\\u0430, \\u0421\\u0440\\u0431\\u0438\\u0458\\u0430 \\u0438 \\u0426\\u0440\\u043D\\u0430 \\u0413\\u043E\\u0440\\u0430)\",\n  rtl: false\n};\nconst Slovak = {\n  id: LocaleCode.Slovak,\n  language: {\n    code: LanguageCode.Slovak,\n    name: \"Slovak\",\n    native: \"Sloven\\u010Dina\"\n  },\n  name: \"Slovak\",\n  native_name: \"Sloven\\u010Dina\",\n  rtl: false\n};\nconst SlovakSlovakia = {\n  country: {\n    code: CountryCode.Slovakia,\n    name: \"Slovakia\",\n    native: \"Slovensko\"\n  },\n  id: LocaleCode.SlovakSlovakia,\n  language: {\n    code: LanguageCode.Slovak,\n    name: \"Slovak\",\n    native: \"Sloven\\u010Dina\"\n  },\n  name: \"Slovak (Slovakia)\",\n  native_name: \"Sloven\\u010Dina (Slovensko)\",\n  rtl: false\n};\nconst Slovenian = {\n  id: LocaleCode.Slovenian,\n  language: {\n    code: LanguageCode.Slovenian,\n    name: \"Slovenian\",\n    native: \"Sloven\\u0161\\u010Dina\"\n  },\n  name: \"Slovenian\",\n  native_name: \"Sloven\\u0161\\u010Dina\",\n  rtl: false\n};\nconst SlovenianSlovenia = {\n  country: {\n    code: CountryCode.Slovenia,\n    name: \"Slovenia\",\n    native: \"Slovenija\"\n  },\n  id: LocaleCode.SlovenianSlovenia,\n  language: {\n    code: LanguageCode.Slovenian,\n    name: \"Slovenian\",\n    native: \"Sloven\\u0161\\u010Dina\"\n  },\n  name: \"Slovenian (Slovenia)\",\n  native_name: \"Sloven\\u0161\\u010Dina (Slovenija)\",\n  rtl: false\n};\nconst Somali = {\n  id: LocaleCode.Somali,\n  language: {\n    code: LanguageCode.Somali,\n    name: \"Somali\",\n    native: \"Soomaaliga\"\n  },\n  name: \"Somali\",\n  native_name: \"Soomaaliga\",\n  rtl: true\n};\nconst SomaliSomalia = {\n  country: {\n    code: CountryCode.Somalia,\n    name: \"Somalia\",\n    native: \"Soomaaliya\"\n  },\n  id: LocaleCode.SomaliSomalia,\n  language: {\n    code: LanguageCode.Somali,\n    name: \"Somali\",\n    native: \"Soomaaliga\"\n  },\n  name: \"Somali (Somalia)\",\n  native_name: \"Soomaaliga (Soomaaliya)\",\n  rtl: true\n};\nconst Spanish = {\n  id: LocaleCode.Spanish,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish\",\n  native_name: \"Espa\\xF1ol\",\n  rtl: false\n};\nconst SpanishArgentina = {\n  country: {\n    code: CountryCode.Argentina,\n    name: \"Argentina\",\n    native: \"Argentina\"\n  },\n  id: LocaleCode.SpanishArgentina,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Argentina)\",\n  native_name: \"Espa\\xF1ol (Argentina)\",\n  rtl: false\n};\nconst SpanishBolivia = {\n  country: {\n    code: CountryCode.Bolivia,\n    name: \"Bolivia\",\n    native: \"Bolivia\"\n  },\n  id: LocaleCode.SpanishBolivia,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Bolivia)\",\n  native_name: \"Espa\\xF1ol (Bolivia)\",\n  rtl: false\n};\nconst SpanishChile = {\n  country: {\n    code: CountryCode.Chile,\n    name: \"Chile\",\n    native: \"Chile\"\n  },\n  id: LocaleCode.SpanishChile,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Chile)\",\n  native_name: \"Espa\\xF1ol (Chile)\",\n  rtl: false\n};\nconst SpanishColombia = {\n  country: {\n    code: CountryCode.Colombia,\n    name: \"Colombia\",\n    native: \"Colombia\"\n  },\n  id: LocaleCode.SpanishColombia,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Colombia)\",\n  native_name: \"Espa\\xF1ol (Colombia)\",\n  rtl: false\n};\nconst SpanishCostaRica = {\n  country: {\n    code: CountryCode.CostaRica,\n    name: \"Costa Rica\",\n    native: \"Costa Rica\"\n  },\n  id: LocaleCode.SpanishCostaRica,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Costa Rica)\",\n  native_name: \"Espa\\xF1ol (Costa Rica)\",\n  rtl: false\n};\nconst SpanishCuba = {\n  country: {\n    code: CountryCode.Cuba,\n    name: \"Cuba\",\n    native: \"Cuba\"\n  },\n  id: LocaleCode.SpanishCuba,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Cuba)\",\n  native_name: \"Espa\\xF1ol (Cuba)\",\n  rtl: false\n};\nconst SpanishDominicanRepublic = {\n  country: {\n    code: CountryCode.DominicanRepublic,\n    name: \"Dominican Republic\",\n    native: \"Rep\\xFAblica Dominicana\"\n  },\n  id: LocaleCode.SpanishDominicanRepublic,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Dominican Republic)\",\n  native_name: \"Espa\\xF1ol (Rep\\xFAblica Dominicana)\",\n  rtl: false\n};\nconst SpanishEcuador = {\n  country: {\n    code: CountryCode.Ecuador,\n    name: \"Ecuador\",\n    native: \"Ecuador\"\n  },\n  id: LocaleCode.SpanishEcuador,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Ecuador)\",\n  native_name: \"Espa\\xF1ol (Ecuador)\",\n  rtl: false\n};\nconst SpanishElSalvador = {\n  country: {\n    code: CountryCode.ElSalvador,\n    name: \"El Salvador\",\n    native: \"El Salvador\"\n  },\n  id: LocaleCode.SpanishElSalvador,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (El Salvador)\",\n  native_name: \"Espa\\xF1ol (El Salvador)\",\n  rtl: false\n};\nconst SpanishEquatorialGuinea = {\n  country: {\n    code: CountryCode.EquatorialGuinea,\n    name: \"Equatorial Guinea\",\n    native: \"Guinea Ecuatorial\"\n  },\n  id: LocaleCode.SpanishEquatorialGuinea,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Equatorial Guinea)\",\n  native_name: \"Espa\\xF1ol (Guinea Ecuatorial)\",\n  rtl: false\n};\nconst SpanishGuatemala = {\n  country: {\n    code: CountryCode.Guatemala,\n    name: \"Guatemala\",\n    native: \"Guatemala\"\n  },\n  id: LocaleCode.SpanishGuatemala,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Guatemala)\",\n  native_name: \"Espa\\xF1ol (Guatemala)\",\n  rtl: false\n};\nconst SpanishHonduras = {\n  country: {\n    code: CountryCode.Honduras,\n    name: \"Honduras\",\n    native: \"Honduras\"\n  },\n  id: LocaleCode.SpanishHonduras,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Honduras)\",\n  native_name: \"Espa\\xF1ol (Honduras)\",\n  rtl: false\n};\nconst SpanishMexico = {\n  country: {\n    code: CountryCode.Mexico,\n    name: \"Mexico\",\n    native: \"M\\xE9xico\"\n  },\n  id: LocaleCode.SpanishMexico,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Mexico)\",\n  native_name: \"Espa\\xF1ol (M\\xE9xico)\",\n  rtl: false\n};\nconst SpanishNicaragua = {\n  country: {\n    code: CountryCode.Nicaragua,\n    name: \"Nicaragua\",\n    native: \"Nicaragua\"\n  },\n  id: LocaleCode.SpanishNicaragua,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Nicaragua)\",\n  native_name: \"Espa\\xF1ol (Nicaragua)\",\n  rtl: false\n};\nconst SpanishPanama = {\n  country: {\n    code: CountryCode.Panama,\n    name: \"Panama\",\n    native: \"Panam\\xE1\"\n  },\n  id: LocaleCode.SpanishPanama,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Panama)\",\n  native_name: \"Espa\\xF1ol (Panam\\xE1)\",\n  rtl: false\n};\nconst SpanishParaguay = {\n  country: {\n    code: CountryCode.Paraguay,\n    name: \"Paraguay\",\n    native: \"Paraguay\"\n  },\n  id: LocaleCode.SpanishParaguay,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Paraguay)\",\n  native_name: \"Espa\\xF1ol (Paraguay)\",\n  rtl: false\n};\nconst SpanishPeru = {\n  country: {\n    code: CountryCode.Peru,\n    name: \"Peru\",\n    native: \"Per\\xFA\"\n  },\n  id: LocaleCode.SpanishPeru,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Peru)\",\n  native_name: \"Espa\\xF1ol (Per\\xFA)\",\n  rtl: false\n};\nconst SpanishPuertoRico = {\n  country: {\n    code: CountryCode.PuertoRico,\n    name: \"Puerto Rico\",\n    native: \"Puerto Rico\"\n  },\n  id: LocaleCode.SpanishPuertoRico,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Puerto Rico)\",\n  native_name: \"Espa\\xF1ol (Puerto Rico)\",\n  rtl: false\n};\nconst SpanishUruguay = {\n  country: {\n    code: CountryCode.Uruguay,\n    name: \"Uruguay\",\n    native: \"Uruguay\"\n  },\n  id: LocaleCode.SpanishUruguay,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Uruguay)\",\n  native_name: \"Espa\\xF1ol (Uruguay)\",\n  rtl: false\n};\nconst SpanishVenezuela = {\n  country: {\n    code: CountryCode.Venezuela,\n    name: \"Venezuela\",\n    native: \"Venezuela\"\n  },\n  id: LocaleCode.SpanishVenezuela,\n  language: {\n    code: LanguageCode.Spanish,\n    name: \"Spanish\",\n    native: \"Espa\\xF1ol\"\n  },\n  name: \"Spanish (Venezuela)\",\n  native_name: \"Espa\\xF1ol (Venezuela)\",\n  rtl: false\n};\nconst SutuSouthAfrica = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: \"South Africa\",\n    native: \"South Africa\"\n  },\n  id: LocaleCode.SutuSouthAfrica,\n  language: {\n    code: LanguageCode.Sutu,\n    name: \"Sutu\",\n    native: \"Sesotho\"\n  },\n  name: \"Sutu (South Africa)\",\n  native_name: \"Sesotho (Afrika Borwa)\",\n  rtl: false\n};\nconst Swahili = {\n  id: LocaleCode.Swahili,\n  language: {\n    code: LanguageCode.Swahili,\n    name: \"Swahili\",\n    native: \"Kiswahili\"\n  },\n  name: \"Swahili\",\n  native_name: \"Kiswahili\",\n  rtl: false\n};\nconst SwahiliKenya = {\n  country: {\n    code: CountryCode.Kenya,\n    name: \"Kenya\",\n    native: \"Kenya\"\n  },\n  id: LocaleCode.SwahiliKenya,\n  language: {\n    code: LanguageCode.Swahili,\n    name: \"Swahili\",\n    native: \"Kiswahili\"\n  },\n  name: \"Swahili (Kenya)\",\n  native_name: \"Kiswahili (Kenya)\",\n  rtl: false\n};\nconst Swedish = {\n  id: LocaleCode.Swedish,\n  language: {\n    code: LanguageCode.Swedish,\n    name: \"Swedish\",\n    native: \"Svenska\"\n  },\n  name: \"Swedish\",\n  native_name: \"Svenska\",\n  rtl: false\n};\nconst SwedishFinland = {\n  country: {\n    code: CountryCode.Finland,\n    name: \"Finland\",\n    native: \"Suomi\"\n  },\n  id: LocaleCode.SwedishFinland,\n  language: {\n    code: LanguageCode.Swedish,\n    name: \"Swedish\",\n    native: \"Svenska\"\n  },\n  name: \"Swedish (Finland)\",\n  native_name: \"Svenska (Finland)\",\n  rtl: false\n};\nconst SwedishSweden = {\n  country: {\n    code: CountryCode.Sweden,\n    name: \"Sweden\",\n    native: \"Sverige\"\n  },\n  id: LocaleCode.SwedishSweden,\n  language: {\n    code: LanguageCode.Swedish,\n    name: \"Swedish\",\n    native: \"Svenska\"\n  },\n  name: \"Swedish (Sweden)\",\n  native_name: \"Svenska (Sverige)\",\n  rtl: false\n};\nconst Syriac = {\n  id: LocaleCode.Syriac,\n  language: {\n    code: LanguageCode.Syriac,\n    name: \"Syriac\",\n    native: \"\\u0723\\u0718\\u072A\\u071D\\u071D\\u0710\"\n  },\n  name: \"Syriac\",\n  native_name: \"\\u0723\\u0718\\u072A\\u071D\\u071D\\u0710\",\n  rtl: true\n};\nconst SyriacSyria = {\n  country: {\n    code: CountryCode.Syria,\n    name: \"Syria\",\n    native: \"\\u0633\\u0648\\u0631\\u064A\\u0627\"\n  },\n  id: LocaleCode.SyriacSyria,\n  language: {\n    code: LanguageCode.Syriac,\n    name: \"Syriac\",\n    native: \"\\u0723\\u0718\\u072A\\u071D\\u071D\\u0710\"\n  },\n  name: \"Syriac (Syria)\",\n  native_name: \"\\u0723\\u0718\\u072A\\u071D\\u071D\\u0710 (\\u0633\\u0648\\u0631\\u064A\\u0627)\",\n  rtl: true\n};\nconst Tajik = {\n  id: LocaleCode.Tajik,\n  language: {\n    code: LanguageCode.Tajik,\n    name: \"Tajik\",\n    native: \"\\u0422\\u043E\\u04B7\\u0438\\u043A\\u04E3\"\n  },\n  name: \"Tajik\",\n  native_name: \"\\u0422\\u043E\\u04B7\\u0438\\u043A\\u04E3\",\n  rtl: false\n};\nconst TajikTajikistan = {\n  country: {\n    code: CountryCode.Tajikistan,\n    name: \"Tajikistan\",\n    native: \"\\u0422\\u043E\\u04B7\\u0438\\u043A\\u0438\\u0441\\u0442\\u043E\\u043D\"\n  },\n  id: LocaleCode.TajikTajikistan,\n  language: {\n    code: LanguageCode.Tajik,\n    name: \"Tajik\",\n    native: \"\\u0422\\u043E\\u04B7\\u0438\\u043A\\u04E3\"\n  },\n  name: \"Tajik (Tajikistan)\",\n  native_name: \"\\u0422\\u043E\\u04B7\\u0438\\u043A\\u04E3 (\\u0422\\u043E\\u04B7\\u0438\\u043A\\u0438\\u0441\\u0442\\u043E\\u043D)\",\n  rtl: false\n};\nconst Tagalog = {\n  id: LocaleCode.Tagalog,\n  language: {\n    code: LanguageCode.Tagalog,\n    name: \"Tagalog\",\n    native: \"Tagalog\"\n  },\n  name: \"Tagalog\",\n  native_name: \"Tagalog\",\n  rtl: false\n};\nconst TagalogPhilippines = {\n  country: {\n    code: CountryCode.Philippines,\n    name: \"Philippines\",\n    native: \"Pilipinas\"\n  },\n  id: LocaleCode.TagalogPhilippines,\n  language: {\n    code: LanguageCode.Tagalog,\n    name: \"Tagalog\",\n    native: \"Tagalog\"\n  },\n  name: \"Tagalog (Philippines)\",\n  native_name: \"Tagalog (Pilipinas)\",\n  rtl: false\n};\nconst Tamil = {\n  id: LocaleCode.Tamil,\n  language: {\n    code: LanguageCode.Tamil,\n    name: \"Tamil\",\n    native: \"\\u0BA4\\u0BAE\\u0BBF\\u0BB4\\u0BCD\"\n  },\n  name: \"Tamil\",\n  native_name: \"\\u0BA4\\u0BAE\\u0BBF\\u0BB4\\u0BCD\",\n  rtl: false\n};\nconst TamilIndia = {\n  country: {\n    code: CountryCode.India,\n    name: \"India\",\n    native: \"\\u0B87\\u0BA8\\u0BCD\\u0BA4\\u0BBF\\u0BAF\\u0BBE\"\n  },\n  id: LocaleCode.TamilIndia,\n  language: {\n    code: LanguageCode.Tamil,\n    name: \"Tamil\",\n    native: \"\\u0BA4\\u0BAE\\u0BBF\\u0BB4\\u0BCD\"\n  },\n  name: \"Tamil (India)\",\n  native_name: \"\\u0BA4\\u0BAE\\u0BBF\\u0BB4\\u0BCD (\\u0B87\\u0BA8\\u0BCD\\u0BA4\\u0BBF\\u0BAF\\u0BBE)\",\n  rtl: false\n};\nconst Telugu = {\n  id: LocaleCode.Telugu,\n  language: {\n    code: LanguageCode.Telugu,\n    name: \"Telugu\",\n    native: \"\\u0C24\\u0C46\\u0C32\\u0C41\\u0C17\\u0C41\"\n  },\n  name: \"Telugu\",\n  native_name: \"\\u0C24\\u0C46\\u0C32\\u0C41\\u0C17\\u0C41\",\n  rtl: false\n};\nconst TeluguIndia = {\n  country: {\n    code: CountryCode.India,\n    name: \"India\",\n    native: \"\\u0C2D\\u0C3E\\u0C30\\u0C24\\u0C26\\u0C47\\u0C36\\u0C02\"\n  },\n  id: LocaleCode.TeluguIndia,\n  language: {\n    code: LanguageCode.Telugu,\n    name: \"Telugu\",\n    native: \"\\u0C24\\u0C46\\u0C32\\u0C41\\u0C17\\u0C41\"\n  },\n  name: \"Telugu (India)\",\n  native_name: \"\\u0C24\\u0C46\\u0C32\\u0C41\\u0C17\\u0C41 (\\u0C2D\\u0C3E\\u0C30\\u0C24\\u0C26\\u0C47\\u0C36\\u0C02)\",\n  rtl: false\n};\nconst Thai = {\n  id: LocaleCode.Thai,\n  language: {\n    code: LanguageCode.Thai,\n    name: \"Thai\",\n    native: \"\\u0E44\\u0E17\\u0E22\"\n  },\n  name: \"Thai\",\n  native_name: \"\\u0E44\\u0E17\\u0E22\",\n  rtl: false\n};\nconst ThaiThailand = {\n  country: {\n    code: CountryCode.Thailand,\n    name: \"Thailand\",\n    native: \"\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E17\\u0E28\\u0E44\\u0E17\\u0E22\"\n  },\n  id: LocaleCode.ThaiThailand,\n  language: {\n    code: LanguageCode.Thai,\n    name: \"Thai\",\n    native: \"\\u0E44\\u0E17\\u0E22\"\n  },\n  name: \"Thai (Thailand)\",\n  native_name: \"\\u0E44\\u0E17\\u0E22 (\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E17\\u0E28\\u0E44\\u0E17\\u0E22)\",\n  rtl: false\n};\nconst Tibetan = {\n  id: LocaleCode.Tibetan,\n  language: {\n    code: LanguageCode.Tibetan,\n    name: \"Tibetan\",\n    native: \"\\u0F56\\u0F7C\\u0F51\\u0F0B\\u0F61\\u0F72\\u0F42\"\n  },\n  name: \"Tibetan\",\n  native_name: \"\\u0F56\\u0F7C\\u0F51\\u0F0B\\u0F61\\u0F72\\u0F42\",\n  rtl: false\n};\nconst TibetanChina = {\n  country: {\n    code: CountryCode.China,\n    name: \"China\",\n    native: \"\\u4E2D\\u56FD\"\n  },\n  id: LocaleCode.TibetanChina,\n  language: {\n    code: LanguageCode.Tibetan,\n    name: \"Tibetan\",\n    native: \"\\u0F56\\u0F7C\\u0F51\\u0F0B\\u0F61\\u0F72\\u0F42\"\n  },\n  name: \"Tibetan (China)\",\n  native_name: \"\\u0F56\\u0F7C\\u0F51\\u0F0B\\u0F61\\u0F72\\u0F42 (\\u0F62\\u0F92\\u0FB1\\u0F0B\\u0F53\\u0F42)\",\n  rtl: false\n};\nconst TibetanBhutan = {\n  country: {\n    code: CountryCode.Bhutan,\n    name: \"Bhutan\",\n    native: \"\\u0F60\\u0F56\\u0FB2\\u0F74\\u0F42\\u0F0B\\u0F61\\u0F74\\u0F63\\u0F0B\\u0F66\\u0FA4\\u0FB1\\u0F72\\u0F0B\\u0F63\\u0F7A\\u0F53\\u0F4C\\u0F0D\"\n  },\n  id: LocaleCode.TibetanBhutan,\n  language: {\n    code: LanguageCode.Tibetan,\n    name: \"Tibetan\",\n    native: \"\\u0F56\\u0F7C\\u0F51\\u0F0B\\u0F61\\u0F72\\u0F42\"\n  },\n  name: \"Tibetan (Bhutan)\",\n  native_name: \"\\u0F56\\u0F7C\\u0F51\\u0F0B\\u0F61\\u0F72\\u0F42 (\\u0F60\\u0F56\\u0FB2\\u0F74\\u0F42\\u0F0B\\u0F61\\u0F74\\u0F63\\u0F0B\\u0F66\\u0FA4\\u0FB1\\u0F72\\u0F0B\\u0F63\\u0F7A\\u0F53\\u0F4C\\u0F0D)\",\n  rtl: false\n};\nconst TibetanIndia = {\n  country: {\n    code: CountryCode.India,\n    name: \"India\",\n    native: \"\\u0B87\\u0BA8\\u0BCD\\u0BA4\\u0BBF\\u0BAF\\u0BBE\"\n  },\n  id: LocaleCode.TibetanIndia,\n  language: {\n    code: LanguageCode.Tibetan,\n    name: \"Tibetan\",\n    native: \"\\u0F56\\u0F7C\\u0F51\\u0F0B\\u0F61\\u0F72\\u0F42\"\n  },\n  name: \"Tibetan (India)\",\n  native_name: \"\\u0F56\\u0F7C\\u0F51\\u0F0B\\u0F61\\u0F72\\u0F42 (\\u0B87\\u0BA8\\u0BCD\\u0BA4\\u0BBF\\u0BAF\\u0BBE)\",\n  rtl: false\n};\nconst Tsonga = {\n  id: LocaleCode.Tsonga,\n  language: {\n    code: LanguageCode.Tsonga,\n    name: \"Tsonga\",\n    native: \"Xitsonga\"\n  },\n  name: \"Tsonga\",\n  native_name: \"Xitsonga\",\n  rtl: false\n};\nconst Tswana = {\n  id: LocaleCode.Tswana,\n  language: {\n    code: LanguageCode.Tswana,\n    name: \"Tswana\",\n    native: \"Setswana\"\n  },\n  name: \"Tswana\",\n  native_name: \"Setswana\",\n  rtl: false\n};\nconst TswanaSouthAfrica = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: \"South Africa\",\n    native: \"South Africa\"\n  },\n  id: LocaleCode.TswanaSouthAfrica,\n  language: {\n    code: LanguageCode.Tswana,\n    name: \"Tswana\",\n    native: \"Setswana\"\n  },\n  name: \"Tswana (South Africa)\",\n  native_name: \"Setswana (South Africa)\",\n  rtl: false\n};\nconst Turkish = {\n  id: LocaleCode.Turkish,\n  language: {\n    code: LanguageCode.Turkish,\n    name: \"Turkish\",\n    native: \"T\\xFCrk\\xE7e\"\n  },\n  name: \"Turkish\",\n  native_name: \"T\\xFCrk\\xE7e\",\n  rtl: false\n};\nconst TurkishTurkey = {\n  country: {\n    code: CountryCode.Turkey,\n    name: \"Turkey\",\n    native: \"T\\xFCrkiye\"\n  },\n  id: LocaleCode.TurkishTurkey,\n  language: {\n    code: LanguageCode.Turkish,\n    name: \"Turkish\",\n    native: \"T\\xFCrk\\xE7e\"\n  },\n  name: \"Turkish (Turkey)\",\n  native_name: \"T\\xFCrk\\xE7e (T\\xFCrkiye)\",\n  rtl: false\n};\nconst Ukrainian = {\n  id: LocaleCode.Ukrainian,\n  language: {\n    code: LanguageCode.Ukrainian,\n    name: \"Ukrainian\",\n    native: \"\\u0423\\u043A\\u0440\\u0430\\u0457\\u043D\\u0441\\u044C\\u043A\\u0430\"\n  },\n  name: \"Ukrainian\",\n  native_name: \"\\u0423\\u043A\\u0440\\u0430\\u0457\\u043D\\u0441\\u044C\\u043A\\u0430\",\n  rtl: false\n};\nconst UkrainianUkraine = {\n  country: {\n    code: CountryCode.Ukraine,\n    name: \"Ukraine\",\n    native: \"\\u0423\\u043A\\u0440\\u0430\\u0457\\u043D\\u0430\"\n  },\n  id: LocaleCode.UkrainianUkraine,\n  language: {\n    code: LanguageCode.Ukrainian,\n    name: \"Ukrainian\",\n    native: \"\\u0423\\u043A\\u0440\\u0430\\u0457\\u043D\\u0441\\u044C\\u043A\\u0430\"\n  },\n  name: \"Ukrainian (Ukraine)\",\n  native_name: \"\\u0423\\u043A\\u0440\\u0430\\u0457\\u043D\\u0441\\u044C\\u043A\\u0430 (\\u0423\\u043A\\u0440\\u0430\\u0457\\u043D\\u0430)\",\n  rtl: false\n};\nconst Urdu = {\n  id: LocaleCode.Urdu,\n  language: {\n    code: LanguageCode.Urdu,\n    name: \"Urdu\",\n    native: \"\\u0627\\u0631\\u062F\\u0648\"\n  },\n  name: \"Urdu\",\n  native_name: \"\\u0627\\u0631\\u062F\\u0648\",\n  rtl: true\n};\nconst UrduAfghanistan = {\n  country: {\n    code: CountryCode.Afghanistan,\n    name: \"Afghanistan\",\n    native: \"\\u0627\\u0641\\u063A\\u0627\\u0646\\u0633\\u062A\\u0627\\u0646\"\n  },\n  id: LocaleCode.UrduAfghanistan,\n  language: {\n    code: LanguageCode.Urdu,\n    name: \"Urdu\",\n    native: \"\\u0627\\u0631\\u062F\\u0648\"\n  },\n  name: \"Urdu (Afghanistan)\",\n  native_name: \"\\u0627\\u0631\\u062F\\u0648 (\\u0627\\u0641\\u063A\\u0627\\u0646\\u0633\\u062A\\u0627\\u0646)\",\n  rtl: true\n};\nconst UrduIndia = {\n  country: {\n    code: CountryCode.India,\n    name: \"India\",\n    native: \"\\u092D\\u093E\\u0930\\u0924\"\n  },\n  id: LocaleCode.UrduIndia,\n  language: {\n    code: LanguageCode.Urdu,\n    name: \"Urdu\",\n    native: \"\\u0627\\u0631\\u062F\\u0648\"\n  },\n  name: \"Urdu (India)\",\n  native_name: \"\\u0627\\u0631\\u062F\\u0648 (\\u092D\\u093E\\u0930\\u0924)\",\n  rtl: true\n};\nconst UrduPakistan = {\n  country: {\n    code: CountryCode.Pakistan,\n    name: \"Pakistan\",\n    native: \"\\u067E\\u0627\\u06A9\\u0633\\u062A\\u0627\\u0646\"\n  },\n  id: LocaleCode.UrduPakistan,\n  language: {\n    code: LanguageCode.Urdu,\n    name: \"Urdu\",\n    native: \"\\u0627\\u0631\\u062F\\u0648\"\n  },\n  name: \"Urdu (Pakistan)\",\n  native_name: \"\\u0627\\u0631\\u062F\\u0648 (\\u067E\\u0627\\u06A9\\u0633\\u062A\\u0627\\u0646)\",\n  rtl: true\n};\nconst UzbekLatin = {\n  id: LocaleCode.Uzbek,\n  language: {\n    code: LanguageCode.Uzbek,\n    name: \"Uzbek\",\n    native: \"O\\u02BBzbekcha\"\n  },\n  name: \"Uzbek\",\n  native_name: \"O\\u02BBzbekcha\",\n  rtl: false\n};\nconst UzbekUzbekistan = {\n  country: {\n    code: CountryCode.Uzbekistan,\n    name: \"Uzbekistan\",\n    native: \"O\\u02BBzbekiston\"\n  },\n  id: LocaleCode.UzbekUzbekistan,\n  language: {\n    code: LanguageCode.Uzbek,\n    name: \"Uzbek\",\n    native: \"O\\u02BBzbekcha\"\n  },\n  name: \"Uzbek (Latin, Uzbekistan)\",\n  native_name: \"O\\u02BBzbekcha (O\\u02BBzbekiston)\",\n  rtl: false\n};\nconst UzbekCyrillic = {\n  country: {\n    code: CountryCode.Uzbekistan,\n    name: \"Uzbekistan\",\n    native: \"\\u040E\\u0437\\u0431\\u0435\\u043A\\u0438\\u0441\\u0442\\u043E\\u043D\"\n  },\n  id: LocaleCode.UzbekCyrillic,\n  language: {\n    code: LanguageCode.Uzbek,\n    name: \"Uzbek\",\n    native: \"\\u040E\\u0437\\u0431\\u0435\\u043A\\u0438\\u0441\\u0442\\u043E\\u043D\"\n  },\n  name: \"Uzbek (Cyrillic)\",\n  native_name: \"\\u040E\\u0437\\u0431\\u0435\\u043A\\u0438\\u0441\\u0442\\u043E\\u043D (\\u040E\\u0437\\u0431\\u0435\\u043A\\u0438\\u0441\\u0442\\u043E\\u043D)\",\n  rtl: false\n};\nconst Vietnamese = {\n  id: LocaleCode.Vietnamese,\n  language: {\n    code: LanguageCode.Vietnamese,\n    name: \"Vietnamese\",\n    native: \"Ti\\u1EBFng Vi\\u1EC7t\"\n  },\n  name: \"Vietnamese\",\n  native_name: \"Ti\\u1EBFng Vi\\u1EC7t\",\n  rtl: false\n};\nconst VietnameseVietnam = {\n  country: {\n    code: CountryCode.Vietnam,\n    name: \"Vietnam\",\n    native: \"Vi\\u1EC7t Nam\"\n  },\n  id: LocaleCode.VietnameseVietnam,\n  language: {\n    code: LanguageCode.Vietnamese,\n    name: \"Vietnamese\",\n    native: \"Ti\\u1EBFng Vi\\u1EC7t\"\n  },\n  name: \"Vietnamese (Vietnam)\",\n  native_name: \"Ti\\u1EBFng Vi\\u1EC7t (Vi\\u1EC7t Nam)\",\n  rtl: false\n};\nconst Welsh = {\n  id: LocaleCode.Welsh,\n  language: {\n    code: LanguageCode.Welsh,\n    name: \"Welsh\",\n    native: \"Cymraeg\"\n  },\n  name: \"Welsh\",\n  native_name: \"Cymraeg\",\n  rtl: false\n};\nconst WelshUnitedKingdom = {\n  country: {\n    code: CountryCode.UnitedKingdom,\n    name: \"United Kingdom\",\n    native: \"United Kingdom\"\n  },\n  id: LocaleCode.WelshUnitedKingdom,\n  language: {\n    code: LanguageCode.Welsh,\n    name: \"Welsh\",\n    native: \"Cymraeg\"\n  },\n  name: \"Welsh (United Kingdom)\",\n  native_name: \"Cymraeg (United Kingdom)\",\n  rtl: false\n};\nconst Xhosa = {\n  id: LocaleCode.Xhosa,\n  language: {\n    code: LanguageCode.Xhosa,\n    name: \"Xhosa\",\n    native: \"isiXhosa\"\n  },\n  name: \"Xhosa\",\n  native_name: \"isiXhosa\",\n  rtl: false\n};\nconst XhosaSouthAfrica = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: \"South Africa\",\n    native: \"South Africa\"\n  },\n  id: LocaleCode.XhosaSouthAfrica,\n  language: {\n    code: LanguageCode.Xhosa,\n    name: \"Xhosa\",\n    native: \"isiXhosa\"\n  },\n  name: \"Xhosa (South Africa)\",\n  native_name: \"isiXhosa (South Africa)\",\n  rtl: false\n};\nconst Yiddish = {\n  id: LocaleCode.Yiddish,\n  language: {\n    code: LanguageCode.Yiddish,\n    name: \"Yiddish\",\n    native: \"\\u05D9\\u05D9\\u05B4\\u05D3\\u05D9\\u05E9\"\n  },\n  name: \"Yiddish\",\n  native_name: \"\\u05D9\\u05D9\\u05B4\\u05D3\\u05D9\\u05E9\",\n  rtl: false\n};\nconst Yoruba = {\n  id: LocaleCode.Yoruba,\n  language: {\n    code: LanguageCode.Yoruba,\n    name: \"Yoruba\",\n    native: \"Yor\\xF9b\\xE1\"\n  },\n  name: \"Yoruba\",\n  native_name: \"Yor\\xF9b\\xE1\",\n  rtl: false\n};\nconst YorubaNigeria = {\n  country: {\n    code: CountryCode.Nigeria,\n    name: \"Nigeria\",\n    native: \"Nigeria\"\n  },\n  id: LocaleCode.YorubaNigeria,\n  language: {\n    code: LanguageCode.Yoruba,\n    name: \"Yoruba\",\n    native: \"Yor\\xF9b\\xE1\"\n  },\n  name: \"Yoruba (Nigeria)\",\n  native_name: \"Yor\\xF9b\\xE1 (Nigeria)\",\n  rtl: false\n};\nconst Zulu = {\n  id: LocaleCode.Zulu,\n  language: {\n    code: LanguageCode.Zulu,\n    name: \"Zulu\",\n    native: \"isiZulu\"\n  },\n  name: \"Zulu\",\n  native_name: \"isiZulu\",\n  rtl: false\n};\nconst ZuluSouthAfrica = {\n  country: {\n    code: CountryCode.SouthAfrica,\n    name: \"South Africa\",\n    native: \"South Africa\"\n  },\n  id: LocaleCode.ZuluSouthAfrica,\n  language: {\n    code: LanguageCode.Zulu,\n    name: \"Zulu\",\n    native: \"isiZulu\"\n  },\n  name: \"Zulu (South Africa)\",\n  native_name: \"isiZulu (South Africa)\",\n  rtl: false\n};\n\nconst AfricaAbidjan = {\n  id: TimezoneRegions.AfricaAbidjan,\n  name: \"Africa/Abidjan\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime\n};\nconst AfricaAccra = {\n  id: TimezoneRegions.AfricaAccra,\n  name: \"Africa/Accra\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime\n};\nconst AfricaAddisAbaba = {\n  id: TimezoneRegions.AfricaAddisAbaba,\n  name: \"Africa/Addis_Ababa\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime\n};\nconst AfricaAlgiers = {\n  id: TimezoneRegions.AfricaAlgiers,\n  name: \"Africa/Algiers\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst AfricaAsmara = {\n  id: TimezoneRegions.AfricaAsmara,\n  name: \"Africa/Asmara\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime\n};\nconst AfricaBamako = {\n  id: TimezoneRegions.AfricaBamako,\n  name: \"Africa/Bamako\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime\n};\nconst AfricaBangui = {\n  id: TimezoneRegions.AfricaBangui,\n  name: \"Africa/Bangui\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime\n};\nconst AfricaBanjul = {\n  id: TimezoneRegions.AfricaBanjul,\n  name: \"Africa/Banjul\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime\n};\nconst AfricaBissau = {\n  id: TimezoneRegions.AfricaBissau,\n  name: \"Africa/Bissau\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime\n};\nconst AfricaBlantyre = {\n  id: TimezoneRegions.AfricaBlantyre,\n  name: \"Africa/Blantyre\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime\n};\nconst AfricaBrazzaville = {\n  id: TimezoneRegions.AfricaBrazzaville,\n  name: \"Africa/Brazzaville\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime\n};\nconst AfricaBujumbura = {\n  id: TimezoneRegions.AfricaBujumbura,\n  name: \"Africa/Bujumbura\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime\n};\nconst AfricaCairo = {\n  id: TimezoneRegions.AfricaCairo,\n  name: \"Africa/Cairo\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst AfricaCasablanca = {\n  id: TimezoneRegions.AfricaCasablanca,\n  name: \"Africa/Casablanca\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WesternEuropeanTime\n};\nconst AfricaCeuta = {\n  id: TimezoneRegions.AfricaCeuta,\n  name: \"Africa/Ceuta\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst AfricaConakry = {\n  id: TimezoneRegions.AfricaConakry,\n  name: \"Africa/Conakry\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime\n};\nconst AfricaDakar = {\n  id: TimezoneRegions.AfricaDakar,\n  name: \"Africa/Dakar\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime\n};\nconst AfricaDarEsSalaam = {\n  id: TimezoneRegions.AfricaDarEsSalaam,\n  name: \"Africa/Dar_es_Salaam\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime\n};\nconst AfricaDjibouti = {\n  id: TimezoneRegions.AfricaDjibouti,\n  name: \"Africa/Djibouti\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime\n};\nconst AfricaDouala = {\n  id: TimezoneRegions.AfricaDouala,\n  name: \"Africa/Douala\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime\n};\nconst AfricaElAaiun = {\n  id: TimezoneRegions.AfricaElAaiun,\n  name: \"Africa/El_Aaiun\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime\n};\nconst AfricaFreetown = {\n  id: TimezoneRegions.AfricaFreetown,\n  name: \"Africa/Freetown\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime\n};\nconst AfricaGaborone = {\n  id: TimezoneRegions.AfricaGaborone,\n  name: \"Africa/Gaborone\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime\n};\nconst AfricaHarare = {\n  id: TimezoneRegions.AfricaHarare,\n  name: \"Africa/Harare\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime\n};\nconst AfricaJohannesburg = {\n  id: TimezoneRegions.AfricaJohannesburg,\n  name: \"Africa/Johannesburg\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.SouthAfricanStandardTime\n};\nconst AfricaJuba = {\n  id: TimezoneRegions.AfricaJuba,\n  name: \"Africa/Juba\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime\n};\nconst AfricaKampala = {\n  id: TimezoneRegions.AfricaKampala,\n  name: \"Africa/Kampala\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime\n};\nconst AfricaKhartoum = {\n  id: TimezoneRegions.AfricaKhartoum,\n  name: \"Africa/Khartoum\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EastAfricaTime\n};\nconst AfricaKigali = {\n  id: TimezoneRegions.AfricaKigali,\n  name: \"Africa/Kigali\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime\n};\nconst AfricaKinshasa = {\n  id: TimezoneRegions.AfricaKinshasa,\n  name: \"Africa/Kinshasa\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime\n};\nconst AfricaLagos = {\n  id: TimezoneRegions.AfricaLagos,\n  name: \"Africa/Lagos\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime\n};\nconst AfricaLibreville = {\n  id: TimezoneRegions.AfricaLibreville,\n  name: \"Africa/Libreville\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime\n};\nconst AfricaLome = {\n  id: TimezoneRegions.AfricaLome,\n  name: \"Africa/Lome\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime\n};\nconst AfricaLuanda = {\n  id: TimezoneRegions.AfricaLuanda,\n  name: \"Africa/Luanda\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime\n};\nconst AfricaLubumbashi = {\n  id: TimezoneRegions.AfricaLubumbashi,\n  name: \"Africa/Lubumbashi\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime\n};\nconst AfricaLusaka = {\n  id: TimezoneRegions.AfricaLusaka,\n  name: \"Africa/Lusaka\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime\n};\nconst AfricaMalabo = {\n  id: TimezoneRegions.AfricaMalabo,\n  name: \"Africa/Malabo\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime\n};\nconst AfricaMaputo = {\n  id: TimezoneRegions.AfricaMaputo,\n  name: \"Africa/Maputo\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.CentralAfricaTime\n};\nconst AfricaMaseru = {\n  id: TimezoneRegions.AfricaMaseru,\n  name: \"Africa/Maseru\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.SouthAfricanStandardTime\n};\nconst AfricaMbabane = {\n  id: TimezoneRegions.AfricaMbabane,\n  name: \"Africa/Mbabane\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.SouthAfricanStandardTime\n};\nconst AfricaMogadishu = {\n  id: TimezoneRegions.AfricaMogadishu,\n  name: \"Africa/Mogadishu\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime\n};\nconst AfricaMonrovia = {\n  id: TimezoneRegions.AfricaMonrovia,\n  name: \"Africa/Monrovia\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime\n};\nconst AfricaNairobi = {\n  id: TimezoneRegions.AfricaNairobi,\n  name: \"Africa/Nairobi\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime\n};\nconst AfricaNdjamena = {\n  id: TimezoneRegions.AfricaNdjamena,\n  name: \"Africa/Ndjamena\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime\n};\nconst AfricaNiamey = {\n  id: TimezoneRegions.AfricaNiamey,\n  name: \"Africa/Niamey\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime\n};\nconst AfricaNouakchott = {\n  id: TimezoneRegions.AfricaNouakchott,\n  name: \"Africa/Nouakchott\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime\n};\nconst AfricaOuagadougou = {\n  id: TimezoneRegions.AfricaOuagadougou,\n  name: \"Africa/Ouagadougou\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime\n};\nconst AfricaPortoNovo = {\n  id: TimezoneRegions.AfricaPortoNovo,\n  name: \"Africa/Porto-Novo\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.WestAfricaTime\n};\nconst AfricaSaoTome = {\n  id: TimezoneRegions.AfricaSaoTome,\n  name: \"Africa/SaoTome\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime\n};\nconst AfricaTripoli = {\n  id: TimezoneRegions.AfricaTripoli,\n  name: \"Africa/Tripoli\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime\n};\nconst AfricaTunis = {\n  id: TimezoneRegions.AfricaTunis,\n  name: \"Africa/Tunis\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime\n};\nconst AfricaWindhoek = {\n  id: TimezoneRegions.AfricaWindhoek,\n  name: \"Africa/Windhoek\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.WestAfricaTime\n};\nconst AmericaAdak = {\n  id: TimezoneRegions.AmericaAdak,\n  name: \"America/Adak\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.HawaiiAleutianStandardTime\n};\nconst AmericaAnchorage = {\n  id: TimezoneRegions.AmericaAnchorage,\n  name: \"America/Anchorage\",\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.AlaskaStandardTime\n};\nconst AmericaAnguilla = {\n  id: TimezoneRegions.AmericaAnguilla,\n  name: \"America/Anguilla\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaAntigua = {\n  id: TimezoneRegions.AmericaAntigua,\n  name: \"America/Antigua\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaAraguaina = {\n  id: TimezoneRegions.AmericaAraguaina,\n  name: \"America/Araguaina\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime\n};\nconst AmericaArgentinaBuenosAires = {\n  id: TimezoneRegions.AmericaArgentinaBuenosAires,\n  name: \"America/Argentina/Buenos_Aires\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime\n};\nconst AmericaArgentinaCatamarca = {\n  id: TimezoneRegions.AmericaArgentinaCatamarca,\n  name: \"America/Argentina/Catamarca\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime\n};\nconst AmericaArgentinaCordoba = {\n  id: TimezoneRegions.AmericaArgentinaCordoba,\n  name: \"America/Argentina/Cordoba\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime\n};\nconst AmericaArgentinaJujuy = {\n  id: TimezoneRegions.AmericaArgentinaJujuy,\n  name: \"America/Argentina/Jujuy\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime\n};\nconst AmericaArgentinaLaRioja = {\n  id: TimezoneRegions.AmericaArgentinaLaRioja,\n  name: \"America/Argentina/La_Rioja\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime\n};\nconst AmericaArgentinaMendoza = {\n  id: TimezoneRegions.AmericaArgentinaMendoza,\n  name: \"America/Argentina/Mendoza\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime\n};\nconst AmericaArgentinaRioGallegos = {\n  id: TimezoneRegions.AmericaArgentinaRioGallegos,\n  name: \"America/Argentina/Rio_Gallegos\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime\n};\nconst AmericaArgentinaSalta = {\n  id: TimezoneRegions.AmericaArgentinaSalta,\n  name: \"America/Argentina/Salta\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime\n};\nconst AmericaArgentinaSanJuan = {\n  id: TimezoneRegions.AmericaArgentinaSanJuan,\n  name: \"America/Argentina/San_Juan\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime\n};\nconst AmericaArgentinaSanLuis = {\n  id: TimezoneRegions.AmericaArgentinaSanLuis,\n  name: \"America/Argentina/San_Luis\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime\n};\nconst AmericaArgentinaTucuman = {\n  id: TimezoneRegions.AmericaArgentinaTucuman,\n  name: \"America/Argentina/Tucuman\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime\n};\nconst AmericaArgentinaUshuaia = {\n  id: TimezoneRegions.AmericaArgentinaUshuaia,\n  name: \"America/Argentina/Ushuaia\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime\n};\nconst AmericaAruba = {\n  id: TimezoneRegions.AmericaAruba,\n  name: \"America/Aruba\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaAsuncion = {\n  id: TimezoneRegions.AmericaAsuncion,\n  name: \"America/Asuncion\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.ParaguayTime\n};\nconst AmericaAtikokan = {\n  id: TimezoneRegions.AmericaAtikokan,\n  name: \"America/Atikokan\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaAtka = {\n  id: TimezoneRegions.AmericaAtka,\n  name: \"America/Atka\",\n  offset: TimezoneOffset.UTC_MINUS_10,\n  timezone: Timezones.HawaiiAleutianStandardTime\n};\nconst AmericaBahia = {\n  id: TimezoneRegions.AmericaBahia,\n  name: \"America/Bahia\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime\n};\nconst AmericaBahiaBanderas = {\n  id: TimezoneRegions.AmericaBahiaBanderas,\n  name: \"America/Bahia_Banderas\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaBarbados = {\n  id: TimezoneRegions.AmericaBarbados,\n  name: \"America/Barbados\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaBelem = {\n  id: TimezoneRegions.AmericaBelem,\n  name: \"America/Belem\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime\n};\nconst AmericaBelize = {\n  id: TimezoneRegions.AmericaBelize,\n  name: \"America/Belize\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaBlancSablon = {\n  id: TimezoneRegions.AmericaBlancSablon,\n  name: \"America/Blanc-Sablon\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaBoaVista = {\n  id: TimezoneRegions.AmericaBoaVista,\n  name: \"America/Boa_Vista\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AmazonTime\n};\nconst AmericaBogota = {\n  id: TimezoneRegions.AmericaBogota,\n  name: \"America/Bogota\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.ColombiaTime\n};\nconst AmericaBoise = {\n  id: TimezoneRegions.AmericaBoise,\n  name: \"America/Boise\",\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime\n};\nconst AmericaCambridgeBay = {\n  id: TimezoneRegions.AmericaCambridgeBay,\n  name: \"America/Cambridge_Bay\",\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime\n};\nconst AmericaCampoGrande = {\n  id: TimezoneRegions.AmericaCampoGrande,\n  name: \"America/Campo_Grande\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AmazonTime\n};\nconst AmericaCancun = {\n  id: TimezoneRegions.AmericaCancun,\n  name: \"America/Cancun\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaCaracas = {\n  id: TimezoneRegions.AmericaCaracas,\n  name: \"America/Caracas\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.VenezuelaStandardTime\n};\nconst AmericaCayenne = {\n  id: TimezoneRegions.AmericaCayenne,\n  name: \"America/Cayenne\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.FrenchGuianaTime\n};\nconst AmericaCayman = {\n  id: TimezoneRegions.AmericaCayman,\n  name: \"America/Cayman\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaChicago = {\n  id: TimezoneRegions.AmericaChicago,\n  name: \"America/Chicago\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaChihuahua = {\n  id: TimezoneRegions.AmericaChihuahua,\n  name: \"America/Chihuahua\",\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime\n};\nconst AmericaCoralHarbour = {\n  id: TimezoneRegions.AmericaCoralHarbour,\n  name: \"America/Coral_Harbour\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaCordoba = {\n  id: TimezoneRegions.AmericaCordoba,\n  name: \"America/Cordoba\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ArgentinaTime\n};\nconst AmericaCostaRica = {\n  id: TimezoneRegions.AmericaCostaRica,\n  name: \"America/Costa_Rica\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaCreston = {\n  id: TimezoneRegions.AmericaCreston,\n  name: \"America/Creston\",\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime\n};\nconst AmericaCuiaba = {\n  id: TimezoneRegions.AmericaCuiaba,\n  name: \"America/Cuiaba\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AmazonTime\n};\nconst AmericaCuracao = {\n  id: TimezoneRegions.AmericaCuracao,\n  name: \"America/Curacao\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaDanmarkshavn = {\n  id: TimezoneRegions.AmericaDanmarkshavn,\n  name: \"America/Danmarkshavn\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime\n};\nconst AmericaDawson = {\n  id: TimezoneRegions.AmericaDawson,\n  name: \"America/Dawson\",\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime\n};\nconst AmericaDawsonCreek = {\n  id: TimezoneRegions.AmericaDawsonCreek,\n  name: \"America/Dawson_Creek\",\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime\n};\nconst AmericaDenver = {\n  id: TimezoneRegions.AmericaDenver,\n  name: \"America/Denver\",\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime\n};\nconst AmericaDetroit = {\n  id: TimezoneRegions.AmericaDetroit,\n  name: \"America/Detroit\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaDominica = {\n  id: TimezoneRegions.AmericaDominica,\n  name: \"America/Dominica\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaEdmonton = {\n  id: TimezoneRegions.AmericaEdmonton,\n  name: \"America/Edmonton\",\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime\n};\nconst AmericaEirunepe = {\n  id: TimezoneRegions.AmericaEirunepe,\n  name: \"America/Eirunepe\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.AcreTime\n};\nconst AmericaElSalvador = {\n  id: TimezoneRegions.AmericaElSalvador,\n  name: \"America/El_Salvador\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaFortaleza = {\n  id: TimezoneRegions.AmericaFortaleza,\n  name: \"America/Fortaleza\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime\n};\nconst AmericaGlaceBay = {\n  id: TimezoneRegions.AmericaGlaceBay,\n  name: \"America/Glace_Bay\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaGodthab = {\n  id: TimezoneRegions.AmericaGodthab,\n  name: \"America/Godthab\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.WestGreenlandTime\n};\nconst AmericaGooseBay = {\n  id: TimezoneRegions.AmericaGooseBay,\n  name: \"America/Goose_Bay\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaGrandTurk = {\n  id: TimezoneRegions.AmericaGrandTurk,\n  name: \"America/Grand_Turk\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaGrenada = {\n  id: TimezoneRegions.AmericaGrenada,\n  name: \"America/Grenada\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaGuadeloupe = {\n  id: TimezoneRegions.AmericaGuadeloupe,\n  name: \"America/Guadeloupe\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaGuatemala = {\n  id: TimezoneRegions.AmericaGuatemala,\n  name: \"America/Guatemala\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaGuayaquil = {\n  id: TimezoneRegions.AmericaGuayaquil,\n  name: \"America/Guayaquil\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EcuadorTime\n};\nconst AmericaGuyana = {\n  id: TimezoneRegions.AmericaGuyana,\n  name: \"America/Guyana\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaHalifax = {\n  id: TimezoneRegions.AmericaHalifax,\n  name: \"America/Halifax\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaHavana = {\n  id: TimezoneRegions.AmericaHavana,\n  name: \"America/Havana\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.CubaStandardTime\n};\nconst AmericaHermosillo = {\n  id: TimezoneRegions.AmericaHermosillo,\n  name: \"America/Hermosillo\",\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime\n};\nconst AmericaIndianaIndianapolis = {\n  id: TimezoneRegions.AmericaIndianaIndianapolis,\n  name: \"America/Indiana/Indianapolis\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaIndianaKnox = {\n  id: TimezoneRegions.AmericaIndianaKnox,\n  name: \"America/Indiana/Knox\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaIndianaMarengo = {\n  id: TimezoneRegions.AmericaIndianaMarengo,\n  name: \"America/Indiana/Marengo\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaIndianaPetersburg = {\n  id: TimezoneRegions.AmericaIndianaPetersburg,\n  name: \"America/Indiana/Petersburg\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaIndianaTellCity = {\n  id: TimezoneRegions.AmericaIndianaTellCity,\n  name: \"America/Indiana/Tell_City\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaIndianaVevay = {\n  id: TimezoneRegions.AmericaIndianaVevay,\n  name: \"America/Indiana/Vevay\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaIndianaVincennes = {\n  id: TimezoneRegions.AmericaIndianaVincennes,\n  name: \"America/Indiana/Vincennes\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaIndianaWinamac = {\n  id: TimezoneRegions.AmericaIndianaWinamac,\n  name: \"America/Indiana/Winamac\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaInuvik = {\n  id: TimezoneRegions.AmericaInuvik,\n  name: \"America/Inuvik\",\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime\n};\nconst AmericaIqaluit = {\n  id: TimezoneRegions.AmericaIqaluit,\n  name: \"America/Iqaluit\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaJamaica = {\n  id: TimezoneRegions.AmericaJamaica,\n  name: \"America/Jamaica\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaJuneau = {\n  id: TimezoneRegions.AmericaJuneau,\n  name: \"America/Juneau\",\n  offset: TimezoneOffset.UTC_MINUS_9,\n  timezone: Timezones.AlaskaStandardTime\n};\nconst AmericaKentuckyLouisville = {\n  id: TimezoneRegions.AmericaKentuckyLouisville,\n  name: \"America/Kentucky/Louisville\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaKentuckyMonticello = {\n  id: TimezoneRegions.AmericaKentuckyMonticello,\n  name: \"America/Kentucky/Monticello\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaKralendijk = {\n  id: TimezoneRegions.AmericaKralendijk,\n  name: \"America/Kralendijk\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaLaPaz = {\n  id: TimezoneRegions.AmericaLaPaz,\n  name: \"America/La_Paz\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.BoliviaTime\n};\nconst AmericaLima = {\n  id: TimezoneRegions.AmericaLima,\n  name: \"America/Lima\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.PeruTime\n};\nconst AmericaLosAngeles = {\n  id: TimezoneRegions.AmericaLosAngeles,\n  name: \"America/Los_Angeles\",\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime\n};\nconst AmericaLouisville = {\n  id: TimezoneRegions.AmericaLouisville,\n  name: \"America/Louisville\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaLowerPrinces = {\n  id: TimezoneRegions.AmericaLowerPrinces,\n  name: \"America/Lower_Princes\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaMaceio = {\n  id: TimezoneRegions.AmericaMaceio,\n  name: \"America/Maceio\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime\n};\nconst AmericaManagua = {\n  id: TimezoneRegions.AmericaManagua,\n  name: \"America/Managua\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaManaus = {\n  id: TimezoneRegions.AmericaManaus,\n  name: \"America/Manaus\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AmazonTime\n};\nconst AmericaMarigot = {\n  id: TimezoneRegions.AmericaMarigot,\n  name: \"America/Marigot\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaMartinique = {\n  id: TimezoneRegions.AmericaMartinique,\n  name: \"America/Martinique\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaMatamoros = {\n  id: TimezoneRegions.AmericaMatamoros,\n  name: \"America/Matamoros\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaMazatlan = {\n  id: TimezoneRegions.AmericaMazatlan,\n  name: \"America/Mazatlan\",\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime\n};\nconst AmericaMenominee = {\n  id: TimezoneRegions.AmericaMenominee,\n  name: \"America/Menominee\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaMerida = {\n  id: TimezoneRegions.AmericaMerida,\n  name: \"America/Merida\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaMetlakatla = {\n  id: TimezoneRegions.AmericaMetlakatla,\n  name: \"America/Metlakatla\",\n  offset: TimezoneOffset.UTC_MINUS_9,\n  timezone: Timezones.AlaskaStandardTime\n};\nconst AmericaMexicoCity = {\n  id: TimezoneRegions.AmericaMexicoCity,\n  name: \"America/Mexico_City\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaMiquelon = {\n  id: TimezoneRegions.AmericaMiquelon,\n  name: \"America/Miquelon\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.SaintPierreAndMiquelonStandardTime\n};\nconst AmericaMoncton = {\n  id: TimezoneRegions.AmericaMoncton,\n  name: \"America/Moncton\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaMonterrey = {\n  id: TimezoneRegions.AmericaMonterrey,\n  name: \"America/Monterrey\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaMontevideo = {\n  id: TimezoneRegions.AmericaMontevideo,\n  name: \"America/Montevideo\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.UruguayStandardTime\n};\nconst AmericaMontreal = {\n  id: TimezoneRegions.AmericaMontreal,\n  name: \"America/Montreal\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaMontserrat = {\n  id: TimezoneRegions.AmericaMontserrat,\n  name: \"America/Montserrat\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaNassau = {\n  id: TimezoneRegions.AmericaNassau,\n  name: \"America/Nassau\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaNewYork = {\n  id: TimezoneRegions.AmericaNewYork,\n  name: \"America/New_York\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaNipigon = {\n  id: TimezoneRegions.AmericaNipigon,\n  name: \"America/Nipigon\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaNome = {\n  id: TimezoneRegions.AmericaNome,\n  name: \"America/Nome\",\n  offset: TimezoneOffset.UTC_MINUS_9,\n  timezone: Timezones.AlaskaStandardTime\n};\nconst AmericaNoronha = {\n  id: TimezoneRegions.AmericaNoronha,\n  name: \"America/Noronha\",\n  offset: TimezoneOffset.UTC_MINUS_2,\n  timezone: Timezones.FernandoDeNoronhaTime\n};\nconst AmericaNorthDakotaBeulah = {\n  id: TimezoneRegions.AmericaNorthDakotaBeulah,\n  name: \"America/North_Dakota/Beulah\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaNorthDakotaCenter = {\n  id: TimezoneRegions.AmericaNorthDakotaCenter,\n  name: \"America/North_Dakota/Center\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaNorthDakotaNewSalem = {\n  id: TimezoneRegions.AmericaNorthDakotaNewSalem,\n  name: \"America/North_Dakota/New_Salem\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaOjinaga = {\n  id: TimezoneRegions.AmericaOjinaga,\n  name: \"America/Ojinaga\",\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime\n};\nconst AmericaPanama = {\n  id: TimezoneRegions.AmericaPanama,\n  name: \"America/Panama\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaPangnirtung = {\n  id: TimezoneRegions.AmericaPangnirtung,\n  name: \"America/Pangnirtung\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaParamaribo = {\n  id: TimezoneRegions.AmericaParamaribo,\n  name: \"America/Paramaribo\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.SurinameTime\n};\nconst AmericaPhoenix = {\n  id: TimezoneRegions.AmericaPhoenix,\n  name: \"America/Phoenix\",\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime\n};\nconst AmericaPortAuPrince = {\n  id: TimezoneRegions.AmericaPortAuPrince,\n  name: \"America/Port-au-Prince\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaPortOfSpain = {\n  id: TimezoneRegions.AmericaPortOfSpain,\n  name: \"America/Port_of_Spain\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaPortoVelho = {\n  id: TimezoneRegions.AmericaPortoVelho,\n  name: \"America/Porto_Velho\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AmazonTime\n};\nconst AmericaPuertoRico = {\n  id: TimezoneRegions.AmericaPuertoRico,\n  name: \"America/Puerto_Rico\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaRainyRiver = {\n  id: TimezoneRegions.AmericaRainyRiver,\n  name: \"America/Rainy_River\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaRankinInlet = {\n  id: TimezoneRegions.AmericaRankinInlet,\n  name: \"America/Rankin_Inlet\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaRecife = {\n  id: TimezoneRegions.AmericaRecife,\n  name: \"America/Recife\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime\n};\nconst AmericaRegina = {\n  id: TimezoneRegions.AmericaRegina,\n  name: \"America/Regina\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaResolute = {\n  id: TimezoneRegions.AmericaResolute,\n  name: \"America/Resolute\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaRioBranco = {\n  id: TimezoneRegions.AmericaRioBranco,\n  name: \"America/Rio_Branco\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.AcreTime\n};\nconst AmericaSantaIsabel = {\n  id: TimezoneRegions.AmericaSantaIsabel,\n  name: \"America/Santa_Isabel\",\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime\n};\nconst AmericaSantarem = {\n  id: TimezoneRegions.AmericaSantarem,\n  name: \"America/Santarem\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime\n};\nconst AmericaSantiago = {\n  id: TimezoneRegions.AmericaSantiago,\n  name: \"America/Santiago\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.ChileStandardTime\n};\nconst AmericaSantoDomingo = {\n  id: TimezoneRegions.AmericaSantoDomingo,\n  name: \"America/Santo_Domingo\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaSaoPaulo = {\n  id: TimezoneRegions.AmericaSaoPaulo,\n  name: \"America/Sao_Paulo\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.BrasiliaTime\n};\nconst AmericaScoresbysund = {\n  id: TimezoneRegions.AmericaScoresbysund,\n  name: \"America/Scoresbysund\",\n  offset: TimezoneOffset.UTC_MINUS_1,\n  timezone: Timezones.EasternGreenlandTime\n};\nconst AmericaShiprock = {\n  id: TimezoneRegions.AmericaShiprock,\n  name: \"America/Shiprock\",\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.MountainStandardTime\n};\nconst AmericaSitka = {\n  id: TimezoneRegions.AmericaSitka,\n  name: \"America/Sitka\",\n  offset: TimezoneOffset.UTC_MINUS_9,\n  timezone: Timezones.AlaskaStandardTime\n};\nconst AmericaStBarthelemy = {\n  id: TimezoneRegions.AmericaStBarthelemy,\n  name: \"America/St_Barthelemy\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaStJohns = {\n  id: TimezoneRegions.AmericaStJohns,\n  name: \"America/St_Johns\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.NewfoundlandStandardTime\n};\nconst AmericaStKitts = {\n  id: TimezoneRegions.AmericaStKitts,\n  name: \"America/St_Kitts\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaStLucia = {\n  id: TimezoneRegions.AmericaStLucia,\n  name: \"America/St_Lucia\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaStThomas = {\n  id: TimezoneRegions.AmericaStThomas,\n  name: \"America/St_Thomas\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaStVincent = {\n  id: TimezoneRegions.AmericaStVincent,\n  name: \"America/St_Vincent\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaSwiftCurrent = {\n  id: TimezoneRegions.AmericaSwiftCurrent,\n  name: \"America/Swift_Current\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaTegucigalpa = {\n  id: TimezoneRegions.AmericaTegucigalpa,\n  name: \"America/Tegucigalpa\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaThule = {\n  id: TimezoneRegions.AmericaThule,\n  name: \"America/Thule\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaThunderBay = {\n  id: TimezoneRegions.AmericaThunderBay,\n  name: \"America/Thunder_Bay\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaTijuana = {\n  id: TimezoneRegions.AmericaTijuana,\n  name: \"America/Tijuana\",\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime\n};\nconst AmericaToronto = {\n  id: TimezoneRegions.AmericaToronto,\n  name: \"America/Toronto\",\n  offset: TimezoneOffset.UTC_MINUS_5,\n  timezone: Timezones.EasternStandardTime\n};\nconst AmericaTortola = {\n  id: TimezoneRegions.AmericaTortola,\n  name: \"America/Tortola\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AmericaVancouver = {\n  id: TimezoneRegions.AmericaVancouver,\n  name: \"America/Vancouver\",\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime\n};\nconst AmericaWhitehorse = {\n  id: TimezoneRegions.AmericaWhitehorse,\n  name: \"America/Whitehorse\",\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.PacificStandardTime\n};\nconst AmericaWinnipeg = {\n  id: TimezoneRegions.AmericaWinnipeg,\n  name: \"America/Winnipeg\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AmericaYakutat = {\n  id: TimezoneRegions.AmericaYakutat,\n  name: \"America/Yakutat\",\n  offset: TimezoneOffset.UTC_MINUS_9,\n  timezone: Timezones.AlaskaStandardTime\n};\nconst AmericaYellowknife = {\n  id: TimezoneRegions.AmericaYellowknife,\n  name: \"America/Yellowknife\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.MountainStandardTime\n};\nconst AntarcticaCasey = {\n  id: TimezoneRegions.AntarcticaCasey,\n  name: \"Antarctica/Casey\",\n  offset: TimezoneOffset.UTC_MINUS_8,\n  timezone: Timezones.WesternStandardTime\n};\nconst AntarcticaDavis = {\n  id: TimezoneRegions.AntarcticaDavis,\n  name: \"Antarctica/Davis\",\n  offset: TimezoneOffset.UTC_MINUS_7,\n  timezone: Timezones.NewfoundlandStandardTime\n};\nconst AntarcticaDumontDUrville = {\n  id: TimezoneRegions.AntarcticaDumontDUrville,\n  name: \"Antarctica/DumontDUrville\",\n  offset: TimezoneOffset.UTC_MINUS_10,\n  timezone: Timezones.CentralStandardTime\n};\nconst AntarcticaMacquarie = {\n  id: TimezoneRegions.AntarcticaMacquarie,\n  name: \"Antarctica/Macquarie\",\n  offset: TimezoneOffset.UTC_MINUS_11,\n  timezone: Timezones.CentralStandardTime\n};\nconst AntarcticaMawson = {\n  id: TimezoneRegions.AntarcticaMawson,\n  name: \"Antarctica/Mawson\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst AntarcticaMcMurdo = {\n  id: TimezoneRegions.AntarcticaMcMurdo,\n  name: \"Antarctica/McMurdo\",\n  offset: TimezoneOffset.UTC_MINUS_12,\n  timezone: Timezones.NewZealandStandardTime\n};\nconst AntarcticaPalmer = {\n  id: TimezoneRegions.AntarcticaPalmer,\n  name: \"Antarctica/Palmer\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.ChathamStandardTime\n};\nconst AntarcticaRothera = {\n  id: TimezoneRegions.AntarcticaRothera,\n  name: \"Antarctica/Rothera\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.RotheraResearchStationTime\n};\nconst AntarcticaSyowa = {\n  id: TimezoneRegions.AntarcticaSyowa,\n  name: \"Antarctica/Syowa\",\n  offset: TimezoneOffset.UTC_MINUS_3,\n  timezone: Timezones.ShowaStationTime\n};\nconst AntarcticaTroll = {\n  id: TimezoneRegions.AntarcticaTroll,\n  name: \"Antarctica/Troll\",\n  offset: TimezoneOffset.UTC_MINUS_2,\n  timezone: Timezones.CentralStandardTime\n};\nconst AntarcticaVostok = {\n  id: TimezoneRegions.AntarcticaVostok,\n  name: \"Antarctica/Vostok\",\n  offset: TimezoneOffset.UTC_MINUS_6,\n  timezone: Timezones.CentralStandardTime\n};\nconst ArcticLongyearbyen = {\n  id: TimezoneRegions.ArcticLongyearbyen,\n  name: \"Arctic/Longyearbyen\",\n  offset: TimezoneOffset.UTC_MINUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst AsiaAden = {\n  id: TimezoneRegions.AsiaAden,\n  name: \"Asia/Aden\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime\n};\nconst AsiaAlmaty = {\n  id: TimezoneRegions.AsiaAlmaty,\n  name: \"Asia/Almaty\",\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.AlmaAtaTime\n};\nconst AsiaAmman = {\n  id: TimezoneRegions.AsiaAmman,\n  name: \"Asia/Amman\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst AsiaAnadyr = {\n  id: TimezoneRegions.AsiaAnadyr,\n  name: \"Asia/Anadyr\",\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.NewCaledoniaTime\n};\nconst AsiaAqtau = {\n  id: TimezoneRegions.AsiaAqtau,\n  name: \"Asia/Aqtau\",\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.AqtobeTime\n};\nconst AsiaAqtobe = {\n  id: TimezoneRegions.AsiaAqtobe,\n  name: \"Asia/Aqtobe\",\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.AqtobeTime\n};\nconst AsiaAshgabat = {\n  id: TimezoneRegions.AsiaAshgabat,\n  name: \"Asia/Ashgabat\",\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.TurkmenistanTime\n};\nconst AsiaBaghdad = {\n  id: TimezoneRegions.AsiaBaghdad,\n  name: \"Asia/Baghdad\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime\n};\nconst AsiaBahrain = {\n  id: TimezoneRegions.AsiaBahrain,\n  name: \"Asia/Bahrain\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime\n};\nconst AsiaBaku = {\n  id: TimezoneRegions.AsiaBaku,\n  name: \"Asia/Baku\",\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.AzerbaijanTime\n};\nconst AsiaBangkok = {\n  id: TimezoneRegions.AsiaBangkok,\n  name: \"Asia/Bangkok\",\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.IndochinaTime\n};\nconst AsiaBarnaul = {\n  id: TimezoneRegions.AsiaBarnaul,\n  name: \"Asia/Barnaul\",\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.KrasnoyarskTime\n};\nconst AsiaBeirut = {\n  id: TimezoneRegions.AsiaBeirut,\n  name: \"Asia/Beirut\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst AsiaBishkek = {\n  id: TimezoneRegions.AsiaBishkek,\n  name: \"Asia/Bishkek\",\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.KyrgyzstanTime\n};\nconst AsiaBrunei = {\n  id: TimezoneRegions.AsiaBrunei,\n  name: \"Asia/Brunei\",\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.BruneiTime\n};\nconst AsiaChita = {\n  id: TimezoneRegions.AsiaChita,\n  name: \"Asia/Chita\",\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.YakutskTime\n};\nconst AsiaChoibalsan = {\n  id: TimezoneRegions.AsiaChoibalsan,\n  name: \"Asia/Choibalsan\",\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.ChoibalsanStandardTime\n};\nconst AsiaColombo = {\n  id: TimezoneRegions.AsiaColombo,\n  name: \"Asia/Colombo\",\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.IndianStandardTime\n};\nconst AsiaDamascus = {\n  id: TimezoneRegions.AsiaDamascus,\n  name: \"Asia/Damascus\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst AsiaDhaka = {\n  id: TimezoneRegions.AsiaDhaka,\n  name: \"Asia/Dhaka\",\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.BangladeshStandardTime\n};\nconst AsiaDili = {\n  id: TimezoneRegions.AsiaDili,\n  name: \"Asia/Dili\",\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.JapanStandardTime\n};\nconst AsiaDubai = {\n  id: TimezoneRegions.AsiaDubai,\n  name: \"Asia/Dubai\",\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.GulfStandardTime\n};\nconst AsiaDushanbe = {\n  id: TimezoneRegions.AsiaDushanbe,\n  name: \"Asia/Dushanbe\",\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.TajikistanTime\n};\nconst AsiaFamagusta = {\n  id: TimezoneRegions.AsiaFamagusta,\n  name: \"Asia/Famagusta\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst AsiaGaza = {\n  id: TimezoneRegions.AsiaGaza,\n  name: \"Asia/Gaza\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst AsiaHebron = {\n  id: TimezoneRegions.AsiaHebron,\n  name: \"Asia/Hebron\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst AsiaHoChiMinh = {\n  id: TimezoneRegions.AsiaHoChiMinh,\n  name: \"Asia/Ho_Chi_Minh\",\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.IndochinaTime\n};\nconst AsiaHongKong = {\n  id: TimezoneRegions.AsiaHongKong,\n  name: \"Asia/Hong_Kong\",\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.HongKongTime\n};\nconst AsiaHovd = {\n  id: TimezoneRegions.AsiaHovd,\n  name: \"Asia/Hovd\",\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.HovdTime\n};\nconst AsiaIrkutsk = {\n  id: TimezoneRegions.AsiaIrkutsk,\n  name: \"Asia/Irkutsk\",\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.IrkutskTime\n};\nconst AsiaJakarta = {\n  id: TimezoneRegions.AsiaJakarta,\n  name: \"Asia/Jakarta\",\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.WesternIndonesianTime\n};\nconst AsiaJayapura = {\n  id: TimezoneRegions.AsiaJayapura,\n  name: \"Asia/Jayapura\",\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.JapanStandardTime\n};\nconst AsiaJerusalem = {\n  id: TimezoneRegions.AsiaJerusalem,\n  name: \"Asia/Jerusalem\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst AsiaKabul = {\n  id: TimezoneRegions.AsiaKabul,\n  name: \"Asia/Kabul\",\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.AfghanistanTime\n};\nconst AsiaKamchatka = {\n  id: TimezoneRegions.AsiaKamchatka,\n  name: \"Asia/Kamchatka\",\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.KamchatkaTime\n};\nconst AsiaKarachi = {\n  id: TimezoneRegions.AsiaKarachi,\n  name: \"Asia/Karachi\",\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.PakistanStandardTime\n};\nconst AsiaKathmandu = {\n  id: TimezoneRegions.AsiaKathmandu,\n  name: \"Asia/Kathmandu\",\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.NepalTime\n};\nconst AsiaKhandyga = {\n  id: TimezoneRegions.AsiaKhandyga,\n  name: \"Asia/Khandyga\",\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.YakutskTime\n};\nconst AsiaKolkata = {\n  id: TimezoneRegions.AsiaKolkata,\n  name: \"Asia/Kolkata\",\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.IndianStandardTime\n};\nconst AsiaKrasnoyarsk = {\n  id: TimezoneRegions.AsiaKrasnoyarsk,\n  name: \"Asia/Krasnoyarsk\",\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.KrasnoyarskTime\n};\nconst AsiaKualaLumpur = {\n  id: TimezoneRegions.AsiaKualaLumpur,\n  name: \"Asia/Kuala_Lumpur\",\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.MalaysiaStandardTime\n};\nconst AsiaKuching = {\n  id: TimezoneRegions.AsiaKuching,\n  name: \"Asia/Kuching\",\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.MalaysiaStandardTime\n};\nconst AsiaKuwait = {\n  id: TimezoneRegions.AsiaKuwait,\n  name: \"Asia/Kuwait\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime\n};\nconst AsiaMacau = {\n  id: TimezoneRegions.AsiaMacau,\n  name: \"Asia/Macau\",\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.ChinaStandardTime\n};\nconst AsiaMagadan = {\n  id: TimezoneRegions.AsiaMagadan,\n  name: \"Asia/Magadan\",\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.MagadanTime\n};\nconst AsiaMakassar = {\n  id: TimezoneRegions.AsiaMakassar,\n  name: \"Asia/Makassar\",\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.MalaysiaTime\n};\nconst AsiaManila = {\n  id: TimezoneRegions.AsiaManila,\n  name: \"Asia/Manila\",\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.PhilippineTime\n};\nconst AsiaMuscat = {\n  id: TimezoneRegions.AsiaMuscat,\n  name: \"Asia/Muscat\",\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.GulfStandardTime\n};\nconst AsiaNovokuznetsk = {\n  id: TimezoneRegions.AsiaNovokuznetsk,\n  name: \"Asia/Novokuznetsk\",\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.NovosibirskTime\n};\nconst AsiaNovosibirsk = {\n  id: TimezoneRegions.AsiaNovosibirsk,\n  name: \"Asia/Novosibirsk\",\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.NovosibirskTime\n};\nconst AsiaOmsk = {\n  id: TimezoneRegions.AsiaOmsk,\n  name: \"Asia/Omsk\",\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.OmskTime\n};\nconst AsiaOral = {\n  id: TimezoneRegions.AsiaOral,\n  name: \"Asia/Oral\",\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.OralTime\n};\nconst AsiaPhnomPenh = {\n  id: TimezoneRegions.AsiaPhnomPenh,\n  name: \"Asia/Phnom_Penh\",\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.IndochinaTime\n};\nconst AsiaPontianak = {\n  id: TimezoneRegions.AsiaPontianak,\n  name: \"Asia/Pontianak\",\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.WesternIndonesianTime\n};\nconst AsiaPyongyang = {\n  id: TimezoneRegions.AsiaPyongyang,\n  name: \"Asia/Pyongyang\",\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.KoreaStandardTime\n};\nconst AsiaQatar = {\n  id: TimezoneRegions.AsiaQatar,\n  name: \"Asia/Qatar\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime\n};\nconst AsiaQyzylorda = {\n  id: TimezoneRegions.AsiaQyzylorda,\n  name: \"Asia/Qyzylorda\",\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.WestKazakhstanTime\n};\nconst AsiaRangoon = {\n  id: TimezoneRegions.AsiaRangoon,\n  name: \"Asia/Rangoon\",\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.MyanmarStandardTime\n};\nconst AsiaRiyadh = {\n  id: TimezoneRegions.AsiaRiyadh,\n  name: \"Asia/Riyadh\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.ArabiaStandardTime\n};\nconst AsiaSakhalin = {\n  id: TimezoneRegions.AsiaSakhalin,\n  name: \"Asia/Sakhalin\",\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.SakhalinIslandTime\n};\nconst AsiaSamarkand = {\n  id: TimezoneRegions.AsiaSamarkand,\n  name: \"Asia/Samarkand\",\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.UzbekistanTime\n};\nconst AsiaSeoul = {\n  id: TimezoneRegions.AsiaSeoul,\n  name: \"Asia/Seoul\",\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.KoreaStandardTime\n};\nconst AsiaShanghai = {\n  id: TimezoneRegions.AsiaShanghai,\n  name: \"Asia/Shanghai\",\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.ChinaStandardTime\n};\nconst AsiaSingapore = {\n  id: TimezoneRegions.AsiaSingapore,\n  name: \"Asia/Singapore\",\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.SingaporeStandardTime\n};\nconst AsiaSrednekolymsk = {\n  id: TimezoneRegions.AsiaSrednekolymsk,\n  name: \"Asia/Srednekolymsk\",\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.SrednekolymskTime\n};\nconst AsiaTaipei = {\n  id: TimezoneRegions.AsiaTaipei,\n  name: \"Asia/Taipei\",\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.ChinaStandardTime\n};\nconst AsiaTashkent = {\n  id: TimezoneRegions.AsiaTashkent,\n  name: \"Asia/Tashkent\",\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.UzbekistanTime\n};\nconst AsiaTbilisi = {\n  id: TimezoneRegions.AsiaTbilisi,\n  name: \"Asia/Tbilisi\",\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.GeorgiaStandardTime\n};\nconst AsiaTehran = {\n  id: TimezoneRegions.AsiaTehran,\n  name: \"Asia/Tehran\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.IranStandardTime\n};\nconst AsiaThimphu = {\n  id: TimezoneRegions.AsiaThimphu,\n  name: \"Asia/Thimphu\",\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.BhutanTime\n};\nconst AsiaTokyo = {\n  id: TimezoneRegions.AsiaTokyo,\n  name: \"Asia/Tokyo\",\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.JapanStandardTime\n};\nconst AsiaTomsk = {\n  id: TimezoneRegions.AsiaTomsk,\n  name: \"Asia/Tomsk\",\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.KrasnoyarskTime\n};\nconst AsiaUlaanbaatar = {\n  id: TimezoneRegions.AsiaUlaanbaatar,\n  name: \"Asia/Ulaanbaatar\",\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.UlaanbaatarStandardTime\n};\nconst AsiaUrumqi = {\n  id: TimezoneRegions.AsiaUrumqi,\n  name: \"Asia/Urumqi\",\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.ChinaStandardTime\n};\nconst AsiaUstNera = {\n  id: TimezoneRegions.AsiaUstNera,\n  name: \"Asia/Ust-Nera\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.VladivostokTime\n};\nconst AsiaVientiane = {\n  id: TimezoneRegions.AsiaVientiane,\n  name: \"Asia/Vientiane\",\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.IndochinaTime\n};\nconst AsiaVladivostok = {\n  id: TimezoneRegions.AsiaVladivostok,\n  name: \"Asia/Vladivostok\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.VladivostokTime\n};\nconst AsiaYakutsk = {\n  id: TimezoneRegions.AsiaYakutsk,\n  name: \"Asia/Yakutsk\",\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.YakutskTime\n};\nconst AsiaYekaterinburg = {\n  id: TimezoneRegions.AsiaYekaterinburg,\n  name: \"Asia/Yekaterinburg\",\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.YekaterinburgTime\n};\nconst AsiaYerevan = {\n  id: TimezoneRegions.AsiaYerevan,\n  name: \"Asia/Yerevan\",\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.ArmeniaTime\n};\nconst AtlanticAzores = {\n  id: TimezoneRegions.AtlanticAzores,\n  name: \"Atlantic/Azores\",\n  offset: TimezoneOffset.UTC_MINUS_1,\n  timezone: Timezones.AzoresStandardTime\n};\nconst AtlanticBermuda = {\n  id: TimezoneRegions.AtlanticBermuda,\n  name: \"Atlantic/Bermuda\",\n  offset: TimezoneOffset.UTC_MINUS_4,\n  timezone: Timezones.AtlanticStandardTime\n};\nconst AtlanticCanary = {\n  id: TimezoneRegions.AtlanticCanary,\n  name: \"Atlantic/Canary\",\n  offset: TimezoneOffset.UTC_MINUS_1,\n  timezone: Timezones.WesternEuropeanTime\n};\nconst AtlanticCapeVerde = {\n  id: TimezoneRegions.AtlanticCapeVerde,\n  name: \"Atlantic/Cape_Verde\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CapeVerdeTime\n};\nconst AtlanticFaroe = {\n  id: TimezoneRegions.AtlanticFaroe,\n  name: \"Atlantic/Faroe\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime\n};\nconst AtlanticMadeira = {\n  id: TimezoneRegions.AtlanticMadeira,\n  name: \"Atlantic/Madeira\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.WesternEuropeanTime\n};\nconst AtlanticReykjavik = {\n  id: TimezoneRegions.AtlanticReykjavik,\n  name: \"Atlantic/Reykjavik\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime\n};\nconst AtlanticSouthGeorgia = {\n  id: TimezoneRegions.AtlanticSouthGeorgia,\n  name: \"Atlantic/South_Georgia\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.CoordinatedUniversalTime\n};\nconst AtlanticStHelena = {\n  id: TimezoneRegions.AtlanticStHelena,\n  name: \"Atlantic/St_Helena\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime\n};\nconst AtlanticStanley = {\n  id: TimezoneRegions.AtlanticStanley,\n  name: \"Atlantic/Stanley\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.FalklandIslandsTime\n};\nconst AustraliaAdelaide = {\n  id: TimezoneRegions.AustraliaAdelaide,\n  name: \"Australia/Adelaide\",\n  offset: TimezoneOffset.UTC_PLUS_9_30,\n  timezone: Timezones.AustralianCentralStandardTime\n};\nconst AustraliaBrisbane = {\n  id: TimezoneRegions.AustraliaBrisbane,\n  name: \"Australia/Brisbane\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime\n};\nconst AustraliaBrokenHill = {\n  id: TimezoneRegions.AustraliaBrokenHill,\n  name: \"Australia/Broken_Hill\",\n  offset: TimezoneOffset.UTC_PLUS_9_30,\n  timezone: Timezones.AustralianCentralStandardTime\n};\nconst AustraliaCanberra = {\n  id: TimezoneRegions.AustraliaCanberra,\n  name: \"Australia/Canberra\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime\n};\nconst AustraliaCurrie = {\n  id: TimezoneRegions.AustraliaCurrie,\n  name: \"Australia/Currie\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime\n};\nconst AustraliaDarwin = {\n  id: TimezoneRegions.AustraliaDarwin,\n  name: \"Australia/Darwin\",\n  offset: TimezoneOffset.UTC_PLUS_9_30,\n  timezone: Timezones.AustralianCentralStandardTime\n};\nconst AustraliaEucla = {\n  id: TimezoneRegions.AustraliaEucla,\n  name: \"Australia/Eucla\",\n  offset: TimezoneOffset.UTC_PLUS_8_45,\n  timezone: Timezones.AustralianCentralWesternStandardTime\n};\nconst AustraliaHobart = {\n  id: TimezoneRegions.AustraliaHobart,\n  name: \"Australia/Hobart\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime\n};\nconst AustraliaLindeman = {\n  id: TimezoneRegions.AustraliaLindeman,\n  name: \"Australia/Lindeman\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime\n};\nconst AustraliaLordHowe = {\n  id: TimezoneRegions.AustraliaLordHowe,\n  name: \"Australia/Lord_Howe\",\n  offset: TimezoneOffset.UTC_PLUS_10_30,\n  timezone: Timezones.LordHoweStandardTime\n};\nconst AustraliaMelbourne = {\n  id: TimezoneRegions.AustraliaMelbourne,\n  name: \"Australia/Melbourne\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime\n};\nconst AustraliaPerth = {\n  id: TimezoneRegions.AustraliaPerth,\n  name: \"Australia/Perth\",\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.AustralianWesternStandardTime\n};\nconst AustraliaSydney = {\n  id: TimezoneRegions.AustraliaSydney,\n  name: \"Australia/Sydney\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.AustralianEasternStandardTime\n};\nconst EuropeAmsterdam = {\n  id: TimezoneRegions.EuropeAmsterdam,\n  name: \"Europe/Amsterdam\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeAndorra = {\n  id: TimezoneRegions.EuropeAndorra,\n  name: \"Europe/Andorra\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeAthens = {\n  id: TimezoneRegions.EuropeAthens,\n  name: \"Europe/Athens\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeBelgrade = {\n  id: TimezoneRegions.EuropeBelgrade,\n  name: \"Europe/Belgrade\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeBerlin = {\n  id: TimezoneRegions.EuropeBerlin,\n  name: \"Europe/Berlin\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeBratislava = {\n  id: TimezoneRegions.EuropeBratislava,\n  name: \"Europe/Bratislava\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeBrussels = {\n  id: TimezoneRegions.EuropeBrussels,\n  name: \"Europe/Brussels\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeBucharest = {\n  id: TimezoneRegions.EuropeBucharest,\n  name: \"Europe/Bucharest\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeBudapest = {\n  id: TimezoneRegions.EuropeBudapest,\n  name: \"Europe/Budapest\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeBusingen = {\n  id: TimezoneRegions.EuropeBusingen,\n  name: \"Europe/Busingen\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeChisinau = {\n  id: TimezoneRegions.EuropeChisinau,\n  name: \"Europe/Chisinau\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeCopenhagen = {\n  id: TimezoneRegions.EuropeCopenhagen,\n  name: \"Europe/Copenhagen\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeDublin = {\n  id: TimezoneRegions.EuropeDublin,\n  name: \"Europe/Dublin\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime\n};\nconst EuropeGibraltar = {\n  id: TimezoneRegions.EuropeGibraltar,\n  name: \"Europe/Gibraltar\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeGuernsey = {\n  id: TimezoneRegions.EuropeGuernsey,\n  name: \"Europe/Guernsey\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeHelsinki = {\n  id: TimezoneRegions.EuropeHelsinki,\n  name: \"Europe/Helsinki\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeIsleOfMan = {\n  id: TimezoneRegions.EuropeIsleOfMan,\n  name: \"Europe/Isle_of_Man\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime\n};\nconst EuropeIstanbul = {\n  id: TimezoneRegions.EuropeIstanbul,\n  name: \"Europe/Istanbul\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeJersey = {\n  id: TimezoneRegions.EuropeJersey,\n  name: \"Europe/Jersey\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeKaliningrad = {\n  id: TimezoneRegions.EuropeKaliningrad,\n  name: \"Europe/Kaliningrad\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeKiev = {\n  id: TimezoneRegions.EuropeKiev,\n  name: \"Europe/Kiev\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeLisbon = {\n  id: TimezoneRegions.EuropeLisbon,\n  name: \"Europe/Lisbon\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime\n};\nconst EuropeLjubljana = {\n  id: TimezoneRegions.EuropeLjubljana,\n  name: \"Europe/Ljubljana\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeLondon = {\n  id: TimezoneRegions.EuropeLondon,\n  name: \"Europe/London\",\n  offset: TimezoneOffset.UTC_0,\n  timezone: Timezones.GreenwichMeanTime\n};\nconst EuropeLuxembourg = {\n  id: TimezoneRegions.EuropeLuxembourg,\n  name: \"Europe/Luxembourg\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeMadrid = {\n  id: TimezoneRegions.EuropeMadrid,\n  name: \"Europe/Madrid\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeMalta = {\n  id: TimezoneRegions.EuropeMalta,\n  name: \"Europe/Malta\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeMariehamn = {\n  id: TimezoneRegions.EuropeMariehamn,\n  name: \"Europe/Mariehamn\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeMinsk = {\n  id: TimezoneRegions.EuropeMinsk,\n  name: \"Europe/Minsk\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeMonaco = {\n  id: TimezoneRegions.EuropeMonaco,\n  name: \"Europe/Monaco\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeMoscow = {\n  id: TimezoneRegions.EuropeMoscow,\n  name: \"Europe/Moscow\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeOslo = {\n  id: TimezoneRegions.EuropeOslo,\n  name: \"Europe/Oslo\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeParis = {\n  id: TimezoneRegions.EuropeParis,\n  name: \"Europe/Paris\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropePodgorica = {\n  id: TimezoneRegions.EuropePodgorica,\n  name: \"Europe/Podgorica\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropePrague = {\n  id: TimezoneRegions.EuropePrague,\n  name: \"Europe/Prague\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeRiga = {\n  id: TimezoneRegions.EuropeRiga,\n  name: \"Europe/Riga\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeRome = {\n  id: TimezoneRegions.EuropeRome,\n  name: \"Europe/Rome\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeSamara = {\n  id: TimezoneRegions.EuropeSamara,\n  name: \"Europe/Samara\",\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeSanMarino = {\n  id: TimezoneRegions.EuropeSanMarino,\n  name: \"Europe/San_Marino\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeSarajevo = {\n  id: TimezoneRegions.EuropeSarajevo,\n  name: \"Europe/Sarajevo\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeSimferopol = {\n  id: TimezoneRegions.EuropeSimferopol,\n  name: \"Europe/Simferopol\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeSkopje = {\n  id: TimezoneRegions.EuropeSkopje,\n  name: \"Europe/Skopje\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeSofia = {\n  id: TimezoneRegions.EuropeSofia,\n  name: \"Europe/Sofia\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeStockholm = {\n  id: TimezoneRegions.EuropeStockholm,\n  name: \"Europe/Stockholm\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeTallinn = {\n  id: TimezoneRegions.EuropeTallinn,\n  name: \"Europe/Tallinn\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeTirane = {\n  id: TimezoneRegions.EuropeTirane,\n  name: \"Europe/Tirane\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeUzhgorod = {\n  id: TimezoneRegions.EuropeUzhgorod,\n  name: \"Europe/Uzhgorod\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeVaduz = {\n  id: TimezoneRegions.EuropeVaduz,\n  name: \"Europe/Vaduz\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeVatican = {\n  id: TimezoneRegions.EuropeVatican,\n  name: \"Europe/Vatican\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeVienna = {\n  id: TimezoneRegions.EuropeVienna,\n  name: \"Europe/Vienna\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeVilnius = {\n  id: TimezoneRegions.EuropeVilnius,\n  name: \"Europe/Vilnius\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeVolgograd = {\n  id: TimezoneRegions.EuropeVolgograd,\n  name: \"Europe/Volgograd\",\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeWarsaw = {\n  id: TimezoneRegions.EuropeWarsaw,\n  name: \"Europe/Warsaw\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeZagreb = {\n  id: TimezoneRegions.EuropeZagreb,\n  name: \"Europe/Zagreb\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst EuropeZaporozhye = {\n  id: TimezoneRegions.EuropeZaporozhye,\n  name: \"Europe/Zaporozhye\",\n  offset: TimezoneOffset.UTC_PLUS_2,\n  timezone: Timezones.EasternEuropeanTime\n};\nconst EuropeZurich = {\n  id: TimezoneRegions.EuropeZurich,\n  name: \"Europe/Zurich\",\n  offset: TimezoneOffset.UTC_PLUS_1,\n  timezone: Timezones.CentralEuropeanTime\n};\nconst IndianAntananarivo = {\n  id: TimezoneRegions.IndianAntananarivo,\n  name: \"Indian/Antananarivo\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime\n};\nconst IndianChagos = {\n  id: TimezoneRegions.IndianChagos,\n  name: \"Indian/Chagos\",\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.IndianOceanTime\n};\nconst IndianChristmas = {\n  id: TimezoneRegions.IndianChristmas,\n  name: \"Indian/Christmas\",\n  offset: TimezoneOffset.UTC_PLUS_7,\n  timezone: Timezones.ChristmasIslandTime\n};\nconst IndianCocos = {\n  id: TimezoneRegions.IndianCocos,\n  name: \"Indian/Cocos\",\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.CocosIslandsTime\n};\nconst IndianComoro = {\n  id: TimezoneRegions.IndianComoro,\n  name: \"Indian/Comoro\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime\n};\nconst IndianKerguelen = {\n  id: TimezoneRegions.IndianKerguelen,\n  name: \"Indian/Kerguelen\",\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.FrenchSouthernAndAntarcticTime\n};\nconst IndianMahe = {\n  id: TimezoneRegions.IndianMahe,\n  name: \"Indian/Mahe\",\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.SeychellesTime\n};\nconst IndianMaldives = {\n  id: TimezoneRegions.IndianMaldives,\n  name: \"Indian/Maldives\",\n  offset: TimezoneOffset.UTC_PLUS_5,\n  timezone: Timezones.MaldivesTime\n};\nconst IndianMauritius = {\n  id: TimezoneRegions.IndianMauritius,\n  name: \"Indian/Mauritius\",\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.MauritiusTime\n};\nconst IndianMayotte = {\n  id: TimezoneRegions.IndianMayotte,\n  name: \"Indian/Mayotte\",\n  offset: TimezoneOffset.UTC_PLUS_3,\n  timezone: Timezones.EastAfricaTime\n};\nconst IndianReunion = {\n  id: TimezoneRegions.IndianReunion,\n  name: \"Indian/Reunion\",\n  offset: TimezoneOffset.UTC_PLUS_4,\n  timezone: Timezones.ReunionTime\n};\nconst PacificApia = {\n  id: TimezoneRegions.PacificApia,\n  name: \"Pacific/Apia\",\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.SamoaStandardTime\n};\nconst PacificAuckland = {\n  id: TimezoneRegions.PacificAuckland,\n  name: \"Pacific/Auckland\",\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.NewZealandStandardTime\n};\nconst PacificChatham = {\n  id: TimezoneRegions.PacificChatham,\n  name: \"Pacific/Chatham\",\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.ChathamStandardTime\n};\nconst PacificEaster = {\n  id: TimezoneRegions.PacificEaster,\n  name: \"Pacific/Easter\",\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.EasterIslandStandardTime\n};\nconst PacificEfate = {\n  id: TimezoneRegions.PacificEfate,\n  name: \"Pacific/Efate\",\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.VanuatuTime\n};\nconst PacificEnderbury = {\n  id: TimezoneRegions.PacificEnderbury,\n  name: \"Pacific/Enderbury\",\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.TongaTime\n};\nconst PacificFakaofo = {\n  id: TimezoneRegions.PacificFakaofo,\n  name: \"Pacific/Fakaofo\",\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.TongaTime\n};\nconst PacificFiji = {\n  id: TimezoneRegions.PacificFiji,\n  name: \"Pacific/Fiji\",\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.FijiTime\n};\nconst PacificFunafuti = {\n  id: TimezoneRegions.PacificFunafuti,\n  name: \"Pacific/Funafuti\",\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.TuvaluTime\n};\nconst PacificGalapagos = {\n  id: TimezoneRegions.PacificGalapagos,\n  name: \"Pacific/Galapagos\",\n  offset: TimezoneOffset.UTC_PLUS_6,\n  timezone: Timezones.GalapagosTime\n};\nconst PacificGambier = {\n  id: TimezoneRegions.PacificGambier,\n  name: \"Pacific/Gambier\",\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.GambierIslandTime\n};\nconst PacificGuadalcanal = {\n  id: TimezoneRegions.PacificGuadalcanal,\n  name: \"Pacific/Guadalcanal\",\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.SolomonIslandsTime\n};\nconst PacificGuam = {\n  id: TimezoneRegions.PacificGuam,\n  name: \"Pacific/Guam\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.ChamorroStandardTime\n};\nconst PacificHonolulu = {\n  id: TimezoneRegions.PacificHonolulu,\n  name: \"Pacific/Honolulu\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.HawaiiAleutianStandardTime\n};\nconst PacificJohnston = {\n  id: TimezoneRegions.PacificJohnston,\n  name: \"Pacific/Johnston\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.HawaiiAleutianStandardTime\n};\nconst PacificKiritimati = {\n  id: TimezoneRegions.PacificKiritimati,\n  name: \"Pacific/Kiritimati\",\n  offset: TimezoneOffset.UTC_PLUS_14,\n  timezone: Timezones.LineIslandsTime\n};\nconst PacificKosrae = {\n  id: TimezoneRegions.PacificKosrae,\n  name: \"Pacific/Kosrae\",\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.KosraeTime\n};\nconst PacificKwajalein = {\n  id: TimezoneRegions.PacificKwajalein,\n  name: \"Pacific/Kwajalein\",\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.MarshallIslandsTime\n};\nconst PacificMajuro = {\n  id: TimezoneRegions.PacificMajuro,\n  name: \"Pacific/Majuro\",\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.MarshallIslandsTime\n};\nconst PacificMarquesas = {\n  id: TimezoneRegions.PacificMarquesas,\n  name: \"Pacific/Marquesas\",\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.MarquesasIslandsTime\n};\nconst PacificMidway = {\n  id: TimezoneRegions.PacificMidway,\n  name: \"Pacific/Midway\",\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.SamoaStandardTime\n};\nconst PacificNauru = {\n  id: TimezoneRegions.PacificNauru,\n  name: \"Pacific/Nauru\",\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.NauruTime\n};\nconst PacificNiue = {\n  id: TimezoneRegions.PacificNiue,\n  name: \"Pacific/Niue\",\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.NiueTime\n};\nconst PacificNorfolk = {\n  id: TimezoneRegions.PacificNorfolk,\n  name: \"Pacific/Norfolk\",\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.NorfolkIslandTime\n};\nconst PacificNoumea = {\n  id: TimezoneRegions.PacificNoumea,\n  name: \"Pacific/Noumea\",\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.NewCaledoniaTime\n};\nconst PacificPagoPago = {\n  id: TimezoneRegions.PacificPagoPago,\n  name: \"Pacific/Pago_Pago\",\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.SamoaStandardTime\n};\nconst PacificPalau = {\n  id: TimezoneRegions.PacificPalau,\n  name: \"Pacific/Palau\",\n  offset: TimezoneOffset.UTC_PLUS_9,\n  timezone: Timezones.PalauTime\n};\nconst PacificPitcairn = {\n  id: TimezoneRegions.PacificPitcairn,\n  name: \"Pacific/Pitcairn\",\n  offset: TimezoneOffset.UTC_PLUS_8,\n  timezone: Timezones.PitcairnTime\n};\nconst PacificPonape = {\n  id: TimezoneRegions.PacificPonape,\n  name: \"Pacific/Ponape\",\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.PohnpeiStandardTime\n};\nconst PacificPortMoresby = {\n  id: TimezoneRegions.PacificPortMoresby,\n  name: \"Pacific/Port_Moresby\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.PapuaNewGuineaTime\n};\nconst PacificRarotonga = {\n  id: TimezoneRegions.PacificRarotonga,\n  name: \"Pacific/Rarotonga\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.CookIslandTime\n};\nconst PacificSaipan = {\n  id: TimezoneRegions.PacificSaipan,\n  name: \"Pacific/Saipan\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.ChamorroStandardTime\n};\nconst PacificTahiti = {\n  id: TimezoneRegions.PacificTahiti,\n  name: \"Pacific/Tahiti\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.TahitiTime\n};\nconst PacificTarawa = {\n  id: TimezoneRegions.PacificTarawa,\n  name: \"Pacific/Tarawa\",\n  offset: TimezoneOffset.UTC_PLUS_12,\n  timezone: Timezones.GilbertIslandTime\n};\nconst PacificTongatapu = {\n  id: TimezoneRegions.PacificTongatapu,\n  name: \"Pacific/Tongatapu\",\n  offset: TimezoneOffset.UTC_PLUS_13,\n  timezone: Timezones.TongaTime\n};\nconst PacificChuuk = {\n  id: TimezoneRegions.PacificChuuk,\n  name: \"Pacific/Chuuk\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.ChuukTime\n};\nconst PacificPohnpei = {\n  id: TimezoneRegions.PacificPohnpei,\n  name: \"Pacific/Pohnpei\",\n  offset: TimezoneOffset.UTC_PLUS_11,\n  timezone: Timezones.PohnpeiStandardTime\n};\nconst PacificYap = {\n  id: TimezoneRegions.PacificYap,\n  name: \"Pacific/Yap\",\n  offset: TimezoneOffset.UTC_PLUS_10,\n  timezone: Timezones.ChuukTime\n};\n\nvar Analytics = /* @__PURE__ */ ((Analytics2) => {\n  Analytics2[\"Business\"] = \"business\";\n  Analytics2[\"Engineering\"] = \"engineering\";\n  Analytics2[\"Exception\"] = \"exception\";\n  Analytics2[\"LogMessage\"] = \"log-message\";\n  Analytics2[\"Marketing\"] = \"marketing\";\n  Analytics2[\"PageLeave\"] = \"page-leave\";\n  Analytics2[\"PageView\"] = \"page-view\";\n  Analytics2[\"Product\"] = \"product\";\n  Analytics2[\"QualityManagement\"] = \"quality-management\";\n  Analytics2[\"UserAccess\"] = \"user-access\";\n  Analytics2[\"UserLogin\"] = \"user-login\";\n  Analytics2[\"UserLogout\"] = \"user-logout\";\n  Analytics2[\"UserSignup\"] = \"user-signup\";\n  Analytics2[\"UserPreferencesChanged\"] = \"user-preferences-changed\";\n  Analytics2[\"WebsiteVisit\"] = \"website-visit\";\n  return Analytics2;\n})(Analytics || {});\n\nvar PageLeaveMethod = /* @__PURE__ */ ((PageLeaveMethod2) => {\n  PageLeaveMethod2[\"CloseTab\"] = \"close-tab\";\n  PageLeaveMethod2[\"ExternalLink\"] = \"external-link\";\n  PageLeaveMethod2[\"NavigateAway\"] = \"navigate-away\";\n  PageLeaveMethod2[\"Unknown\"] = \"unknown\";\n  return PageLeaveMethod2;\n})(PageLeaveMethod || {});\n\nvar BuildFormat = /* @__PURE__ */ ((BuildFormat2) => {\n  BuildFormat2[\"CJS\"] = \"cjs\";\n  BuildFormat2[\"ESM\"] = \"esm\";\n  BuildFormat2[\"IIFE\"] = \"iife\";\n  BuildFormat2[\"UMD\"] = \"umd\";\n  return BuildFormat2;\n})(BuildFormat || {});\nvar BuildTarget = /* @__PURE__ */ ((BuildTarget2) => {\n  BuildTarget2[\"ES5\"] = \"es5\";\n  BuildTarget2[\"ES6\"] = \"es6\";\n  BuildTarget2[\"ES2015\"] = \"es2015\";\n  BuildTarget2[\"ES2016\"] = \"es2016\";\n  BuildTarget2[\"ES2017\"] = \"es2017\";\n  BuildTarget2[\"ES2018\"] = \"es2018\";\n  BuildTarget2[\"ES2019\"] = \"es2019\";\n  BuildTarget2[\"ES2020\"] = \"es2020\";\n  BuildTarget2[\"ES2021\"] = \"es2021\";\n  BuildTarget2[\"ES2022\"] = \"es2022\";\n  BuildTarget2[\"ESNext\"] = \"esnext\";\n  BuildTarget2[\"Latest\"] = \"latest\";\n  return BuildTarget2;\n})(BuildTarget || {});\nvar BuildTool = /* @__PURE__ */ ((BuildTool2) => {\n  BuildTool2[\"ESBuild\"] = \"esbuild\";\n  BuildTool2[\"Vite\"] = \"vite\";\n  return BuildTool2;\n})(BuildTool || {});\nvar BuildPlatform = /* @__PURE__ */ ((BuildPlatform2) => {\n  BuildPlatform2[\"Browser\"] = \"browser\";\n  BuildPlatform2[\"Node\"] = \"node\";\n  return BuildPlatform2;\n})(BuildPlatform || {});\n\nvar DataPointMetric = /* @__PURE__ */ ((DataPointMetric2) => {\n  DataPointMetric2[\"AccountBalance\"] = \"AccountBalance\";\n  DataPointMetric2[\"UserAssets\"] = \"UserAssets\";\n  DataPointMetric2[\"UserCreditCardDebt\"] = \"UserCreditCardDebt\";\n  DataPointMetric2[\"UserCreditLimit\"] = \"UserCreditLimit\";\n  DataPointMetric2[\"UserCreditUtilization\"] = \"UserCreditUtilization\";\n  DataPointMetric2[\"UserDebt\"] = \"UserDebt\";\n  DataPointMetric2[\"UserInvestments\"] = \"UserInvestments\";\n  DataPointMetric2[\"UserRetirement\"] = \"UserRetirement\";\n  DataPointMetric2[\"UserSavings\"] = \"UserSavings\";\n  return DataPointMetric2;\n})(DataPointMetric || {});\n\nvar DefaultValue = /* @__PURE__ */ ((DefaultValue2) => {\n  DefaultValue2[\"DateTime\"] = \"date_time\";\n  DefaultValue2[\"True\"] = \"true\";\n  DefaultValue2[\"False\"] = \"false\";\n  DefaultValue2[\"UniqueId\"] = \"unique_id\";\n  return DefaultValue2;\n})(DefaultValue || {});\n\nvar ModelType = /* @__PURE__ */ ((ModelType2) => {\n  ModelType2[\"DomainModel\"] = \"domain_entity\";\n  ModelType2[\"GenericModel\"] = \"generic_entity\";\n  return ModelType2;\n})(ModelType || {});\n\nvar Primitives = /* @__PURE__ */ ((Primitives2) => {\n  Primitives2[\"AirportCode\"] = \"airport-code\";\n  Primitives2[\"BankIDCode\"] = \"bank-id-code\";\n  Primitives2[\"BitcoinAddress\"] = \"bitcoin-address\";\n  Primitives2[\"Boolean\"] = \"boolean\";\n  Primitives2[\"City\"] = \"city\";\n  Primitives2[\"Color\"] = \"color\";\n  Primitives2[\"CountryCode\"] = \"country-code\";\n  Primitives2[\"CreditCard\"] = \"credit-card\";\n  Primitives2[\"CurrencyAmount\"] = \"currency-amount\";\n  Primitives2[\"CurrencyCode\"] = \"currency-code\";\n  Primitives2[\"DataURI\"] = \"data-uri\";\n  Primitives2[\"Date\"] = \"date\";\n  Primitives2[\"DateRange\"] = \"date-range\";\n  Primitives2[\"DateTime\"] = \"date-time\";\n  Primitives2[\"DayOfMonth\"] = \"day-of-month\";\n  Primitives2[\"DomainName\"] = \"domain-name\";\n  Primitives2[\"EmailAddress\"] = \"email-address\";\n  Primitives2[\"EthereumAddress\"] = \"ethereum-address\";\n  Primitives2[\"EAN\"] = \"european-article-number\";\n  Primitives2[\"EIN\"] = \"employer-identification-number\";\n  Primitives2[\"Float\"] = \"float\";\n  Primitives2[\"GeographicCoordinate\"] = \"geographic-coordinate\";\n  Primitives2[\"GeographicCoordinates\"] = \"geographic-coordinates\";\n  Primitives2[\"GitRepositoryURL\"] = \"git-repository-url\";\n  Primitives2[\"HSLColor\"] = \"hsl-color\";\n  Primitives2[\"HexColor\"] = \"hex-color\";\n  Primitives2[\"Hexadecimal\"] = \"hexadecimal\";\n  Primitives2[\"IBAN\"] = \"international-bank-account-number\";\n  Primitives2[\"IMEI\"] = \"international-mobile-equipment-identifier\";\n  Primitives2[\"IPAddress\"] = \"ip-address\";\n  Primitives2[\"IPAddressRange\"] = \"ip-address-range\";\n  Primitives2[\"ISBN\"] = \"international-standard-book-number\";\n  Primitives2[\"ISIN\"] = \"international-stock-number\";\n  Primitives2[\"ISMN\"] = \"international-standard-music-number\";\n  Primitives2[\"ISSN\"] = \"international-standard-serial-number\";\n  Primitives2[\"ISO8601\"] = \"iso-8601\";\n  Primitives2[\"ISO31661Alpha2\"] = \"iso-31661-alpha-2\";\n  Primitives2[\"ISO31661Alpha3\"] = \"iso-31661-alpha-3\";\n  Primitives2[\"ISO4217\"] = \"iso-4217\";\n  Primitives2[\"Image\"] = \"image\";\n  Primitives2[\"Integer\"] = \"integer\";\n  Primitives2[\"JSON\"] = \"json\";\n  Primitives2[\"LanguageCode\"] = \"language-code\";\n  Primitives2[\"LicensePlateNumber\"] = \"license-plate-number\";\n  Primitives2[\"LongText\"] = \"long-text\";\n  Primitives2[\"MD5\"] = \"md5\";\n  Primitives2[\"Markdown\"] = \"markdown\";\n  Primitives2[\"Menu\"] = \"menu\";\n  Primitives2[\"Number\"] = \"number\";\n  Primitives2[\"MACAddress\"] = \"mac-address\";\n  Primitives2[\"MagnetURI\"] = \"magnet-uri\";\n  Primitives2[\"MimeType\"] = \"mime-type\";\n  Primitives2[\"Month\"] = \"month\";\n  Primitives2[\"Password\"] = \"password\";\n  Primitives2[\"PassportNumber\"] = \"passport-number\";\n  Primitives2[\"Percent\"] = \"percent\";\n  Primitives2[\"PhoneNumber\"] = \"phone-number\";\n  Primitives2[\"Port\"] = \"port\";\n  Primitives2[\"PostalCode\"] = \"postal-code\";\n  Primitives2[\"Province\"] = \"province\";\n  Primitives2[\"RFC3339\"] = \"rfc-3339\";\n  Primitives2[\"RGBColor\"] = \"rgb-color\";\n  Primitives2[\"SemanticVersion\"] = \"semantic-version\";\n  Primitives2[\"SSN\"] = \"social-security-number\";\n  Primitives2[\"State\"] = \"state\";\n  Primitives2[\"StreetAddress\"] = \"street-address\";\n  Primitives2[\"String\"] = \"string\";\n  Primitives2[\"Tags\"] = \"tags\";\n  Primitives2[\"TaxIDNumber\"] = \"tax-id-number\";\n  Primitives2[\"Time\"] = \"time\";\n  Primitives2[\"TimeOfDay\"] = \"time-of-day\";\n  Primitives2[\"TimeRange\"] = \"time-range\";\n  Primitives2[\"TimezoneRegion\"] = \"timezone-region\";\n  Primitives2[\"URL\"] = \"url\";\n  Primitives2[\"URLPath\"] = \"url-path\";\n  Primitives2[\"UUID\"] = \"uuid\";\n  Primitives2[\"VATIDNumber\"] = \"value-added-tax-id-number\";\n  Primitives2[\"VerificationCode\"] = \"verification-code\";\n  Primitives2[\"Video\"] = \"video\";\n  Primitives2[\"Weekday\"] = \"weekday\";\n  Primitives2[\"Year\"] = \"year\";\n  return Primitives2;\n})(Primitives || {});\n\nvar DeploymentStrategy = /* @__PURE__ */ ((DeploymentStrategy2) => {\n  DeploymentStrategy2[\"BlueGreen\"] = \"blue-green\";\n  DeploymentStrategy2[\"Canary\"] = \"canary\";\n  DeploymentStrategy2[\"Rolling\"] = \"rolling\";\n  return DeploymentStrategy2;\n})(DeploymentStrategy || {});\n\nvar EnvironmentType = /* @__PURE__ */ ((EnvironmentType2) => {\n  EnvironmentType2[\"Development\"] = \"Development\";\n  EnvironmentType2[\"NonProduction\"] = \"NonProduction\";\n  EnvironmentType2[\"Production\"] = \"Production\";\n  return EnvironmentType2;\n})(EnvironmentType || {});\n\nvar CloudProviders = /* @__PURE__ */ ((CloudProviders2) => {\n  CloudProviders2[\"AWS\"] = \"aws\";\n  return CloudProviders2;\n})(CloudProviders || {});\nvar InfrastuctureClass = /* @__PURE__ */ ((InfrastuctureClass2) => {\n  InfrastuctureClass2[\"Smallest\"] = \"smallest\";\n  InfrastuctureClass2[\"Small\"] = \"small\";\n  InfrastuctureClass2[\"Medium\"] = \"medium\";\n  InfrastuctureClass2[\"Large\"] = \"large\";\n  InfrastuctureClass2[\"Largest\"] = \"largest\";\n  return InfrastuctureClass2;\n})(InfrastuctureClass || {});\n\nvar OnboardingStatus = /* @__PURE__ */ ((OnboardingStatus2) => {\n  OnboardingStatus2[\"Completed\"] = \"completed\";\n  OnboardingStatus2[\"Started\"] = \"started\";\n  OnboardingStatus2[\"Uncompleted\"] = \"uncompleted\";\n  return OnboardingStatus2;\n})(OnboardingStatus || {});\n\nvar PipelineWorkflowStatus = /* @__PURE__ */ ((PipelineWorkflowStatus2) => {\n  PipelineWorkflowStatus2[\"Canceled\"] = \"Canceled\";\n  PipelineWorkflowStatus2[\"Completed\"] = \"Completed\";\n  PipelineWorkflowStatus2[\"Failed\"] = \"Failed\";\n  PipelineWorkflowStatus2[\"Running\"] = \"Running\";\n  PipelineWorkflowStatus2[\"Queued\"] = \"Queued\";\n  PipelineWorkflowStatus2[\"Waiting\"] = \"Waiting\";\n  return PipelineWorkflowStatus2;\n})(PipelineWorkflowStatus || {});\nvar PipelineStepStatus = /* @__PURE__ */ ((PipelineStepStatus2) => {\n  PipelineStepStatus2[\"Canceled\"] = \"Canceled\";\n  PipelineStepStatus2[\"Completed\"] = \"Completed\";\n  PipelineStepStatus2[\"Failed\"] = \"Failed\";\n  PipelineStepStatus2[\"Running\"] = \"Running\";\n  PipelineStepStatus2[\"Queued\"] = \"Queued\";\n  PipelineStepStatus2[\"Waiting\"] = \"Waiting\";\n  return PipelineStepStatus2;\n})(PipelineStepStatus || {});\n\nvar Platform = /* @__PURE__ */ ((Platform2) => {\n  Platform2[\"Desktop\"] = \"desktop\";\n  Platform2[\"Mobile\"] = \"mobile\";\n  Platform2[\"NodeJS\"] = \"nodejs\";\n  Platform2[\"TV\"] = \"tv\";\n  Platform2[\"Watch\"] = \"watch\";\n  Platform2[\"Web\"] = \"web\";\n  return Platform2;\n})(Platform || {});\n\nvar ProblemSeverity = /* @__PURE__ */ ((ProblemSeverity2) => {\n  ProblemSeverity2[\"Low\"] = \"low\";\n  ProblemSeverity2[\"Medium\"] = \"medium\";\n  ProblemSeverity2[\"High\"] = \"high\";\n  ProblemSeverity2[\"Emergency\"] = \"emergency\";\n  return ProblemSeverity2;\n})(ProblemSeverity || {});\nvar ProblemType = /* @__PURE__ */ ((ProblemType2) => {\n  ProblemType2[\"Bug\"] = \"bug\";\n  return ProblemType2;\n})(ProblemType || {});\n\nvar ProjectType = /* @__PURE__ */ ((ProjectType2) => {\n  ProjectType2[\"DesktopApplication\"] = \"desktop-application\";\n  ProjectType2[\"MobileApplication\"] = \"mobile-application\";\n  ProjectType2[\"WebApplication\"] = \"web-application\";\n  ProjectType2[\"CLIApplication\"] = \"cli-application\";\n  ProjectType2[\"Library\"] = \"library\";\n  ProjectType2[\"WebService\"] = \"web-service\";\n  return ProjectType2;\n})(ProjectType || {});\n\nvar TaskStatus = /* @__PURE__ */ ((TaskStatus2) => {\n  TaskStatus2[\"Canceled\"] = \"Canceled\";\n  TaskStatus2[\"Completed\"] = \"Completed\";\n  TaskStatus2[\"Created\"] = \"Created\";\n  TaskStatus2[\"Faulted\"] = \"Faulted\";\n  TaskStatus2[\"Queued\"] = \"Queued\";\n  TaskStatus2[\"Running\"] = \"Running\";\n  TaskStatus2[\"Waiting\"] = \"Waiting\";\n  return TaskStatus2;\n})(TaskStatus || {});\n\nvar RouteRole = /* @__PURE__ */ ((RouteRole2) => {\n  RouteRole2[\"ForgotPassword\"] = \"forgot_password\";\n  RouteRole2[\"Index\"] = \"index\";\n  RouteRole2[\"Login\"] = \"login\";\n  RouteRole2[\"PageNotFound\"] = \"404\";\n  RouteRole2[\"Signup\"] = \"signup\";\n  RouteRole2[\"VerifyCode\"] = \"verify_code\";\n  return RouteRole2;\n})(RouteRole || {});\n\nvar Condition = /* @__PURE__ */ ((Condition2) => {\n  Condition2[\"Contains\"] = \"contains\";\n  Condition2[\"HasCharacterCount\"] = \"has-character-count\";\n  Condition2[\"HasNumberCount\"] = \"has-number-count\";\n  Condition2[\"HasLetterCount\"] = \"has-letter-count\";\n  Condition2[\"HasLowercaseCount\"] = \"has-lowercase-count\";\n  Condition2[\"HasSpacesCount\"] = \"has-spaces-count\";\n  Condition2[\"HasSymbolCount\"] = \"has-symbol-count\";\n  Condition2[\"HasUppercaseCount\"] = \"has-uppercase-count\";\n  Condition2[\"IsAfter\"] = \"is-after\";\n  Condition2[\"IsAfterOrEqual\"] = \"is-after-or-equal\";\n  Condition2[\"IsAirport\"] = \"is-airport\";\n  Condition2[\"IsAlpha\"] = \"is-alpha\";\n  Condition2[\"IsAlphanumeric\"] = \"is-alphanumeric\";\n  Condition2[\"IsAlgorithmHash\"] = \"is-algorithm-hash\";\n  Condition2[\"IsAscii\"] = \"is-ascii\";\n  Condition2[\"IsBase64\"] = \"is-base-64\";\n  Condition2[\"IsBefore\"] = \"is-before\";\n  Condition2[\"IsBeforeOrAfter\"] = \"is-before-or-after\";\n  Condition2[\"IsBeforeOrEqual\"] = \"is-before-or-equal\";\n  Condition2[\"IsBetween\"] = \"is-between\";\n  Condition2[\"IsBIC\"] = \"is-bic\";\n  Condition2[\"IsBitcoinAddress\"] = \"is-bitcoin-address\";\n  Condition2[\"IsBoolean\"] = \"is-boolean\";\n  Condition2[\"IsColor\"] = \"is-color\";\n  Condition2[\"IsComplexEnough\"] = \"is-complex-enough\";\n  Condition2[\"IsCountry\"] = \"is-country\";\n  Condition2[\"IsCreditCard\"] = \"is-credit-card\";\n  Condition2[\"IsCurrency\"] = \"is-currency\";\n  Condition2[\"IsDataURI\"] = \"is-data-uri\";\n  Condition2[\"IsDate\"] = \"is-date\";\n  Condition2[\"IsDateRange\"] = \"is-date-range\";\n  Condition2[\"IsDateTime\"] = \"is-date-time\";\n  Condition2[\"IsDayOfMonth\"] = \"is-day-of-month\";\n  Condition2[\"IsDecimal\"] = \"is-decimal\";\n  Condition2[\"IsDivisibleBy\"] = \"is-divisible-by\";\n  Condition2[\"IsDomainName\"] = \"is-domain-name\";\n  Condition2[\"IsEmailAddress\"] = \"is-email-address\";\n  Condition2[\"IsEthereumAddress\"] = \"is-ethereum-address\";\n  Condition2[\"IsEAN\"] = \"is-ean\";\n  Condition2[\"IsEIN\"] = \"is-ein\";\n  Condition2[\"IsEqual\"] = \"is-equal\";\n  Condition2[\"IsEvenNumber\"] = \"is-even-number\";\n  Condition2[\"IsFloat\"] = \"is-float\";\n  Condition2[\"IsIBAN\"] = \"is-iban\";\n  Condition2[\"IsGreaterThan\"] = \"greater-than\";\n  Condition2[\"IsGreaterThanOrEqual\"] = \"greater-than-or-equal\";\n  Condition2[\"IsHSLColor\"] = \"is-hsl-color\";\n  Condition2[\"IsHexColor\"] = \"is-hex-color\";\n  Condition2[\"IsHexadecimal\"] = \"is-hexadecimal\";\n  Condition2[\"IsIdentityCardCode\"] = \"is-identity-card-code\";\n  Condition2[\"IsIMEI\"] = \"is-imei\";\n  Condition2[\"IsInIPAddressRange\"] = \"is-in-ip-address-range\";\n  Condition2[\"IsInList\"] = \"is-in-list\";\n  Condition2[\"IsInTheLast\"] = \"is-in-the-last\";\n  Condition2[\"IsInteger\"] = \"is-integer\";\n  Condition2[\"IsIPAddress\"] = \"is-ip-address\";\n  Condition2[\"IsIPAddressRange\"] = \"is-ip-address-range\";\n  Condition2[\"IsISBN\"] = \"is-isbn\";\n  Condition2[\"IsISIN\"] = \"is-isin\";\n  Condition2[\"IsISMN\"] = \"is-ismn\";\n  Condition2[\"IsISRC\"] = \"is-isrc\";\n  Condition2[\"IsISSN\"] = \"is-issn\";\n  Condition2[\"IsISO4217\"] = \"is-iso-4217\";\n  Condition2[\"IsISO8601\"] = \"is-iso-8601\";\n  Condition2[\"IsISO31661Alpha2\"] = \"is-iso-31661-alpha-2\";\n  Condition2[\"IsISO31661Alpha3\"] = \"is-iso-31661-alpha-3\";\n  Condition2[\"IsJSON\"] = \"is-json\";\n  Condition2[\"IsLanguage\"] = \"is-language\";\n  Condition2[\"IsLatitude\"] = \"is-latitude\";\n  Condition2[\"IsLongitude\"] = \"is-longitude\";\n  Condition2[\"IsLengthEqual\"] = \"is-length-equal\";\n  Condition2[\"IsLengthGreaterThan\"] = \"is-length-greater-than\";\n  Condition2[\"IsLengthGreaterThanOrEqual\"] = \"is-length-great-than-or-equal\";\n  Condition2[\"IsLengthLessThan\"] = \"is-length-less-than\";\n  Condition2[\"IsLengthLessThanOrEqual\"] = \"is-length-less-than-or-equal\";\n  Condition2[\"IsLessThan\"] = \"less-than\";\n  Condition2[\"IsLessThanOrEqual\"] = \"less-than-or-equal\";\n  Condition2[\"IsLicensePlateNumber\"] = \"is-license-plate-number\";\n  Condition2[\"IsLowercase\"] = \"is-lowercase\";\n  Condition2[\"IsOctal\"] = \"is-octal\";\n  Condition2[\"IsMACAddress\"] = \"is-mac-address\";\n  Condition2[\"IsMD5\"] = \"is-md5\";\n  Condition2[\"IsMagnetURI\"] = \"is-magnet-uri\";\n  Condition2[\"IsMarkdown\"] = \"is-markdown\";\n  Condition2[\"IsMimeType\"] = \"is-mime-type\";\n  Condition2[\"IsMonth\"] = \"is-month\";\n  Condition2[\"IsNegativeNumber\"] = \"is-negative-number\";\n  Condition2[\"IsNotDate\"] = \"is-not-date\";\n  Condition2[\"IsNotEqual\"] = \"is-not-equal\";\n  Condition2[\"IsNotInIPAddressRange\"] = \"is-not-in-ip-address-range\";\n  Condition2[\"IsNotInList\"] = \"is-not-in-list\";\n  Condition2[\"IsNotNull\"] = \"is-not-null\";\n  Condition2[\"IsNotRegexMatch\"] = \"is-not-regex-match\";\n  Condition2[\"IsNotToday\"] = \"is-not-today\";\n  Condition2[\"IsNumber\"] = \"is-number\";\n  Condition2[\"IsNumeric\"] = \"is-numeric\";\n  Condition2[\"IsOddNumber\"] = \"is-odd-number\";\n  Condition2[\"IsPassportNumber\"] = \"is-passport-number\";\n  Condition2[\"IsPhoneNumber\"] = \"is-phone-number\";\n  Condition2[\"IsPort\"] = \"is-port\";\n  Condition2[\"IsPositiveNumber\"] = \"is-positive-number\";\n  Condition2[\"IsPostalCode\"] = \"is-postal-code\";\n  Condition2[\"IsProvince\"] = \"is-province\";\n  Condition2[\"IsRGBColor\"] = \"is-rgb-color\";\n  Condition2[\"IsRegexMatch\"] = \"is-regex-match\";\n  Condition2[\"IsRequired\"] = \"is-required\";\n  Condition2[\"IsSemanticVersion\"] = \"is-semantic-version\";\n  Condition2[\"IsSlug\"] = \"is-slug\";\n  Condition2[\"IsSSN\"] = \"is-ssn\";\n  Condition2[\"IsState\"] = \"is-state\";\n  Condition2[\"IsStreetAddress\"] = \"is-street-address\";\n  Condition2[\"IsString\"] = \"is-string\";\n  Condition2[\"IsStrongPassword\"] = \"is-strong-password\";\n  Condition2[\"IsTags\"] = \"is-tags\";\n  Condition2[\"IsTaxIDNumber\"] = \"is-tax-id-number\";\n  Condition2[\"IsThisMonth\"] = \"is-this-month\";\n  Condition2[\"IsThisQuarter\"] = \"is-this-quarter\";\n  Condition2[\"IsThisWeek\"] = \"is-this-week\";\n  Condition2[\"IsThisWeekend\"] = \"is-this-weekend\";\n  Condition2[\"IsThisYear\"] = \"is-this-year\";\n  Condition2[\"IsTime\"] = \"is-time\";\n  Condition2[\"IsTimeOfDay\"] = \"is-time-of-day\";\n  Condition2[\"IsTimeRange\"] = \"is-time-range\";\n  Condition2[\"IsToday\"] = \"is-today\";\n  Condition2[\"IsURL\"] = \"is-url\";\n  Condition2[\"IsUUID\"] = \"is-uuid\";\n  Condition2[\"IsUppercase\"] = \"is-uppercase\";\n  Condition2[\"IsUsernameAvailable\"] = \"is-username-available\";\n  Condition2[\"IsValidStreetAddress\"] = \"is-valid-street-address\";\n  Condition2[\"IsVATIDNumber\"] = \"is-vat-id-number\";\n  Condition2[\"IsWeekday\"] = \"is-weekday\";\n  Condition2[\"IsWeekend\"] = \"is-weekend\";\n  Condition2[\"IsYear\"] = \"is-year\";\n  return Condition2;\n})(Condition || {});\nvar AuthenticationCondition = /* @__PURE__ */ ((AuthenticationCondition2) => {\n  AuthenticationCondition2[\"IsAuthenticated\"] = \"is-authenticated\";\n  AuthenticationCondition2[\"IsNotAuthenticated\"] = \"is-not-authenticated\";\n  AuthenticationCondition2[\"IsUsernameAvailable\"] = \"is-username-available\";\n  AuthenticationCondition2[\"PasswordMismatch\"] = \"password-mismatch\";\n  return AuthenticationCondition2;\n})(AuthenticationCondition || {});\n\nvar ColorCondition = ((ColorCondition2) => {\n  ColorCondition2[ColorCondition2[\"IsHSLColor\"] = Condition.IsHSLColor] = \"IsHSLColor\";\n  ColorCondition2[ColorCondition2[\"IsHexColor\"] = Condition.IsHexColor] = \"IsHexColor\";\n  ColorCondition2[ColorCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  ColorCondition2[ColorCondition2[\"IsRGBColor\"] = Condition.IsRGBColor] = \"IsRGBColor\";\n  ColorCondition2[ColorCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return ColorCondition2;\n})(ColorCondition || {});\n\nvar AlgorithmHashCondition = ((AlgorithmHashCondition2) => {\n  AlgorithmHashCondition2[AlgorithmHashCondition2[\"IsAlgorithmHash\"] = Condition.IsAlgorithmHash] = \"IsAlgorithmHash\";\n  AlgorithmHashCondition2[AlgorithmHashCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  AlgorithmHashCondition2[AlgorithmHashCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  AlgorithmHashCondition2[AlgorithmHashCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  AlgorithmHashCondition2[AlgorithmHashCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  AlgorithmHashCondition2[AlgorithmHashCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  AlgorithmHashCondition2[AlgorithmHashCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return AlgorithmHashCondition2;\n})(AlgorithmHashCondition || {});\nvar SemanticVersionCondition = ((SemanticVersionCondition2) => {\n  SemanticVersionCondition2[SemanticVersionCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  SemanticVersionCondition2[SemanticVersionCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  SemanticVersionCondition2[SemanticVersionCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  SemanticVersionCondition2[SemanticVersionCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  SemanticVersionCondition2[SemanticVersionCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  SemanticVersionCondition2[SemanticVersionCondition2[\"IsSemanticVersion\"] = Condition.IsSemanticVersion] = \"IsSemanticVersion\";\n  SemanticVersionCondition2[SemanticVersionCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return SemanticVersionCondition2;\n})(SemanticVersionCondition || {});\nvar UUIDCondition = ((UUIDCondition2) => {\n  UUIDCondition2[UUIDCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  UUIDCondition2[UUIDCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  UUIDCondition2[UUIDCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  UUIDCondition2[UUIDCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  UUIDCondition2[UUIDCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  UUIDCondition2[UUIDCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  UUIDCondition2[UUIDCondition2[\"IsUUID\"] = Condition.IsUUID] = \"IsUUID\";\n  return UUIDCondition2;\n})(UUIDCondition || {});\nvar MD5Condition = ((MD5Condition2) => {\n  MD5Condition2[MD5Condition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  MD5Condition2[MD5Condition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  MD5Condition2[MD5Condition2[\"IsMD5\"] = Condition.IsMD5] = \"IsMD5\";\n  MD5Condition2[MD5Condition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  MD5Condition2[MD5Condition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  MD5Condition2[MD5Condition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  MD5Condition2[MD5Condition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return MD5Condition2;\n})(MD5Condition || {});\n\nvar BooleanCondition = ((BooleanCondition2) => {\n  BooleanCondition2[BooleanCondition2[\"IsBoolean\"] = Condition.IsBoolean] = \"IsBoolean\";\n  BooleanCondition2[BooleanCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  BooleanCondition2[BooleanCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  BooleanCondition2[BooleanCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  return BooleanCondition2;\n})(BooleanCondition || {});\n\nvar DateCondition = ((DateCondition2) => {\n  DateCondition2[DateCondition2[\"IsAfter\"] = Condition.IsAfter] = \"IsAfter\";\n  DateCondition2[DateCondition2[\"IsAfterOrEqual\"] = Condition.IsAfterOrEqual] = \"IsAfterOrEqual\";\n  DateCondition2[DateCondition2[\"IsBefore\"] = Condition.IsBefore] = \"IsBefore\";\n  DateCondition2[DateCondition2[\"IsBeforeOrEqual\"] = Condition.IsBeforeOrEqual] = \"IsBeforeOrEqual\";\n  DateCondition2[DateCondition2[\"IsBetween\"] = Condition.IsBetween] = \"IsBetween\";\n  DateCondition2[DateCondition2[\"IsDate\"] = Condition.IsDate] = \"IsDate\";\n  DateCondition2[DateCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  DateCondition2[DateCondition2[\"IsNotDate\"] = Condition.IsNotDate] = \"IsNotDate\";\n  DateCondition2[DateCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  DateCondition2[DateCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  DateCondition2[DateCondition2[\"IsNotToday\"] = Condition.IsNotToday] = \"IsNotToday\";\n  DateCondition2[DateCondition2[\"IsThisWeek\"] = Condition.IsThisWeek] = \"IsThisWeek\";\n  DateCondition2[DateCondition2[\"IsThisMonth\"] = Condition.IsThisMonth] = \"IsThisMonth\";\n  DateCondition2[DateCondition2[\"IsThisQuarter\"] = Condition.IsThisQuarter] = \"IsThisQuarter\";\n  DateCondition2[DateCondition2[\"IsThisYear\"] = Condition.IsThisYear] = \"IsThisYear\";\n  DateCondition2[DateCondition2[\"IsToday\"] = Condition.IsToday] = \"IsToday\";\n  DateCondition2[DateCondition2[\"IsWeekend\"] = Condition.IsWeekend] = \"IsWeekend\";\n  return DateCondition2;\n})(DateCondition || {});\nvar DateRangeCondition = ((DateRangeCondition2) => {\n  DateRangeCondition2[DateRangeCondition2[\"IsAfter\"] = Condition.IsAfter] = \"IsAfter\";\n  DateRangeCondition2[DateRangeCondition2[\"IsBefore\"] = Condition.IsBefore] = \"IsBefore\";\n  DateRangeCondition2[DateRangeCondition2[\"IsBeforeOrAfter\"] = Condition.IsBeforeOrAfter] = \"IsBeforeOrAfter\";\n  DateRangeCondition2[DateRangeCondition2[\"IsBetween\"] = Condition.IsBetween] = \"IsBetween\";\n  DateRangeCondition2[DateRangeCondition2[\"IsDate\"] = Condition.IsDate] = \"IsDate\";\n  DateRangeCondition2[DateRangeCondition2[\"IsDateRange\"] = Condition.IsDateRange] = \"IsDateRange\";\n  DateRangeCondition2[DateRangeCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  DateRangeCondition2[DateRangeCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  DateRangeCondition2[DateRangeCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  return DateRangeCondition2;\n})(DateRangeCondition || {});\nvar DateTimeCondition = ((DateTimeCondition2) => {\n  DateTimeCondition2[DateTimeCondition2[\"IsAfter\"] = Condition.IsAfter] = \"IsAfter\";\n  DateTimeCondition2[DateTimeCondition2[\"IsAfterOrEqual\"] = Condition.IsAfterOrEqual] = \"IsAfterOrEqual\";\n  DateTimeCondition2[DateTimeCondition2[\"IsBefore\"] = Condition.IsBefore] = \"IsBefore\";\n  DateTimeCondition2[DateTimeCondition2[\"IsBeforeOrEqual\"] = Condition.IsBeforeOrEqual] = \"IsBeforeOrEqual\";\n  DateTimeCondition2[DateTimeCondition2[\"IsBetween\"] = Condition.IsBetween] = \"IsBetween\";\n  DateTimeCondition2[DateTimeCondition2[\"IsDate\"] = Condition.IsDate] = \"IsDate\";\n  DateTimeCondition2[DateTimeCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  DateTimeCondition2[DateTimeCondition2[\"IsNotDate\"] = Condition.IsNotDate] = \"IsNotDate\";\n  DateTimeCondition2[DateTimeCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  DateTimeCondition2[DateTimeCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  DateTimeCondition2[DateTimeCondition2[\"IsNotToday\"] = Condition.IsNotToday] = \"IsNotToday\";\n  DateTimeCondition2[DateTimeCondition2[\"IsThisWeek\"] = Condition.IsThisWeek] = \"IsThisWeek\";\n  DateTimeCondition2[DateTimeCondition2[\"IsThisMonth\"] = Condition.IsThisMonth] = \"IsThisMonth\";\n  DateTimeCondition2[DateTimeCondition2[\"IsThisQuarter\"] = Condition.IsThisQuarter] = \"IsThisQuarter\";\n  DateTimeCondition2[DateTimeCondition2[\"IsThisYear\"] = Condition.IsThisYear] = \"IsThisYear\";\n  DateTimeCondition2[DateTimeCondition2[\"IsToday\"] = Condition.IsToday] = \"IsToday\";\n  DateTimeCondition2[DateTimeCondition2[\"IsWeekend\"] = Condition.IsWeekend] = \"IsWeekend\";\n  return DateTimeCondition2;\n})(DateTimeCondition || {});\nvar DayOfMonthCondition = ((DayOfMonthCondition2) => {\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsAfter\"] = Condition.IsAfter] = \"IsAfter\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsAfterOrEqual\"] = Condition.IsAfterOrEqual] = \"IsAfterOrEqual\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsBefore\"] = Condition.IsBefore] = \"IsBefore\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsBeforeOrEqual\"] = Condition.IsBeforeOrEqual] = \"IsBeforeOrEqual\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsBetween\"] = Condition.IsBetween] = \"IsBetween\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsDayOfMonth\"] = Condition.IsDayOfMonth] = \"IsDayOfMonth\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsEvenNumber\"] = Condition.IsEvenNumber] = \"IsEvenNumber\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsGreaterThan\"] = Condition.IsGreaterThan] = \"IsGreaterThan\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsGreaterThanOrEqual\"] = Condition.IsGreaterThanOrEqual] = \"IsGreaterThanOrEqual\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsInteger\"] = Condition.IsInteger] = \"IsInteger\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsLessThan\"] = Condition.IsLessThan] = \"IsLessThan\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsLessThanOrEqual\"] = Condition.IsLessThanOrEqual] = \"IsLessThanOrEqual\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsNumber\"] = Condition.IsNumber] = \"IsNumber\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsOddNumber\"] = Condition.IsOddNumber] = \"IsOddNumber\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsToday\"] = Condition.IsToday] = \"IsToday\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsWeekday\"] = Condition.IsWeekday] = \"IsWeekday\";\n  DayOfMonthCondition2[DayOfMonthCondition2[\"IsWeekend\"] = Condition.IsWeekend] = \"IsWeekend\";\n  return DayOfMonthCondition2;\n})(DayOfMonthCondition || {});\nvar MonthCondition = ((MonthCondition2) => {\n  MonthCondition2[MonthCondition2[\"IsAfter\"] = Condition.IsAfter] = \"IsAfter\";\n  MonthCondition2[MonthCondition2[\"IsAfterOrEqual\"] = Condition.IsAfterOrEqual] = \"IsAfterOrEqual\";\n  MonthCondition2[MonthCondition2[\"IsBefore\"] = Condition.IsBefore] = \"IsBefore\";\n  MonthCondition2[MonthCondition2[\"IsBeforeOrEqual\"] = Condition.IsBeforeOrEqual] = \"IsBeforeOrEqual\";\n  MonthCondition2[MonthCondition2[\"IsBetween\"] = Condition.IsBetween] = \"IsBetween\";\n  MonthCondition2[MonthCondition2[\"IsEvenNumber\"] = Condition.IsEvenNumber] = \"IsEvenNumber\";\n  MonthCondition2[MonthCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  MonthCondition2[MonthCondition2[\"IsGreaterThan\"] = Condition.IsGreaterThan] = \"IsGreaterThan\";\n  MonthCondition2[MonthCondition2[\"IsGreaterThanOrEqual\"] = Condition.IsGreaterThanOrEqual] = \"IsGreaterThanOrEqual\";\n  MonthCondition2[MonthCondition2[\"IsInteger\"] = Condition.IsInteger] = \"IsInteger\";\n  MonthCondition2[MonthCondition2[\"IsLessThan\"] = Condition.IsLessThan] = \"IsLessThan\";\n  MonthCondition2[MonthCondition2[\"IsLessThanOrEqual\"] = Condition.IsLessThanOrEqual] = \"IsLessThanOrEqual\";\n  MonthCondition2[MonthCondition2[\"IsMonth\"] = Condition.IsMonth] = \"IsMonth\";\n  MonthCondition2[MonthCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  MonthCondition2[MonthCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  MonthCondition2[MonthCondition2[\"IsNumber\"] = Condition.IsNumber] = \"IsNumber\";\n  MonthCondition2[MonthCondition2[\"IsOddNumber\"] = Condition.IsOddNumber] = \"IsOddNumber\";\n  MonthCondition2[MonthCondition2[\"IsThisMonth\"] = Condition.IsThisMonth] = \"IsThisMonth\";\n  return MonthCondition2;\n})(MonthCondition || {});\nvar TimeCondition = ((TimeCondition2) => {\n  TimeCondition2[TimeCondition2[\"IsAfter\"] = Condition.IsAfter] = \"IsAfter\";\n  TimeCondition2[TimeCondition2[\"IsAfterOrEqual\"] = Condition.IsAfterOrEqual] = \"IsAfterOrEqual\";\n  TimeCondition2[TimeCondition2[\"IsBefore\"] = Condition.IsBefore] = \"IsBefore\";\n  TimeCondition2[TimeCondition2[\"IsBeforeOrEqual\"] = Condition.IsBeforeOrEqual] = \"IsBeforeOrEqual\";\n  TimeCondition2[TimeCondition2[\"IsBetween\"] = Condition.IsBetween] = \"IsBetween\";\n  TimeCondition2[TimeCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  TimeCondition2[TimeCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  TimeCondition2[TimeCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  TimeCondition2[TimeCondition2[\"IsTime\"] = Condition.IsTime] = \"IsTime\";\n  return TimeCondition2;\n})(TimeCondition || {});\nvar TimeRangeCondition = ((TimeRangeCondition2) => {\n  TimeRangeCondition2[TimeRangeCondition2[\"IsAfter\"] = Condition.IsAfter] = \"IsAfter\";\n  TimeRangeCondition2[TimeRangeCondition2[\"IsBefore\"] = Condition.IsBefore] = \"IsBefore\";\n  TimeRangeCondition2[TimeRangeCondition2[\"IsBeforeOrAfter\"] = Condition.IsBeforeOrAfter] = \"IsBeforeOrAfter\";\n  TimeRangeCondition2[TimeRangeCondition2[\"IsBetween\"] = Condition.IsBetween] = \"IsBetween\";\n  TimeRangeCondition2[TimeRangeCondition2[\"IsTime\"] = Condition.IsTime] = \"IsTime\";\n  TimeRangeCondition2[TimeRangeCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  TimeRangeCondition2[TimeRangeCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  TimeRangeCondition2[TimeRangeCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  TimeRangeCondition2[TimeRangeCondition2[\"IsTimeRange\"] = Condition.IsTimeRange] = \"IsTimeRange\";\n  return TimeRangeCondition2;\n})(TimeRangeCondition || {});\nvar TimeOfDayCondition = ((TimeOfDayCondition2) => {\n  TimeOfDayCondition2[TimeOfDayCondition2[\"IsAfter\"] = Condition.IsAfter] = \"IsAfter\";\n  TimeOfDayCondition2[TimeOfDayCondition2[\"IsBefore\"] = Condition.IsBefore] = \"IsBefore\";\n  TimeOfDayCondition2[TimeOfDayCondition2[\"IsBeforeOrAfter\"] = Condition.IsBeforeOrAfter] = \"IsBeforeOrAfter\";\n  TimeOfDayCondition2[TimeOfDayCondition2[\"IsBetween\"] = Condition.IsBetween] = \"IsBetween\";\n  TimeOfDayCondition2[TimeOfDayCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  TimeOfDayCondition2[TimeOfDayCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  TimeOfDayCondition2[TimeOfDayCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  TimeOfDayCondition2[TimeOfDayCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  TimeOfDayCondition2[TimeOfDayCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  TimeOfDayCondition2[TimeOfDayCondition2[\"IsTimeOfDay\"] = Condition.IsTimeOfDay] = \"IsTimeOfDay\";\n  TimeOfDayCondition2[TimeOfDayCondition2[\"IsTimeRange\"] = Condition.IsTimeRange] = \"IsTimeRange\";\n  return TimeOfDayCondition2;\n})(TimeOfDayCondition || {});\nvar WeekdayCondition = ((WeekdayCondition2) => {\n  WeekdayCondition2[WeekdayCondition2[\"IsAfter\"] = Condition.IsAfter] = \"IsAfter\";\n  WeekdayCondition2[WeekdayCondition2[\"IsAfterOrEqual\"] = Condition.IsAfterOrEqual] = \"IsAfterOrEqual\";\n  WeekdayCondition2[WeekdayCondition2[\"IsBefore\"] = Condition.IsBefore] = \"IsBefore\";\n  WeekdayCondition2[WeekdayCondition2[\"IsBeforeOrEqual\"] = Condition.IsBeforeOrEqual] = \"IsBeforeOrEqual\";\n  WeekdayCondition2[WeekdayCondition2[\"IsBetween\"] = Condition.IsBetween] = \"IsBetween\";\n  WeekdayCondition2[WeekdayCondition2[\"IsEvenNumber\"] = Condition.IsEvenNumber] = \"IsEvenNumber\";\n  WeekdayCondition2[WeekdayCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  WeekdayCondition2[WeekdayCondition2[\"IsGreaterThan\"] = Condition.IsGreaterThan] = \"IsGreaterThan\";\n  WeekdayCondition2[WeekdayCondition2[\"IsGreaterThanOrEqual\"] = Condition.IsGreaterThanOrEqual] = \"IsGreaterThanOrEqual\";\n  WeekdayCondition2[WeekdayCondition2[\"IsLessThan\"] = Condition.IsLessThan] = \"IsLessThan\";\n  WeekdayCondition2[WeekdayCondition2[\"IsLessThanOrEqual\"] = Condition.IsLessThanOrEqual] = \"IsLessThanOrEqual\";\n  WeekdayCondition2[WeekdayCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  WeekdayCondition2[WeekdayCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  WeekdayCondition2[WeekdayCondition2[\"IsNumber\"] = Condition.IsNumber] = \"IsNumber\";\n  WeekdayCondition2[WeekdayCondition2[\"IsOddNumber\"] = Condition.IsOddNumber] = \"IsOddNumber\";\n  WeekdayCondition2[WeekdayCondition2[\"IsWeekday\"] = Condition.IsWeekday] = \"IsWeekday\";\n  WeekdayCondition2[WeekdayCondition2[\"IsWeekend\"] = Condition.IsWeekend] = \"IsWeekend\";\n  return WeekdayCondition2;\n})(WeekdayCondition || {});\nvar YearCondition = ((YearCondition2) => {\n  YearCondition2[YearCondition2[\"IsAfter\"] = Condition.IsAfter] = \"IsAfter\";\n  YearCondition2[YearCondition2[\"IsAfterOrEqual\"] = Condition.IsAfterOrEqual] = \"IsAfterOrEqual\";\n  YearCondition2[YearCondition2[\"IsBefore\"] = Condition.IsBefore] = \"IsBefore\";\n  YearCondition2[YearCondition2[\"IsBeforeOrEqual\"] = Condition.IsBeforeOrEqual] = \"IsBeforeOrEqual\";\n  YearCondition2[YearCondition2[\"IsBetween\"] = Condition.IsBetween] = \"IsBetween\";\n  YearCondition2[YearCondition2[\"IsEvenNumber\"] = Condition.IsEvenNumber] = \"IsEvenNumber\";\n  YearCondition2[YearCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  YearCondition2[YearCondition2[\"IsGreaterThan\"] = Condition.IsGreaterThan] = \"IsGreaterThan\";\n  YearCondition2[YearCondition2[\"IsGreaterThanOrEqual\"] = Condition.IsGreaterThanOrEqual] = \"IsGreaterThanOrEqual\";\n  YearCondition2[YearCondition2[\"IsInteger\"] = Condition.IsInteger] = \"IsInteger\";\n  YearCondition2[YearCondition2[\"IsLessThan\"] = Condition.IsLessThan] = \"IsLessThan\";\n  YearCondition2[YearCondition2[\"IsLessThanOrEqual\"] = Condition.IsLessThanOrEqual] = \"IsLessThanOrEqual\";\n  YearCondition2[YearCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  YearCondition2[YearCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  YearCondition2[YearCondition2[\"IsNumber\"] = Condition.IsNumber] = \"IsNumber\";\n  YearCondition2[YearCondition2[\"IsOddNumber\"] = Condition.IsOddNumber] = \"IsOddNumber\";\n  YearCondition2[YearCondition2[\"IsThisYear\"] = Condition.IsThisYear] = \"IsThisYear\";\n  YearCondition2[YearCondition2[\"IsYear\"] = Condition.IsYear] = \"IsYear\";\n  return YearCondition2;\n})(YearCondition || {});\n\nvar HexadecimalCondition = ((HexadecimalCondition2) => {\n  HexadecimalCondition2[HexadecimalCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  HexadecimalCondition2[HexadecimalCondition2[\"IsHexadecimal\"] = Condition.IsHexadecimal] = \"IsHexadecimal\";\n  HexadecimalCondition2[HexadecimalCondition2[\"IsLengthEqual\"] = Condition.IsLengthEqual] = \"IsLengthEqual\";\n  HexadecimalCondition2[HexadecimalCondition2[\"IsLengthGreaterThan\"] = Condition.IsLengthGreaterThan] = \"IsLengthGreaterThan\";\n  HexadecimalCondition2[HexadecimalCondition2[\"IsLengthGreaterThanOrEqual\"] = Condition.IsLengthGreaterThanOrEqual] = \"IsLengthGreaterThanOrEqual\";\n  HexadecimalCondition2[HexadecimalCondition2[\"IsLengthLessThan\"] = Condition.IsLengthLessThan] = \"IsLengthLessThan\";\n  HexadecimalCondition2[HexadecimalCondition2[\"IsLengthLessThanOrEqual\"] = Condition.IsLengthLessThanOrEqual] = \"IsLengthLessThanOrEqual\";\n  HexadecimalCondition2[HexadecimalCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  HexadecimalCondition2[HexadecimalCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  HexadecimalCondition2[HexadecimalCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return HexadecimalCondition2;\n})(HexadecimalCondition || {});\nvar JSONCondition = ((JSONCondition2) => {\n  JSONCondition2[JSONCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  JSONCondition2[JSONCondition2[\"IsJSON\"] = Condition.IsJSON] = \"IsJSON\";\n  JSONCondition2[JSONCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  JSONCondition2[JSONCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  return JSONCondition2;\n})(JSONCondition || {});\nvar MarkdownCondition = ((MarkdownCondition2) => {\n  MarkdownCondition2[MarkdownCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  MarkdownCondition2[MarkdownCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  MarkdownCondition2[MarkdownCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  MarkdownCondition2[MarkdownCondition2[\"IsMarkdown\"] = Condition.IsMarkdown] = \"IsMarkdown\";\n  MarkdownCondition2[MarkdownCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return MarkdownCondition2;\n})(MarkdownCondition || {});\n\nvar CurrencyCondition = ((CurrencyCondition2) => {\n  CurrencyCondition2[CurrencyCondition2[\"IsBetween\"] = Condition.IsBetween] = \"IsBetween\";\n  CurrencyCondition2[CurrencyCondition2[\"IsCurrency\"] = Condition.IsCurrency] = \"IsCurrency\";\n  CurrencyCondition2[CurrencyCondition2[\"IsDecimal\"] = Condition.IsDecimal] = \"IsDecimal\";\n  CurrencyCondition2[CurrencyCondition2[\"IsDivisibleBy\"] = Condition.IsDivisibleBy] = \"IsDivisibleBy\";\n  CurrencyCondition2[CurrencyCondition2[\"IsEvenNumber\"] = Condition.IsEvenNumber] = \"IsEvenNumber\";\n  CurrencyCondition2[CurrencyCondition2[\"IsFloat\"] = Condition.IsFloat] = \"IsFloat\";\n  CurrencyCondition2[CurrencyCondition2[\"IsGreaterThan\"] = Condition.IsGreaterThan] = \"IsGreaterThan\";\n  CurrencyCondition2[CurrencyCondition2[\"IsGreaterThanOrEqual\"] = Condition.IsGreaterThanOrEqual] = \"IsGreaterThanOrEqual\";\n  CurrencyCondition2[CurrencyCondition2[\"IsInteger\"] = Condition.IsInteger] = \"IsInteger\";\n  CurrencyCondition2[CurrencyCondition2[\"IsISO8601\"] = Condition.IsISO8601] = \"IsISO8601\";\n  CurrencyCondition2[CurrencyCondition2[\"IsLessThan\"] = Condition.IsLessThan] = \"IsLessThan\";\n  CurrencyCondition2[CurrencyCondition2[\"IsLessThanOrEqual\"] = Condition.IsLessThanOrEqual] = \"IsLessThanOrEqual\";\n  CurrencyCondition2[CurrencyCondition2[\"IsNegativeNumber\"] = Condition.IsNegativeNumber] = \"IsNegativeNumber\";\n  CurrencyCondition2[CurrencyCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  CurrencyCondition2[CurrencyCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  CurrencyCondition2[CurrencyCondition2[\"IsNumber\"] = Condition.IsNumber] = \"IsNumber\";\n  CurrencyCondition2[CurrencyCondition2[\"IsOddNumber\"] = Condition.IsOddNumber] = \"IsOddNumber\";\n  CurrencyCondition2[CurrencyCondition2[\"IsPositiveNumber\"] = Condition.IsPositiveNumber] = \"IsPositiveNumber\";\n  return CurrencyCondition2;\n})(CurrencyCondition || {});\nvar BitcoinAddressCondition = ((BitcoinAddressCondition2) => {\n  BitcoinAddressCondition2[BitcoinAddressCondition2[\"IsBitcoinAddress\"] = Condition.IsBitcoinAddress] = \"IsBitcoinAddress\";\n  BitcoinAddressCondition2[BitcoinAddressCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  BitcoinAddressCondition2[BitcoinAddressCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  BitcoinAddressCondition2[BitcoinAddressCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  return BitcoinAddressCondition2;\n})(BitcoinAddressCondition || {});\nvar EthereumAddressCondition = ((EthereumAddressCondition2) => {\n  EthereumAddressCondition2[EthereumAddressCondition2[\"IsEthereumAddress\"] = Condition.IsEthereumAddress] = \"IsEthereumAddress\";\n  EthereumAddressCondition2[EthereumAddressCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  EthereumAddressCondition2[EthereumAddressCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  EthereumAddressCondition2[EthereumAddressCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  return EthereumAddressCondition2;\n})(EthereumAddressCondition || {});\n\nvar LanguageCondition = ((LanguageCondition2) => {\n  LanguageCondition2[LanguageCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  LanguageCondition2[LanguageCondition2[\"IsJSON\"] = Condition.IsJSON] = \"IsJSON\";\n  LanguageCondition2[LanguageCondition2[\"IsLanguage\"] = Condition.IsLanguage] = \"IsLanguage\";\n  LanguageCondition2[LanguageCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  LanguageCondition2[LanguageCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  return LanguageCondition2;\n})(LanguageCondition || {});\n\nvar CityCondition = ((CityCondition2) => {\n  CityCondition2[CityCondition2[\"IsAlpha\"] = Condition.IsAlpha] = \"IsAlpha\";\n  CityCondition2[CityCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  CityCondition2[CityCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  CityCondition2[CityCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  CityCondition2[CityCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  CityCondition2[CityCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  CityCondition2[CityCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return CityCondition2;\n})(CityCondition || {});\nvar CountryCondition = ((CountryCondition2) => {\n  CountryCondition2[CountryCondition2[\"IsAlpha\"] = Condition.IsAlpha] = \"IsAlpha\";\n  CountryCondition2[CountryCondition2[\"IsCountry\"] = Condition.IsCountry] = \"IsCountry\";\n  CountryCondition2[CountryCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  CountryCondition2[CountryCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  CountryCondition2[CountryCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  CountryCondition2[CountryCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  CountryCondition2[CountryCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  CountryCondition2[CountryCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return CountryCondition2;\n})(CountryCondition || {});\nvar LatitudeCondition = ((LatitudeCondition2) => {\n  LatitudeCondition2[LatitudeCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  LatitudeCondition2[LatitudeCondition2[\"IsFloat\"] = Condition.IsFloat] = \"IsFloat\";\n  LatitudeCondition2[LatitudeCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  LatitudeCondition2[LatitudeCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  LatitudeCondition2[LatitudeCondition2[\"IsNumeric\"] = Condition.IsNumeric] = \"IsNumeric\";\n  return LatitudeCondition2;\n})(LatitudeCondition || {});\nvar LongitudeCondition = ((LongitudeCondition2) => {\n  LongitudeCondition2[LongitudeCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  LongitudeCondition2[LongitudeCondition2[\"IsFloat\"] = Condition.IsFloat] = \"IsFloat\";\n  LongitudeCondition2[LongitudeCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  LongitudeCondition2[LongitudeCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  LongitudeCondition2[LongitudeCondition2[\"IsNumeric\"] = Condition.IsNumeric] = \"IsNumeric\";\n  return LongitudeCondition2;\n})(LongitudeCondition || {});\nvar PostalCodeCondition = ((PostalCodeCondition2) => {\n  PostalCodeCondition2[PostalCodeCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  PostalCodeCondition2[PostalCodeCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  PostalCodeCondition2[PostalCodeCondition2[\"IsPostalCode\"] = Condition.IsPostalCode] = \"IsPostalCode\";\n  PostalCodeCondition2[PostalCodeCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  return PostalCodeCondition2;\n})(PostalCodeCondition || {});\nvar ProvinceCondition = ((ProvinceCondition2) => {\n  ProvinceCondition2[ProvinceCondition2[\"IsAlpha\"] = Condition.IsAlpha] = \"IsAlpha\";\n  ProvinceCondition2[ProvinceCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  ProvinceCondition2[ProvinceCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  ProvinceCondition2[ProvinceCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  ProvinceCondition2[ProvinceCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  ProvinceCondition2[ProvinceCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  ProvinceCondition2[ProvinceCondition2[\"IsProvince\"] = Condition.IsProvince] = \"IsProvince\";\n  ProvinceCondition2[ProvinceCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return ProvinceCondition2;\n})(ProvinceCondition || {});\nvar StateCondition = ((StateCondition2) => {\n  StateCondition2[StateCondition2[\"IsAlpha\"] = Condition.IsAlpha] = \"IsAlpha\";\n  StateCondition2[StateCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  StateCondition2[StateCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  StateCondition2[StateCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  StateCondition2[StateCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  StateCondition2[StateCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  StateCondition2[StateCondition2[\"IsState\"] = Condition.IsState] = \"IsState\";\n  StateCondition2[StateCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return StateCondition2;\n})(StateCondition || {});\nvar StreetAddressCondition = ((StreetAddressCondition2) => {\n  StreetAddressCondition2[StreetAddressCondition2[\"IsAlphanumeric\"] = Condition.IsAlphanumeric] = \"IsAlphanumeric\";\n  StreetAddressCondition2[StreetAddressCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  StreetAddressCondition2[StreetAddressCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  StreetAddressCondition2[StreetAddressCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  StreetAddressCondition2[StreetAddressCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  StreetAddressCondition2[StreetAddressCondition2[\"IsStreetAddress\"] = Condition.IsStreetAddress] = \"IsStreetAddress\";\n  return StreetAddressCondition2;\n})(StreetAddressCondition || {});\n\nvar MenuCondition = ((MenuCondition2) => {\n  MenuCondition2[MenuCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  MenuCondition2[MenuCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  MenuCondition2[MenuCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  MenuCondition2[MenuCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  return MenuCondition2;\n})(MenuCondition || {});\nvar TagsCondition = ((TagsCondition2) => {\n  TagsCondition2[TagsCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  TagsCondition2[TagsCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  TagsCondition2[TagsCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  TagsCondition2[TagsCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  return TagsCondition2;\n})(TagsCondition || {});\n\nvar DataURICondition = ((DataURICondition2) => {\n  DataURICondition2[DataURICondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  DataURICondition2[DataURICondition2[\"IsDataURI\"] = Condition.IsDataURI] = \"IsDataURI\";\n  DataURICondition2[DataURICondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  DataURICondition2[DataURICondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  DataURICondition2[DataURICondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  DataURICondition2[DataURICondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return DataURICondition2;\n})(DataURICondition || {});\nvar DomainNameCondition = ((DomainNameCondition2) => {\n  DomainNameCondition2[DomainNameCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  DomainNameCondition2[DomainNameCondition2[\"IsDomainName\"] = Condition.IsDomainName] = \"IsDomainName\";\n  DomainNameCondition2[DomainNameCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  DomainNameCondition2[DomainNameCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  DomainNameCondition2[DomainNameCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  DomainNameCondition2[DomainNameCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return DomainNameCondition2;\n})(DomainNameCondition || {});\nvar EmailCondition = ((EmailCondition2) => {\n  EmailCondition2[EmailCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  EmailCondition2[EmailCondition2[\"IsEmailAddress\"] = Condition.IsEmailAddress] = \"IsEmailAddress\";\n  EmailCondition2[EmailCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  EmailCondition2[EmailCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  EmailCondition2[EmailCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  EmailCondition2[EmailCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  EmailCondition2[EmailCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  EmailCondition2[EmailCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return EmailCondition2;\n})(EmailCondition || {});\nvar IPAddressCondition = ((IPAddressCondition2) => {\n  IPAddressCondition2[IPAddressCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  IPAddressCondition2[IPAddressCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  IPAddressCondition2[IPAddressCondition2[\"IsIPAddress\"] = Condition.IsIPAddress] = \"IsIPAddress\";\n  IPAddressCondition2[IPAddressCondition2[\"IsInIPAddressRange\"] = Condition.IsInIPAddressRange] = \"IsInIPAddressRange\";\n  IPAddressCondition2[IPAddressCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  IPAddressCondition2[IPAddressCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  IPAddressCondition2[IPAddressCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  IPAddressCondition2[IPAddressCondition2[\"IsNotInIPAddressRange\"] = Condition.IsNotInIPAddressRange] = \"IsNotInIPAddressRange\";\n  IPAddressCondition2[IPAddressCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  IPAddressCondition2[IPAddressCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return IPAddressCondition2;\n})(IPAddressCondition || {});\nvar IPAddressRangeCondition = ((IPAddressRangeCondition2) => {\n  IPAddressRangeCondition2[IPAddressRangeCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  IPAddressRangeCondition2[IPAddressRangeCondition2[\"IsIPAddressRange\"] = Condition.IsIPAddressRange] = \"IsIPAddressRange\";\n  IPAddressRangeCondition2[IPAddressRangeCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  IPAddressRangeCondition2[IPAddressRangeCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  IPAddressRangeCondition2[IPAddressRangeCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  IPAddressRangeCondition2[IPAddressRangeCondition2[\"IsNotInIPAddressRange\"] = Condition.IsNotInIPAddressRange] = \"IsNotInIPAddressRange\";\n  IPAddressRangeCondition2[IPAddressRangeCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  IPAddressRangeCondition2[IPAddressRangeCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return IPAddressRangeCondition2;\n})(IPAddressRangeCondition || {});\nvar PortCondition = ((PortCondition2) => {\n  PortCondition2[PortCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  PortCondition2[PortCondition2[\"IsGreaterThan\"] = Condition.IsGreaterThan] = \"IsGreaterThan\";\n  PortCondition2[PortCondition2[\"IsGreaterThanOrEqual\"] = Condition.IsGreaterThanOrEqual] = \"IsGreaterThanOrEqual\";\n  PortCondition2[PortCondition2[\"IsInteger\"] = Condition.IsInteger] = \"IsInteger\";\n  PortCondition2[PortCondition2[\"IsLessThan\"] = Condition.IsLessThan] = \"IsLessThan\";\n  PortCondition2[PortCondition2[\"IsLessThanOrEqual\"] = Condition.IsLessThanOrEqual] = \"IsLessThanOrEqual\";\n  PortCondition2[PortCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  PortCondition2[PortCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  return PortCondition2;\n})(PortCondition || {});\nvar MACAddressCondition = ((MACAddressCondition2) => {\n  MACAddressCondition2[MACAddressCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  MACAddressCondition2[MACAddressCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  MACAddressCondition2[MACAddressCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  MACAddressCondition2[MACAddressCondition2[\"IsMACAddress\"] = Condition.IsMACAddress] = \"IsMACAddress\";\n  MACAddressCondition2[MACAddressCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  MACAddressCondition2[MACAddressCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  MACAddressCondition2[MACAddressCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  MACAddressCondition2[MACAddressCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return MACAddressCondition2;\n})(MACAddressCondition || {});\nvar MagnetURICondition = ((MagnetURICondition2) => {\n  MagnetURICondition2[MagnetURICondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  MagnetURICondition2[MagnetURICondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  MagnetURICondition2[MagnetURICondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  MagnetURICondition2[MagnetURICondition2[\"IsMagnetURI\"] = Condition.IsMagnetURI] = \"IsMagnetURI\";\n  MagnetURICondition2[MagnetURICondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  MagnetURICondition2[MagnetURICondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  MagnetURICondition2[MagnetURICondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  MagnetURICondition2[MagnetURICondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return MagnetURICondition2;\n})(MagnetURICondition || {});\nvar MimeTypeCondition = ((MimeTypeCondition2) => {\n  MimeTypeCondition2[MimeTypeCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  MimeTypeCondition2[MimeTypeCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  MimeTypeCondition2[MimeTypeCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  MimeTypeCondition2[MimeTypeCondition2[\"IsMimeType\"] = Condition.IsMimeType] = \"IsMimeType\";\n  MimeTypeCondition2[MimeTypeCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  MimeTypeCondition2[MimeTypeCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  MimeTypeCondition2[MimeTypeCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  MimeTypeCondition2[MimeTypeCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return MimeTypeCondition2;\n})(MimeTypeCondition || {});\nvar SlugCondition = ((SlugCondition2) => {\n  SlugCondition2[SlugCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  SlugCondition2[SlugCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  SlugCondition2[SlugCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  SlugCondition2[SlugCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  SlugCondition2[SlugCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  SlugCondition2[SlugCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  SlugCondition2[SlugCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  SlugCondition2[SlugCondition2[\"IsSlug\"] = Condition.IsSlug] = \"IsSlug\";\n  return SlugCondition2;\n})(SlugCondition || {});\nvar URLCondition = ((URLCondition2) => {\n  URLCondition2[URLCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  URLCondition2[URLCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  URLCondition2[URLCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  URLCondition2[URLCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  URLCondition2[URLCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  URLCondition2[URLCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  URLCondition2[URLCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  URLCondition2[URLCondition2[\"IsURL\"] = Condition.IsURL] = \"IsURL\";\n  return URLCondition2;\n})(URLCondition || {});\n\nvar NumberCondition = ((NumberCondition2) => {\n  NumberCondition2[NumberCondition2[\"IsAfter\"] = Condition.IsAfter] = \"IsAfter\";\n  NumberCondition2[NumberCondition2[\"IsAfterOrEqual\"] = Condition.IsAfterOrEqual] = \"IsAfterOrEqual\";\n  NumberCondition2[NumberCondition2[\"IsBefore\"] = Condition.IsBefore] = \"IsBefore\";\n  NumberCondition2[NumberCondition2[\"IsBeforeOrEqual\"] = Condition.IsBeforeOrEqual] = \"IsBeforeOrEqual\";\n  NumberCondition2[NumberCondition2[\"IsBetween\"] = Condition.IsBetween] = \"IsBetween\";\n  NumberCondition2[NumberCondition2[\"IsDecimal\"] = Condition.IsDecimal] = \"IsDecimal\";\n  NumberCondition2[NumberCondition2[\"IsDivisibleBy\"] = Condition.IsDivisibleBy] = \"IsDivisibleBy\";\n  NumberCondition2[NumberCondition2[\"IsEAN\"] = Condition.IsEAN] = \"IsEAN\";\n  NumberCondition2[NumberCondition2[\"IsEIN\"] = Condition.IsEIN] = \"IsEIN\";\n  NumberCondition2[NumberCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  NumberCondition2[NumberCondition2[\"IsEvenNumber\"] = Condition.IsEvenNumber] = \"IsEvenNumber\";\n  NumberCondition2[NumberCondition2[\"IsFloat\"] = Condition.IsFloat] = \"IsFloat\";\n  NumberCondition2[NumberCondition2[\"IsGreaterThan\"] = Condition.IsGreaterThan] = \"IsGreaterThan\";\n  NumberCondition2[NumberCondition2[\"IsGreaterThanOrEqual\"] = Condition.IsGreaterThanOrEqual] = \"IsGreaterThanOrEqual\";\n  NumberCondition2[NumberCondition2[\"IsInt\"] = Condition.IsInteger] = \"IsInt\";\n  NumberCondition2[NumberCondition2[\"IsISBN\"] = Condition.IsISBN] = \"IsISBN\";\n  NumberCondition2[NumberCondition2[\"IsISMN\"] = Condition.IsISMN] = \"IsISMN\";\n  NumberCondition2[NumberCondition2[\"IsISSN\"] = Condition.IsISSN] = \"IsISSN\";\n  NumberCondition2[NumberCondition2[\"IsLatitude\"] = Condition.IsLatitude] = \"IsLatitude\";\n  NumberCondition2[NumberCondition2[\"IsLongitude\"] = Condition.IsLongitude] = \"IsLongitude\";\n  NumberCondition2[NumberCondition2[\"IsLessThan\"] = Condition.IsLessThan] = \"IsLessThan\";\n  NumberCondition2[NumberCondition2[\"IsLessThanOrEqual\"] = Condition.IsLessThanOrEqual] = \"IsLessThanOrEqual\";\n  NumberCondition2[NumberCondition2[\"IsMACAddress\"] = Condition.IsMACAddress] = \"IsMACAddress\";\n  NumberCondition2[NumberCondition2[\"IsNumber\"] = Condition.IsNumber] = \"IsNumber\";\n  NumberCondition2[NumberCondition2[\"IsNegativeNumber\"] = Condition.IsNegativeNumber] = \"IsNegativeNumber\";\n  NumberCondition2[NumberCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  NumberCondition2[NumberCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  NumberCondition2[NumberCondition2[\"IsOddNumber\"] = Condition.IsOddNumber] = \"IsOddNumber\";\n  NumberCondition2[NumberCondition2[\"IsPassportNumber\"] = Condition.IsPassportNumber] = \"IsPassportNumber\";\n  NumberCondition2[NumberCondition2[\"IsPhoneNumber\"] = Condition.IsPhoneNumber] = \"IsPhoneNumber\";\n  NumberCondition2[NumberCondition2[\"IsPort\"] = Condition.IsPort] = \"IsPort\";\n  NumberCondition2[NumberCondition2[\"IsPositiveNumber\"] = Condition.IsPositiveNumber] = \"IsPositiveNumber\";\n  NumberCondition2[NumberCondition2[\"IsPostalCode\"] = Condition.IsPostalCode] = \"IsPostalCode\";\n  NumberCondition2[NumberCondition2[\"IsSemanticVersion\"] = Condition.IsSemanticVersion] = \"IsSemanticVersion\";\n  NumberCondition2[NumberCondition2[\"IsSSN\"] = Condition.IsSSN] = \"IsSSN\";\n  NumberCondition2[NumberCondition2[\"IsTaxIDNumber\"] = Condition.IsTaxIDNumber] = \"IsTaxIDNumber\";\n  NumberCondition2[NumberCondition2[\"IsUUID\"] = Condition.IsUUID] = \"IsUUID\";\n  NumberCondition2[NumberCondition2[\"IsVATIDNumber\"] = Condition.IsVATIDNumber] = \"IsVATIDNumber\";\n  return NumberCondition2;\n})(NumberCondition || {});\nvar FloatCondition = ((FloatCondition2) => {\n  FloatCondition2[FloatCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  FloatCondition2[FloatCondition2[\"IsFloat\"] = Condition.IsFloat] = \"IsFloat\";\n  FloatCondition2[FloatCondition2[\"IsGreaterThan\"] = Condition.IsGreaterThan] = \"IsGreaterThan\";\n  FloatCondition2[FloatCondition2[\"IsGreaterThanOrEqual\"] = Condition.IsGreaterThanOrEqual] = \"IsGreaterThanOrEqual\";\n  FloatCondition2[FloatCondition2[\"IsLessThan\"] = Condition.IsLessThan] = \"IsLessThan\";\n  FloatCondition2[FloatCondition2[\"IsLessThanOrEqual\"] = Condition.IsLessThanOrEqual] = \"IsLessThanOrEqual\";\n  FloatCondition2[FloatCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  FloatCondition2[FloatCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  FloatCondition2[FloatCondition2[\"IsNumber\"] = Condition.IsNumber] = \"IsNumber\";\n  FloatCondition2[FloatCondition2[\"IsNumeric\"] = Condition.IsNumeric] = \"IsNumeric\";\n  return FloatCondition2;\n})(FloatCondition || {});\nvar IntegerCondition = ((IntegerCondition2) => {\n  IntegerCondition2[IntegerCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  IntegerCondition2[IntegerCondition2[\"IsInteger\"] = Condition.IsInteger] = \"IsInteger\";\n  IntegerCondition2[IntegerCondition2[\"IsGreaterThan\"] = Condition.IsGreaterThan] = \"IsGreaterThan\";\n  IntegerCondition2[IntegerCondition2[\"IsGreaterThanOrEqual\"] = Condition.IsGreaterThanOrEqual] = \"IsGreaterThanOrEqual\";\n  IntegerCondition2[IntegerCondition2[\"IsLessThan\"] = Condition.IsLessThan] = \"IsLessThan\";\n  IntegerCondition2[IntegerCondition2[\"IsLessThanOrEqual\"] = Condition.IsLessThanOrEqual] = \"IsLessThanOrEqual\";\n  IntegerCondition2[IntegerCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  IntegerCondition2[IntegerCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  IntegerCondition2[IntegerCondition2[\"IsNumber\"] = Condition.IsNumber] = \"IsNumber\";\n  IntegerCondition2[IntegerCondition2[\"IsNumeric\"] = Condition.IsNumeric] = \"IsNumeric\";\n  return IntegerCondition2;\n})(IntegerCondition || {});\n\nvar CreditCardCondition = ((CreditCardCondition2) => {\n  CreditCardCondition2[CreditCardCondition2[\"IsCreditCard\"] = Condition.IsCreditCard] = \"IsCreditCard\";\n  CreditCardCondition2[CreditCardCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  CreditCardCondition2[CreditCardCondition2[\"IsLengthEqual\"] = Condition.IsLengthEqual] = \"IsLengthEqual\";\n  CreditCardCondition2[CreditCardCondition2[\"IsLengthGreaterThan\"] = Condition.IsLengthGreaterThan] = \"IsLengthGreaterThan\";\n  CreditCardCondition2[CreditCardCondition2[\"IsLengthGreaterThanOrEqual\"] = Condition.IsLengthGreaterThanOrEqual] = \"IsLengthGreaterThanOrEqual\";\n  CreditCardCondition2[CreditCardCondition2[\"IsLengthLessThan\"] = Condition.IsLengthLessThan] = \"IsLengthLessThan\";\n  CreditCardCondition2[CreditCardCondition2[\"IsLengthLessThanOrEqual\"] = Condition.IsLengthLessThanOrEqual] = \"IsLengthLessThanOrEqual\";\n  CreditCardCondition2[CreditCardCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  CreditCardCondition2[CreditCardCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  CreditCardCondition2[CreditCardCondition2[\"IsRegexMatch\"] = Condition.IsRegexMatch] = \"IsRegexMatch\";\n  CreditCardCondition2[CreditCardCondition2[\"IsNotRegexMatch\"] = Condition.IsNotRegexMatch] = \"IsNotRegexMatch\";\n  return CreditCardCondition2;\n})(CreditCardCondition || {});\nvar EmailAddressCondition = ((EmailAddressCondition2) => {\n  EmailAddressCondition2[EmailAddressCondition2[\"isEmailAddress\"] = Condition.IsEmailAddress] = \"isEmailAddress\";\n  EmailAddressCondition2[EmailAddressCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  EmailAddressCondition2[EmailAddressCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  EmailAddressCondition2[EmailAddressCondition2[\"IsLengthEqual\"] = Condition.IsLengthEqual] = \"IsLengthEqual\";\n  EmailAddressCondition2[EmailAddressCondition2[\"IsLengthGreaterThan\"] = Condition.IsLengthGreaterThan] = \"IsLengthGreaterThan\";\n  EmailAddressCondition2[EmailAddressCondition2[\"IsLengthGreaterThanOrEqual\"] = Condition.IsLengthGreaterThanOrEqual] = \"IsLengthGreaterThanOrEqual\";\n  EmailAddressCondition2[EmailAddressCondition2[\"IsLengthLessThan\"] = Condition.IsLengthLessThan] = \"IsLengthLessThan\";\n  EmailAddressCondition2[EmailAddressCondition2[\"IsLengthLessThanOrEqual\"] = Condition.IsLengthLessThanOrEqual] = \"IsLengthLessThanOrEqual\";\n  EmailAddressCondition2[EmailAddressCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  EmailAddressCondition2[EmailAddressCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  EmailAddressCondition2[EmailAddressCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  EmailAddressCondition2[EmailAddressCondition2[\"IsRegexMatch\"] = Condition.IsRegexMatch] = \"IsRegexMatch\";\n  EmailAddressCondition2[EmailAddressCondition2[\"IsNotRegexMatch\"] = Condition.IsNotRegexMatch] = \"IsNotRegexMatch\";\n  return EmailAddressCondition2;\n})(EmailAddressCondition || {});\nvar LicensePlateNumber = ((LicensePlateNumber2) => {\n  LicensePlateNumber2[LicensePlateNumber2[\"IsLicensePlateNumber\"] = Condition.IsLicensePlateNumber] = \"IsLicensePlateNumber\";\n  LicensePlateNumber2[LicensePlateNumber2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  LicensePlateNumber2[LicensePlateNumber2[\"IsNotRegexMatch\"] = Condition.IsNotRegexMatch] = \"IsNotRegexMatch\";\n  LicensePlateNumber2[LicensePlateNumber2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  LicensePlateNumber2[LicensePlateNumber2[\"IsRegexMatch\"] = Condition.IsRegexMatch] = \"IsRegexMatch\";\n  return LicensePlateNumber2;\n})(LicensePlateNumber || {});\nvar PassportNumberCondition = ((PassportNumberCondition2) => {\n  PassportNumberCondition2[PassportNumberCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  PassportNumberCondition2[PassportNumberCondition2[\"IsPassportNumber\"] = Condition.IsPassportNumber] = \"IsPassportNumber\";\n  PassportNumberCondition2[PassportNumberCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  PassportNumberCondition2[PassportNumberCondition2[\"IsRegexMatch\"] = Condition.IsRegexMatch] = \"IsRegexMatch\";\n  return PassportNumberCondition2;\n})(PassportNumberCondition || {});\nvar PasswordCondition = ((PasswordCondition2) => {\n  PasswordCondition2[PasswordCondition2[\"IsComplexEnough\"] = Condition.IsComplexEnough] = \"IsComplexEnough\";\n  PasswordCondition2[PasswordCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  PasswordCondition2[PasswordCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  PasswordCondition2[PasswordCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  PasswordCondition2[PasswordCondition2[\"IsNotRegexMatch\"] = Condition.IsNotRegexMatch] = \"IsNotRegexMatch\";\n  PasswordCondition2[PasswordCondition2[\"IsLengthGreaterThan\"] = Condition.IsLengthGreaterThan] = \"IsLengthGreaterThan\";\n  PasswordCondition2[PasswordCondition2[\"IsLengthGreaterThanOrEqual\"] = Condition.IsLengthGreaterThanOrEqual] = \"IsLengthGreaterThanOrEqual\";\n  PasswordCondition2[PasswordCondition2[\"IsLengthLessThan\"] = Condition.IsLengthLessThan] = \"IsLengthLessThan\";\n  PasswordCondition2[PasswordCondition2[\"IsLengthLessThanOrEqual\"] = Condition.IsLengthLessThanOrEqual] = \"IsLengthLessThanOrEqual\";\n  PasswordCondition2[PasswordCondition2[\"IsStrongPassword\"] = Condition.IsStrongPassword] = \"IsStrongPassword\";\n  PasswordCondition2[PasswordCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  PasswordCondition2[PasswordCondition2[\"IsRegexMatch\"] = Condition.IsRegexMatch] = \"IsRegexMatch\";\n  return PasswordCondition2;\n})(PasswordCondition || {});\nvar PhoneNumberCondition = ((PhoneNumberCondition2) => {\n  PhoneNumberCondition2[PhoneNumberCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  PhoneNumberCondition2[PhoneNumberCondition2[\"IsNotRegexMatch\"] = Condition.IsNotRegexMatch] = \"IsNotRegexMatch\";\n  PhoneNumberCondition2[PhoneNumberCondition2[\"IsNumber\"] = Condition.IsNumber] = \"IsNumber\";\n  PhoneNumberCondition2[PhoneNumberCondition2[\"IsPhoneNumber\"] = Condition.IsPhoneNumber] = \"IsPhoneNumber\";\n  PhoneNumberCondition2[PhoneNumberCondition2[\"IsRegexMatch\"] = Condition.IsRegexMatch] = \"IsRegexMatch\";\n  return PhoneNumberCondition2;\n})(PhoneNumberCondition || {});\nvar SocialSecurityNumberCondition = ((SocialSecurityNumberCondition2) => {\n  SocialSecurityNumberCondition2[SocialSecurityNumberCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  SocialSecurityNumberCondition2[SocialSecurityNumberCondition2[\"IsSSN\"] = Condition.IsSSN] = \"IsSSN\";\n  SocialSecurityNumberCondition2[SocialSecurityNumberCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  SocialSecurityNumberCondition2[SocialSecurityNumberCondition2[\"IsRegexMatch\"] = Condition.IsRegexMatch] = \"IsRegexMatch\";\n  return SocialSecurityNumberCondition2;\n})(SocialSecurityNumberCondition || {});\n\nvar AirportCondition = ((AirportCondition2) => {\n  AirportCondition2[AirportCondition2[\"IsAirport\"] = Condition.IsAirport] = \"IsAirport\";\n  AirportCondition2[AirportCondition2[\"IsAlpha\"] = Condition.IsAlpha] = \"IsAlpha\";\n  AirportCondition2[AirportCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  AirportCondition2[AirportCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  AirportCondition2[AirportCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  AirportCondition2[AirportCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  AirportCondition2[AirportCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  AirportCondition2[AirportCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return AirportCondition2;\n})(AirportCondition || {});\n\nvar BICCondition = ((BICCondition2) => {\n  BICCondition2[BICCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  BICCondition2[BICCondition2[\"IsBIC\"] = Condition.IsBIC] = \"IsBIC\";\n  BICCondition2[BICCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  BICCondition2[BICCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  BICCondition2[BICCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  BICCondition2[BICCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  BICCondition2[BICCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  BICCondition2[BICCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return BICCondition2;\n})(BICCondition || {});\nvar EANCondition = ((EANCondition2) => {\n  EANCondition2[EANCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  EANCondition2[EANCondition2[\"IsEAN\"] = Condition.IsEAN] = \"IsEAN\";\n  EANCondition2[EANCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  EANCondition2[EANCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  EANCondition2[EANCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  EANCondition2[EANCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  EANCondition2[EANCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  EANCondition2[EANCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return EANCondition2;\n})(EANCondition || {});\nvar EINCondition = ((EINCondition2) => {\n  EINCondition2[EINCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  EINCondition2[EINCondition2[\"IsEIN\"] = Condition.IsEIN] = \"IsEIN\";\n  EINCondition2[EINCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  EINCondition2[EINCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  EINCondition2[EINCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  EINCondition2[EINCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  EINCondition2[EINCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  EINCondition2[EINCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return EINCondition2;\n})(EINCondition || {});\nvar IBANCondition = ((IBANCondition2) => {\n  IBANCondition2[IBANCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  IBANCondition2[IBANCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  IBANCondition2[IBANCondition2[\"IsIBAN\"] = Condition.IsIBAN] = \"IsIBAN\";\n  IBANCondition2[IBANCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  IBANCondition2[IBANCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  IBANCondition2[IBANCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  IBANCondition2[IBANCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  IBANCondition2[IBANCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return IBANCondition2;\n})(IBANCondition || {});\nvar ISBNCondition = ((ISBNCondition2) => {\n  ISBNCondition2[ISBNCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  ISBNCondition2[ISBNCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  ISBNCondition2[ISBNCondition2[\"IsISBN\"] = Condition.IsISBN] = \"IsISBN\";\n  ISBNCondition2[ISBNCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  ISBNCondition2[ISBNCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  ISBNCondition2[ISBNCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  ISBNCondition2[ISBNCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  ISBNCondition2[ISBNCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return ISBNCondition2;\n})(ISBNCondition || {});\nvar ISINCondition = ((ISINCondition2) => {\n  ISINCondition2[ISINCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  ISINCondition2[ISINCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  ISINCondition2[ISINCondition2[\"IsISIN\"] = Condition.IsISIN] = \"IsISIN\";\n  ISINCondition2[ISINCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  ISINCondition2[ISINCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  ISINCondition2[ISINCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  ISINCondition2[ISINCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  ISINCondition2[ISINCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return ISINCondition2;\n})(ISINCondition || {});\nvar ISMNCondition = ((ISMNCondition2) => {\n  ISMNCondition2[ISMNCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  ISMNCondition2[ISMNCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  ISMNCondition2[ISMNCondition2[\"IsISMN\"] = Condition.IsISMN] = \"IsISMN\";\n  ISMNCondition2[ISMNCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  ISMNCondition2[ISMNCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  ISMNCondition2[ISMNCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  ISMNCondition2[ISMNCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  ISMNCondition2[ISMNCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return ISMNCondition2;\n})(ISMNCondition || {});\nvar ISSNCondition = ((ISSNCondition2) => {\n  ISSNCondition2[ISSNCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  ISSNCondition2[ISSNCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  ISSNCondition2[ISSNCondition2[\"IsISSN\"] = Condition.IsISSN] = \"IsISSN\";\n  ISSNCondition2[ISSNCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  ISSNCondition2[ISSNCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  ISSNCondition2[ISSNCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  ISSNCondition2[ISSNCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  ISSNCondition2[ISSNCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  return ISSNCondition2;\n})(ISSNCondition || {});\nvar TaxIDNumberCondition = ((TaxIDNumberCondition2) => {\n  TaxIDNumberCondition2[TaxIDNumberCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  TaxIDNumberCondition2[TaxIDNumberCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  TaxIDNumberCondition2[TaxIDNumberCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  TaxIDNumberCondition2[TaxIDNumberCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  TaxIDNumberCondition2[TaxIDNumberCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  TaxIDNumberCondition2[TaxIDNumberCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  TaxIDNumberCondition2[TaxIDNumberCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  TaxIDNumberCondition2[TaxIDNumberCondition2[\"IsTaxIDNumber\"] = Condition.IsTaxIDNumber] = \"IsTaxIDNumber\";\n  return TaxIDNumberCondition2;\n})(TaxIDNumberCondition || {});\nvar VATCondition = ((VATCondition2) => {\n  VATCondition2[VATCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  VATCondition2[VATCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  VATCondition2[VATCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  VATCondition2[VATCondition2[\"IsNotEqual\"] = Condition.IsNotEqual] = \"IsNotEqual\";\n  VATCondition2[VATCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  VATCondition2[VATCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  VATCondition2[VATCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  VATCondition2[VATCondition2[\"IsVATIDNumber\"] = Condition.IsVATIDNumber] = \"IsVATIDNumber\";\n  return VATCondition2;\n})(VATCondition || {});\n\nvar StringCondition = ((StringCondition2) => {\n  StringCondition2[StringCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  StringCondition2[StringCondition2[\"HasNumberCount\"] = Condition.HasNumberCount] = \"HasNumberCount\";\n  StringCondition2[StringCondition2[\"HasLowercaseCount\"] = Condition.HasLowercaseCount] = \"HasLowercaseCount\";\n  StringCondition2[StringCondition2[\"HasLetterCount\"] = Condition.HasLetterCount] = \"HasLetterCount\";\n  StringCondition2[StringCondition2[\"HasSpacesCount\"] = Condition.HasSpacesCount] = \"HasSpacesCount\";\n  StringCondition2[StringCondition2[\"HasSymbolCount\"] = Condition.HasSymbolCount] = \"HasSymbolCount\";\n  StringCondition2[StringCondition2[\"HasUppercaseCount\"] = Condition.HasUppercaseCount] = \"HasUppercaseCount\";\n  StringCondition2[StringCondition2[\"IsAlpha\"] = Condition.IsAlpha] = \"IsAlpha\";\n  StringCondition2[StringCondition2[\"IsAlphanumeric\"] = Condition.IsAlphanumeric] = \"IsAlphanumeric\";\n  StringCondition2[StringCondition2[\"IsAscii\"] = Condition.IsAscii] = \"IsAscii\";\n  StringCondition2[StringCondition2[\"IsBase64\"] = Condition.IsBase64] = \"IsBase64\";\n  StringCondition2[StringCondition2[\"IsColor\"] = Condition.IsColor] = \"IsColor\";\n  StringCondition2[StringCondition2[\"IsComplexEnough\"] = Condition.IsComplexEnough] = \"IsComplexEnough\";\n  StringCondition2[StringCondition2[\"IsCreditCard\"] = Condition.IsCreditCard] = \"IsCreditCard\";\n  StringCondition2[StringCondition2[\"IsDataURI\"] = Condition.IsDataURI] = \"IsDataURI\";\n  StringCondition2[StringCondition2[\"IsDomainName\"] = Condition.IsDomainName] = \"IsDomainName\";\n  StringCondition2[StringCondition2[\"IsEmailAddress\"] = Condition.IsEmailAddress] = \"IsEmailAddress\";\n  StringCondition2[StringCondition2[\"IsEthereumAddress\"] = Condition.IsEthereumAddress] = \"IsEthereumAddress\";\n  StringCondition2[StringCondition2[\"IsEAN\"] = Condition.IsEAN] = \"IsEAN\";\n  StringCondition2[StringCondition2[\"IsEIN\"] = Condition.IsEIN] = \"IsEIN\";\n  StringCondition2[StringCondition2[\"IsEqual\"] = Condition.IsEqual] = \"IsEqual\";\n  StringCondition2[StringCondition2[\"IsIBAN\"] = Condition.IsIBAN] = \"IsIBAN\";\n  StringCondition2[StringCondition2[\"IsHSLColor\"] = Condition.IsHSLColor] = \"IsHSLColor\";\n  StringCondition2[StringCondition2[\"IsHexColor\"] = Condition.IsHexColor] = \"IsHexColor\";\n  StringCondition2[StringCondition2[\"IsHexadecimal\"] = Condition.IsHexadecimal] = \"IsHexadecimal\";\n  StringCondition2[StringCondition2[\"IsIdentityCardCode\"] = Condition.IsIdentityCardCode] = \"IsIdentityCardCode\";\n  StringCondition2[StringCondition2[\"IsIMEI\"] = Condition.IsIMEI] = \"IsIMEI\";\n  StringCondition2[StringCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  StringCondition2[StringCondition2[\"IsIPAddress\"] = Condition.IsIPAddress] = \"IsIPAddress\";\n  StringCondition2[StringCondition2[\"IsInIPAddressRange\"] = Condition.IsInIPAddressRange] = \"IsInIPAddressRange\";\n  StringCondition2[StringCondition2[\"IsISBN\"] = Condition.IsISBN] = \"IsISBN\";\n  StringCondition2[StringCondition2[\"IsISIN\"] = Condition.IsISIN] = \"IsISIN\";\n  StringCondition2[StringCondition2[\"IsISMN\"] = Condition.IsISMN] = \"IsISMN\";\n  StringCondition2[StringCondition2[\"IsISRC\"] = Condition.IsISRC] = \"IsISRC\";\n  StringCondition2[StringCondition2[\"IsISSN\"] = Condition.IsISSN] = \"IsISSN\";\n  StringCondition2[StringCondition2[\"IsLanguage\"] = Condition.IsLanguage] = \"IsLanguage\";\n  StringCondition2[StringCondition2[\"IsLatitude\"] = Condition.IsLatitude] = \"IsLatitude\";\n  StringCondition2[StringCondition2[\"IsLongitude\"] = Condition.IsLongitude] = \"IsLongitude\";\n  StringCondition2[StringCondition2[\"IsLengthEqual\"] = Condition.IsLengthEqual] = \"IsLengthEqual\";\n  StringCondition2[StringCondition2[\"IsLengthGreaterThan\"] = Condition.IsLengthGreaterThan] = \"IsLengthGreaterThan\";\n  StringCondition2[StringCondition2[\"IsLengthGreaterThanOrEqual\"] = Condition.IsLengthGreaterThanOrEqual] = \"IsLengthGreaterThanOrEqual\";\n  StringCondition2[StringCondition2[\"IsLengthLessThan\"] = Condition.IsLengthLessThan] = \"IsLengthLessThan\";\n  StringCondition2[StringCondition2[\"IsLengthLessThanOrEqual\"] = Condition.IsLengthLessThanOrEqual] = \"IsLengthLessThanOrEqual\";\n  StringCondition2[StringCondition2[\"IsLicensePlateNumber\"] = Condition.IsLicensePlateNumber] = \"IsLicensePlateNumber\";\n  StringCondition2[StringCondition2[\"IsLowercase\"] = Condition.IsLowercase] = \"IsLowercase\";\n  StringCondition2[StringCondition2[\"IsOctal\"] = Condition.IsOctal] = \"IsOctal\";\n  StringCondition2[StringCondition2[\"IsMACAddress\"] = Condition.IsMACAddress] = \"IsMACAddress\";\n  StringCondition2[StringCondition2[\"IsMD5\"] = Condition.IsMD5] = \"IsMD5\";\n  StringCondition2[StringCondition2[\"IsMagnetURI\"] = Condition.IsMagnetURI] = \"IsMagnetURI\";\n  StringCondition2[StringCondition2[\"IsMarkdown\"] = Condition.IsMarkdown] = \"IsMarkdown\";\n  StringCondition2[StringCondition2[\"IsMimeType\"] = Condition.IsMimeType] = \"IsMimeType\";\n  StringCondition2[StringCondition2[\"IsMonth\"] = Condition.IsMonth] = \"IsMonth\";\n  StringCondition2[StringCondition2[\"IsNotInIPAddressRange\"] = Condition.IsNotInIPAddressRange] = \"IsNotInIPAddressRange\";\n  StringCondition2[StringCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  StringCondition2[StringCondition2[\"IsNotNull\"] = Condition.IsNotNull] = \"IsNotNull\";\n  StringCondition2[StringCondition2[\"IsNotRegexMatch\"] = Condition.IsNotRegexMatch] = \"IsNotRegexMatch\";\n  StringCondition2[StringCondition2[\"IsNumber\"] = Condition.IsNumber] = \"IsNumber\";\n  StringCondition2[StringCondition2[\"IsNumeric\"] = Condition.IsNumeric] = \"IsNumeric\";\n  StringCondition2[StringCondition2[\"IsPassportNumber\"] = Condition.IsPassportNumber] = \"IsPassportNumber\";\n  StringCondition2[StringCondition2[\"IsPhoneNumber\"] = Condition.IsPhoneNumber] = \"IsPhoneNumber\";\n  StringCondition2[StringCondition2[\"IsPort\"] = Condition.IsPort] = \"IsPort\";\n  StringCondition2[StringCondition2[\"IsPostalCode\"] = Condition.IsPostalCode] = \"IsPostalCode\";\n  StringCondition2[StringCondition2[\"IsProvince\"] = Condition.IsProvince] = \"IsProvince\";\n  StringCondition2[StringCondition2[\"IsRegexMatch\"] = Condition.IsRegexMatch] = \"IsRegexMatch\";\n  StringCondition2[StringCondition2[\"IsSemanticVersion\"] = Condition.IsSemanticVersion] = \"IsSemanticVersion\";\n  StringCondition2[StringCondition2[\"IsSlug\"] = Condition.IsSlug] = \"IsSlug\";\n  StringCondition2[StringCondition2[\"IsSSN\"] = Condition.IsSSN] = \"IsSSN\";\n  StringCondition2[StringCondition2[\"IsState\"] = Condition.IsState] = \"IsState\";\n  StringCondition2[StringCondition2[\"IsStreetAddress\"] = Condition.IsStreetAddress] = \"IsStreetAddress\";\n  StringCondition2[StringCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  StringCondition2[StringCondition2[\"IsTaxIDNumber\"] = Condition.IsTaxIDNumber] = \"IsTaxIDNumber\";\n  StringCondition2[StringCondition2[\"IsURL\"] = Condition.IsURL] = \"IsURL\";\n  StringCondition2[StringCondition2[\"IsUUID\"] = Condition.IsUUID] = \"IsUUID\";\n  StringCondition2[StringCondition2[\"IsUppercase\"] = Condition.IsUppercase] = \"IsUppercase\";\n  StringCondition2[StringCondition2[\"IsVATIDNumber\"] = Condition.IsVATIDNumber] = \"IsVATIDNumber\";\n  StringCondition2[StringCondition2[\"IsWeekday\"] = Condition.IsWeekday] = \"IsWeekday\";\n  StringCondition2[StringCondition2[\"IsWeekend\"] = Condition.IsWeekend] = \"IsWeekend\";\n  StringCondition2[StringCondition2[\"IsYear\"] = Condition.IsYear] = \"IsYear\";\n  return StringCondition2;\n})(StringCondition || {});\nvar LongTextCondition = ((LongTextCondition2) => {\n  LongTextCondition2[LongTextCondition2[\"Contains\"] = Condition.Contains] = \"Contains\";\n  LongTextCondition2[LongTextCondition2[\"IsAlpha\"] = Condition.IsAlpha] = \"IsAlpha\";\n  LongTextCondition2[LongTextCondition2[\"IsAlphanumeric\"] = Condition.IsAlphanumeric] = \"IsAlphanumeric\";\n  LongTextCondition2[LongTextCondition2[\"IsInList\"] = Condition.IsInList] = \"IsInList\";\n  LongTextCondition2[LongTextCondition2[\"IsMarkdown\"] = Condition.IsMarkdown] = \"IsMarkdown\";\n  LongTextCondition2[LongTextCondition2[\"IsNotInList\"] = Condition.IsNotInList] = \"IsNotInList\";\n  LongTextCondition2[LongTextCondition2[\"IsNumeric\"] = Condition.IsNumeric] = \"IsNumeric\";\n  LongTextCondition2[LongTextCondition2[\"IsLowercase\"] = Condition.IsLowercase] = \"IsLowercase\";\n  LongTextCondition2[LongTextCondition2[\"IsString\"] = Condition.IsString] = \"IsString\";\n  LongTextCondition2[LongTextCondition2[\"IsUppercase\"] = Condition.IsUppercase] = \"IsUppercase\";\n  return LongTextCondition2;\n})(LongTextCondition || {});\n\nvar Privilege = /* @__PURE__ */ ((Privilege2) => {\n  Privilege2[Privilege2[\"Allowed\"] = 0] = \"Allowed\";\n  Privilege2[Privilege2[\"Blocked\"] = 1] = \"Blocked\";\n  return Privilege2;\n})(Privilege || {});\n\nvar FormValidationProblem = /* @__PURE__ */ ((FormValidationProblem2) => {\n  FormValidationProblem2[\"InvalidCharacters\"] = \"invalid-characters\";\n  FormValidationProblem2[\"InvalidPattern\"] = \"invalid-pattern\";\n  FormValidationProblem2[\"NotComplexEnough\"] = \"not-complex-enough\";\n  FormValidationProblem2[\"NotUnique\"] = \"not-unique\";\n  FormValidationProblem2[\"NotValidEmail\"] = \"not-valid-email\";\n  FormValidationProblem2[\"TooLong\"] = \"too-long\";\n  FormValidationProblem2[\"TooShort\"] = \"too-short\";\n  FormValidationProblem2[\"Required\"] = \"required\";\n  return FormValidationProblem2;\n})(FormValidationProblem || {});\n\nvar TestTool = /* @__PURE__ */ ((TestTool2) => {\n  TestTool2[\"Ava\"] = \"ava\";\n  TestTool2[\"Jest\"] = \"jest\";\n  return TestTool2;\n})(TestTool || {});\nvar TestReporter = /* @__PURE__ */ ((TestReporter2) => {\n  TestReporter2[\"Clover\"] = \"clover\";\n  TestReporter2[\"Cobertura\"] = \"cobertura\";\n  TestReporter2[\"HTML\"] = \"html\";\n  TestReporter2[\"JSONSummary\"] = \"json-summary\";\n  TestReporter2[\"JSON\"] = \"json\";\n  TestReporter2[\"Lcov\"] = \"lcov\";\n  TestReporter2[\"Lcovonly\"] = \"lcovonly\";\n  TestReporter2[\"None\"] = \"none\";\n  TestReporter2[\"TeamCity\"] = \"teamcity\";\n  TestReporter2[\"TextLcov\"] = \"text-lcov\";\n  TestReporter2[\"TextSummary\"] = \"text-summary\";\n  TestReporter2[\"Text\"] = \"text\";\n  return TestReporter2;\n})(TestReporter || {});\n\nvar UserVerificationStatus = /* @__PURE__ */ ((UserVerificationStatus2) => {\n  UserVerificationStatus2[\"Archived\"] = \"ARCHIVED\";\n  UserVerificationStatus2[\"Compromised\"] = \"COMPROMISED\";\n  UserVerificationStatus2[\"Confirmed\"] = \"CONFIRMED\";\n  UserVerificationStatus2[\"ForcePasswordChange\"] = \"FORCE_CHANGE_PASSWORD\";\n  UserVerificationStatus2[\"ResetRequired\"] = \"RESET_REQUIRED\";\n  UserVerificationStatus2[\"Unconfirmed\"] = \"UNCONFIRMED\";\n  UserVerificationStatus2[\"Unknown\"] = \"UNKNOWN\";\n  return UserVerificationStatus2;\n})(UserVerificationStatus || {});\n\nvar UserRole = /* @__PURE__ */ ((UserRole2) => {\n  UserRole2[\"Owner\"] = \"Owner\";\n  UserRole2[\"Admin\"] = \"Admin\";\n  UserRole2[\"User\"] = \"User\";\n  UserRole2[\"Visitor\"] = \"Visitor\";\n  return UserRole2;\n})(UserRole || {});\n\nexport { AIXCentralEuropeanTime, AcreTime, Activities, AfghanistanTime, AfricaAbidjan, AfricaAccra, AfricaAddisAbaba, AfricaAlgiers, AfricaAsmara, AfricaBamako, AfricaBangui, AfricaBanjul, AfricaBissau, AfricaBlantyre, AfricaBrazzaville, AfricaBujumbura, AfricaCairo, AfricaCasablanca, AfricaCeuta, AfricaConakry, AfricaDakar, AfricaDarEsSalaam, AfricaDjibouti, AfricaDouala, AfricaElAaiun, AfricaFreetown, AfricaGaborone, AfricaHarare, AfricaJohannesburg, AfricaJuba, AfricaKampala, AfricaKhartoum, AfricaKigali, AfricaKinshasa, AfricaLagos, AfricaLibreville, AfricaLome, AfricaLuanda, AfricaLubumbashi, AfricaLusaka, AfricaMalabo, AfricaMaputo, AfricaMaseru, AfricaMbabane, AfricaMogadishu, AfricaMonrovia, AfricaNairobi, AfricaNdjamena, AfricaNiamey, AfricaNouakchott, AfricaOuagadougou, AfricaPortoNovo, AfricaSaoTome, AfricaTripoli, AfricaTunis, AfricaWindhoek, Afrikaans, AfrikaansSouthAfrica, AirportCondition, AlaskaDaylightTime, AlaskaStandardTime, Albanian, AlbanianAlbania, AlgorithmHashCondition, AlmaAtaTime, AmazonSummerTime, AmazonTime, AmericaAdak, AmericaAnchorage, AmericaAnguilla, AmericaAntigua, AmericaAraguaina, AmericaArgentinaBuenosAires, AmericaArgentinaCatamarca, AmericaArgentinaCordoba, AmericaArgentinaJujuy, AmericaArgentinaLaRioja, AmericaArgentinaMendoza, AmericaArgentinaRioGallegos, AmericaArgentinaSalta, AmericaArgentinaSanJuan, AmericaArgentinaSanLuis, AmericaArgentinaTucuman, AmericaArgentinaUshuaia, AmericaAruba, AmericaAsuncion, AmericaAtikokan, AmericaAtka, AmericaBahia, AmericaBahiaBanderas, AmericaBarbados, AmericaBelem, AmericaBelize, AmericaBlancSablon, AmericaBoaVista, AmericaBogota, AmericaBoise, AmericaCambridgeBay, AmericaCampoGrande, AmericaCancun, AmericaCaracas, AmericaCayenne, AmericaCayman, AmericaChicago, AmericaChihuahua, AmericaCoralHarbour, AmericaCordoba, AmericaCostaRica, AmericaCreston, AmericaCuiaba, AmericaCuracao, AmericaDanmarkshavn, AmericaDawson, AmericaDawsonCreek, AmericaDenver, AmericaDetroit, AmericaDominica, AmericaEdmonton, AmericaEirunepe, AmericaElSalvador, AmericaFortaleza, AmericaGlaceBay, AmericaGodthab, AmericaGooseBay, AmericaGrandTurk, AmericaGrenada, AmericaGuadeloupe, AmericaGuatemala, AmericaGuayaquil, AmericaGuyana, AmericaHalifax, AmericaHavana, AmericaHermosillo, AmericaIndianaIndianapolis, AmericaIndianaKnox, AmericaIndianaMarengo, AmericaIndianaPetersburg, AmericaIndianaTellCity, AmericaIndianaVevay, AmericaIndianaVincennes, AmericaIndianaWinamac, AmericaInuvik, AmericaIqaluit, AmericaJamaica, AmericaJuneau, AmericaKentuckyLouisville, AmericaKentuckyMonticello, AmericaKralendijk, AmericaLaPaz, AmericaLima, AmericaLosAngeles, AmericaLouisville, AmericaLowerPrinces, AmericaMaceio, AmericaManagua, AmericaManaus, AmericaMarigot, AmericaMartinique, AmericaMatamoros, AmericaMazatlan, AmericaMenominee, AmericaMerida, AmericaMetlakatla, AmericaMexicoCity, AmericaMiquelon, AmericaMoncton, AmericaMonterrey, AmericaMontevideo, AmericaMontreal, AmericaMontserrat, AmericaNassau, AmericaNewYork, AmericaNipigon, AmericaNome, AmericaNoronha, AmericaNorthDakotaBeulah, AmericaNorthDakotaCenter, AmericaNorthDakotaNewSalem, AmericaOjinaga, AmericaPanama, AmericaPangnirtung, AmericaParamaribo, AmericaPhoenix, AmericaPortAuPrince, AmericaPortOfSpain, AmericaPortoVelho, AmericaPuertoRico, AmericaRainyRiver, AmericaRankinInlet, AmericaRecife, AmericaRegina, AmericaResolute, AmericaRioBranco, AmericaSantaIsabel, AmericaSantarem, AmericaSantiago, AmericaSantoDomingo, AmericaSaoPaulo, AmericaScoresbysund, AmericaShiprock, AmericaSitka, AmericaStBarthelemy, AmericaStJohns, AmericaStKitts, AmericaStLucia, AmericaStThomas, AmericaStVincent, AmericaSwiftCurrent, AmericaTegucigalpa, AmericaThule, AmericaThunderBay, AmericaTijuana, AmericaToronto, AmericaTortola, AmericaVancouver, AmericaWhitehorse, AmericaWinnipeg, AmericaYakutat, AmericaYellowknife, Amharic, AmharicEthiopia, AnadyrTime, Analytics, AntarcticaCasey, AntarcticaDavis, AntarcticaDumontDUrville, AntarcticaMacquarie, AntarcticaMawson, AntarcticaMcMurdo, AntarcticaPalmer, AntarcticaRothera, AntarcticaSyowa, AntarcticaTroll, AntarcticaVostok, AqtobeTime, ArabiaStandardTime, Arabic, ArabicAlgeria, ArabicBahrain, ArabicEgypt, ArabicIraq, ArabicJordan, ArabicKuwait, ArabicLebanon, ArabicLibya, ArabicMorocco, ArabicOman, ArabicQatar, ArabicSaudiArabia, ArabicTunisia, ArabicUnitedArabEmirates, ArabicYemen, ArcticLongyearbyen, ArgentinaTime, ArmeniaTime, Armenian, ArmenianArmenia, AsiaAden, AsiaAlmaty, AsiaAmman, AsiaAnadyr, AsiaAqtau, AsiaAqtobe, AsiaAshgabat, AsiaBaghdad, AsiaBahrain, AsiaBaku, AsiaBangkok, AsiaBarnaul, AsiaBeirut, AsiaBishkek, AsiaBrunei, AsiaChita, AsiaChoibalsan, AsiaColombo, AsiaDamascus, AsiaDhaka, AsiaDili, AsiaDubai, AsiaDushanbe, AsiaFamagusta, AsiaGaza, AsiaHebron, AsiaHoChiMinh, AsiaHongKong, AsiaHovd, AsiaIrkutsk, AsiaJakarta, AsiaJayapura, AsiaJerusalem, AsiaKabul, AsiaKamchatka, AsiaKarachi, AsiaKathmandu, AsiaKhandyga, AsiaKolkata, AsiaKrasnoyarsk, AsiaKualaLumpur, AsiaKuching, AsiaKuwait, AsiaMacau, AsiaMagadan, AsiaMakassar, AsiaManila, AsiaMuscat, AsiaNovokuznetsk, AsiaNovosibirsk, AsiaOmsk, AsiaOral, AsiaPhnomPenh, AsiaPontianak, AsiaPyongyang, AsiaQatar, AsiaQyzylorda, AsiaRangoon, AsiaRiyadh, AsiaSakhalin, AsiaSamarkand, AsiaSeoul, AsiaShanghai, AsiaSingapore, AsiaSrednekolymsk, AsiaTaipei, AsiaTashkent, AsiaTbilisi, AsiaTehran, AsiaThimphu, AsiaTokyo, AsiaTomsk, AsiaUlaanbaatar, AsiaUrumqi, AsiaUstNera, AsiaVientiane, AsiaVladivostok, AsiaYakutsk, AsiaYekaterinburg, AsiaYerevan, AtlanticAzores, AtlanticBermuda, AtlanticCanary, AtlanticCapeVerde, AtlanticDaylightTime, AtlanticFaroe, AtlanticMadeira, AtlanticReykjavik, AtlanticSouthGeorgia, AtlanticStHelena, AtlanticStandardTime, AtlanticStanley, AustraliaAdelaide, AustraliaBrisbane, AustraliaBrokenHill, AustraliaCanberra, AustraliaCurrie, AustraliaDarwin, AustraliaEucla, AustraliaHobart, AustraliaLindeman, AustraliaLordHowe, AustraliaMelbourne, AustraliaPerth, AustraliaSydney, AustralianCentralDaylightSavingTime, AustralianCentralStandardTime, AustralianCentralWesternStandardTime, AustralianEasternDaylightSavingTime, AustralianEasternStandardTime, AustralianEasternTime, AustralianWesternStandardTime, AuthenticationCondition, AzerbaijanTime, Azerbaijani, AzerbaijaniAzerbaijan, AzoresStandardTime, AzoresSummerTime, BICCondition, BakerIslandTime, BangladeshStandardTime, Basque, BasqueSpain, Belarusian, BelarusianBelarus, Bengali, BengaliBangladesh, BhutanTime, Bhutani, BhutaniBhutan, BitcoinAddressCondition, BoliviaTime, BooleanCondition, BougainvilleStandardTime, BrasiliaSummerTime, BrasiliaTime, BritishIndianOceanTime, BritishSummerTime, BruneiTime, BuildFormat, BuildPlatform, BuildTarget, BuildTool, Bulgarian, BulgarianBulgaria, Burmese, BurmeseMyanmar, Cantonese, CantoneseHongKong, CapeVerdeTime, Catalan, CatalanSpain, CentralAfricaTime, CentralDaylightTime, CentralEuropeanSummerTime, CentralEuropeanTime, CentralIndonesiaTime, CentralStandardTime, CentralTime, CentralWesternStandardTime, ChamorroStandardTime, ChatMessageAttachmentType, ChatMessageReactionType, ChatMessageStatus, ChatMessageType, ChathamDaylightTime, ChathamStandardTime, ChileStandardTime, ChileSummerTime, ChinaStandardTime, ChineseSimplified, ChineseSimplifiedChina, ChineseSimplifiedHongKong, ChineseSimplifiedMacau, ChineseSimplifiedSingapore, ChineseTraditional, ChineseTraditionalHongKong, ChineseTraditionalMacau, ChineseTraditionalSingapore, ChoibalsanStandardTime, ChoibalsanSummerTime, ChristmasIslandTime, ChuukTime, CityCondition, ClipptertonIslandStandardTime, CloudProviders, CocosIslandsTime, ColombiaSummerTime, ColombiaTime, ColorCondition, CommunicationMedium, Condition, CookIslandTime, CoordinatedUniversalTime, Countries, CountryCode, CountryCondition, CreditCardCondition, Croatian, CroatianBosniaAndHerzegovina, CroatianCroatia, CryptoCurrency, CubaDaylightTime, CubaStandardTime, Currencies, CurrencyCode, CurrencyCondition, Czech, CzechCzechRepublic, Danish, DanishDenmark, DataPointMetric, DataURICondition, DateCondition, DateRangeCondition, DateTimeCondition, DavisTime, DayOfMonthCondition, DefaultValue, DeploymentStrategy, Divehi, DivehiMaldives, DomainNameCondition, DumontDUrvilleTime, Dutch, DutchBelgium, DutchNetherlands, EANCondition, EINCondition, EastAfricaTime, EasterIslandStandardTime, EasterIslandSummerTime, EasternCaribbeanTime, EasternDaylightTime, EasternEuropeanSummerTime, EasternEuropeanTime, EasternGreenlandSummerTime, EasternGreenlandTime, EasternIndonesianTime, EasternStandardTime, EasternTime, EcuadorTime, EmailAddressCondition, EmailCondition, English, EnglishAustralia, EnglishBelgium, EnglishCanada, EnglishIreland, EnglishJamaica, EnglishNewZealand, EnglishPhilippines, EnglishSingapore, EnglishSouthAfrica, EnglishTrinidadAndTobago, EnglishUnitedKingdom, EnglishUnitedStates, EnglishZimbabwe, EnvironmentType, Esperanto, Estonian, EstonianEstonia, EthereumAddressCondition, EuropeAmsterdam, EuropeAndorra, EuropeAthens, EuropeBelgrade, EuropeBerlin, EuropeBratislava, EuropeBrussels, EuropeBucharest, EuropeBudapest, EuropeBusingen, EuropeChisinau, EuropeCopenhagen, EuropeDublin, EuropeGibraltar, EuropeGuernsey, EuropeHelsinki, EuropeIsleOfMan, EuropeIstanbul, EuropeJersey, EuropeKaliningrad, EuropeKiev, EuropeLisbon, EuropeLjubljana, EuropeLondon, EuropeLuxembourg, EuropeMadrid, EuropeMalta, EuropeMariehamn, EuropeMinsk, EuropeMonaco, EuropeMoscow, EuropeOslo, EuropeParis, EuropePodgorica, EuropePrague, EuropeRiga, EuropeRome, EuropeSamara, EuropeSanMarino, EuropeSarajevo, EuropeSimferopol, EuropeSkopje, EuropeSofia, EuropeStockholm, EuropeTallinn, EuropeTirane, EuropeUzhgorod, EuropeVaduz, EuropeVatican, EuropeVienna, EuropeVilnius, EuropeVolgograd, EuropeWarsaw, EuropeZagreb, EuropeZaporozhye, EuropeZurich, FalklandIslandsSummerTime, FalklandIslandsTime, Faroese, FaroeseFaroeIslands, Farsi, FarsiIran, FernandoDeNoronhaTime, FijiTime, Filipino, FilipinoPhilippines, Finnish, FinnishFinland, FloatCondition, FormValidationProblem, French, FrenchBelgium, FrenchCanada, FrenchFrance, FrenchGuianaTime, FrenchLuxembourg, FrenchMonaco, FrenchReunion, FrenchSouthernAndAntarcticTime, FrenchSwitzerland, Frisian, FrisianNetherlands, FurtherEasternEuropeanTime, GalapagosTime, Galician, GalicianSpain, GambierIslandTime, GambierIslandsTime, GeorgiaStandardTime, Georgian, GeorgianGeorgia, German, GermanAustria, GermanBelgium, GermanLiechtenstein, GermanLuxembourg, GermanSwitzerland, GilbertIslandTime, Greek, GreekGreece, Greenlandic, GreenlandicGreenland, GreenwichMeanTime, Gujarati, GujaratiIndia, GulfStandardTime, GuyanaTime, Hausa, HausaGhana, HausaNiger, HausaNigeria, HawaiiAleutianDaylightTime, HawaiiAleutianStandardTime, HeardAndMcDonaldIslandsTime, Hebrew, HebrewIsrael, HexadecimalCondition, Hindi, HindiIndia, HongKongTime, HovdSummerTime, HovdTime, HttpRequestMethod, HttpResponseCode, Hungarian, HungarianHungary, IBANCondition, IPAddressCondition, IPAddressRangeCondition, ISBNCondition, ISINCondition, ISMNCondition, ISSNCondition, Icelandic, IcelandicIceland, Igbo, IndianAntananarivo, IndianChagos, IndianChristmas, IndianCocos, IndianComoro, IndianKerguelen, IndianMahe, IndianMaldives, IndianMauritius, IndianMayotte, IndianOceanTime, IndianReunion, IndianStandardTime, IndochinaTime, Indonesian, IndonesianIndonesia, InfrastuctureClass, IntegerCondition, InternationalDayLineWestTime, IranDaylightTime, IranStandardTime, Irish, IrishIreland, IrishStandardTime, IrkutskTime, IsraelDaylightTime, IsraelStandardTime, Italian, ItalianItaly, ItalianSwitzerland, JSONCondition, JapanStandardTime, Japanese, JapaneseJapan, KaliningradTime, KamchatkaTime, Kannada, KannadaIndia, Kazakh, KazakhKazakhstan, Khmer, KhmerCambodia, Konkani, KonkaniIndia, KoreaStandardTime, Korean, KoreanSouthKorea, KosraeTime, KrasnoyarskTime, Kurdish, KurdishIraq, KurdishTurkey, Kyrgyz, KyrgyzKyrgyzstan, KyrgyzstanTime, LanguageCode, LanguageCondition, Lao, LaoLaos, LatitudeCondition, Latvian, LatvianLatvia, LineIslandsTime, Lithuanian, LithuanianLithuania, LocaleCode, LogLevel, LongTextCondition, LongitudeCondition, LordHoweStandardTime, LordHoweSummerTime, Luxembourgish, LuxembourgishBelgium, LuxembourgishLuxembourg, MACAddressCondition, MD5Condition, Macedonian, MacedonianNorthMacedonia, MacquarieIslandStationTime, MagadanTime, MagnetURICondition, Malay, MalayBrunei, MalayIndia, MalayMalaysia, MalaySingapore, MalaysiaStandardTime, MalaysiaTime, MaldivesTime, Maltese, MalteseMalta, Maori, MaoriNewZealand, Marathi, MarathiIndia, MarkdownCondition, MarquesasIslandsTime, MarshallIslandsTime, MauritiusTime, MawsonStationTime, MenuCondition, MiddleEuropeanSummerTime, MiddleEuropeanTime, MimeTypeCondition, ModelType, Mongolian, MongolianMongolia, Montenegrin, MontenegrinMontenegro, MonthCondition, MoscowTime, MountainDaylightTime, MountainStandardTime, MyanmarStandardTime, NauruTime, NepalTime, Nepali, NepaliNepal, NewCaledoniaTime, NewZealandDaylightTime, NewZealandStandardTime, NewfoundlandDaylightTime, NewfoundlandTime, NiueTime, NorfolkIslandTime, NorthernSotho, NorthernSothoSouthAfrica, Norwegian, NorwegianBokmalNorway, NorwegianNynorskNorway, NovosibirskTime, NumberCondition, OmskTime, OnboardingStatus, OralTime, Oriya, OriyaIndia, PacificApia, PacificAuckland, PacificChatham, PacificChuuk, PacificDaylightTime, PacificEaster, PacificEfate, PacificEnderbury, PacificFakaofo, PacificFiji, PacificFunafuti, PacificGalapagos, PacificGambier, PacificGuadalcanal, PacificGuam, PacificHonolulu, PacificJohnston, PacificKiritimati, PacificKosrae, PacificKwajalein, PacificMajuro, PacificMarquesas, PacificMidway, PacificNauru, PacificNiue, PacificNorfolk, PacificNoumea, PacificPagoPago, PacificPalau, PacificPitcairn, PacificPohnpei, PacificPonape, PacificPortMoresby, PacificRarotonga, PacificSaipan, PacificStandardTime, PacificTahiti, PacificTarawa, PacificTongatapu, PacificYap, PageLeaveMethod, PakistanStandardTime, PalauTime, PapuaNewGuineaTime, ParaguaySummerTime, ParaguayTime, Pashto, PashtoAfghanistan, PassportNumberCondition, PasswordCondition, PaymentIntentStatus, Persian, PersianIran, PeruTime, PhilippineStandardTime, PhillipineTime, PhoenixIslandTime, PhoneNumberCondition, PipelineStepStatus, PipelineWorkflowStatus, PitcairnTime, Platform, PohnpeiStandardTime, Polish, PolishPoland, PortCondition, Portuguese, PortugueseBrazil, PortuguesePortugal, PostalCodeCondition, Primitives, Privilege, ProblemSeverity, ProblemType, ProjectType, ProvinceCondition, Punjabi, PunjabiIndia, PunjabiPakistan, Quechua, QuechuaBolivia, QuechuaEcuador, QuechuaPeru, Region, ReunionTime, Romanian, RomanianRomania, RotheraResearchStationTime, RouteRole, Russian, RussianKazakhstan, RussianKyrgyzstan, RussianRussia, RussianUkraine, SaintPierreAndMiquelonDaylightTime, SaintPierreAndMiquelonStandardTime, SakhalinIslandTime, SamaraTime, Sami, SamiFinland, SamiNorway, SamiSweden, SamoaDaylightTime, SamoaStandardTime, Samoan, SamoanSamoa, Sanskrit, SanskritIndia, SemanticVersionCondition, Serbian, SerbianBosniaAndHerzegovina, SerbianCyrillic, SerbianCyrillicBosniaAndHerzegovina, SerbianCyrillicSerbiaAndMontenegro, SerbianSerbiaAndMontenegro, SeychellesTime, ShowaStationTime, SingaporeStandardTime, SingaporeTime, Slovak, SlovakSlovakia, Slovenian, SlovenianSlovenia, SlugCondition, SocialSecurityNumberCondition, SolomonIslandsTime, Somali, SomaliSomalia, SouthAfricanStandardTime, SouthGeorgiaAndTheSouthSandwichIslandsTime, Spanish, SpanishArgentina, SpanishBolivia, SpanishChile, SpanishColombia, SpanishCostaRica, SpanishCuba, SpanishDominicanRepublic, SpanishEcuador, SpanishElSalvador, SpanishEquatorialGuinea, SpanishGuatemala, SpanishHonduras, SpanishMexico, SpanishNicaragua, SpanishPanama, SpanishParaguay, SpanishPeru, SpanishPuertoRico, SpanishUruguay, SpanishVenezuela, SrednekolymskTime, SriLankaStandardTime, StateCondition, StreetAddressCondition, StringCondition, SubRegion, SubscriptionPlanDuration, SubscriptionStatus, SurinameTime, SutuSouthAfrica, Swahili, SwahiliKenya, Swedish, SwedishFinland, SwedishSweden, Syriac, SyriacSyria, Tagalog, TagalogPhilippines, TagsCondition, TahitiTime, Tajik, TajikTajikistan, TajikistanTime, Tamil, TamilIndia, TaskStatus, TaxIDNumberCondition, Telugu, TeluguIndia, TestReporter, TestTool, Thai, ThaiThailand, ThailandStandardTime, Tibetan, TibetanBhutan, TibetanChina, TibetanIndia, TimeCondition, TimeOfDayCondition, TimeRangeCondition, TimezoneOffset, TimezoneRegions, Timezones, TimorLesteTime, TokelauTime, TongaTime, Tsonga, Tswana, TswanaSouthAfrica, TurkeyTime, Turkish, TurkishTurkey, TurkmenistanTime, TuvaluTime, URLCondition, UUIDCondition, Ukrainian, UkrainianUkraine, UlaanbaatarStandardTime, UlaanbaatarSummerTime, Urdu, UrduAfghanistan, UrduIndia, UrduPakistan, UruguayStandardTime, UruguaySummerTime, UserRole, UserVerificationStatus, UzbekCyrillic, UzbekLatin, UzbekUzbekistan, UzbekistanTime, VATCondition, VanuatuTime, VenezuelaStandardTime, Vietnamese, VietnameseVietnam, VladivostokTime, VolgogradTime, VostokStationTime, WakeIslandTime, WeekdayCondition, Welsh, WelshUnitedKingdom, WestAfricaSummerTime, WestAfricaTime, WestGreenlandSummerTime, WestGreenlandTime, WestKazakhstanTime, WesternEuropeanSummerTime, WesternEuropeanTime, WesternIndonesianTime, WesternStandardTime, Xhosa, XhosaSouthAfrica, YakutskTime, YearCondition, YekaterinburgTime, Yiddish, Yoruba, YorubaNigeria, Zulu, ZuluSouthAfrica };\n//# sourceMappingURL=index.mjs.map\n", "import { Environment, EnvironmentType } from '@srclaunch/types';\n\nconst devEnvironment: Environment = {\n  description: 'Development environment',\n  id: 'dev',\n  name: 'Development',\n  type: EnvironmentType.Development,\n};\n\nconst testEnvironment: Environment = {\n  description: 'Test environment',\n  id: 'test',\n  name: 'Test',\n  type: EnvironmentType.NonProduction,\n};\n\nconst previewEnvironment: Environment = {\n  description: 'Preview environment',\n  id: 'preview',\n  name: 'Preview',\n  type: EnvironmentType.NonProduction,\n};\n\nconst productionEnvironment: Environment = {\n  description: 'Production environment',\n  id: 'production',\n  name: 'Production',\n  type: EnvironmentType.Production,\n};\n\nexport function getEnvironment(): Environment {\n  const environment = process.env.NODE_ENV;\n\n  switch (environment) {\n    case 'dev':\n    case 'development':\n      return devEnvironment;\n    case 'test':\n      return testEnvironment;\n    case 'preview':\n      return previewEnvironment;\n    case 'production':\n      return productionEnvironment;\n  }\n\n  return testEnvironment;\n}\n", "import {\n  Environment,\n  Environments,\n  EnvironmentType,\n  RunOptions,\n  WebApplicationRunOptions,\n} from '@srclaunch/types';\nimport chalk from 'chalk';\nimport path from 'path';\nimport { createServer, ViteDevServer } from 'vite';\n\nexport async function run({ environment, ssr }: WebApplicationRunOptions) {\n  try {\n    switch (environment?.type) {\n      case EnvironmentType.Development:\n        const server = await createServer({\n          root: path.join(path.resolve()),\n        });\n\n        await server.listen();\n\n        server.printUrls();\n\n        `${chalk.green('\u2714')} started ${'asd'} in  ${chalk.bold(\n          environment.id,\n        )} mode`;\n        break;\n      default:\n    }\n  } catch (err: any) {\n    console.error(chalk.red(err.message));\n    process.exit(1);\n  }\n}\n", "import { Project, ProjectType, RunOptions } from '@srclaunch/types';\nimport { TypedFlags } from 'meow';\nimport { getEnvironment } from '@srclaunch/node-environment';\nimport { Command, CommandType } from '../lib/command.js';\nimport { run as runVite } from '../lib/run/vite';\n\ntype RunFlags = TypedFlags<{\n  ssr: {\n    default: false;\n    description: 'Serve web application using server-side rendering';\n    type: 'boolean';\n  };\n}>;\n\nexport default new Command<Project, RunFlags>({\n  name: 'run',\n  description: 'Commands for running an application or service',\n  run: async ({ config, flags }) => {\n    const options = config.run as RunOptions;\n\n    const environment = getEnvironment();\n    switch (config.type) {\n      case ProjectType.WebApplication:\n        await runVite({ environment, ssr: options.ssr ?? flags.ssr });\n        break;\n      default:\n        break;\n    }\n  },\n  type: CommandType.Project,\n  commands: [\n    new Command<Project, RunFlags>({\n      name: 'dev',\n      description: 'Start project in development mode',\n      run: async ({ config, flags }) => {},\n      type: CommandType.Project,\n    }),\n    new Command<Project, RunFlags>({\n      name: 'preview',\n      description: 'Start project in preview mode',\n      run: async ({ config, flags }) => {},\n      type: CommandType.Project,\n    }),\n    new Command<Project, RunFlags>({\n      name: 'qa',\n      description: 'Start project in qa mode',\n      run: async ({ config, flags }) => {},\n      type: CommandType.Project,\n    }),\n    new Command<Project, RunFlags>({\n      name: 'production',\n      description: 'Start project in production mode',\n      run: async ({ config, flags }) => {},\n      type: CommandType.Project,\n    }),\n    new Command<Project, RunFlags>({\n      name: 'help',\n      description: 'Shows help for run commands',\n      run: async () => {\n        console.info(\n          'Available serve commands are: dev, preview, production, and help',\n        );\n      },\n      type: CommandType.Project,\n    }),\n  ],\n});\n", "import { exec, fork, spawn } from 'child_process';\nimport { TestOptions } from '@srclaunch/types';\nimport { DEFAULT_TEST_OPTIONS } from './index';\nimport {\n  chunksToLinesAsync,\n  streamWrite,\n  streamEnd,\n  onExit,\n} from '@rauschma/stringio';\nimport { Readable, Writable } from 'stream';\n\nasync function transform(readable: Readable, writable: Writable) {\n  for await (const line of chunksToLinesAsync(readable)) {\n    await streamWrite(writable, '@ ' + line);\n  }\n  await streamEnd(writable);\n}\n\nexport async function run({\n  config,\n  match,\n  watch,\n}: {\n  config: TestOptions;\n  match?: string;\n  watch?: boolean;\n}): Promise<void> {\n  try {\n    const all = ['--all'];\n    const color = ['--color'];\n    const concurrencyArg = config?.concurrency\n      ? ['--concurrency', config.concurrency.toString()]\n      : [];\n    const failFast = config?.fail?.fast ? ['--fail-fast'] : [];\n    const failWithNoTests =\n      config?.fail?.noTests ?? DEFAULT_TEST_OPTIONS.fail.noTests\n        ? []\n        : ['--failWithoutAssertions'];\n    const matchFlag = match ? [`--match='${match.toString()}'`] : [];\n    const nodeArguments = ['--nodeArguments=\"--loader=ts-node/esm\"'];\n    // const tapReporter = ['--tap'];\n    const verbose = config?.verbose ? ['--verbose'] : [];\n    const watchFlag = watch ? ['--watch'] : [];\n\n    const args = [\n      ...all,\n      ...color,\n      ...concurrencyArg,\n      ...failFast,\n      ...failWithNoTests,\n      ...matchFlag,\n      ...nodeArguments,\n      ...verbose,\n      ...watchFlag,\n    ];\n\n    const childProcess = await spawn('ava', args, {\n      stdio: [process.stdin, process.stdout, process.stderr],\n    });\n\n    await onExit(childProcess);\n\n    // if (process) {\n    //   process.stdout?.on('data', data => {\n    //     console.log(data.toString());\n    //   });\n\n    //   process.stderr?.on('data', data => {\n    //     console.log(data.toString());\n    //   });\n\n    //   process.on('exit', code => {\n    //     console.log(`child process exited with code ${code}`);\n    //   });\n\n    //   process.on('error', err => {\n    //     console.log(`child process error: ${err}`);\n    //   });\n\n    //   process.on('close', () => {\n    //     console.log('child process closed');\n    //   });\n\n    //   process.on('disconnect', () => {\n    //     console.log('child process disconnected');\n    //   });\n\n    //   process.on('message', message => {\n    //     console.log(`child process message: ${message}`);\n    //   });\n    // }\n  } catch (err) {\n    // console.error('ERR; ', err);\n  }\n}\n", "import { TestOptions, TestReporter, TestTool } from '@srclaunch/types';\n\nexport const DEFAULT_TEST_OPTIONS = {\n  concurrency: undefined,\n  coverage: {\n    directory: 'coverage',\n    thresholds: {\n      global: {\n        branches: 0,\n        functions: 0,\n        lines: 0,\n        statements: 0,\n      },\n    },\n    reporters: [TestReporter.Lcov, TestReporter.JSONSummary],\n  },\n  fail: {\n    fast: true,\n    noTests: false,\n  },\n  tool: TestTool.Ava,\n  verbose: true,\n};\n", "import { TestOptions } from '@srclaunch/types';\nimport { Report } from 'c8';\nimport chalk from 'chalk';\nimport { emptyDir, ensureDir } from 'fs-extra';\nimport path from 'path';\nimport { DEFAULT_TEST_OPTIONS } from './index';\n\nexport async function run(config: TestOptions): Promise<Report> {\n  try {\n    const coverageDir = path.join(\n      process.cwd(),\n      config.coverage?.directory ?? DEFAULT_TEST_OPTIONS.coverage.directory,\n    );\n\n    await ensureDir(coverageDir);\n    await emptyDir(coverageDir);\n\n    const report = new Report({\n      all: true,\n      reportsDirectory: coverageDir,\n      src: [path.join(process.cwd(), 'src')],\n      tempDirectory: coverageDir,\n      reporter:\n        config.coverage?.reporters ?? DEFAULT_TEST_OPTIONS.coverage.reporters,\n    });\n\n    await report.run();\n\n    console.info(\n      `${chalk.green('\u2714')} generated coverage report in ${chalk.bold(\n        coverageDir,\n      )}`,\n    );\n\n    return report;\n  } catch (err) {\n    console.warn('Error encountered while generating coverage reports');\n    console.error(err);\n    throw err;\n  }\n}\n", "import { TestOptions } from '@srclaunch/types';\nimport { run as runJest } from 'jest-cli';\nimport path from 'path';\nimport { DEFAULT_TEST_OPTIONS } from '.';\n\nexport async function run({\n  config,\n  match,\n  watch,\n}: {\n  config: TestOptions;\n  match?: string;\n  watch?: boolean;\n}) {\n  try {\n    const colors = ['--colors'];\n    const concurrencyArg = config?.concurrency\n      ? ['--maxConcurrency', config.concurrency?.toString() ?? '5']\n      : [];\n    const coverageProvider = ['--coverageProvider', 'v8'];\n    const failFast = config?.fail?.fast ? ['--bail'] : [];\n    const failWithNoTests =\n      config?.fail?.noTests ?? DEFAULT_TEST_OPTIONS.fail.noTests\n        ? []\n        : ['--passWithNoTests'];\n    const matchFlag = match ? [`--t ${match.toString()}`] : [];\n    // const tapReporter = ['--tap'];\n    const preset = ['--preset', 'ts-jest'];\n    const rootDir = ['--rootDir', path.resolve(process.cwd())];\n    const verbose = config?.verbose ? ['--verbose'] : [];\n    const watchFlag = watch ? ['--watch'] : [];\n\n    const args = [\n      ...colors,\n      ...concurrencyArg,\n      ...coverageProvider,\n      ...failWithNoTests,\n      ...failFast,\n      ...matchFlag,\n      ...preset,\n      ...rootDir,\n      ...verbose,\n      ...watchFlag,\n    ];\n    await runJest(args, path.resolve());\n  } catch (err) {\n    // console.error(err);\n  }\n}\n", "import { Command, CommandType } from '../lib/command.js';\nimport { run as runAvaTests } from '../lib/test/ava.js';\nimport { run as runC8Coverage } from '../lib/test/coverage.js';\nimport { run as runJestTests } from '../lib/test/jest.js';\nimport { Project } from '@srclaunch/types';\nimport { TypedFlags } from 'meow';\nimport { TestTool } from '@srclaunch/types';\n\ntype TestFlags = TypedFlags<{\n  coverage: {\n    alias: 'c';\n    default: false;\n    description: 'Collect test coverage after test run';\n    type: 'boolean';\n  };\n  match: {\n    alias: 'm';\n    description: 'Run tests matching the specified pattern';\n    type: 'string';\n  };\n  watch: {\n    alias: 'w';\n    description: 'Watch for changes and run tests automatically';\n    type: 'boolean';\n  };\n}>;\n\nexport default new Command<Project, TestFlags>({\n  name: 'test',\n  description: 'Commands for running tests',\n  run: async ({ config, flags }: { config: Project; flags: TestFlags }) => {\n    if (typeof config.test === 'object' && !Array.isArray(config.test)) {\n      switch (config.test.tool) {\n        case TestTool.Jest:\n          await runJestTests({\n            config: config.test,\n            match: flags.match,\n            watch: flags.watch,\n          });\n          break;\n        case TestTool.Ava:\n        default:\n          await runAvaTests({\n            config: config.test,\n            match: flags.match,\n            watch: flags.watch,\n          });\n      }\n\n      if (config.test.coverage || flags.coverage) {\n        await runC8Coverage(config.test);\n      }\n    } else if (Array.isArray(config.test)) {\n      for (const test of config.test) {\n        switch (test.tool) {\n          case TestTool.Jest:\n            await runJestTests({\n              config: test,\n              match: flags.match,\n              watch: flags.watch,\n            });\n            break;\n          case TestTool.Ava:\n          default:\n            await runAvaTests({\n              config: test,\n              match: flags.match,\n              watch: flags.watch,\n            });\n        }\n\n        if (test.coverage || flags.coverage) {\n          await runC8Coverage(test);\n        }\n      }\n    }\n  },\n  commands: [\n    new Command<Project, TestFlags>({\n      name: 'ava',\n      description: 'Run tests using Ava',\n      run: async ({ config, flags }: { config: Project; flags: TestFlags }) => {\n        if (typeof config.test === 'object' && !Array.isArray(config.test)) {\n          await runAvaTests({\n            config: config.test,\n            match: flags.match,\n            watch: flags.watch,\n          });\n        } else if (Array.isArray(config.test)) {\n          for (const test of config.test) {\n            await runAvaTests({\n              config: test,\n              match: flags.match,\n              watch: flags.watch,\n            });\n          }\n        }\n      },\n    }),\n    new Command<Project, TestFlags>({\n      name: 'jest',\n      description: 'Runs tests using Jest',\n      run: async ({ config, flags }) => {\n        if (typeof config.test === 'object' && !Array.isArray(config.test)) {\n          await runJestTests({\n            config: config.test,\n            match: flags.match,\n            watch: flags.watch,\n          });\n        } else if (Array.isArray(config.test)) {\n          for (const test of config.test) {\n            await runJestTests({\n              config: test,\n              match: flags.match,\n              watch: flags.watch,\n            });\n          }\n        }\n      },\n      type: CommandType.Project,\n    }),\n    new Command<Project, TestFlags>({\n      name: 'coverage',\n      description: 'Generates coverage reports',\n      run: async ({ config, flags }) => {\n        if (typeof config.test === 'object' && !Array.isArray(config.test)) {\n          await runC8Coverage(config.test);\n        } else if (Array.isArray(config.test)) {\n          for (const test of config.test) {\n            await runC8Coverage(test);\n          }\n        }\n      },\n      type: CommandType.Project,\n    }),\n    new Command<Project, TestFlags>({\n      name: 'help',\n      description: 'Shows help for test commands',\n      run: async () => {\n        console.info('Available test commands are: ava, jest');\n      },\n      type: CommandType.Project,\n    }),\n  ],\n});\n", "import { readFile } from './file-system';\nimport path from 'node:path';\n\nexport async function getSrcLaunchConfig() {\n  try {\n    // const configFormats = ['js', 'json', 'ts'];\n\n    try {\n      const configPath = path.join(path.resolve(), './.srclaunch/config.js');\n      const config = await import(configPath);\n\n      return config.default;\n    } catch (jsImportError: any) {\n      try {\n        const configPath = path.join(path.resolve(), './.srclaunch/config');\n        const config = await import(configPath);\n\n        return config.default;\n      } catch (jsImportError: any) {\n        const configPath = path.join(\n          path.resolve(),\n          '.srclaunch',\n          'config.json',\n        );\n\n        try {\n          const config = await readFile(configPath);\n\n          return await JSON.parse(config.toString());\n        } catch (jsonReadError: any) {\n          throw new Error(\n            `Could not read config file: ${configPath}. ${jsonReadError.message}`,\n          );\n        }\n      }\n    }\n  } catch (err) {\n    throw new Error(\n      'Please run this command from a SrcLaunch project or workspace directory.',\n    );\n  }\n}\n"],
  "mappings": "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f,EAAe,YASf,EAAe,MASf,EAAe,WASf,EAAe,YASf,EAAe,YASf,EAAe,aASf,EAAe,WASf,EAAe,WASf,EAAe,WASf,EAAe,WASf,EAAe,WASf,EAAe,cASf,EAAe,WASf,EAAe,aASf,EAAe,cASf,EAAe,cASf,EAAe,WASf,EAAe,WASf,EAAe,WASf,EAAe,WASf,EAAe,WASf,EAAe,WASf,EAAe,YASf,EAAe,WASf,EAAe,YASf,EAAe,WASf,EAAe,WASf,EAAe,YASf,EAAe,eASf,EAAe,YASf,EAAe,YASf,EAAe,YASf,EAAe,WASf,EAAe,WASf,EAAe,WASf,EAAe,cASf,EAAe,YASf,EAAe,WASf,EAAe,WASf,EAAe,WASf,EAAe,WASf,EAAe,WASf,EAAe,YASf,EAAe,YASf,EAAe,cASf,EAAe,cASf,EAAe,YASf,EAAe,YASf,EAAe,YASf,EAAe,YASf,EAAe,eASf,EAAe,eASf,EAAe,aASf,EAAe,YASf,EAAe,WASf,EAAe,WASf,EAAe,WASf,EAAe,YASf,EAAe,YASf,EAAe,WASf,EAAe,WASf,EAAe,YASf,EAAe,YASf,EAAe,YASf,EAAe,YASf,EAAe,WASf,EAAe,WASf,EAAe,YASf,EAAe,YASf,EAAe,YASf,EAAe,WASf,EAAe,YASf,EAAe,YASf,EAAe,YASf,EAAe,YASf,EAAe,WASf,EAAe,aASf,EAAe,aASf,EAAe,WASf,EAAe,WASf,EAAe,WASf,EAAe,WASf,EAAe,YASf,EAAe,WASf,EAAe,YASf,EAAe,YASf,EAAe,cASf,EAAe,YASf,EAAe,aASf,EAAe,WASf,EAAe,WASf,EAAe,WASf,EAAe,YASf,EAAe,YASf,EAAe,WASf,EAAe,WASf,EAAe,YASf,EAAe,WASf,EAAe,WASf,EAAe,YASf,EAAe,YASf,EAAe,WASf,EAAe,YASf,EAAe,YASf,EAAe,YASf,EAAe,WASf,EAAe,WASf,EAAe,YASf,EAAe,WASf,EAAe,WASf,EAAe,YASf,EAAe,YASf,EAAe,WASf,EAAe,WASf,EAAe,MASf,EAAe,WASf,EAAe,WASf,EAAe,WASf,EAAe,WAGzB,GAAI,IA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",
  "names": []
}
