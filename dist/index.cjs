var cr=Object.create;var ye=Object.defineProperty;var or=Object.getOwnPropertyDescriptor;var Ar=Object.getOwnPropertyNames;var fr=Object.getPrototypeOf,dr=Object.prototype.hasOwnProperty;var lu=(a,d)=>()=>(d||a((d={exports:{}}).exports,d),d.exports),Ir=(a,d)=>{for(var g in d)ye(a,g,{get:d[g],enumerable:!0})},_i=(a,d,g,S)=>{if(d&&typeof d=="object"||typeof d=="function")for(let E of Ar(d))!dr.call(a,E)&&E!==g&&ye(a,E,{get:()=>d[E],enumerable:!(S=or(d,E))||S.enumerable});return a};var L=(a,d,g)=>(g=a!=null?cr(fr(a)):{},_i(d||!a||!a.__esModule?ye(g,"default",{value:a,enumerable:!0}):g,a)),_r=a=>_i(ye({},"__esModule",{value:!0}),a);var Ri=lu(w=>{"use strict";var le=Symbol.for("react.element"),Wt=Symbol.for("react.portal"),Vt=Symbol.for("react.fragment"),zt=Symbol.for("react.strict_mode"),Rt=Symbol.for("react.profiler"),Jt=Symbol.for("react.provider"),Yt=Symbol.for("react.context"),Zt=Symbol.for("react.forward_ref"),$t=Symbol.for("react.suspense"),Qt=Symbol.for("react.memo"),Xt=Symbol.for("react.lazy"),Gi=Symbol.iterator;function Ct(a){return a===null||typeof a!="object"?null:(a=Gi&&a[Gi]||a["@@iterator"],typeof a=="function"?a:null)}var xi={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},Oi=Object.assign,Hi={};function za(a,d,g){this.props=a,this.context=d,this.refs=Hi,this.updater=g||xi}za.prototype.isReactComponent={};za.prototype.setState=function(a,d){if(typeof a!="object"&&typeof a!="function"&&a!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,a,d,"setState")};za.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function ji(){}ji.prototype=za.prototype;function gu(a,d,g){this.props=a,this.context=d,this.refs=Hi,this.updater=g||xi}var hu=gu.prototype=new ji;hu.constructor=gu;Oi(hu,za.prototype);hu.isPureReactComponent=!0;var qi=Array.isArray,Wi=Object.prototype.hasOwnProperty,Su={current:null},Vi={key:!0,ref:!0,__self:!0,__source:!0};function zi(a,d,g){var S,E={},v=null,B=null;if(d!=null)for(S in d.ref!==void 0&&(B=d.ref),d.key!==void 0&&(v=""+d.key),d)Wi.call(d,S)&&!Vi.hasOwnProperty(S)&&(E[S]=d[S]);var U=arguments.length-2;if(U===1)E.children=g;else if(1<U){for(var D=Array(U),k=0;k<U;k++)D[k]=arguments[k+2];E.children=D}if(a&&a.defaultProps)for(S in U=a.defaultProps,U)E[S]===void 0&&(E[S]=U[S]);return{$$typeof:le,type:a,key:v,ref:B,props:E,_owner:Su.current}}function al(a,d){return{$$typeof:le,type:a.type,key:d,ref:a.ref,props:a.props,_owner:a._owner}}function Eu(a){return typeof a=="object"&&a!==null&&a.$$typeof===le}function el(a){var d={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,function(g){return d[g]})}var Ki=/\/+/g;function _u(a,d){return typeof a=="object"&&a!==null&&a.key!=null?el(""+a.key):d.toString(36)}function qe(a,d,g,S,E){var v=typeof a;(v==="undefined"||v==="boolean")&&(a=null);var B=!1;if(a===null)B=!0;else switch(v){case"string":case"number":B=!0;break;case"object":switch(a.$$typeof){case le:case Wt:B=!0}}if(B)return B=a,E=E(B),a=S===""?"."+_u(B,0):S,qi(E)?(g="",a!=null&&(g=a.replace(Ki,"$&/")+"/"),qe(E,d,g,"",function(k){return k})):E!=null&&(Eu(E)&&(E=al(E,g+(!E.key||B&&B.key===E.key?"":(""+E.key).replace(Ki,"$&/")+"/")+a)),d.push(E)),1;if(B=0,S=S===""?".":S+":",qi(a))for(var U=0;U<a.length;U++){v=a[U];var D=S+_u(v,U);B+=qe(v,d,g,D,E)}else if(D=Ct(a),typeof D=="function")for(a=D.call(a),U=0;!(v=a.next()).done;)v=v.value,D=S+_u(v,U++),B+=qe(v,d,g,D,E);else if(v==="object")throw d=String(a),Error("Objects are not valid as a React child (found: "+(d==="[object Object]"?"object with keys {"+Object.keys(a).join(", ")+"}":d)+"). If you meant to render a collection of children, use an array instead.");return B}function Ge(a,d,g){if(a==null)return a;var S=[],E=0;return qe(a,S,"","",function(v){return d.call(g,v,E++)}),S}function ul(a){if(a._status===-1){var d=a._result;d=d(),d.then(function(g){(a._status===0||a._status===-1)&&(a._status=1,a._result=g)},function(g){(a._status===0||a._status===-1)&&(a._status=2,a._result=g)}),a._status===-1&&(a._status=0,a._result=d)}if(a._status===1)return a._result.default;throw a._result}var la={current:null},Ke={transition:null},il={ReactCurrentDispatcher:la,ReactCurrentBatchConfig:Ke,ReactCurrentOwner:Su};w.Children={map:Ge,forEach:function(a,d,g){Ge(a,function(){d.apply(this,arguments)},g)},count:function(a){var d=0;return Ge(a,function(){d++}),d},toArray:function(a){return Ge(a,function(d){return d})||[]},only:function(a){if(!Eu(a))throw Error("React.Children.only expected to receive a single React element child.");return a}};w.Component=za;w.Fragment=Vt;w.Profiler=Rt;w.PureComponent=gu;w.StrictMode=zt;w.Suspense=$t;w.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=il;w.cloneElement=function(a,d,g){if(a==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+a+".");var S=Oi({},a.props),E=a.key,v=a.ref,B=a._owner;if(d!=null){if(d.ref!==void 0&&(v=d.ref,B=Su.current),d.key!==void 0&&(E=""+d.key),a.type&&a.type.defaultProps)var U=a.type.defaultProps;for(D in d)Wi.call(d,D)&&!Vi.hasOwnProperty(D)&&(S[D]=d[D]===void 0&&U!==void 0?U[D]:d[D])}var D=arguments.length-2;if(D===1)S.children=g;else if(1<D){U=Array(D);for(var k=0;k<D;k++)U[k]=arguments[k+2];S.children=U}return{$$typeof:le,type:a.type,key:E,ref:v,props:S,_owner:B}};w.createContext=function(a){return a={$$typeof:Yt,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},a.Provider={$$typeof:Jt,_context:a},a.Consumer=a};w.createElement=zi;w.createFactory=function(a){var d=zi.bind(null,a);return d.type=a,d};w.createRef=function(){return{current:null}};w.forwardRef=function(a){return{$$typeof:Zt,render:a}};w.isValidElement=Eu;w.lazy=function(a){return{$$typeof:Xt,_payload:{_status:-1,_result:a},_init:ul}};w.memo=function(a,d){return{$$typeof:Qt,type:a,compare:d===void 0?null:d}};w.startTransition=function(a){var d=Ke.transition;Ke.transition={};try{a()}finally{Ke.transition=d}};w.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")};w.useCallback=function(a,d){return la.current.useCallback(a,d)};w.useContext=function(a){return la.current.useContext(a)};w.useDebugValue=function(){};w.useDeferredValue=function(a){return la.current.useDeferredValue(a)};w.useEffect=function(a,d){return la.current.useEffect(a,d)};w.useId=function(){return la.current.useId()};w.useImperativeHandle=function(a,d,g){return la.current.useImperativeHandle(a,d,g)};w.useInsertionEffect=function(a,d){return la.current.useInsertionEffect(a,d)};w.useLayoutEffect=function(a,d){return la.current.useLayoutEffect(a,d)};w.useMemo=function(a,d){return la.current.useMemo(a,d)};w.useReducer=function(a,d,g){return la.current.useReducer(a,d,g)};w.useRef=function(a){return la.current.useRef(a)};w.useState=function(a){return la.current.useState(a)};w.useSyncExternalStore=function(a,d,g){return la.current.useSyncExternalStore(a,d,g)};w.useTransition=function(){return la.current.useTransition()};w.version="18.1.0"});var Ji=lu((G,xe)=>{"use strict";process.env.NODE_ENV!=="production"&&function(){"use strict";typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart=="function"&&__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error);var a="18.1.0",d=!1,g=!1,S=!1,E=!1,v=!1,B=Symbol.for("react.element"),U=Symbol.for("react.portal"),D=Symbol.for("react.fragment"),k=Symbol.for("react.strict_mode"),z=Symbol.for("react.profiler"),Y=Symbol.for("react.provider"),J=Symbol.for("react.context"),M=Symbol.for("react.forward_ref"),da=Symbol.for("react.suspense"),X=Symbol.for("react.suspense_list"),C=Symbol.for("react.memo"),Aa=Symbol.for("react.lazy"),O=Symbol.for("react.offscreen"),ia=Symbol.iterator,$a="@@iterator";function _e(o){if(o===null||typeof o!="object")return null;var h=ia&&o[ia]||o[$a];return typeof h=="function"?h:null}var Du={current:null},Ma={transition:null},sa={current:null,isBatchingLegacy:!1,didScheduleLegacyUpdate:!1},Ea={current:null},Qa={},ge=null;function yu(o){ge=o}Qa.setExtraStackFrame=function(o){ge=o},Qa.getCurrentStack=null,Qa.getStackAddendum=function(){var o="";ge&&(o+=ge);var h=Qa.getCurrentStack;return h&&(o+=h()||""),o};var La={ReactCurrentDispatcher:Du,ReactCurrentBatchConfig:Ma,ReactCurrentOwner:Ea};La.ReactDebugCurrentFrame=Qa,La.ReactCurrentActQueue=sa;function wa(o){{for(var h=arguments.length,p=new Array(h>1?h-1:0),T=1;T<h;T++)p[T-1]=arguments[T];Pu("warn",o,p)}}function K(o){{for(var h=arguments.length,p=new Array(h>1?h-1:0),T=1;T<h;T++)p[T-1]=arguments[T];Pu("error",o,p)}}function Pu(o,h,p){{var T=La.ReactDebugCurrentFrame,b=T.getStackAddendum();b!==""&&(h+="%s",p=p.concat([b]));var P=p.map(function(N){return String(N)});P.unshift("Warning: "+h),Function.prototype.apply.call(console[o],console,P)}}var Fu={};function Ve(o,h){{var p=o.constructor,T=p&&(p.displayName||p.name)||"ReactClass",b=T+"."+h;if(Fu[b])return;K("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.",h,T),Fu[b]=!0}}var ku={isMounted:function(o){return!1},enqueueForceUpdate:function(o,h,p){Ve(o,"forceUpdate")},enqueueReplaceState:function(o,h,p,T){Ve(o,"replaceState")},enqueueSetState:function(o,h,p,T){Ve(o,"setState")}},pa=Object.assign,ze={};Object.freeze(ze);function Da(o,h,p){this.props=o,this.context=h,this.refs=ze,this.updater=p||ku}Da.prototype.isReactComponent={},Da.prototype.setState=function(o,h){if(typeof o!="object"&&typeof o!="function"&&o!=null)throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,o,h,"setState")},Da.prototype.forceUpdate=function(o){this.updater.enqueueForceUpdate(this,o,"forceUpdate")};{var Re={isMounted:["isMounted","Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],replaceState:["replaceState","Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]},en=function(o,h){Object.defineProperty(Da.prototype,o,{get:function(){wa("%s(...) is deprecated in plain JavaScript React classes. %s",h[0],h[1])}})};for(var Je in Re)Re.hasOwnProperty(Je)&&en(Je,Re[Je])}function Mu(){}Mu.prototype=Da.prototype;function Ye(o,h,p){this.props=o,this.context=h,this.refs=ze,this.updater=p||ku}var Ze=Ye.prototype=new Mu;Ze.constructor=Ye,pa(Ze,Da.prototype),Ze.isPureReactComponent=!0;function un(){var o={current:null};return Object.seal(o),o}var sn=Array.isArray;function he(o){return sn(o)}function nn(o){{var h=typeof Symbol=="function"&&Symbol.toStringTag,p=h&&o[Symbol.toStringTag]||o.constructor.name||"Object";return p}}function rn(o){try{return Lu(o),!1}catch{return!0}}function Lu(o){return""+o}function Se(o){if(rn(o))return K("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.",nn(o)),Lu(o)}function tn(o,h,p){var T=o.displayName;if(T)return T;var b=h.displayName||h.name||"";return b!==""?p+"("+b+")":p}function wu(o){return o.displayName||"Context"}function ba(o){if(o==null)return null;if(typeof o.tag=="number"&&K("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."),typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case D:return"Fragment";case U:return"Portal";case z:return"Profiler";case k:return"StrictMode";case da:return"Suspense";case X:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case J:var h=o;return wu(h)+".Consumer";case Y:var p=o;return wu(p._context)+".Provider";case M:return tn(o,o.render,"ForwardRef");case C:var T=o.displayName||null;return T!==null?T:ba(o.type)||"Memo";case Aa:{var b=o,P=b._payload,N=b._init;try{return ba(N(P))}catch{return null}}}return null}var Xa=Object.prototype.hasOwnProperty,Gu={key:!0,ref:!0,__self:!0,__source:!0},qu,Ku,$e;$e={};function xu(o){if(Xa.call(o,"ref")){var h=Object.getOwnPropertyDescriptor(o,"ref").get;if(h&&h.isReactWarning)return!1}return o.ref!==void 0}function Ou(o){if(Xa.call(o,"key")){var h=Object.getOwnPropertyDescriptor(o,"key").get;if(h&&h.isReactWarning)return!1}return o.key!==void 0}function ln(o,h){var p=function(){qu||(qu=!0,K("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",h))};p.isReactWarning=!0,Object.defineProperty(o,"key",{get:p,configurable:!0})}function mn(o,h){var p=function(){Ku||(Ku=!0,K("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",h))};p.isReactWarning=!0,Object.defineProperty(o,"ref",{get:p,configurable:!0})}function cn(o){if(typeof o.ref=="string"&&Ea.current&&o.__self&&Ea.current.stateNode!==o.__self){var h=ba(Ea.current.type);$e[h]||(K('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',h,o.ref),$e[h]=!0)}}var Qe=function(o,h,p,T,b,P,N){var F={$$typeof:B,type:o,key:h,ref:p,props:N,_owner:P};return F._store={},Object.defineProperty(F._store,"validated",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(F,"_self",{configurable:!1,enumerable:!1,writable:!1,value:T}),Object.defineProperty(F,"_source",{configurable:!1,enumerable:!1,writable:!1,value:b}),Object.freeze&&(Object.freeze(F.props),Object.freeze(F)),F};function on(o,h,p){var T,b={},P=null,N=null,F=null,q=null;if(h!=null){xu(h)&&(N=h.ref,cn(h)),Ou(h)&&(Se(h.key),P=""+h.key),F=h.__self===void 0?null:h.__self,q=h.__source===void 0?null:h.__source;for(T in h)Xa.call(h,T)&&!Gu.hasOwnProperty(T)&&(b[T]=h[T])}var x=arguments.length-2;if(x===1)b.children=p;else if(x>1){for(var H=Array(x),j=0;j<x;j++)H[j]=arguments[j+2];Object.freeze&&Object.freeze(H),b.children=H}if(o&&o.defaultProps){var V=o.defaultProps;for(T in V)b[T]===void 0&&(b[T]=V[T])}if(P||N){var Z=typeof o=="function"?o.displayName||o.name||"Unknown":o;P&&ln(b,Z),N&&mn(b,Z)}return Qe(o,P,N,F,q,Ea.current,b)}function An(o,h){var p=Qe(o.type,h,o.ref,o._self,o._source,o._owner,o.props);return p}function fn(o,h,p){if(o==null)throw new Error("React.cloneElement(...): The argument must be a React element, but you passed "+o+".");var T,b=pa({},o.props),P=o.key,N=o.ref,F=o._self,q=o._source,x=o._owner;if(h!=null){xu(h)&&(N=h.ref,x=Ea.current),Ou(h)&&(Se(h.key),P=""+h.key);var H;o.type&&o.type.defaultProps&&(H=o.type.defaultProps);for(T in h)Xa.call(h,T)&&!Gu.hasOwnProperty(T)&&(h[T]===void 0&&H!==void 0?b[T]=H[T]:b[T]=h[T])}var j=arguments.length-2;if(j===1)b.children=p;else if(j>1){for(var V=Array(j),Z=0;Z<j;Z++)V[Z]=arguments[Z+2];b.children=V}return Qe(o.type,P,N,F,q,x,b)}function Ga(o){return typeof o=="object"&&o!==null&&o.$$typeof===B}var Hu=".",dn=":";function In(o){var h=/[=:]/g,p={"=":"=0",":":"=2"},T=o.replace(h,function(b){return p[b]});return"$"+T}var ju=!1,_n=/\/+/g;function Wu(o){return o.replace(_n,"$&/")}function Xe(o,h){return typeof o=="object"&&o!==null&&o.key!=null?(Se(o.key),In(""+o.key)):h.toString(36)}function Ee(o,h,p,T,b){var P=typeof o;(P==="undefined"||P==="boolean")&&(o=null);var N=!1;if(o===null)N=!0;else switch(P){case"string":case"number":N=!0;break;case"object":switch(o.$$typeof){case B:case U:N=!0}}if(N){var F=o,q=b(F),x=T===""?Hu+Xe(F,0):T;if(he(q)){var H="";x!=null&&(H=Wu(x)+"/"),Ee(q,h,H,"",function(mr){return mr})}else q!=null&&(Ga(q)&&(q.key&&(!F||F.key!==q.key)&&Se(q.key),q=An(q,p+(q.key&&(!F||F.key!==q.key)?Wu(""+q.key)+"/":"")+x)),h.push(q));return 1}var j,V,Z=0,aa=T===""?Hu:T+dn;if(he(o))for(var De=0;De<o.length;De++)j=o[De],V=aa+Xe(j,De),Z+=Ee(j,h,p,V,b);else{var tu=_e(o);if(typeof tu=="function"){var fi=o;tu===fi.entries&&(ju||wa("Using Maps as children is not supported. Use an array of keyed ReactElements instead."),ju=!0);for(var tr=tu.call(fi),di,lr=0;!(di=tr.next()).done;)j=di.value,V=aa+Xe(j,lr++),Z+=Ee(j,h,p,V,b)}else if(P==="object"){var Ii=String(o);throw new Error("Objects are not valid as a React child (found: "+(Ii==="[object Object]"?"object with keys {"+Object.keys(o).join(", ")+"}":Ii)+"). If you meant to render a collection of children, use an array instead.")}}return Z}function pe(o,h,p){if(o==null)return o;var T=[],b=0;return Ee(o,T,"","",function(P){return h.call(p,P,b++)}),T}function gn(o){var h=0;return pe(o,function(){h++}),h}function hn(o,h,p){pe(o,function(){h.apply(this,arguments)},p)}function Sn(o){return pe(o,function(h){return h})||[]}function En(o){if(!Ga(o))throw new Error("React.Children.only expected to receive a single React element child.");return o}function pn(o){var h={$$typeof:J,_currentValue:o,_currentValue2:o,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};h.Provider={$$typeof:Y,_context:h};var p=!1,T=!1,b=!1;{var P={$$typeof:J,_context:h};Object.defineProperties(P,{Provider:{get:function(){return T||(T=!0,K("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?")),h.Provider},set:function(N){h.Provider=N}},_currentValue:{get:function(){return h._currentValue},set:function(N){h._currentValue=N}},_currentValue2:{get:function(){return h._currentValue2},set:function(N){h._currentValue2=N}},_threadCount:{get:function(){return h._threadCount},set:function(N){h._threadCount=N}},Consumer:{get:function(){return p||(p=!0,K("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?")),h.Consumer}},displayName:{get:function(){return h.displayName},set:function(N){b||(wa("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.",N),b=!0)}}}),h.Consumer=P}return h._currentRenderer=null,h._currentRenderer2=null,h}var Ca=-1,Ce=0,Vu=1,Tn=2;function vn(o){if(o._status===Ca){var h=o._result,p=h();if(p.then(function(P){if(o._status===Ce||o._status===Ca){var N=o;N._status=Vu,N._result=P}},function(P){if(o._status===Ce||o._status===Ca){var N=o;N._status=Tn,N._result=P}}),o._status===Ca){var T=o;T._status=Ce,T._result=p}}if(o._status===Vu){var b=o._result;return b===void 0&&K(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))

Did you accidentally put curly braces around the import?`,b),"default"in b||K(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))`,b),b.default}else throw o._result}function bn(o){var h={_status:Ca,_result:o},p={$$typeof:Aa,_payload:h,_init:vn};{var T,b;Object.defineProperties(p,{defaultProps:{configurable:!0,get:function(){return T},set:function(P){K("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."),T=P,Object.defineProperty(p,"defaultProps",{enumerable:!0})}},propTypes:{configurable:!0,get:function(){return b},set:function(P){K("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."),b=P,Object.defineProperty(p,"propTypes",{enumerable:!0})}}})}return p}function Bn(o){o!=null&&o.$$typeof===C?K("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))."):typeof o!="function"?K("forwardRef requires a render function but was given %s.",o===null?"null":typeof o):o.length!==0&&o.length!==2&&K("forwardRef render functions accept exactly two parameters: props and ref. %s",o.length===1?"Did you forget to use the ref parameter?":"Any additional parameter will be undefined."),o!=null&&(o.defaultProps!=null||o.propTypes!=null)&&K("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");var h={$$typeof:M,render:o};{var p;Object.defineProperty(h,"displayName",{enumerable:!1,configurable:!0,get:function(){return p},set:function(T){p=T,!o.name&&!o.displayName&&(o.displayName=T)}})}return h}var zu;zu=Symbol.for("react.module.reference");function Ru(o){return!!(typeof o=="string"||typeof o=="function"||o===D||o===z||v||o===k||o===da||o===X||E||o===O||d||g||S||typeof o=="object"&&o!==null&&(o.$$typeof===Aa||o.$$typeof===C||o.$$typeof===Y||o.$$typeof===J||o.$$typeof===M||o.$$typeof===zu||o.getModuleId!==void 0))}function Un(o,h){Ru(o)||K("memo: The first argument must be a component. Instead received: %s",o===null?"null":typeof o);var p={$$typeof:C,type:o,compare:h===void 0?null:h};{var T;Object.defineProperty(p,"displayName",{enumerable:!1,configurable:!0,get:function(){return T},set:function(b){T=b,!o.name&&!o.displayName&&(o.displayName=b)}})}return p}function na(){var o=Du.current;return o===null&&K(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`),o}function Nn(o){var h=na();if(o._context!==void 0){var p=o._context;p.Consumer===o?K("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?"):p.Provider===o&&K("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?")}return h.useContext(o)}function Dn(o){var h=na();return h.useState(o)}function yn(o,h,p){var T=na();return T.useReducer(o,h,p)}function Pn(o){var h=na();return h.useRef(o)}function Fn(o,h){var p=na();return p.useEffect(o,h)}function kn(o,h){var p=na();return p.useInsertionEffect(o,h)}function Mn(o,h){var p=na();return p.useLayoutEffect(o,h)}function Ln(o,h){var p=na();return p.useCallback(o,h)}function wn(o,h){var p=na();return p.useMemo(o,h)}function Gn(o,h,p){var T=na();return T.useImperativeHandle(o,h,p)}function qn(o,h){{var p=na();return p.useDebugValue(o,h)}}function Kn(){var o=na();return o.useTransition()}function xn(o){var h=na();return h.useDeferredValue(o)}function On(){var o=na();return o.useId()}function Hn(o,h,p){var T=na();return T.useSyncExternalStore(o,h,p)}var ae=0,Ju,Yu,Zu,$u,Qu,Xu,Cu;function ai(){}ai.__reactDisabledLog=!0;function jn(){{if(ae===0){Ju=console.log,Yu=console.info,Zu=console.warn,$u=console.error,Qu=console.group,Xu=console.groupCollapsed,Cu=console.groupEnd;var o={configurable:!0,enumerable:!0,value:ai,writable:!0};Object.defineProperties(console,{info:o,log:o,warn:o,error:o,group:o,groupCollapsed:o,groupEnd:o})}ae++}}function Wn(){{if(ae--,ae===0){var o={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:pa({},o,{value:Ju}),info:pa({},o,{value:Yu}),warn:pa({},o,{value:Zu}),error:pa({},o,{value:$u}),group:pa({},o,{value:Qu}),groupCollapsed:pa({},o,{value:Xu}),groupEnd:pa({},o,{value:Cu})})}ae<0&&K("disabledDepth fell below zero. This is a bug in React. Please file an issue.")}}var au=La.ReactCurrentDispatcher,eu;function Te(o,h,p){{if(eu===void 0)try{throw Error()}catch(b){var T=b.stack.trim().match(/\n( *(at )?)/);eu=T&&T[1]||""}return`
`+eu+o}}var uu=!1,ve;{var Vn=typeof WeakMap=="function"?WeakMap:Map;ve=new Vn}function ei(o,h){if(!o||uu)return"";{var p=ve.get(o);if(p!==void 0)return p}var T;uu=!0;var b=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var P;P=au.current,au.current=null,jn();try{if(h){var N=function(){throw Error()};if(Object.defineProperty(N.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(N,[])}catch(aa){T=aa}Reflect.construct(o,[],N)}else{try{N.call()}catch(aa){T=aa}o.call(N.prototype)}}else{try{throw Error()}catch(aa){T=aa}o()}}catch(aa){if(aa&&T&&typeof aa.stack=="string"){for(var F=aa.stack.split(`
`),q=T.stack.split(`
`),x=F.length-1,H=q.length-1;x>=1&&H>=0&&F[x]!==q[H];)H--;for(;x>=1&&H>=0;x--,H--)if(F[x]!==q[H]){if(x!==1||H!==1)do if(x--,H--,H<0||F[x]!==q[H]){var j=`
`+F[x].replace(" at new "," at ");return o.displayName&&j.includes("<anonymous>")&&(j=j.replace("<anonymous>",o.displayName)),typeof o=="function"&&ve.set(o,j),j}while(x>=1&&H>=0);break}}}finally{uu=!1,au.current=P,Wn(),Error.prepareStackTrace=b}var V=o?o.displayName||o.name:"",Z=V?Te(V):"";return typeof o=="function"&&ve.set(o,Z),Z}function zn(o,h,p){return ei(o,!1)}function Rn(o){var h=o.prototype;return!!(h&&h.isReactComponent)}function be(o,h,p){if(o==null)return"";if(typeof o=="function")return ei(o,Rn(o));if(typeof o=="string")return Te(o);switch(o){case da:return Te("Suspense");case X:return Te("SuspenseList")}if(typeof o=="object")switch(o.$$typeof){case M:return zn(o.render);case C:return be(o.type,h,p);case Aa:{var T=o,b=T._payload,P=T._init;try{return be(P(b),h,p)}catch{}}}return""}var ui={},ii=La.ReactDebugCurrentFrame;function Be(o){if(o){var h=o._owner,p=be(o.type,o._source,h?h.type:null);ii.setExtraStackFrame(p)}else ii.setExtraStackFrame(null)}function Jn(o,h,p,T,b){{var P=Function.call.bind(Xa);for(var N in o)if(P(o,N)){var F=void 0;try{if(typeof o[N]!="function"){var q=Error((T||"React class")+": "+p+" type `"+N+"` is invalid; it must be a function, usually from the `prop-types` package, but received `"+typeof o[N]+"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");throw q.name="Invariant Violation",q}F=o[N](h,N,T,p,null,"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED")}catch(x){F=x}F&&!(F instanceof Error)&&(Be(b),K("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).",T||"React class",p,N,typeof F),Be(null)),F instanceof Error&&!(F.message in ui)&&(ui[F.message]=!0,Be(b),K("Failed %s type: %s",p,F.message),Be(null))}}}function qa(o){if(o){var h=o._owner,p=be(o.type,o._source,h?h.type:null);yu(p)}else yu(null)}var iu;iu=!1;function si(){if(Ea.current){var o=ba(Ea.current.type);if(o)return`

Check the render method of \``+o+"`."}return""}function Yn(o){if(o!==void 0){var h=o.fileName.replace(/^.*[\\\/]/,""),p=o.lineNumber;return`

Check your code at `+h+":"+p+"."}return""}function Zn(o){return o!=null?Yn(o.__source):""}var ni={};function $n(o){var h=si();if(!h){var p=typeof o=="string"?o:o.displayName||o.name;p&&(h=`

Check the top-level render call using <`+p+">.")}return h}function ri(o,h){if(!(!o._store||o._store.validated||o.key!=null)){o._store.validated=!0;var p=$n(h);if(!ni[p]){ni[p]=!0;var T="";o&&o._owner&&o._owner!==Ea.current&&(T=" It was passed a child from "+ba(o._owner.type)+"."),qa(o),K('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',p,T),qa(null)}}}function ti(o,h){if(typeof o=="object"){if(he(o))for(var p=0;p<o.length;p++){var T=o[p];Ga(T)&&ri(T,h)}else if(Ga(o))o._store&&(o._store.validated=!0);else if(o){var b=_e(o);if(typeof b=="function"&&b!==o.entries)for(var P=b.call(o),N;!(N=P.next()).done;)Ga(N.value)&&ri(N.value,h)}}}function li(o){{var h=o.type;if(h==null||typeof h=="string")return;var p;if(typeof h=="function")p=h.propTypes;else if(typeof h=="object"&&(h.$$typeof===M||h.$$typeof===C))p=h.propTypes;else return;if(p){var T=ba(h);Jn(p,o.props,"prop",T,o)}else if(h.PropTypes!==void 0&&!iu){iu=!0;var b=ba(h);K("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?",b||"Unknown")}typeof h.getDefaultProps=="function"&&!h.getDefaultProps.isReactClassApproved&&K("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.")}}function Qn(o){{for(var h=Object.keys(o.props),p=0;p<h.length;p++){var T=h[p];if(T!=="children"&&T!=="key"){qa(o),K("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.",T),qa(null);break}}o.ref!==null&&(qa(o),K("Invalid attribute `ref` supplied to `React.Fragment`."),qa(null))}}function mi(o,h,p){var T=Ru(o);if(!T){var b="";(o===void 0||typeof o=="object"&&o!==null&&Object.keys(o).length===0)&&(b+=" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");var P=Zn(h);P?b+=P:b+=si();var N;o===null?N="null":he(o)?N="array":o!==void 0&&o.$$typeof===B?(N="<"+(ba(o.type)||"Unknown")+" />",b=" Did you accidentally export a JSX literal instead of a component?"):N=typeof o,K("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s",N,b)}var F=on.apply(this,arguments);if(F==null)return F;if(T)for(var q=2;q<arguments.length;q++)ti(arguments[q],o);return o===D?Qn(F):li(F),F}var ci=!1;function Xn(o){var h=mi.bind(null,o);return h.type=o,ci||(ci=!0,wa("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.")),Object.defineProperty(h,"type",{enumerable:!1,get:function(){return wa("Factory.type is deprecated. Access the class directly before passing it to createFactory."),Object.defineProperty(this,"type",{value:o}),o}}),h}function Cn(o,h,p){for(var T=fn.apply(this,arguments),b=2;b<arguments.length;b++)ti(arguments[b],T.type);return li(T),T}function ar(o,h){var p=Ma.transition;Ma.transition={};var T=Ma.transition;Ma.transition._updatedFibers=new Set;try{o()}finally{if(Ma.transition=p,p===null&&T._updatedFibers){var b=T._updatedFibers.size;b>10&&wa("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."),T._updatedFibers.clear()}}}var oi=!1,Ue=null;function er(o){if(Ue===null)try{var h=("require"+Math.random()).slice(0,7),p=xe&&xe[h];Ue=p.call(xe,"timers").setImmediate}catch{Ue=function(b){oi===!1&&(oi=!0,typeof MessageChannel>"u"&&K("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));var P=new MessageChannel;P.port1.onmessage=b,P.port2.postMessage(void 0)}}return Ue(o)}var Ka=0,Ai=!1;function ur(o){{var h=Ka;Ka++,sa.current===null&&(sa.current=[]);var p=sa.isBatchingLegacy,T;try{if(sa.isBatchingLegacy=!0,T=o(),!p&&sa.didScheduleLegacyUpdate){var b=sa.current;b!==null&&(sa.didScheduleLegacyUpdate=!1,ru(b))}}catch(V){throw Ne(h),V}finally{sa.isBatchingLegacy=p}if(T!==null&&typeof T=="object"&&typeof T.then=="function"){var P=T,N=!1,F={then:function(V,Z){N=!0,P.then(function(aa){Ne(h),Ka===0?su(aa,V,Z):V(aa)},function(aa){Ne(h),Z(aa)})}};return!Ai&&typeof Promise<"u"&&Promise.resolve().then(function(){}).then(function(){N||(Ai=!0,K("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"))}),F}else{var q=T;if(Ne(h),Ka===0){var x=sa.current;x!==null&&(ru(x),sa.current=null);var H={then:function(V,Z){sa.current===null?(sa.current=[],su(q,V,Z)):V(q)}};return H}else{var j={then:function(V,Z){V(q)}};return j}}}}function Ne(o){o!==Ka-1&&K("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. "),Ka=o}function su(o,h,p){{var T=sa.current;if(T!==null)try{ru(T),er(function(){T.length===0?(sa.current=null,h(o)):su(o,h,p)})}catch(b){p(b)}else h(o)}}var nu=!1;function ru(o){if(!nu){nu=!0;var h=0;try{for(;h<o.length;h++){var p=o[h];do p=p(!0);while(p!==null)}o.length=0}catch(T){throw o=o.slice(h+1),T}finally{nu=!1}}}var ir=mi,sr=Cn,nr=Xn,rr={map:pe,forEach:hn,count:gn,toArray:Sn,only:En};G.Children=rr,G.Component=Da,G.Fragment=D,G.Profiler=z,G.PureComponent=Ye,G.StrictMode=k,G.Suspense=da,G.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=La,G.cloneElement=sr,G.createContext=pn,G.createElement=ir,G.createFactory=nr,G.createRef=un,G.forwardRef=Bn,G.isValidElement=Ga,G.lazy=bn,G.memo=Un,G.startTransition=ar,G.unstable_act=ur,G.useCallback=Ln,G.useContext=Nn,G.useDebugValue=qn,G.useDeferredValue=xn,G.useEffect=Fn,G.useId=On,G.useImperativeHandle=Gn,G.useInsertionEffect=kn,G.useLayoutEffect=Mn,G.useMemo=wn,G.useReducer=yn,G.useRef=Pn,G.useState=Dn,G.useSyncExternalStore=Hn,G.useTransition=Kn,G.version=a,typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop=="function"&&__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error)}()});var Ua=lu((wb,pu)=>{"use strict";process.env.NODE_ENV==="production"?pu.exports=Ri():pu.exports=Ji()});var k0={};Ir(k0,{CommandType:()=>Ia,cli:()=>Ie,default:()=>F0,helpMessage:()=>Cs,main:()=>an});module.exports=_r(k0);var Qs=L(require("meow"),1),Xs=L(require("update-notifier"),1);var Ia=(g=>(g.Project="project",g.Workspace="workspace",g))(Ia||{}),y=class{flags;name;runFunction;commands;type="project";constructor(d){this.name=d.name,this.commands=d.commands,this.flags=d.flags,this.type=d.type??"project",this.runFunction=d.run}async run({cli:d,config:g,flags:S}){if(this.runFunction)return await this.runFunction({cli:d,config:g,flags:S})}};async function mu({cli:a,config:d,command:g,commands:S,flags:E}){if(!g||g.length===0||!g[0]){console.error("No command specified");return}if(!S){console.error("No commands specified");return}let v=g[0],B=S.find(U=>U.name===v);if(!B){console.error(`Unknown command ${v}`);return}g.length===1?B.run({cli:a,config:d,flags:E}):g.length>1&&mu({cli:a,config:d,command:g.slice(1),commands:B?.commands,flags:E})}var ki=require("esbuild");var ya=L(require("typescript"),1),cu=L(require("fs-extra"),1),ra=L(require("path"),1);async function Pe({input:a,types:d,output:g}){let S=typeof d=="object"?d.configPath:void 0,E=S?await cu.default.readFile(ra.default.join(ra.default.resolve(),S),"utf8"):null,v=E?await JSON.parse(E.toString()):{extends:"@srclaunch/dx/tsconfig.ui.json",include:[ra.default.join(ra.default.resolve(),a?.directory??"src")]},B={...v,compilerOptions:{...v.compilerOptions,declarationDir:ra.default.join(ra.default.resolve(),g?.directory??"dist"),listEmittedFiles:!0,rootDir:ra.default.join(ra.default.resolve(),a?.directory??"src")}},{options:U}=ya.default.parseJsonConfigFileContent(B,ya.default.sys,ra.default.join(ra.default.resolve())),k=(await cu.default.readdir(ra.default.join(ra.default.resolve(),a?.directory??"src"))).filter(M=>M.endsWith(".ts")||M.endsWith(".tsx")).map(M=>ra.default.join(ra.default.resolve(),a?.directory??"src",M)),z=ya.default.createProgram(k,U),Y=z.emit(),J=ya.default.getPreEmitDiagnostics(z).concat(Y.diagnostics);for(let M of J)if(M.file){let{line:da,character:X}=M.file.getLineAndCharacterOfPosition(M.start),C=ya.default.flattenDiagnosticMessageText(M.messageText,`
`);console.log(`${M.file.fileName} (${da+1},${X+1}): ${C}`)}else console.log(`${ya.default.flattenDiagnosticMessageText(M.messageText,`
`)}`)}var A=(a=>(a.Afghanistan="AF",a.Albania="AL",a.Algeria="DZ",a.AmericanSamoa="AS",a.Andorra="AD",a.Angola="AO",a.Anguilla="AI",a.Antarctica="AQ",a.AntiguaAndBarbuda="AG",a.Argentina="AR",a.Armenia="AM",a.Aruba="AW",a.Australia="AU",a.Austria="AT",a.Azerbaijan="AZ",a.Bahamas="BS",a.Bahrain="BH",a.Bangladesh="BD",a.Barbados="BB",a.Belarus="BY",a.Belgium="BE",a.Belize="BZ",a.Benin="BJ",a.Bermuda="BM",a.Bhutan="BT",a.Bolivia="BO",a.BosniaAndHerzegovina="BA",a.Botswana="BW",a.BouvetIsland="BV",a.Brazil="BR",a.BritishIndianOceanTerritory="IO",a.Brunei="BN",a.Bulgaria="BG",a.BurkinaFaso="BF",a.Burundi="BI",a.Cambodia="KH",a.Cameroon="CM",a.Canada="CA",a.CapeVerde="CV",a.CaymanIslands="KY",a.CentralAfricanRepublic="CF",a.Chad="TD",a.Chile="CL",a.China="CN",a.ChristmasIsland="CX",a.CocosKeelingIslands="CC",a.Colombia="CO",a.Comoros="KM",a.Congo="CG",a.CongoTheDemocraticRepublicOfThe="CD",a.CookIslands="CK",a.CostaRica="CR",a.CoteDIvoire="CI",a.Croatia="HR",a.Cuba="CU",a.Cyprus="CY",a.CzechRepublic="CZ",a.Denmark="DK",a.Djibouti="DJ",a.Dominica="DM",a.DominicanRepublic="DO",a.Ecuador="EC",a.Egypt="EG",a.ElSalvador="SV",a.EquatorialGuinea="GQ",a.Eritrea="ER",a.Estonia="EE",a.Ethiopia="ET",a.FalklandIslands="FK",a.FaroeIslands="FO",a.Fiji="FJ",a.Finland="FI",a.France="FR",a.FrenchGuiana="GF",a.FrenchPolynesia="PF",a.FrenchSouthernTerritories="TF",a.Gabon="GA",a.Gambia="GM",a.Georgia="GE",a.Germany="DE",a.Ghana="GH",a.Gibraltar="GI",a.Greece="GR",a.Greenland="GL",a.Grenada="GD",a.Guadeloupe="GP",a.Guam="GU",a.Guatemala="GT",a.Guernsey="GG",a.Guinea="GN",a.GuineaBissau="GW",a.Guyana="GY",a.Haiti="HT",a.HeardIslandMcdonaldIslands="HM",a.HolySeeVaticanCityState="VA",a.Honduras="HN",a.HongKong="HK",a.Hungary="HU",a.Iceland="IS",a.India="IN",a.Indonesia="ID",a.Iran="IR",a.Iraq="IQ",a.Ireland="IE",a.IsleOfMan="IM",a.Israel="IL",a.Italy="IT",a.Jamaica="JM",a.Japan="JP",a.Jersey="JE",a.Jordan="JO",a.Kazakhstan="KZ",a.Kenya="KE",a.Kiribati="KI",a.Kuwait="KW",a.Kyrgyzstan="KG",a.Laos="LA",a.Latvia="LV",a.Lebanon="LB",a.Lesotho="LS",a.Liberia="LR",a.Libya="LY",a.Liechtenstein="LI",a.Lithuania="LT",a.Luxembourg="LU",a.Macau="MO",a.Madagascar="MG",a.Malawi="MW",a.Malaysia="MY",a.Maldives="MV",a.Mali="ML",a.Malta="MT",a.MarshallIslands="MH",a.Martinique="MQ",a.Mauritania="MR",a.Mauritius="MU",a.Mayotte="YT",a.Mexico="MX",a.MicronesiaFederatedStatesOf="FM",a.Moldova="MD",a.Monaco="MC",a.Mongolia="MN",a.Montenegro="ME",a.Montserrat="MS",a.Morocco="MA",a.Mozambique="MZ",a.Myanmar="MM",a.Namibia="NA",a.Nauru="NR",a.Nepal="NP",a.Netherlands="NL",a.NetherlandsAntilles="AN",a.NewCaledonia="NC",a.NewZealand="NZ",a.NorthKorea="KP",a.Nicaragua="NI",a.Niger="NE",a.Nigeria="NG",a.Niue="NU",a.NorfolkIsland="NF",a.NorthMacedonia="MK",a.NorthernMarianaIslands="MP",a.Norway="NO",a.Oman="OM",a.Pakistan="PK",a.Palau="PW",a.PalestinianTerritoryOccupied="PS",a.Panama="PA",a.PapuaNewGuinea="PG",a.Paraguay="PY",a.Peru="PE",a.Philippines="PH",a.Pitcairn="PN",a.Poland="PL",a.Portugal="PT",a.PuertoRico="PR",a.Qatar="QA",a.Reunion="RE",a.Romania="RO",a.RussianFederation="RU",a.Rwanda="RW",a.SaintBarthelemy="BL",a.SaintHelena="SH",a.SaintKittsAndNevis="KN",a.SaintLucia="LC",a.SaintMartin="MF",a.SaintPierreAndMiquelon="PM",a.SaintVincentAndTheGrenadines="VC",a.Samoa="WS",a.SanMarino="SM",a.SaoTomeAndPrincipe="ST",a.SaudiArabia="SA",a.Senegal="SN",a.Serbia="RS",a.SerbiaAndMontenegro="CS",a.Seychelles="SC",a.SierraLeone="SL",a.Singapore="SG",a.Slovakia="SK",a.Slovenia="SI",a.SolomonIslands="SB",a.Somalia="SO",a.SouthAfrica="ZA",a.SouthGeorgiaAndTheSouthSandwichIslands="GS",a.SouthKorea="KR",a.Spain="ES",a.SriLanka="LK",a.Sudan="SD",a.Suriname="SR",a.SvalbardAndJanMayen="SJ",a.Swaziland="SZ",a.Sweden="SE",a.Switzerland="CH",a.Syria="SY",a.Taiwan="TW",a.Tajikistan="TJ",a.Tanzania="TZ",a.Thailand="TH",a.TimorLeste="TL",a.Togo="TG",a.Tokelau="TK",a.Tonga="TO",a.TrinidadAndTobago="TT",a.Tunisia="TN",a.Turkey="TR",a.Turkmenistan="TM",a.TurksAndCaicosIslands="TC",a.Tuvalu="TV",a.Uganda="UG",a.Ukraine="UA",a.UnitedArabEmirates="AE",a.UnitedKingdom="GB",a.UnitedStates="US",a.UnitedStatesMinorOutlyingIslands="UM",a.Uruguay="UY",a.Uzbekistan="UZ",a.Vanuatu="VU",a.Venezuela="VE",a.Vietnam="VN",a.VirginIslandsBritish="VG",a.VirginIslandsUS="VI",a.WallisAndFutuna="WF",a.WesternSahara="EH",a.Yemen="YE",a.Zambia="ZM",a.Zimbabwe="ZW",a))(A||{}),ta=(a=>(a.AfghanistanAfghani="AFN",a.AlbaniaLek="ALL",a.ArmeniaDram="AMD",a.AlgeriaDinar="DZD",a.AmericanSamoaTala="WST",a.AngolaKwanza="AOA",a.ArgentinaPeso="ARS",a.AustraliaDollar="AUD",a.ArubaFlorin="AWG",a.AzerbaijanNewManat="AZN",a.BosniaAndHerzegovinaConvertibleMark="BAM",a.BahrainDinar="BHD",a.BarbadosDollar="BBD",a.BangladeshTaka="BDT",a.BelgiumFranc="BGN",a.BermudaDollar="BMD",a.BruneiDollar="BND",a.BoliviaBoliviano="BOB",a.BrazilReal="BRL",a.BahamasDollar="BSD",a.BhutanNgultrum="BTN",a.BotswanaPula="BWP",a.BelarusRuble="BYN",a.BelizeDollar="BZD",a.BulgariaLev="BGN",a.BurundiFranc="BIF",a.BritishPound="GBP",a.CanadaDollar="CAD",a.CambodiaRiel="KHR",a.ComorosFranc="KMF",a.CaymanIslandsDollar="KYD",a.ChilePeso="CLP",a.ChinaYuan="CNY",a.ColombiaPeso="COP",a.CostaRicaColon="CRC",a.CroatiaKuna="HRK",a.CubaConvertiblePeso="CUC",a.CubaPeso="CUP",a.CapeVerdeEscudo="CVE",a.CyprusPound="CYP",a.CzechRepublicKoruna="CZK",a.DjiboutiFranc="DJF",a.DenmarkKrone="DKK",a.DominicaDollar="XCD",a.DominicanRepublicPeso="DOP",a.EastCaribbeanDollar="XCD",a.EgyptPound="EGP",a.ElSalvadorColon="SVC",a.EquatorialGuineaEkwele="GQE",a.EritreaNakfa="ERN",a.EstoniaKroon="EEK",a.EthiopiaBirr="ETB",a.Euro="EUR",a.FijiDollar="FJD",a.FalklandIslandsPound="FKP",a.GambiaDalasi="GMD",a.GabonFranc="GMD",a.GeorgiaLari="GEL",a.GhanaCedi="GHS",a.GibraltarPound="GIP",a.GuatemalaQuetzal="GTQ",a.GuernseyPound="GGP",a.GuineaBissauPeso="GWP",a.GuyanaDollar="GYD",a.HongKongDollar="HKD",a.HondurasLempira="HNL",a.HaitiGourde="HTG",a.HungaryForint="HUF",a.IndonesiaRupiah="IDR",a.IsleOfManPound="IMP",a.IsraelNewShekel="ILS",a.IndiaRupee="INR",a.IraqDinar="IQD",a.IranRial="IRR",a.IcelandKrona="ISK",a.JamaicaDollar="JMD",a.JapanYen="JPY",a.JerseyPound="JEP",a.JordanDinar="JOD",a.KazakhstanTenge="KZT",a.KenyaShilling="KES",a.KyrgyzstanSom="KGS",a.NorthKoreaWon="KPW",a.SouthKoreaWon="KRW",a.KuwaitDinar="KWD",a.LaosKip="LAK",a.LebanonPound="LBP",a.LiberiaDollar="LRD",a.LesothoLoti="LSL",a.LibyanDinar="LYD",a.LithuaniaLitas="LTL",a.LatviaLats="LVL",a.LibyaDinar="LYD",a.MacauPataca="MOP",a.MaldivesRufiyaa="MVR",a.MalawiKwacha="MWK",a.MaltaLira="MTL",a.MauritiusRupee="MUR",a.MongoliaTughrik="MNT",a.MoroccoDirham="MAD",a.MoldovaLeu="MDL",a.MozambiqueMetical="MZN",a.MadagascarAriary="MGA",a.MacedoniaDenar="MKD",a.MexicoPeso="MXN",a.MalaysiaRinggit="MYR",a.MyanmarKyat="MMK",a.MicronesiaFederatedStatesDollar="USD",a.NicaraguaCordoba="NIO",a.NamibiaDollar="NAD",a.NetherlandsAntillesGuilder="ANG",a.NewCaledoniaFranc="XPF",a.NigeriaNaira="NGN",a.NicaraguaCordobaOro="NIO",a.NigerCFAFranc="XOF",a.NorwayKrone="NOK",a.NepalRupee="NPR",a.NewZealandDollar="NZD",a.OmanRial="OMR",a.PanamaBalboa="PAB",a.PeruNuevoSol="PEN",a.PapuaNewGuineaKina="PGK",a.PhilippinesPeso="PHP",a.PakistanRupee="PKR",a.PeruNuevo="PEN",a.PolandZloty="PLN",a.ParaguayGuarani="PYG",a.QatarRial="QAR",a.RomaniaNewLeu="RON",a.SerbiaDinar="RSD",a.SriLankaRupee="LKR",a.RussiaRuble="RUB",a.RwandaFranc="RWF",a.SaudiArabiaRiyal="SAR",a.SlovakiaKoruna="SKK",a.SloveniaTolar="SIT",a.SolomonIslandsDollar="SBD",a.SeychellesRupee="SCR",a.SudanPound="SDG",a.SwedenKrona="SEK",a.SingaporeDollar="SGD",a.SaintHelenaPound="SHP",a.SierraLeoneLeone="SLL",a.SomaliaShilling="SOS",a.SurinameDollar="SRD",a.SintMaartenPound="SXD",a.SyriaPound="SYP",a.SwazilandLilangeni="SZL",a.SwitzerlandFranc="CHF",a.ThailandBaht="THB",a.TajikistanSomoni="TJS",a.TurkmenistanManat="TMT",a.TunisiaDinar="TND",a.TongaPaanga="TOP",a.TurkeyLira="TRY",a.TrinidadAndTobagoDollar="TTD",a.TaiwanNewDollar="TWD",a.TanzaniaShilling="TZS",a.UnitedArabEmiratesDirham="AED",a.UkraineHryvnia="UAH",a.UgandaShilling="UGX",a.UnitedKingdomPound="GBP",a.UnitedStatesDollar="USD",a.UruguayPeso="UYU",a.UzbekistanSom="UZS",a.VenezuelaBolivar="VEF",a.VietnamDong="VND",a.VanuatuVatu="VUV",a.SamoaTala="WST",a.YemenRial="YER",a.SouthAfricaRand="ZAR",a.ZambiaKwacha="ZMW",a.ZimbabweDollar="ZWL",a))(ta||{}),K0={AfghanistanAfghani:{code:"AFN",countries:[A.Afghanistan],decimal_digits:2,decimal_separator:".",name:"Afghan Afghani",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u060B",symbol_native:"\u060B",symbol_placement:"before",thousands_separator:","},AlbaniaLek:{code:"ALL",countries:[A.Albania],decimal_digits:2,decimal_separator:",",name:"Albanian Lek",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lek",symbol_native:"Lek",symbol_placement:"before",thousands_separator:"."},AlgeriaDinar:{code:"DZD",countries:[A.Algeria],decimal_digits:2,decimal_separator:".",name:"Algerian Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u062C",symbol_native:"\u062F.\u062C",symbol_placement:"before",thousands_separator:","},ArgentinaPeso:{code:"ARS",countries:[A.Argentina],decimal_digits:2,decimal_separator:".",name:"Argentine Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ArmeniaDram:{code:"AMD",countries:[A.Armenia],decimal_digits:2,decimal_separator:",",name:"Armenian Dram",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0564\u0580.",symbol_native:"\u0564\u0580.",symbol_placement:"before",thousands_separator:"."},ArubaFlorin:{code:"AWG",countries:[A.Aruba],decimal_digits:2,decimal_separator:".",name:"Aruban Florin",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0192",symbol_native:"\u0192",symbol_placement:"before",thousands_separator:","},AustraliaDollar:{code:"AUD",countries:[A.Australia],decimal_digits:2,decimal_separator:".",name:"Australian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},AzerbaijanManat:{code:"AZN",countries:[A.Azerbaijan],decimal_digits:2,decimal_separator:".",name:"Azerbaijani Manat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u043C\u0430\u043D",symbol_native:"\u043C\u0430\u043D",symbol_placement:"before",thousands_separator:","},BahrainDinar:{code:"BHD",countries:[A.Bahrain],decimal_digits:3,decimal_separator:".",name:"Bahraini Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:".\u062F.\u0628",symbol_native:".\u062F.\u0628",symbol_placement:"before",thousands_separator:","},BangladeshTaka:{code:"BDT",countries:[A.Bangladesh],decimal_digits:2,decimal_separator:".",name:"Bangladeshi Taka",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u09F3",symbol_native:"\u09F3",symbol_placement:"before",thousands_separator:","},BarbadosDollar:{code:"BBD",countries:[A.Barbados],decimal_digits:2,decimal_separator:".",name:"Barbadian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BelarusRuble:{code:"BYN",countries:[A.Belarus],decimal_digits:2,decimal_separator:".",name:"Belarusian Ruble",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Br",symbol_native:"Br",symbol_placement:"before",thousands_separator:"."},BelizeDollar:{code:"BZD",countries:[A.Belize],decimal_digits:2,decimal_separator:".",name:"Belize Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"BZ$",symbol_native:"BZ$",symbol_placement:"before",thousands_separator:","},BermudaDollar:{code:"BMD",countries:[A.Bermuda],decimal_digits:2,decimal_separator:".",name:"Bermudian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BoliviaBoliviano:{code:"BOB",countries:[A.Bolivia],decimal_digits:2,decimal_separator:".",name:"Bolivian Boliviano",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$b",symbol_native:"$b",symbol_placement:"before",thousands_separator:","},BosniaAndHerzegovinaConvertibleMarka:{code:"BAM",countries:[A.BosniaAndHerzegovina],decimal_digits:2,decimal_separator:",",name:"Bosnia and Herzegovina Convertible Marka",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KM",symbol_native:"KM",symbol_placement:"before",thousands_separator:"."},BotswanaPula:{code:"BWP",countries:[A.Botswana],decimal_digits:2,decimal_separator:".",name:"Botswana Pula",negative_sign:"-",positive_sign:"",rounding:0,symbol:"P",symbol_native:"P",symbol_placement:"before",thousands_separator:","},BrazilReal:{code:"BRL",countries:[A.Brazil],decimal_digits:2,decimal_separator:",",name:"Brazilian Real",negative_sign:"-",positive_sign:"",rounding:0,symbol:"R$",symbol_native:"R$",symbol_placement:"before",thousands_separator:"."},BruneiDollar:{code:"BND",countries:[A.Brunei],decimal_digits:2,decimal_separator:".",name:"Brunei Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BulgariaLev:{code:"BGN",countries:[A.Bulgaria],decimal_digits:2,decimal_separator:".",name:"Bulgarian Lev",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u043B\u0432",symbol_native:"\u043B\u0432",symbol_placement:"before",thousands_separator:"."},BurundiFranc:{code:"BIF",countries:[A.Burundi],decimal_digits:0,decimal_separator:".",name:"Burundian Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"FBu",symbol_native:"FBu",symbol_placement:"before",thousands_separator:","},CambodiaRiel:{code:"KHR",countries:[A.Cambodia],decimal_digits:2,decimal_separator:",",name:"Cambodian Riel",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u17DB",symbol_native:"\u17DB",symbol_placement:"before",thousands_separator:"."},CanadaDollar:{code:"CAD",countries:[A.Canada],decimal_digits:2,decimal_separator:".",name:"Canadian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},CapeVerdeEscudo:{code:"CVE",countries:[A.CapeVerde],decimal_digits:2,decimal_separator:".",name:"Cape Verde Escudo",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Esc",symbol_native:"Esc",symbol_placement:"before",thousands_separator:","},CaymanIslandsDollar:{code:"KYD",countries:[A.CaymanIslands],decimal_digits:2,decimal_separator:".",name:"Cayman Islands Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ChilePeso:{code:"CLP",countries:[A.Chile],decimal_digits:0,decimal_separator:".",name:"Chilean Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ChinaYuanRenminbi:{code:"CNY",countries:[A.China],decimal_digits:2,decimal_separator:".",name:"Chinese Yuan",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA5",symbol_native:"\xA5",symbol_placement:"before",thousands_separator:","},ColombiaPeso:{code:"COP",countries:[A.Colombia],decimal_digits:2,decimal_separator:".",name:"Colombian Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ComorosFranc:{code:"KMF",countries:[A.Comoros],decimal_digits:0,decimal_separator:".",name:"Comoros Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CF",symbol_native:"CF",symbol_placement:"before",thousands_separator:","},CostaRicaColon:{code:"CRC",countries:[A.CostaRica],decimal_digits:2,decimal_separator:".",name:"Costa Rican Colon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A1",symbol_native:"\u20A1",symbol_placement:"before",thousands_separator:","},CroatiaKuna:{code:"HRK",countries:[A.Croatia],decimal_digits:2,decimal_separator:",",name:"Croatian Kuna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kn",symbol_native:"kn",symbol_placement:"before",thousands_separator:"."},CubaConvertiblePeso:{code:"CUC",countries:[A.Cuba],decimal_digits:2,decimal_separator:",",name:"Cuba Convertible Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},CubaPeso:{code:"CUP",countries:[A.Cuba],decimal_digits:2,decimal_separator:",",name:"Cuba Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},CyprusPound:{code:"CYP",countries:[A.Cyprus],decimal_digits:2,decimal_separator:",",name:"Cyprus Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},CzechRepublicKoruna:{code:"CZK",countries:[A.CzechRepublic],decimal_digits:2,decimal_separator:",",name:"Czech Republic Koruna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"K\u010D",symbol_native:"K\u010D",symbol_placement:"before",thousands_separator:"."},DenmarkKrone:{code:"DKK",countries:[A.Denmark],decimal_digits:2,decimal_separator:",",name:"Denmark Krone",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},DjiboutiFranc:{code:"DJF",countries:[A.Djibouti],decimal_digits:0,decimal_separator:".",name:"Djibouti Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Fdj",symbol_native:"Fdj",symbol_placement:"before",thousands_separator:","},DominicanRepublicPeso:{code:"DOP",countries:[A.DominicanRepublic],decimal_digits:2,decimal_separator:",",name:"Dominican Republic Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RD$",symbol_native:"RD$",symbol_placement:"before",thousands_separator:"."},EastCaribbeanDollar:{code:"XCD",countries:[A.AntiguaAndBarbuda,A.Dominica,A.Grenada,A.SaintKittsAndNevis,A.SaintLucia,A.SaintVincentAndTheGrenadines],decimal_digits:2,decimal_separator:".",name:"East Caribbean Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},EgyptPound:{code:"EGP",countries:[A.Egypt],decimal_digits:2,decimal_separator:".",name:"Egypt Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:","},ElSalvadorColon:{code:"SVC",countries:[A.ElSalvador],decimal_digits:2,decimal_separator:",",name:"El Salvador Colon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A1",symbol_native:"\u20A1",symbol_placement:"before",thousands_separator:"."},EquatorialGuineaEkwele:{code:"GQE",countries:[A.EquatorialGuinea],decimal_digits:0,decimal_separator:".",name:"Equatorial Guinea Ekwele",negative_sign:"-",positive_sign:"",rounding:0,symbol:"GQE",symbol_native:"GQE",symbol_placement:"before",thousands_separator:","},EritreaNakfa:{code:"ERN",countries:[A.Eritrea],decimal_digits:2,decimal_separator:",",name:"Eritrea Nakfa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Nfk",symbol_native:"Nfk",symbol_placement:"before",thousands_separator:"."},EstoniaKroon:{code:"EEK",countries:[A.Estonia],decimal_digits:2,decimal_separator:",",name:"Estonia Kroon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},EthiopiaBirr:{code:"ETB",countries:[A.Ethiopia],decimal_digits:2,decimal_separator:",",name:"Ethiopia Birr",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Br",symbol_native:"Br",symbol_placement:"before",thousands_separator:"."},Euro:{code:"EUR",countries:[A.Andorra,A.Austria,A.Belgium,A.Cyprus,A.Estonia,A.Finland,A.France,A.Germany,A.Greece,A.Ireland,A.Italy,A.Latvia,A.Lithuania,A.Luxembourg,A.Malta,A.Monaco,A.Netherlands,A.Portugal,A.Spain,A.Sweden,A.UnitedKingdom],decimal_digits:2,decimal_separator:",",name:"Euro",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AC",symbol_native:"\u20AC",symbol_placement:"before",thousands_separator:"."},FalklandIslandsPound:{code:"FKP",countries:[A.FalklandIslands],decimal_digits:2,decimal_separator:",",name:"Equatorial Guinea Ekwele",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},FijiDollar:{code:"FJD",countries:[A.Fiji],decimal_digits:2,decimal_separator:",",name:"Fiji Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},GambiaDalasi:{code:"GMD",countries:[A.Gambia],decimal_digits:2,decimal_separator:",",name:"Gambia Dalasi",negative_sign:"-",positive_sign:"",rounding:0,symbol:"D",symbol_native:"D",symbol_placement:"before",thousands_separator:"."},GeorgiaLari:{code:"GEL",countries:[A.Georgia],decimal_digits:2,decimal_separator:",",name:"Georgia Lari",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BE",symbol_native:"\u20BE",symbol_placement:"before",thousands_separator:"."},GhanaCedi:{code:"GHS",countries:[A.Ghana],decimal_digits:2,decimal_separator:",",name:"Ghana Cedi",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B5",symbol_native:"\u20B5",symbol_placement:"before",thousands_separator:"."},GibraltarPound:{code:"GIP",countries:[A.Gibraltar],decimal_digits:2,decimal_separator:",",name:"Gibraltar Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},GuatemalaQuetzal:{code:"GTQ",countries:[A.Guatemala],decimal_digits:2,decimal_separator:",",name:"Guatemala Quetzal",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Q",symbol_native:"Q",symbol_placement:"before",thousands_separator:"."},GuernseyPound:{code:"GGP",countries:[A.Guernsey],decimal_digits:2,decimal_separator:",",name:"Guernsey Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},GuineaBissauPeso:{code:"GWP",countries:[A.GuineaBissau],decimal_digits:2,decimal_separator:",",name:"Guinea-Bissau Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B5",symbol_native:"\u20B5",symbol_placement:"before",thousands_separator:"."},GuyanaDollar:{code:"GYD",countries:[A.Guyana],decimal_digits:2,decimal_separator:",",name:"Guyana Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},HaitiGourde:{code:"HTG",countries:[A.Haiti],decimal_digits:2,decimal_separator:",",name:"Haiti Gourde",negative_sign:"-",positive_sign:"",rounding:0,symbol:"G",symbol_native:"G",symbol_placement:"before",thousands_separator:"."},HondurasLempira:{code:"HNL",countries:[A.Honduras],decimal_digits:2,decimal_separator:",",name:"Honduras Lempira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"L",symbol_native:"L",symbol_placement:"before",thousands_separator:"."},HongKongDollar:{code:"HKD",countries:[A.HongKong],decimal_digits:2,decimal_separator:",",name:"Hong Kong Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},HungaryForint:{code:"HUF",countries:[A.Hungary],decimal_digits:2,decimal_separator:",",name:"Hungary Forint",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ft",symbol_native:"Ft",symbol_placement:"before",thousands_separator:"."},IcelandKrona:{code:"ISK",countries:[A.Iceland],decimal_digits:0,decimal_separator:",",name:"Iceland Krona",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},IndianRupee:{code:"INR",countries:[A.India,A.Bhutan],decimal_digits:2,decimal_separator:",",name:"Indian Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B9",symbol_native:"\u20B9",symbol_placement:"before",thousands_separator:"."},IndonesiaRupiah:{code:"IDR",countries:[A.Indonesia],decimal_digits:0,decimal_separator:",",name:"Indonesia Rupiah",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Rp",symbol_native:"Rp",symbol_placement:"before",thousands_separator:"."},IranRial:{code:"IRR",countries:[A.Iran],decimal_digits:0,decimal_separator:",",name:"Iran Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},IsleOfManPound:{code:"IMP",countries:[A.IsleOfMan],decimal_digits:2,decimal_separator:",",name:"Isle of Man Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},IsraeliShekel:{code:"ILS",countries:[A.Israel],decimal_digits:2,decimal_separator:",",name:"Israeli Shekel",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AA",symbol_native:"\u20AA",symbol_placement:"before",thousands_separator:"."},JamaicaDollar:{code:"JMD",countries:[A.Jamaica],decimal_digits:2,decimal_separator:",",name:"Jamaica Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"J$",symbol_native:"J$",symbol_placement:"before",thousands_separator:"."},JapanYen:{code:"JPY",countries:[A.Japan],decimal_digits:0,decimal_separator:",",name:"Japan Yen",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA5",symbol_native:"\uFFE5",symbol_placement:"before",thousands_separator:"."},JerseyPound:{code:"JEP",countries:[A.Jersey],decimal_digits:2,decimal_separator:",",name:"Jersey Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},JordanDinar:{code:"JOD",countries:[A.Jordan],decimal_digits:3,decimal_separator:",",name:"Jordan Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"JD",symbol_native:"JD",symbol_placement:"before",thousands_separator:"."},KazakhstanTenge:{code:"KZT",countries:[A.Kazakhstan],decimal_digits:2,decimal_separator:",",name:"Kazakhstan Tenge",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B8",symbol_native:"\u20B8",symbol_placement:"before",thousands_separator:"."},KenyaShilling:{code:"KES",countries:[A.Kenya],decimal_digits:2,decimal_separator:",",name:"Kenya Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KSh",symbol_native:"KSh",symbol_placement:"before",thousands_separator:"."},KuwaitDinar:{code:"KWD",countries:[A.Kuwait],decimal_digits:3,decimal_separator:",",name:"Kuwait Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KD",symbol_native:"KD",symbol_placement:"before",thousands_separator:"."},KyrgyzstanSom:{code:"KGS",countries:[A.Kyrgyzstan],decimal_digits:2,decimal_separator:",",name:"Kyrgyzstan Som",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KGS",symbol_native:"KGS",symbol_placement:"before",thousands_separator:"."},LaosKip:{code:"LAK",countries:[A.Laos],decimal_digits:0,decimal_separator:",",name:"Laos Kip",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AD",symbol_native:"\u20AD",symbol_placement:"before",thousands_separator:"."},LatviaLats:{code:"LVL",countries:[A.Latvia],decimal_digits:2,decimal_separator:",",name:"Latvia Lat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ls",symbol_native:"Ls",symbol_placement:"before",thousands_separator:"."},LebanonPound:{code:"LBP",countries:[A.Lebanon],decimal_digits:0,decimal_separator:",",name:"Lebanon Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},LesothoLoti:{code:"LSL",countries:[A.Lesotho],decimal_digits:2,decimal_separator:",",name:"Lesotho Loti",negative_sign:"-",positive_sign:"",rounding:0,symbol:"M",symbol_native:"M",symbol_placement:"before",thousands_separator:"."},LiberiaDollar:{code:"LRD",countries:[A.Liberia],decimal_digits:2,decimal_separator:",",name:"Liberia Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},LibyanDinar:{code:"LYD",countries:[A.Libya],decimal_digits:3,decimal_separator:",",name:"Libyan Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"LD",symbol_native:"LD",symbol_placement:"before",thousands_separator:"."},LithuaniaLitas:{code:"LTL",countries:[A.Lithuania],decimal_digits:2,decimal_separator:",",name:"Lithuania Litas",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lt",symbol_native:"Lt",symbol_placement:"before",thousands_separator:"."},MacauPataca:{code:"MOP",countries:[A.Macau],decimal_digits:2,decimal_separator:",",name:"Macau Pataca",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MOP$",symbol_native:"MOP$",symbol_placement:"before",thousands_separator:"."},MacedoniaDenar:{code:"MKD",countries:[A.NorthMacedonia],decimal_digits:2,decimal_separator:",",name:"Macedonia Denar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0434\u0435\u043D",symbol_native:"\u0434\u0435\u043D",symbol_placement:"before",thousands_separator:"."},MadagascarAriary:{code:"MGA",countries:[A.Madagascar],decimal_digits:0,decimal_separator:",",name:"Madagascar Ariary",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ar",symbol_native:"Ar",symbol_placement:"before",thousands_separator:"."},MalawiKwacha:{code:"MWK",countries:[A.Malawi],decimal_digits:2,decimal_separator:",",name:"Malawi Kwacha",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MK",symbol_native:"MK",symbol_placement:"before",thousands_separator:"."},MalaysiaRinggit:{code:"MYR",countries:[A.Malaysia],decimal_digits:2,decimal_separator:",",name:"Malaysia Ringgit",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RM",symbol_native:"RM",symbol_placement:"before",thousands_separator:"."},MaldivesRufiyaa:{code:"MVR",countries:[A.Maldives],decimal_digits:2,decimal_separator:",",name:"Maldives Rufiyaa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Rf",symbol_native:"Rf",symbol_placement:"before",thousands_separator:"."},MaltaLira:{code:"MTL",countries:[A.Malta],decimal_digits:2,decimal_separator:",",name:"Malta Lira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lm",symbol_native:"Lm",symbol_placement:"before",thousands_separator:"."},MauritiusRupee:{code:"MUR",countries:[A.Mauritius],decimal_digits:2,decimal_separator:",",name:"Mauritius Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},MexicoPeso:{code:"MXN",countries:[A.Mexico],decimal_digits:2,decimal_separator:",",name:"Mexico Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},MoldovaLeu:{code:"MDL",countries:[A.Moldova],decimal_digits:2,decimal_separator:",",name:"Moldova Leu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"L",symbol_native:"L",symbol_placement:"before",thousands_separator:"."},MongoliaTughrik:{code:"MNT",countries:[A.Mongolia],decimal_digits:2,decimal_separator:",",name:"Mongolia Tughrik",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AE",symbol_native:"\u20AE",symbol_placement:"before",thousands_separator:"."},MoroccoDirham:{code:"MAD",countries:[A.Morocco],decimal_digits:2,decimal_separator:",",name:"Morocco Dirham",negative_sign:"-",positive_sign:"",rounding:0,symbol:"DH",symbol_native:"DH",symbol_placement:"before",thousands_separator:"."},MozambiqueMetical:{code:"MZN",countries:[A.Mozambique],decimal_digits:2,decimal_separator:",",name:"Mozambique Metical",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MT",symbol_native:"MT",symbol_placement:"before",thousands_separator:"."},MyanmarKyat:{code:"MMK",countries:[A.Myanmar],decimal_digits:0,decimal_separator:",",name:"Myanmar Kyat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"K",symbol_native:"K",symbol_placement:"before",thousands_separator:"."},NamibiaDollar:{code:"NAD",countries:[A.Namibia],decimal_digits:2,decimal_separator:",",name:"Namibia Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},NepalRupee:{code:"NPR",countries:[A.Nepal],decimal_digits:2,decimal_separator:",",name:"Nepal Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},NetherlandsAntillesGuilder:{code:"ANG",countries:[A.NetherlandsAntilles],decimal_digits:2,decimal_separator:",",name:"Netherlands Antilles Guilder",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0192",symbol_native:"\u0192",symbol_placement:"before",thousands_separator:"."},NewCaledoniaFranc:{code:"XPF",countries:[A.NewCaledonia],decimal_digits:0,decimal_separator:",",name:"New Caledonia Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A3",symbol_native:"\u20A3",symbol_placement:"before",thousands_separator:"."},NewZealandDollar:{code:"NZD",countries:[A.NewZealand],decimal_digits:2,decimal_separator:",",name:"New Zealand Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},NicaraguaCordoba:{code:"NIO",countries:[A.Nicaragua],decimal_digits:2,decimal_separator:",",name:"Nicaragua Cordoba",negative_sign:"-",positive_sign:"",rounding:0,symbol:"C$",symbol_native:"C$",symbol_placement:"before",thousands_separator:"."},NigerCFAFranc:{code:"XOF",countries:[A.Niger],decimal_digits:0,decimal_separator:",",name:"Niger CFA Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CFA",symbol_native:"CFA",symbol_placement:"before",thousands_separator:"."},NigeriaNaira:{code:"NGN",countries:[A.Nigeria],decimal_digits:2,decimal_separator:",",name:"Nigeria Naira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A6",symbol_native:"\u20A6",symbol_placement:"before",thousands_separator:"."},NorthKoreaWon:{code:"KPW",countries:[A.NorthKorea],decimal_digits:0,decimal_separator:",",name:"North Korea Won",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A9",symbol_native:"\u20A9",symbol_placement:"before",thousands_separator:"."},NorwayKrone:{code:"NOK",countries:[A.Norway],decimal_digits:2,decimal_separator:",",name:"Norway Krone",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},OmanRial:{code:"OMR",countries:[A.Oman],decimal_digits:3,decimal_separator:",",name:"Oman Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},PakistanRupee:{code:"PKR",countries:[A.Pakistan],decimal_digits:2,decimal_separator:",",name:"Pakistan Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},PanamaBalboa:{code:"PAB",countries:[A.Panama],decimal_digits:2,decimal_separator:",",name:"Panama Balboa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"B/.",symbol_native:"B/.",symbol_placement:"before",thousands_separator:"."},ParaguayGuarani:{code:"PYG",countries:[A.Paraguay],decimal_digits:0,decimal_separator:",",name:"Paraguay Guarani",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Gs",symbol_native:"Gs",symbol_placement:"before",thousands_separator:"."},PeruvianNuevo:{code:"PEN",countries:[A.Peru],decimal_digits:2,decimal_separator:",",name:"Peruvian Nuevo",negative_sign:"-",positive_sign:"",rounding:0,symbol:"S/.",symbol_native:"S/.",symbol_placement:"before",thousands_separator:"."},PhilippinesPeso:{code:"PHP",countries:[A.Philippines],decimal_digits:2,decimal_separator:",",name:"Philippines Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B1",symbol_native:"\u20B1",symbol_placement:"before",thousands_separator:"."},PolandZloty:{code:"PLN",countries:[A.Poland],decimal_digits:2,decimal_separator:",",name:"Poland Zloty",negative_sign:"-",positive_sign:"",rounding:0,symbol:"z\u0142",symbol_native:"z\u0142",symbol_placement:"before",thousands_separator:"."},QatarRial:{code:"QAR",countries:[A.Qatar],decimal_digits:2,decimal_separator:",",name:"Qatar Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},RomaniaNewLeu:{code:"RON",countries:[A.Romania],decimal_digits:2,decimal_separator:",",name:"Romania New Leu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"lei",symbol_native:"lei",symbol_placement:"before",thousands_separator:"."},RussiaRuble:{code:"RUB",countries:[A.RussianFederation],decimal_digits:2,decimal_separator:",",name:"Russia Ruble",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BD",symbol_native:"\u20BD",symbol_placement:"before",thousands_separator:"."},RwandaFranc:{code:"RWF",countries:[A.Rwanda],decimal_digits:0,decimal_separator:",",name:"Rwanda Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RF",symbol_native:"RF",symbol_placement:"before",thousands_separator:"."},SaudiArabiaRiyal:{code:"SAR",countries:[A.SaudiArabia],decimal_digits:2,decimal_separator:",",name:"Saudi Arabia Riyal",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},SerbiaDinar:{code:"RSD",countries:[A.Serbia],decimal_digits:0,decimal_separator:",",name:"Serbia Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0414\u0438\u043D.",symbol_native:"\u0414\u0438\u043D.",symbol_placement:"before",thousands_separator:"."},SeychellesRupee:{code:"SCR",countries:[A.Seychelles],decimal_digits:2,decimal_separator:",",name:"Seychelles Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},SingaporeDollar:{code:"SGD",countries:[A.Singapore],decimal_digits:2,decimal_separator:",",name:"Singapore Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SlovakiaKoruna:{code:"SKK",countries:[A.Slovakia],decimal_digits:2,decimal_separator:",",name:"Slovakia Koruna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Sk",symbol_native:"Sk",symbol_placement:"before",thousands_separator:"."},SloveniaTolar:{code:"SIT",countries:[A.Slovenia],decimal_digits:2,decimal_separator:",",name:"Slovenia Tolar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"SIT",symbol_native:"SIT",symbol_placement:"before",thousands_separator:"."},SolomonIslandsDollar:{code:"SBD",countries:[A.SolomonIslands],decimal_digits:2,decimal_separator:",",name:"Solomon Islands Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SomaliaShilling:{code:"SOS",countries:[A.Somalia],decimal_digits:0,decimal_separator:",",name:"Somalia Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"S",symbol_native:"S",symbol_placement:"before",thousands_separator:"."},SouthAfricaRand:{code:"ZAR",countries:[A.SouthAfrica],decimal_digits:2,decimal_separator:",",name:"South Africa Rand",negative_sign:"-",positive_sign:"",rounding:0,symbol:"R",symbol_native:"R",symbol_placement:"before",thousands_separator:"."},SouthKoreaWon:{code:"KRW",countries:[A.SouthKorea],decimal_digits:0,decimal_separator:",",name:"South Korea Won",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A9",symbol_native:"\u20A9",symbol_placement:"before",thousands_separator:"."},SriLankaRupee:{code:"LKR",countries:[A.SriLanka],decimal_digits:2,decimal_separator:",",name:"Sri Lanka Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},SudanPound:{code:"SDG",countries:[A.Sudan],decimal_digits:2,decimal_separator:",",name:"Sudan Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},SurinameDollar:{code:"SRD",countries:[A.Suriname],decimal_digits:2,decimal_separator:",",name:"Suriname Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SwazilandLilangeni:{code:"SZL",countries:[A.Swaziland],decimal_digits:2,decimal_separator:",",name:"Swaziland Lilangeni",negative_sign:"-",positive_sign:"",rounding:0,symbol:"E",symbol_native:"E",symbol_placement:"before",thousands_separator:"."},SwedenKrona:{code:"SEK",countries:[A.Sweden],decimal_digits:2,decimal_separator:",",name:"Sweden Krona",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},SwitzerlandFranc:{code:"CHF",countries:[A.Switzerland],decimal_digits:2,decimal_separator:",",name:"Switzerland Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CHF",symbol_native:"CHF",symbol_placement:"before",thousands_separator:"."},SyriaPound:{code:"SYP",countries:[A.Syria],decimal_digits:2,decimal_separator:",",name:"Syria Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},TaiwanNewDollar:{code:"TWD",countries:[A.Taiwan],decimal_digits:2,decimal_separator:",",name:"Taiwan New Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"NT$",symbol_native:"NT$",symbol_placement:"before",thousands_separator:"."},TajikistanSomoni:{code:"TJS",countries:[A.Tajikistan],decimal_digits:2,decimal_separator:",",name:"Tajikistan Somoni",negative_sign:"-",positive_sign:"",rounding:0,symbol:"TJS",symbol_native:"TJS",symbol_placement:"before",thousands_separator:"."},TanzaniaShilling:{code:"TZS",countries:[A.Tanzania],decimal_digits:2,decimal_separator:",",name:"Tanzania Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"TSh",symbol_native:"TSh",symbol_placement:"before",thousands_separator:"."},ThailandBaht:{code:"THB",countries:[A.Thailand],decimal_digits:2,decimal_separator:",",name:"Thailand Baht",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0E3F",symbol_native:"\u0E3F",symbol_placement:"before",thousands_separator:"."},TunisiaDinar:{code:"TND",countries:[A.Tunisia],decimal_digits:3,decimal_separator:",",name:"Tunisia Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u062A",symbol_native:"\u062F.\u062A",symbol_placement:"before",thousands_separator:"."},TurkeyLira:{code:"TRY",countries:[A.Turkey],decimal_digits:2,decimal_separator:",",name:"Turkey Lira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BA",symbol_native:"\u20BA",symbol_placement:"before",thousands_separator:"."},TurkmenistanManat:{code:"TMT",countries:[A.Turkmenistan],decimal_digits:2,decimal_separator:",",name:"Turkmenistan Manat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"m",symbol_native:"m",symbol_placement:"before",thousands_separator:"."},UgandaShilling:{code:"UGX",countries:[A.Uganda],decimal_digits:0,decimal_separator:",",name:"Uganda Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"USh",symbol_native:"USh",symbol_placement:"before",thousands_separator:"."},UkraineHryvnia:{code:"UAH",countries:[A.Ukraine],decimal_digits:2,decimal_separator:",",name:"Ukraine Hryvnia",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B4",symbol_native:"\u20B4",symbol_placement:"before",thousands_separator:"."},UnitedArabEmiratesDirham:{code:"AED",countries:[A.UnitedArabEmirates],decimal_digits:2,decimal_separator:",",name:"United Arab Emirates Dirham",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u0625",symbol_native:"\u062F.\u0625",symbol_placement:"before",thousands_separator:"."},UnitedKingdomPound:{code:"GBP",countries:[A.UnitedKingdom],decimal_digits:2,decimal_separator:",",name:"United Kingdom Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},UnitedStatesDollar:{code:"USD",countries:[A.UnitedStates],decimal_digits:2,decimal_separator:",",name:"United States Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},UruguayPeso:{code:"UYU",countries:[A.Uruguay],decimal_digits:2,decimal_separator:",",name:"Uruguay Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$U",symbol_native:"$U",symbol_placement:"before",thousands_separator:"."},UzbekistanSom:{code:"UZS",countries:[A.Uzbekistan],decimal_digits:2,decimal_separator:",",name:"Uzbekistan Som",negative_sign:"-",positive_sign:"",rounding:0,symbol:"UZS",symbol_native:"UZS",symbol_placement:"before",thousands_separator:"."},VanuatuVatu:{code:"VUV",countries:[A.Vanuatu],decimal_digits:0,decimal_separator:",",name:"Vanuatu Vatu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"VT",symbol_native:"VT",symbol_placement:"before",thousands_separator:"."},VenezuelaBolivar:{code:"VEF",countries:[A.Venezuela],decimal_digits:2,decimal_separator:",",name:"Venezuela Bolivar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Bs. F",symbol_native:"Bs. F",symbol_placement:"before",thousands_separator:"."},VietnamDong:{code:"VND",countries:[A.Vietnam],decimal_digits:0,decimal_separator:",",name:"Vietnam Dong",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AB",symbol_native:"\u20AB",symbol_placement:"before",thousands_separator:"."},YemenRial:{code:"YER",countries:[A.Yemen],decimal_digits:2,decimal_separator:",",name:"Yemen Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},ZambiaKwacha:{code:"ZMW",countries:[A.Zambia],decimal_digits:2,decimal_separator:",",name:"Zambia Kwacha",negative_sign:"-",positive_sign:"",rounding:0,symbol:"ZK",symbol_native:"ZK",symbol_placement:"before",thousands_separator:"."},ZimbabweDollar:{code:"ZWL",countries:[A.Zimbabwe],decimal_digits:2,decimal_separator:",",name:"Zimbabwe Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AB",symbol_native:"\u20AB",symbol_placement:"before",thousands_separator:"."}};var I=(a=>(a.Afrikaans="af",a.Albanian="sq",a.Amharic="am",a.Arabic="ar",a.Armenian="hy",a.Azerbaijani="az",a.Bashkir="ba",a.Basque="eu",a.Belarusian="be",a.Bengali="bn",a.Berber="ber",a.Bhutani="dz",a.Bihari="bh",a.Bislama="bi",a.Bosnian="bs",a.Breten="br",a.Bulgarian="bg",a.Burmese="my",a.Cantonese="yue",a.Catalan="ca",a.Chinese="zh",a.Chuvash="cv",a.Corsican="co",a.Croatian="hr",a.Czech="cs",a.Danish="da",a.Dari="prs",a.Divehi="dv",a.Dutch="nl",a.English="en",a.Esperanto="eo",a.Estonian="et",a.Faroese="fo",a.Farsi="fa",a.Filipino="fil",a.Finnish="fi",a.French="fr",a.Frisian="fy",a.Galician="gl",a.Georgian="ka",a.German="de",a.Greek="el",a.Greenlandic="kl",a.Gujarati="gu",a.Haitian="ht",a.Hausa="ha",a.Hebrew="he",a.Hindi="hi",a.Hungarian="hu",a.Icelandic="is",a.Igbo="ig",a.Indonesian="id",a.Irish="ga",a.Italian="it",a.Japanese="ja",a.Javanese="jv",a.Kannada="kn",a.Karelian="krl",a.Kazakh="kk",a.Khmer="km",a.Komi="kv",a.Konkani="kok",a.Korean="ko",a.Kurdish="ku",a.Kyrgyz="ky",a.Lao="lo",a.Latin="la",a.Latvian="lv",a.Lithuanian="lt",a.Luxembourgish="lb",a.Ossetian="os",a.Macedonian="mk",a.Malagasy="mg",a.Malay="ms",a.Malayalam="ml",a.Maltese="mt",a.Maori="mi",a.Marathi="mr",a.Mari="mhr",a.Mongolian="mn",a.Montenegrin="me",a.Nepali="ne",a.NorthernSotho="nso",a.Norwegian="no",a.NorwegianBokmal="nb",a.NorwegianNynorsk="nn",a.Oriya="or",a.Pashto="ps",a.Persian="fa",a.Polish="pl",a.Portuguese="pt",a.Punjabi="pa",a.Quechua="qu",a.Romanian="ro",a.Russian="ru",a.Sakha="sah",a.Sami="se",a.Samoan="sm",a.Sanskrit="sa",a.Scots="gd",a.Serbian="sr",a.SerbianCyrillic="sr-Cyrl",a.Sesotho="st",a.Shona="sn",a.Sindhi="sd",a.Sinhala="si",a.Slovak="sk",a.Slovenian="sl",a.Somali="so",a.Spanish="es",a.Sudanese="su",a.Sutu="sx",a.Swahili="sw",a.Swedish="sv",a.Syriac="syr",a.Tagalog="tl",a.Tajik="tg",a.Tamazight="tmh",a.Tamil="ta",a.Tatar="tt",a.Telugu="te",a.Thai="th",a.Tibetan="bo",a.Tsonga="ts",a.Tswana="tn",a.Turkish="tr",a.Turkmen="tk",a.Ukrainian="uk",a.Urdu="ur",a.Uzbek="uz",a.Vietnamese="vi",a.Welsh="cy",a.Xhosa="xh",a.Yiddish="yi",a.Yoruba="yo",a.Zulu="zu",a))(I||{}),e=(a=>(a.Afrikaans="af",a.AfrikaansSouthAfrica="af-ZA",a.Albanian="sq",a.AlbanianAlbania="sq-AL",a.Amharic="am",a.AmharicEthiopia="am-ET",a.Arabic="ar",a.ArabicAlgeria="ar-DZ",a.ArabicBahrain="ar-BH",a.ArabicEgypt="ar-EG",a.ArabicIraq="ar-IQ",a.ArabicJordan="ar-JO",a.ArabicKuwait="ar-KW",a.ArabicLebanon="ar-LB",a.ArabicLibya="ar-LY",a.ArabicMorocco="ar-MA",a.ArabicOman="ar-OM",a.ArabicQatar="ar-QA",a.ArabicSaudiArabia="ar-SA",a.ArabicSyria="ar-SY",a.ArabicTunisia="ar-TN",a.ArabicUnitedArabEmirates="ar-AE",a.ArabicYemen="ar-YE",a.Armenian="hy",a.ArmenianArmenia="hy-AM",a.Azerbaijani="az",a.AzerbaijaniAzerbaijan="az-AZ",a.AzerbaijaniCyrillicAzerbaijan="az-Cyrl-AZ",a.Bashkir="ba",a.Basque="eu",a.BasqueSpain="eu-ES",a.Belarusian="be",a.BelarusianBelarus="be-BY",a.Bengali="bn",a.BengaliBangladesh="bn-BD",a.BengaliIndia="bn-IN",a.Berber="ber",a.Bhutani="dz",a.BhutaniBhutan="dz-BT",a.Bosnian="bs",a.BosnianBosniaAndHerzegovina="bs-BA",a.Breton="br",a.Bulgarian="bg",a.BulgarianBosniaAndHerzegovina="bg-BG",a.BulgarianBulgaria="bg-BG",a.Burmese="my",a.BurmeseMyanmar="my-MM",a.Cantonese="yue",a.CantoneseHongKong="yue-HK",a.Catalan="ca",a.CatalanSpain="ca-ES",a.Chechen="ce",a.Cherokee="chr",a.Chinese="zh",a.ChineseSimplified="zh-Hans",a.ChineseSimplifiedChina="zh-Hans-CN",a.ChineseSimplifiedHongKong="zh-Hans-HK",a.ChineseSimplifiedMacau="zh-Hans-MO",a.ChineseSimplifiedSingapore="zh-Hans-SG",a.ChineseTraditional="zh-Hant",a.ChineseTraditionalHongKong="zh-Hant-HK",a.ChineseTraditionalMacau="zh-Hant-MO",a.ChineseTraditionalSingapore="zh-Hant-SG",a.ChineseTraditionalTaiwan="zh-Hant-TW",a.Chuvash="cv",a.CorsicanFrance="co-FR",a.Croatian="hr",a.CroatianBosniaAndHerzegovina="hr-BA",a.CroatianCroatia="hr-HR",a.Czech="cs",a.CzechCzechRepublic="cs-CZ",a.Danish="da",a.DanishDenmark="da-DK",a.Dari="prs",a.DariAfghanistan="prs-AF",a.Divehi="dv",a.DivehiMaldives="dv-MV",a.Dutch="nl",a.DutchBelgium="nl-BE",a.DutchNetherlands="nl-NL",a.English="en",a.EnglishAustralia="en-AU",a.EnglishBelgium="en-BE",a.EnglishBelize="en-BZ",a.EnglishCanada="en-CA",a.EnglishCaribbean="en-029",a.EnglishIreland="en-IE",a.EnglishJamaica="en-JM",a.EnglishNewZealand="en-NZ",a.EnglishPhilippines="en-PH",a.EnglishSingapore="en-SG",a.EnglishSouthAfrica="en-ZA",a.EnglishTrinidadAndTobago="en-TT",a.EnglishUnitedKingdom="en-GB",a.EnglishUnitedStates="en-US",a.EnglishZimbabwe="en-ZW",a.Esperanto="eo",a.Estonian="et",a.EstonianEstonia="et-EE",a.Faroese="fo",a.FaroeseFaroeIslands="fo-FO",a.Farsi="fa",a.FarsiIran="fa-IR",a.Filipino="fil",a.FilipinoPhilippines="fil-PH",a.Finnish="fi",a.FinnishFinland="fi-FI",a.French="fr",a.FrenchBelgium="fr-BE",a.FrenchCanada="fr-CA",a.FrenchFrance="fr-FR",a.FrenchLuxembourg="fr-LU",a.FrenchMonaco="fr-MC",a.FrenchReunion="fr-RE",a.FrenchSwitzerland="fr-CH",a.Frisian="fy",a.FrisianNetherlands="fy-NL",a.Galician="gl",a.GalicianSpain="gl-ES",a.Georgian="ka",a.GeorgianGeorgia="ka-GE",a.German="de",a.GermanAustria="de-AT",a.GermanBelgium="de-BE",a.GermanGermany="de-DE",a.GermanLiechtenstein="de-LI",a.GermanLuxembourg="de-LU",a.GermanSwitzerland="de-CH",a.Greenlandic="kl",a.GreenlandicGreenland="kl-GL",a.Greek="el",a.GreekGreece="el-GR",a.Gujarati="gu",a.GujaratiIndia="gu-IN",a.Haitian="ht",a.Hausa="ha",a.HausaGhana="ha-GH",a.HausaNiger="ha-NE",a.HausaNigeria="ha-NG",a.Hebrew="he",a.HebrewIsrael="he-IL",a.Hindi="hi",a.HindiIndia="hi-IN",a.Hungarian="hu",a.HungarianHungary="hu-HU",a.Icelandic="is",a.IcelandicIceland="is-IS",a.Igbo="ig",a.IgboNigeria="ig-NG",a.Indonesian="id",a.IndonesianIndonesia="id-ID",a.Irish="ga",a.IrishIreland="ga-IE",a.Italian="it",a.ItalianItaly="it-IT",a.ItalianSwitzerland="it-CH",a.Japanese="ja",a.JapaneseJapan="ja-JP",a.Javanese="jv",a.Kannada="kn",a.KannadaIndia="kn-IN",a.Karelian="krl",a.Kazakh="kk",a.KazakhKazakhstan="kk-KZ",a.Khmer="km",a.KhmerCambodia="km-KH",a.KinyarwandaRwanda="rw-RW",a.Komi="kv",a.Konkani="kok",a.KonkaniIndia="kok-IN",a.Korean="ko",a.KoreanSouthKorea="ko-KR",a.Kurdish="ku",a.KurdishIraq="ku-IQ",a.KurdishTurkey="ku-TR",a.Kyrgyz="ky",a.KyrgyzKyrgyzstan="ky-KG",a.Lao="lo",a.LaoLaos="lo-LA",a.Latin="la",a.Latvian="lv",a.LatvianLatvia="lv-LV",a.Lithuanian="lt",a.LithuanianLithuania="lt-LT",a.Luxembourgish="lb",a.LuxembourgishBelgium="lb-LU",a.LuxembourgishLuxembourg="lb-LU",a.Macedonian="mk",a.MacedonianNorthMacedonia="mk-MK",a.Malagasy="mg",a.Malay="ms",a.MalayBrunei="ms-BN",a.MalayIndia="ms-IN",a.MalayMalaysia="ms-MY",a.MalaySingapore="ms-SG",a.Malayalam="ml",a.MalayalamIndia="ml-IN",a.Maltese="mt",a.MalteseMalta="mt-MT",a.Maori="mi",a.MaoriNewZealand="mi-NZ",a.Marathi="mr",a.MarathiIndia="mr-IN",a.Mari="chm",a.Mongolian="mn",a.MongolianMongolia="mn-MN",a.Montenegrin="me",a.MontenegrinMontenegro="me-ME",a.Nepali="ne",a.NepaliNepal="ne-NP",a.NorthernSotho="ns",a.NorthernSothoSouthAfrica="ns-ZA",a.Norwegian="nb",a.NorwegianBokmalNorway="nb-NO",a.NorwegianNynorskNorway="nn-NO",a.Oriya="or",a.OriyaIndia="or-IN",a.Ossetian="os",a.Pashto="ps",a.PashtoAfghanistan="ps-AF",a.Persian="fa",a.PersianIran="fa-IR",a.Polish="pl",a.PolishPoland="pl-PL",a.Portuguese="pt",a.PortugueseBrazil="pt-BR",a.PortuguesePortugal="pt-PT",a.Punjabi="pa",a.PunjabiIndia="pa-IN",a.PunjabiPakistan="pa-PK",a.Quechua="qu",a.QuechuaBolivia="qu-BO",a.QuechuaEcuador="qu-EC",a.QuechuaPeru="qu-PE",a.Romanian="ro",a.RomanianRomania="ro-RO",a.Russian="ru",a.RussianKazakhstan="ru-KZ",a.RussianKyrgyzstan="ru-KG",a.RussianRussia="ru-RU",a.RussianUkraine="ru-UA",a.Sakha="sah",a.Sanskrit="sa",a.SanskritIndia="sa-IN",a.Sami="se",a.SamiNorway="se-NO",a.SamiSweden="se-SE",a.SamiFinland="se-FI",a.Samoan="sm",a.SamoanSamoa="sm-WS",a.Scots="gd",a.Serbian="sr",a.SerbianBosniaAndHerzegovina="sr-BA",a.SerbianSerbiaAndMontenegro="sr-SP",a.SerbianCyrillic="sr-SP-Cyrl",a.SerbianCyrillicBosniaAndHerzegovina="sr-Cyrl-BA",a.SerbianCyrillicSerbiaAndMontenegro="sr-Cyrl-SP",a.Sesotho="st",a.SesothoSouthAfrica="st-ZA",a.Shona="sn",a.ShonaZimbabwe="sn-ZW",a.Sindhi="sd",a.SindhiPakistan="sd-PK",a.Sinhala="si",a.SinhalaSriLanka="si-LK",a.Slovak="sk",a.SlovakSlovakia="sk-SK",a.Slovenian="sl",a.SlovenianSlovenia="sl-SI",a.Somali="so",a.SomaliSomalia="so-SO",a.Spanish="es",a.SpanishArgentina="es-AR",a.SpanishBolivia="es-BO",a.SpanishChile="es-CL",a.SpanishColombia="es-CO",a.SpanishCostaRica="es-CR",a.SpanishCuba="es-CU",a.SpanishDominicanRepublic="es-DO",a.SpanishEcuador="es-EC",a.SpanishEquatorialGuinea="es-GQ",a.SpanishElSalvador="es-SV",a.SpanishGuatemala="es-GT",a.SpanishHonduras="es-HN",a.SpanishMexico="es-MX",a.SpanishNicaragua="es-NI",a.SpanishPanama="es-PA",a.SpanishParaguay="es-PY",a.SpanishPeru="es-PE",a.SpanishPuertoRico="es-PR",a.SpanishSpain="es-ES",a.SpanishUnitedStates="es-US",a.SpanishUruguay="es-UY",a.SpanishVenezuela="es-VE",a.Sudanese="su",a.Sutu="st",a.SutuSouthAfrica="st-ZA",a.Swahili="sw",a.SwahiliKenya="sw-KE",a.Swedish="sv",a.SwedishFinland="sv-FI",a.SwedishSweden="sv-SE",a.Syriac="syr",a.SyriacSyria="syr-SY",a.Tajik="tg",a.TajikTajikistan="tg-TJ",a.Tagalog="tl",a.TagalogPhilippines="tl-PH",a.Tamazight="tmh",a.Tamil="ta",a.TamilIndia="ta-IN",a.Tatar="tt",a.Telugu="te",a.TeluguIndia="te-IN",a.Thai="th",a.ThaiThailand="th-TH",a.Tibetan="bo",a.TibetanBhutan="bo-BT",a.TibetanChina="bo-CN",a.TibetanIndia="bo-IN",a.Tsonga="ts",a.Tswana="tn",a.TswanaSouthAfrica="tn-ZA",a.Turkish="tr",a.TurkishTurkey="tr-TR",a.Turkmen="tk",a.Ukrainian="uk",a.UkrainianUkraine="uk-UA",a.Urdu="ur",a.UrduAfghanistan="ur-AF",a.UrduIndia="ur-IN",a.UrduPakistan="ur-PK",a.Uzbek="uz",a.UzbekCyrillic="uz-Cyrl-UZ",a.UzbekLatin="uz-Latn-UZ",a.UzbekUzbekistan="uz-UZ",a.Vietnamese="vi",a.VietnameseVietnam="vi-VN",a.Welsh="cy",a.WelshUnitedKingdom="cy-GB",a.Xhosa="xh",a.XhosaSouthAfrica="xh-ZA",a.Yiddish="yi",a.Yoruba="yo",a.YorubaNigeria="yo-NG",a.ZhuyinMandarinChina="yue-Hant-CN",a.Zulu="zu",a.ZuluSouthAfrica="zu-ZA",a))(e||{}),m=(a=>(a.AfricaAbidjan="Africa/Abidjan",a.AfricaAccra="Africa/Accra",a.AfricaAddisAbaba="Africa/Addis_Ababa",a.AfricaAlgiers="Africa/Algiers",a.AfricaAsmara="Africa/Asmara",a.AfricaBamako="Africa/Bamako",a.AfricaBangui="Africa/Bangui",a.AfricaBanjul="Africa/Banjul",a.AfricaBissau="Africa/Bissau",a.AfricaBlantyre="Africa/Blantyre",a.AfricaBrazzaville="Africa/Brazzaville",a.AfricaBujumbura="Africa/Bujumbura",a.AfricaCairo="Africa/Cairo",a.AfricaCasablanca="Africa/Casablanca",a.AfricaCeuta="Africa/Ceuta",a.AfricaConakry="Africa/Conakry",a.AfricaDakar="Africa/Dakar",a.AfricaDarEsSalaam="Africa/Dar_es_Salaam",a.AfricaDjibouti="Africa/Djibouti",a.AfricaDouala="Africa/Douala",a.AfricaElAaiun="Africa/El_Aaiun",a.AfricaFreetown="Africa/Freetown",a.AfricaGaborone="Africa/Gaborone",a.AfricaHarare="Africa/Harare",a.AfricaJohannesburg="Africa/Johannesburg",a.AfricaJuba="Africa/Juba",a.AfricaKampala="Africa/Kampala",a.AfricaKhartoum="Africa/Khartoum",a.AfricaKigali="Africa/Kigali",a.AfricaKinshasa="Africa/Kinshasa",a.AfricaLagos="Africa/Lagos",a.AfricaLibreville="Africa/Libreville",a.AfricaLome="Africa/Lome",a.AfricaLuanda="Africa/Luanda",a.AfricaLubumbashi="Africa/Lubumbashi",a.AfricaLusaka="Africa/Lusaka",a.AfricaMalabo="Africa/Malabo",a.AfricaMaputo="Africa/Maputo",a.AfricaMaseru="Africa/Maseru",a.AfricaMbabane="Africa/Mbabane",a.AfricaMogadishu="Africa/Mogadishu",a.AfricaMonrovia="Africa/Monrovia",a.AfricaNairobi="Africa/Nairobi",a.AfricaNdjamena="Africa/Ndjamena",a.AfricaNiamey="Africa/Niamey",a.AfricaNouakchott="Africa/Nouakchott",a.AfricaOuagadougou="Africa/Ouagadougou",a.AfricaPortoNovo="Africa/Porto-Novo",a.AfricaSaoTome="Africa/Sao_Tome",a.AfricaTripoli="Africa/Tripoli",a.AfricaTunis="Africa/Tunis",a.AfricaWindhoek="Africa/Windhoek",a.AmericaAdak="America/Adak",a.AmericaAnchorage="America/Anchorage",a.AmericaAnguilla="America/Anguilla",a.AmericaAntigua="America/Antigua",a.AmericaAraguaina="America/Araguaina",a.AmericaArgentinaBuenosAires="America/Argentina/Buenos_Aires",a.AmericaArgentinaCatamarca="America/Argentina/Catamarca",a.AmericaArgentinaCordoba="America/Argentina/Cordoba",a.AmericaArgentinaJujuy="America/Argentina/Jujuy",a.AmericaArgentinaLaRioja="America/Argentina/La_Rioja",a.AmericaArgentinaMendoza="America/Argentina/Mendoza",a.AmericaArgentinaRioGallegos="America/Argentina/Rio_Gallegos",a.AmericaArgentinaSalta="America/Argentina/Salta",a.AmericaArgentinaSanJuan="America/Argentina/San_Juan",a.AmericaArgentinaSanLuis="America/Argentina/San_Luis",a.AmericaArgentinaTucuman="America/Argentina/Tucuman",a.AmericaArgentinaUshuaia="America/Argentina/Ushuaia",a.AmericaAruba="America/Aruba",a.AmericaAsuncion="America/Asuncion",a.AmericaAtikokan="America/Atikokan",a.AmericaAtka="America/Atka",a.AmericaBahia="America/Bahia",a.AmericaBahiaBanderas="America/Bahia_Banderas",a.AmericaBarbados="America/Barbados",a.AmericaBelem="America/Belem",a.AmericaBelize="America/Belize",a.AmericaBlancSablon="America/Blanc-Sablon",a.AmericaBoaVista="America/Boa_Vista",a.AmericaBogota="America/Bogota",a.AmericaBoise="America/Boise",a.AmericaCambridgeBay="America/Cambridge_Bay",a.AmericaCampoGrande="America/Campo_Grande",a.AmericaCancun="America/Cancun",a.AmericaCaracas="America/Caracas",a.AmericaCayenne="America/Cayenne",a.AmericaCayman="America/Cayman",a.AmericaChicago="America/Chicago",a.AmericaChihuahua="America/Chihuahua",a.AmericaCoralHarbour="America/Coral_Harbour",a.AmericaCordoba="America/Cordoba",a.AmericaCostaRica="America/Costa_Rica",a.AmericaCreston="America/Creston",a.AmericaCuiaba="America/Cuiaba",a.AmericaCuracao="America/Curacao",a.AmericaDanmarkshavn="America/Danmarkshavn",a.AmericaDawson="America/Dawson",a.AmericaDawsonCreek="America/Dawson_Creek",a.AmericaDenver="America/Denver",a.AmericaDetroit="America/Detroit",a.AmericaDominica="America/Dominica",a.AmericaEdmonton="America/Edmonton",a.AmericaEirunepe="America/Eirunepe",a.AmericaElSalvador="America/El_Salvador",a.AmericaFortaleza="America/Fortaleza",a.AmericaGlaceBay="America/Glace_Bay",a.AmericaGodthab="America/Godthab",a.AmericaGooseBay="America/Goose_Bay",a.AmericaGrandTurk="America/Grand_Turk",a.AmericaGrenada="America/Grenada",a.AmericaGuadeloupe="America/Guadeloupe",a.AmericaGuatemala="America/Guatemala",a.AmericaGuayaquil="America/Guayaquil",a.AmericaGuyana="America/Guyana",a.AmericaHalifax="America/Halifax",a.AmericaHavana="America/Havana",a.AmericaHermosillo="America/Hermosillo",a.AmericaIndianaIndianapolis="America/Indiana/Indianapolis",a.AmericaIndianaKnox="America/Indiana/Knox",a.AmericaIndianaMarengo="America/Indiana/Marengo",a.AmericaIndianaPetersburg="America/Indiana/Petersburg",a.AmericaIndianaTellCity="America/Indiana/Tell_City",a.AmericaIndianaVevay="America/Indiana/Vevay",a.AmericaIndianaVincennes="America/Indiana/Vincennes",a.AmericaIndianaWinamac="America/Indiana/Winamac",a.AmericaInuvik="America/Inuvik",a.AmericaIqaluit="America/Iqaluit",a.AmericaJamaica="America/Jamaica",a.AmericaJuneau="America/Juneau",a.AmericaKentuckyLouisville="America/Kentucky/Louisville",a.AmericaKentuckyMonticello="America/Kentucky/Monticello",a.AmericaKralendijk="America/Kralendijk",a.AmericaLaPaz="America/La_Paz",a.AmericaLima="America/Lima",a.AmericaLosAngeles="America/Los_Angeles",a.AmericaLouisville="America/Louisville",a.AmericaLowerPrinces="America/Lower_Princes",a.AmericaMaceio="America/Maceio",a.AmericaManagua="America/Managua",a.AmericaManaus="America/Manaus",a.AmericaMarigot="America/Marigot",a.AmericaMartinique="America/Martinique",a.AmericaMatamoros="America/Matamoros",a.AmericaMazatlan="America/Mazatlan",a.AmericaMenominee="America/Menominee",a.AmericaMerida="America/Merida",a.AmericaMetlakatla="America/Metlakatla",a.AmericaMexicoCity="America/Mexico_City",a.AmericaMiquelon="America/Miquelon",a.AmericaMoncton="America/Moncton",a.AmericaMonterrey="America/Monterrey",a.AmericaMontevideo="America/Montevideo",a.AmericaMontserrat="America/Montserrat",a.AmericaMontreal="America/Montreal",a.AmericaNassau="America/Nassau",a.AmericaNewYork="America/New_York",a.AmericaNipigon="America/Nipigon",a.AmericaNome="America/Nome",a.AmericaNoronha="America/Noronha",a.AmericaNorthDakotaBeulah="America/North_Dakota/Beulah",a.AmericaNorthDakotaCenter="America/North_Dakota/Center",a.AmericaNorthDakotaNewSalem="America/North_Dakota/New_Salem",a.AmericaOjinaga="America/Ojinaga",a.AmericaPanama="America/Panama",a.AmericaPangnirtung="America/Pangnirtung",a.AmericaParamaribo="America/Paramaribo",a.AmericaPhoenix="America/Phoenix",a.AmericaPortAuPrince="America/Port-au-Prince",a.AmericaPortOfSpain="America/Port_of_Spain",a.AmericaPortoVelho="America/Porto_Velho",a.AmericaPuertoRico="America/Puerto_Rico",a.AmericaRainyRiver="America/Rainy_River",a.AmericaRankinInlet="America/Rankin_Inlet",a.AmericaRecife="America/Recife",a.AmericaRegina="America/Regina",a.AmericaResolute="America/Resolute",a.AmericaRioBranco="America/Rio_Branco",a.AmericaSantaIsabel="America/Santa_Isabel",a.AmericaSantarem="America/Santarem",a.AmericaSantiago="America/Santiago",a.AmericaSantoDomingo="America/Santo_Domingo",a.AmericaSaoPaulo="America/Sao_Paulo",a.AmericaScoresbysund="America/Scoresbysund",a.AmericaShiprock="America/Shiprock",a.AmericaSitka="America/Sitka",a.AmericaStBarthelemy="America/St_Barthelemy",a.AmericaStJohns="America/St_Johns",a.AmericaStKitts="America/St_Kitts",a.AmericaStLucia="America/St_Lucia",a.AmericaStThomas="America/St_Thomas",a.AmericaStVincent="America/St_Vincent",a.AmericaSwiftCurrent="America/Swift_Current",a.AmericaTegucigalpa="America/Tegucigalpa",a.AmericaThule="America/Thule",a.AmericaThunderBay="America/Thunder_Bay",a.AmericaTijuana="America/Tijuana",a.AmericaToronto="America/Toronto",a.AmericaTortola="America/Tortola",a.AmericaVancouver="America/Vancouver",a.AmericaWhitehorse="America/Whitehorse",a.AmericaWinnipeg="America/Winnipeg",a.AmericaYakutat="America/Yakutat",a.AmericaYellowknife="America/Yellowknife",a.AntarcticaCasey="Antarctica/Casey",a.AntarcticaDavis="Antarctica/Davis",a.AntarcticaDumontDUrville="Antarctica/DumontDUrville",a.AntarcticaMacquarie="Antarctica/Macquarie",a.AntarcticaMawson="Antarctica/Mawson",a.AntarcticaMcMurdo="Antarctica/McMurdo",a.AntarcticaPalmer="Antarctica/Palmer",a.AntarcticaRothera="Antarctica/Rothera",a.AntarcticaSyowa="Antarctica/Syowa",a.AntarcticaTroll="Antarctica/Troll",a.AntarcticaVostok="Antarctica/Vostok",a.ArcticLongyearbyen="Arctic/Longyearbyen",a.AsiaAden="Asia/Aden",a.AsiaAlmaty="Asia/Almaty",a.AsiaAmman="Asia/Amman",a.AsiaAnadyr="Asia/Anadyr",a.AsiaAqtau="Asia/Aqtau",a.AsiaAqtobe="Asia/Aqtobe",a.AsiaAshgabat="Asia/Ashgabat",a.AsiaBaghdad="Asia/Baghdad",a.AsiaBahrain="Asia/Bahrain",a.AsiaBaku="Asia/Baku",a.AsiaBangkok="Asia/Bangkok",a.AsiaBarnaul="Asia/Barnaul",a.AsiaBeirut="Asia/Beirut",a.AsiaBishkek="Asia/Bishkek",a.AsiaBrunei="Asia/Brunei",a.AsiaChita="Asia/Chita",a.AsiaChoibalsan="Asia/Choibalsan",a.AsiaColombo="Asia/Colombo",a.AsiaDamascus="Asia/Damascus",a.AsiaDhaka="Asia/Dhaka",a.AsiaDili="Asia/Dili",a.AsiaDubai="Asia/Dubai",a.AsiaDushanbe="Asia/Dushanbe",a.AsiaFamagusta="Asia/Famagusta",a.AsiaGaza="Asia/Gaza",a.AsiaHebron="Asia/Hebron",a.AsiaHoChiMinh="Asia/Ho_Chi_Minh",a.AsiaHongKong="Asia/Hong_Kong",a.AsiaHovd="Asia/Hovd",a.AsiaIrkutsk="Asia/Irkutsk",a.AsiaJakarta="Asia/Jakarta",a.AsiaJayapura="Asia/Jayapura",a.AsiaJerusalem="Asia/Jerusalem",a.AsiaKabul="Asia/Kabul",a.AsiaKamchatka="Asia/Kamchatka",a.AsiaKarachi="Asia/Karachi",a.AsiaKathmandu="Asia/Kathmandu",a.AsiaKhandyga="Asia/Khandyga",a.AsiaKolkata="Asia/Kolkata",a.AsiaKrasnoyarsk="Asia/Krasnoyarsk",a.AsiaKualaLumpur="Asia/Kuala_Lumpur",a.AsiaKuching="Asia/Kuching",a.AsiaKuwait="Asia/Kuwait",a.AsiaMacau="Asia/Macau",a.AsiaMagadan="Asia/Magadan",a.AsiaMakassar="Asia/Makassar",a.AsiaManila="Asia/Manila",a.AsiaMuscat="Asia/Muscat",a.AsiaNicosia="Asia/Nicosia",a.AsiaNovokuznetsk="Asia/Novokuznetsk",a.AsiaNovosibirsk="Asia/Novosibirsk",a.AsiaOmsk="Asia/Omsk",a.AsiaOral="Asia/Oral",a.AsiaPhnomPenh="Asia/Phnom_Penh",a.AsiaPontianak="Asia/Pontianak",a.AsiaPyongyang="Asia/Pyongyang",a.AsiaQatar="Asia/Qatar",a.AsiaQyzylorda="Asia/Qyzylorda",a.AsiaRangoon="Asia/Rangoon",a.AsiaRiyadh="Asia/Riyadh",a.AsiaSakhalin="Asia/Sakhalin",a.AsiaSamarkand="Asia/Samarkand",a.AsiaSeoul="Asia/Seoul",a.AsiaShanghai="Asia/Shanghai",a.AsiaSingapore="Asia/Singapore",a.AsiaSrednekolymsk="Asia/Srednekolymsk",a.AsiaTaipei="Asia/Taipei",a.AsiaTashkent="Asia/Tashkent",a.AsiaTbilisi="Asia/Tbilisi",a.AsiaTehran="Asia/Tehran",a.AsiaThimphu="Asia/Thimphu",a.AsiaTokyo="Asia/Tokyo",a.AsiaTomsk="Asia/Tomsk",a.AsiaUlaanbaatar="Asia/Ulaanbaatar",a.AsiaUrumqi="Asia/Urumqi",a.AsiaUstNera="Asia/Ust-Nera",a.AsiaVientiane="Asia/Vientiane",a.AsiaVladivostok="Asia/Vladivostok",a.AsiaYakutsk="Asia/Yakutsk",a.AsiaYekaterinburg="Asia/Yekaterinburg",a.AsiaYerevan="Asia/Yerevan",a.AtlanticAzores="Atlantic/Azores",a.AtlanticBermuda="Atlantic/Bermuda",a.AtlanticCanary="Atlantic/Canary",a.AtlanticCapeVerde="Atlantic/Cape_Verde",a.AtlanticFaroe="Atlantic/Faroe",a.AtlanticMadeira="Atlantic/Madeira",a.AtlanticReykjavik="Atlantic/Reykjavik",a.AtlanticSouthGeorgia="Atlantic/South_Georgia",a.AtlanticStHelena="Atlantic/St_Helena",a.AtlanticStanley="Atlantic/Stanley",a.AustraliaAdelaide="Australia/Adelaide",a.AustraliaBrisbane="Australia/Brisbane",a.AustraliaBrokenHill="Australia/Broken_Hill",a.AustraliaCanberra="Australia/Canberra",a.AustraliaCurrie="Australia/Currie",a.AustraliaDarwin="Australia/Darwin",a.AustraliaEucla="Australia/Eucla",a.AustraliaHobart="Australia/Hobart",a.AustraliaLindeman="Australia/Lindeman",a.AustraliaLordHowe="Australia/Lord_Howe",a.AustraliaMelbourne="Australia/Melbourne",a.AustraliaPerth="Australia/Perth",a.AustraliaSydney="Australia/Sydney",a.EuropeAmsterdam="Europe/Amsterdam",a.EuropeAndorra="Europe/Andorra",a.EuropeAthens="Europe/Athens",a.EuropeBelgrade="Europe/Belgrade",a.EuropeBerlin="Europe/Berlin",a.EuropeBratislava="Europe/Bratislava",a.EuropeBrussels="Europe/Brussels",a.EuropeBucharest="Europe/Bucharest",a.EuropeBudapest="Europe/Budapest",a.EuropeBusingen="Europe/Busingen",a.EuropeChisinau="Europe/Chisinau",a.EuropeCopenhagen="Europe/Copenhagen",a.EuropeDublin="Europe/Dublin",a.EuropeGibraltar="Europe/Gibraltar",a.EuropeGuernsey="Europe/Guernsey",a.EuropeHelsinki="Europe/Helsinki",a.EuropeIsleOfMan="Europe/Isle_of_Man",a.EuropeIstanbul="Europe/Istanbul",a.EuropeJersey="Europe/Jersey",a.EuropeKaliningrad="Europe/Kaliningrad",a.EuropeKiev="Europe/Kiev",a.EuropeKirov="Europe/Kirov",a.EuropeLisbon="Europe/Lisbon",a.EuropeLjubljana="Europe/Ljubljana",a.EuropeLondon="Europe/London",a.EuropeLuxembourg="Europe/Luxembourg",a.EuropeMadrid="Europe/Madrid",a.EuropeMalta="Europe/Malta",a.EuropeMariehamn="Europe/Mariehamn",a.EuropeMinsk="Europe/Minsk",a.EuropeMonaco="Europe/Monaco",a.EuropeMoscow="Europe/Moscow",a.EuropeOslo="Europe/Oslo",a.EuropeParis="Europe/Paris",a.EuropePodgorica="Europe/Podgorica",a.EuropePrague="Europe/Prague",a.EuropeRiga="Europe/Riga",a.EuropeRome="Europe/Rome",a.EuropeSamara="Europe/Samara",a.EuropeSanMarino="Europe/San_Marino",a.EuropeSarajevo="Europe/Sarajevo",a.EuropeSimferopol="Europe/Simferopol",a.EuropeSkopje="Europe/Skopje",a.EuropeSofia="Europe/Sofia",a.EuropeStockholm="Europe/Stockholm",a.EuropeTallinn="Europe/Tallinn",a.EuropeTirane="Europe/Tirane",a.EuropeUzhgorod="Europe/Uzhgorod",a.EuropeVaduz="Europe/Vaduz",a.EuropeVatican="Europe/Vatican",a.EuropeVienna="Europe/Vienna",a.EuropeVilnius="Europe/Vilnius",a.EuropeVolgograd="Europe/Volgograd",a.EuropeWarsaw="Europe/Warsaw",a.EuropeZagreb="Europe/Zagreb",a.EuropeZaporozhye="Europe/Zaporozhye",a.EuropeZurich="Europe/Zurich",a.GMT="GMT",a.IndianAntananarivo="Indian/Antananarivo",a.IndianChagos="Indian/Chagos",a.IndianChristmas="Indian/Christmas",a.IndianCocos="Indian/Cocos",a.IndianComoro="Indian/Comoro",a.IndianKerguelen="Indian/Kerguelen",a.IndianMahe="Indian/Mahe",a.IndianMaldives="Indian/Maldives",a.IndianMauritius="Indian/Mauritius",a.IndianMayotte="Indian/Mayotte",a.IndianReunion="Indian/Reunion",a.PacificApia="Pacific/Apia",a.PacificAuckland="Pacific/Auckland",a.PacificBougainville="Pacific/Bougainville",a.PacificChatham="Pacific/Chatham",a.PacificChuuk="Pacific/Chuuk",a.PacificEaster="Pacific/Easter",a.PacificEfate="Pacific/Efate",a.PacificEnderbury="Pacific/Enderbury",a.PacificFakaofo="Pacific/Fakaofo",a.PacificFiji="Pacific/Fiji",a.PacificFunafuti="Pacific/Funafuti",a.PacificGalapagos="Pacific/Galapagos",a.PacificGambier="Pacific/Gambier",a.PacificGuadalcanal="Pacific/Guadalcanal",a.PacificGuam="Pacific/Guam",a.PacificHonolulu="Pacific/Honolulu",a.PacificJohnston="Pacific/Johnston",a.PacificKiritimati="Pacific/Kiritimati",a.PacificKosrae="Pacific/Kosrae",a.PacificKwajalein="Pacific/Kwajalein",a.PacificMajuro="Pacific/Majuro",a.PacificMarquesas="Pacific/Marquesas",a.PacificMidway="Pacific/Midway",a.PacificNauru="Pacific/Nauru",a.PacificNiue="Pacific/Niue",a.PacificNorfolk="Pacific/Norfolk",a.PacificNoumea="Pacific/Noumea",a.PacificPagoPago="Pacific/Pago_Pago",a.PacificPalau="Pacific/Palau",a.PacificPitcairn="Pacific/Pitcairn",a.PacificPohnpei="Pacific/Pohnpei",a.PacificPonape="Pacific/Ponape",a.PacificPortMoresby="Pacific/Port_Moresby",a.PacificRarotonga="Pacific/Rarotonga",a.PacificSaipan="Pacific/Saipan",a.PacificSamoa="Pacific/Samoa",a.PacificTahiti="Pacific/Tahiti",a.PacificTarawa="Pacific/Tarawa",a.PacificTongatapu="Pacific/Tongatapu",a.PacificTruk="Pacific/Truk",a.PacificWake="Pacific/Wake",a.PacificWallis="Pacific/Wallis",a.PacificYap="Pacific/Yap",a))(m||{}),n=(a=>(a.UTC_MINUS_12="UTC-12",a.UTC_MINUS_11_30="UTC-11:30",a.UTC_MINUS_11="UTC-11",a.UTC_MINUS_10_30="UTC-10:30",a.UTC_MINUS_10="UTC-10",a.UTC_MINUS_9_30="UTC-9:30",a.UTC_MINUS_9="UTC-09",a.UTC_MINUS_8_45="UTC-8:45",a.UTC_MINUS_8="UTC-08",a.UTC_MINUS_7="UTC-07",a.UTC_MINUS_6_30="UTC-6:30",a.UTC_MINUS_6="UTC-06",a.UTC_MINUS_5_45="UTC-5:45",a.UTC_MINUS_5_30="UTC-5:30",a.UTC_MINUS_5="UTC-05",a.UTC_MINUS_4_30="UTC-4:30",a.UTC_MINUS_4="UTC-04",a.UTC_MINUS_3_30="UTC-3:30",a.UTC_MINUS_3="UTC-03",a.UTC_MINUS_2_30="UTC-2:30",a.UTC_MINUS_2="UTC-02",a.UTC_MINUS_1="UTC-01",a.UTC_0="UTC+00",a.UTC_PLUS_1="UTC+01",a.UTC_PLUS_2="UTC+02",a.UTC_PLUS_3="UTC+03",a.UTC_PLUS_3_30="UTC+3:30",a.UTC_PLUS_4="UTC+04",a.UTC_PLUS_4_30="UTC+4:30",a.UTC_PLUS_5="UTC+05",a.UTC_PLUS_5_30="UTC+5:30",a.UTC_PLUS_5_45="UTC+5:45",a.UTC_PLUS_6="UTC+06",a.UTC_PLUS_6_30="UTC+6:30",a.UTC_PLUS_7="UTC+07",a.UTC_PLUS_8="UTC+08",a.UTC_PLUS_8_45="UTC+8:45",a.UTC_PLUS_9="UTC+09",a.UTC_PLUS_9_30="UTC+9:30",a.UTC_PLUS_10="UTC+10",a.UTC_PLUS_10_30="UTC+10:30",a.UTC_PLUS_11="UTC+11",a.UTC_PLUS_11_30="UTC+11:30",a.UTC_PLUS_12="UTC+12",a.UTC_PLUS_12_45="UTC+12:45",a.UTC_PLUS_13="UTC+13",a.UTC_PLUS_13_45="UTC+13:45",a.UTC_PLUS_14="UTC+14",a))(n||{}),t=(a=>(a.AcreTime="ACT",a.AfghanistanTime="AFT",a.AIXCentralEuropeanTime="DFT",a.AlaskaDaylightTime="AKDT",a.AlaskaStandardTime="AKST",a.AlmaAtaTime="ALMT",a.AmazonSummerTime="AMST",a.AmazonTime="AMT",a.AnadyrTime="ANAT",a.AqtobeTime="AQTT",a.ArabiaStandardTime="AST",a.ArgentinaTime="ART",a.ArmeniaTime="AMT",a.ASEANCommonTime="ASEAN",a.AtlanticDaylightTime="ADT",a.AtlanticStandardTime="AST",a.AustralianCentralDaylightSavingTime="ACDT",a.AustralianCentralStandardTime="ACST",a.AustralianCentralWesternStandardTime="ACWST",a.AustralianEasternDaylightSavingTime="AEDT",a.AustralianEasternStandardTime="AEST",a.AustralianEasternTime="AET",a.AustralianWesternStandardTime="AWST",a.AzerbaijanTime="AZT",a.AzoresStandardTime="AZOT",a.AzoresSummerTime="AZOST",a.BakerIslandTime="BIT",a.BangladeshStandardTime="BST",a.BhutanTime="BTT",a.BoliviaTime="BOT",a.BougainvilleStandardTime="BST",a.BrasiliaSummerTime="BRST",a.BrasiliaTime="BRT",a.BritishIndianOceanTime="BIOT",a.BritishSummerTime="BST",a.BruneiTime="BNT",a.CapeVerdeTime="CVT",a.CentralAfricaTime="CAT",a.CentralDaylightTime="CDT",a.CentralEuropeanSummerTime="CEST",a.CentralEuropeanTime="CET",a.CentralIndonesiaTime="WITA",a.CentralStandardTime="CST",a.CentralTime="CT",a.CentralWesternStandardTime="CWST",a.ChamorroStandardTime="CHST",a.ChathamDaylightTime="CHADT",a.ChathamStandardTime="CHAST",a.ChileStandardTime="CLT",a.ChileSummerTime="CLST",a.ChinaStandardTime="CST",a.ChoibalsanStandardTime="CHOT",a.ChoibalsanSummerTime="CHOST",a.ChristmasIslandTime="CXT",a.ChuukTime="CHUT",a.ClipptertonIslandStandardTime="CIST",a.CocosIslandsTime="CCT",a.ColombiaSummerTime="COST",a.ColombiaTime="COT",a.CookIslandTime="CKT",a.CoordinatedUniversalTime="UTC",a.CubaDaylightTime="CDT",a.CubaStandardTime="CST",a.DavisTime="DAVT",a.DumontDUrvilleTime="DDUT",a.EastAfricaTime="EAT",a.EasterIslandStandardTime="EAST",a.EasterIslandSummerTime="EASST",a.EasternCaribbeanTime="ECT",a.EasternDaylightTime="EDT",a.EasternEuropeanSummerTime="EEST",a.EasternEuropeanTime="EET",a.EasternGreenlandSummerTime="EGST",a.EasternGreenlandTime="EGT",a.EasternIndonesianTime="WIT",a.EasternStandardTime="EST",a.EasternTime="ET",a.EcuadorTime="ECT",a.FalklandIslandsSummerTime="FKST",a.FalklandIslandsTime="FKT",a.FernandoDeNoronhaTime="FNT",a.FijiTime="FJT",a.FrenchGuianaTime="GFT",a.FrenchSouthernAndAntarcticTime="TFT",a.FurtherEasternEuropeanTime="FET",a.GalapagosTime="GALT",a.GambierIslandTime="GIT",a.GambierIslandsTime="GAMT",a.GeorgiaStandardTime="GET",a.GilbertIslandTime="GILT",a.GreenwichMeanTime="GMT",a.GulfStandardTime="GST",a.GuyanaTime="GYT",a.HawaiiAleutianDaylightTime="HDT",a.HawaiiAleutianStandardTime="HST",a.HeardAndMcDonaldIslandsTime="HMT",a.HeureAvanceeDEuropeCentraleTime="HAEC",a.HongKongTime="HKT",a.HovdSummerTime="HOVST",a.HovdTime="HOVT",a.IndianOceanTime="IOT",a.IndianStandardTime="IST",a.IndochinaTime="ICT",a.InternationalDayLineWestTime="IDLW",a.IranDaylightTime="IRDT",a.IranStandardTime="IRST",a.IrishStandardTime="IST",a.IrkutskSummerTime="IRKST",a.IrkutskTime="IRKT",a.IsraelDaylightTime="IDT",a.IsraelStandardTime="IST",a.JapanStandardTime="JST",a.KaliningradTime="KALT",a.KamchatkaTime="KAMT",a.KoreaStandardTime="KST",a.KosraeTime="KOST",a.KrasnoyarskSummerTime="KRAST",a.KrasnoyarskTime="KRAT",a.KyrgyzstanTime="KGT",a.LineIslandsTime="LINT",a.KazakhstanStandardTime="KAST",a.LordHoweStandardTime="LHST",a.LordHoweSummerTime="LHST",a.MacquarieIslandStationTime="MIST",a.MagadanTime="MAGT",a.MalaysiaStandardTime="MST",a.MalaysiaTime="MYT",a.MaldivesTime="MVT",a.MarquesasIslandsTime="MART",a.MarshallIslandsTime="MHT",a.MauritiusTime="MUT",a.MawsonStationTime="MAWT",a.MiddleEuropeanSummerTime="MEDT",a.MiddleEuropeanTime="MET",a.MoscowTime="MSK",a.MountainDaylightTime="MDT",a.MountainStandardTime="MST",a.MyanmarStandardTime="MMT",a.NepalTime="NCT",a.NauruTime="NRT",a.NewCaledoniaTime="NCT",a.NewZealandDaylightTime="NZDT",a.NewZealandStandardTime="NZST",a.NewfoundlandDaylightTime="NDT",a.NewfoundlandStandardTime="NST",a.NewfoundlandTime="NT",a.NiueTime="NUT",a.NorfolkIslandTime="NFT",a.NovosibirskTime="NOVT",a.OmskTime="OMST",a.OralTime="ORAT",a.PacificDaylightTime="PDT",a.PacificStandardTime="PST",a.PakistanStandardTime="PKT",a.PalauTime="PWT",a.PapuaNewGuineaTime="PGT",a.ParaguaySummerTime="PYST",a.ParaguayTime="PYT",a.PeruTime="PET",a.PhilippineStandardTime="PHST",a.PhilippineTime="PHT",a.PhoenixIslandTime="PHOT",a.PitcairnTime="PST",a.PohnpeiStandardTime="PONT",a.ReunionTime="RET",a.RotheraResearchStationTime="ROTT",a.SaintPierreAndMiquelonDaylightTime="PMDT",a.SaintPierreAndMiquelonStandardTime="PMST",a.SakhalinIslandTime="SAKT",a.SamaraTime="SAMT",a.SamoaDaylightTime="SDT",a.SamoaStandardTime="SST",a.SeychellesTime="SCT",a.ShowaStationTime="SYOT",a.SingaporeStandardTime="SST",a.SingaporeTime="SGT",a.SolomonIslandsTime="SBT",a.SouthAfricanStandardTime="SAST",a.SouthGeorgiaAndTheSouthSandwichIslandsTime="GST",a.SrednekolymskTime="SRET",a.SriLankaStandardTime="SLST",a.SurinameTime="SRT",a.TahitiTime="TAHT",a.TajikistanTime="TJT",a.ThailandStandardTime="THA",a.TimorLesteTime="TLT",a.TokelauTime="TKT",a.TongaTime="TOT",a.TurkeyTime="TRT",a.TurkmenistanTime="TMT",a.TuvaluTime="TVT",a.UlaanbaatarStandardTime="ULAT",a.UlaanbaatarSummerTime="ULAST",a.UruguayStandardTime="UYT",a.UruguaySummerTime="UYST",a.UzbekistanTime="UZT",a.VanuatuTime="VUT",a.VenezuelaStandardTime="VET",a.VladivostokTime="VLAT",a.VolgogradTime="VOLT",a.VostokStationTime="VOST",a.WakeIslandTime="WAKT",a.WestAfricaSummerTime="WAST",a.WestAfricaTime="WAT",a.WestGreenlandSummerTime="WGST",a.WestGreenlandTime="WGT",a.WestKazakhstanTime="WKT",a.WesternEuropeanSummerTime="WEDT",a.WesternEuropeanTime="WET",a.WesternIndonesianTime="WIT",a.WesternStandardTime="WST",a.YakutskTime="YAKT",a.YekaterinburgTime="YEKT",a))(t||{}),x0={dst:{is:!1,uses:!0},id:"ACT",name:"Acre Time",offset:n.UTC_MINUS_5},O0={dst:{is:!1,uses:!0},id:"AFT",name:"Afghanistan Time",offset:n.UTC_PLUS_4_30},H0={dst:{is:!1,uses:!0},id:"DFT",name:"AIX Central European Time",offset:n.UTC_PLUS_1},j0={dst:{is:!0,uses:!0},id:"AKDT",name:"Alaska Daylight Time",offset:n.UTC_MINUS_8},W0={dst:{is:!1,uses:!0},id:"AKST",name:"Alaska Standard Time",offset:n.UTC_MINUS_9},V0={dst:{is:!1,uses:!0},id:"ALMT",name:"Alma-Ata Time",offset:n.UTC_PLUS_6},z0={dst:{is:!1,uses:!0},id:"AMST",name:"Amazon Summer Time",offset:n.UTC_MINUS_3},R0={dst:{is:!1,uses:!0},id:"AMT",name:"Amazon Time",offset:n.UTC_MINUS_4},J0={dst:{is:!1,uses:!0},id:"ANAT",name:"Anadyr Time",offset:n.UTC_PLUS_12},Y0={dst:{is:!1,uses:!0},id:"AQTT",name:"Aqtobe Time",offset:n.UTC_PLUS_5},Z0={dst:{is:!1,uses:!0},id:"AST",name:"Arabia Standard Time",offset:n.UTC_PLUS_3},$0={dst:{is:!1,uses:!0},id:"ART",name:"Argentina Time",offset:n.UTC_MINUS_3},Q0={dst:{is:!1,uses:!0},id:"AMT",name:"Armenia Time",offset:n.UTC_PLUS_4},X0={dst:{is:!0,uses:!0},id:"ADT",name:"Atlantic Daylight Time",offset:n.UTC_MINUS_3},C0={dst:{is:!1,uses:!0},id:"AST",name:"Atlantic Standard Time",offset:n.UTC_MINUS_4},am={dst:{is:!0,uses:!0},id:"ACDT",name:"Australian Central Daylight Saving Time",offset:n.UTC_PLUS_10_30},em={dst:{is:!1,uses:!0},id:"ACST",name:"Australian Central Standard Time",offset:n.UTC_PLUS_9_30},um={dst:{is:!1,uses:!0},id:"ACWST",name:"Australian Central Western Standard Time",offset:n.UTC_PLUS_8_45},im={dst:{is:!0,uses:!0},id:"AEDT",name:"Australian Eastern Daylight Saving Time",offset:n.UTC_PLUS_11},sm={dst:{is:!1,uses:!0},id:"AEST",name:"Australian Eastern Standard Time",offset:n.UTC_PLUS_10},nm={dst:{is:!1,uses:!0},id:"AET",name:"Australian Eastern Time",offset:n.UTC_PLUS_10},rm={dst:{is:!1,uses:!0},id:"AWST",name:"Australian Western Standard Time",offset:n.UTC_PLUS_8},tm={dst:{is:!1,uses:!0},id:"AZT",name:"Azerbaijan Time",offset:n.UTC_PLUS_4},lm={dst:{is:!1,uses:!0},id:"AZOT",name:"Azores Standard Time",offset:n.UTC_MINUS_1},mm={dst:{is:!0,uses:!0},id:"AZOST",name:"Azores Summer Time",offset:n.UTC_0},cm={dst:{is:!1,uses:!0},id:"BIT",name:"Baker Island Time",offset:n.UTC_MINUS_12},om={dst:{is:!1,uses:!0},id:"BST",name:"Bangladesh Standard Time",offset:n.UTC_PLUS_6},Am={dst:{is:!1,uses:!0},id:"BTT",name:"Bhutan Time",offset:n.UTC_PLUS_6},fm={dst:{is:!1,uses:!0},id:"BOT",name:"Bolivia Time",offset:n.UTC_MINUS_4},dm={dst:{is:!1,uses:!0},id:"BST",name:"Bougainville Standard Time",offset:n.UTC_PLUS_11},Im={dst:{is:!0,uses:!0},id:"BRST",name:"Brasilia Summer Time",offset:n.UTC_MINUS_2},_m={dst:{is:!1,uses:!0},id:"BRT",name:"Brasilia Time",offset:n.UTC_MINUS_3},gm={dst:{is:!1,uses:!0},id:"BIOT",name:"British Indian Ocean Time",offset:n.UTC_PLUS_6},hm={dst:{is:!0,uses:!0},id:"BST",name:"British Summer Time",offset:n.UTC_PLUS_1},Sm={dst:{is:!1,uses:!0},id:"BNT",name:"Brunei Time",offset:n.UTC_PLUS_8},Em={dst:{is:!1,uses:!0},id:"CVT",name:"Cape Verde Time",offset:n.UTC_MINUS_1},pm={dst:{is:!1,uses:!0},id:"CAT",name:"Central Africa Time",offset:n.UTC_PLUS_2},Tm={dst:{is:!0,uses:!0},id:"CDT",name:"Central Daylight Time",offset:n.UTC_MINUS_5},vm={dst:{is:!0,uses:!0},id:"CEST",name:"Central European Summer Time",offset:n.UTC_PLUS_2},bm={dst:{is:!1,uses:!0},id:"CET",name:"Central European Time",offset:n.UTC_PLUS_1},Bm={dst:{is:!1,uses:!0},id:"WITA",name:"Central Indonesia Time",offset:n.UTC_PLUS_8},Um={dst:{is:!1,uses:!0},id:"CST",name:"Central Standard Time",offset:n.UTC_MINUS_6},Nm={dst:{is:!1,uses:!0},id:"CT",name:"Central Time",offset:n.UTC_MINUS_5},Dm={dst:{is:!1,uses:!0},id:"CWST",name:"Central Western Standard Time",offset:n.UTC_PLUS_8_45},ym={dst:{is:!1,uses:!0},id:"CHST",name:"Chamorro Standard Time",offset:n.UTC_PLUS_10},Pm={dst:{is:!0,uses:!0},id:"CHADT",name:"Chatham Daylight Time",offset:n.UTC_PLUS_13_45},Fm={dst:{is:!1,uses:!0},id:"CHAST",name:"Chatham Standard Time",offset:n.UTC_PLUS_12_45},km={dst:{is:!1,uses:!0},id:"CLT",name:"Chile Standard Time",offset:n.UTC_MINUS_4},Mm={dst:{is:!0,uses:!0},id:"CLST",name:"Chile Summer Time",offset:n.UTC_MINUS_3},Lm={dst:{is:!1,uses:!0},id:"CST",name:"China Standard Time",offset:n.UTC_PLUS_8},wm={dst:{is:!1,uses:!0},id:"CHOT",name:"Choibalsan Standard Time",offset:n.UTC_PLUS_8},Gm={dst:{is:!0,uses:!0},id:"CHOST",name:"Choibalsan Summer Time",offset:n.UTC_PLUS_9},qm={dst:{is:!1,uses:!0},id:"CXT",name:"Christmas Island Time",offset:n.UTC_PLUS_7},Km={dst:{is:!1,uses:!0},id:"CHUT",name:"Chuuk Time",offset:n.UTC_PLUS_10},xm={dst:{is:!1,uses:!0},id:"CIST",name:"Clippterton Island Standard Time",offset:n.UTC_MINUS_8},Om={dst:{is:!1,uses:!0},id:"CCT",name:"Cocos Standard Time",offset:n.UTC_PLUS_6_30},Hm={dst:{is:!0,uses:!0},id:"COST",name:"Colombia Summer Time",offset:n.UTC_MINUS_4},jm={dst:{is:!1,uses:!0},id:"COT",name:"Colombia Time",offset:n.UTC_MINUS_5},Wm={dst:{is:!1,uses:!0},id:"CKT",name:"Cook Island Time",offset:n.UTC_MINUS_10},Vm={dst:{is:!1,uses:!0},id:"UTC",name:"Coordinated Universal Time",offset:n.UTC_0},zm={dst:{is:!0,uses:!0},id:"CDT",name:"Cuba Daylight Time",offset:n.UTC_MINUS_4},Rm={dst:{is:!1,uses:!0},id:"CST",name:"Cuba Standard Time",offset:n.UTC_MINUS_5},Jm={dst:{is:!1,uses:!0},id:"DAVT",name:"Davis Time",offset:n.UTC_PLUS_7},Ym={dst:{is:!1,uses:!0},id:"DDUT",name:"Dumont D'Urville Time",offset:n.UTC_PLUS_10},Zm={dst:{is:!1,uses:!0},id:"EAT",name:"East Africa Time",offset:n.UTC_PLUS_3},$m={dst:{is:!1,uses:!0},id:"EAST",name:"Easter Island Standard Time",offset:n.UTC_MINUS_6},Qm={dst:{is:!0,uses:!0},id:"EASST",name:"Easter Island Summer Time",offset:n.UTC_MINUS_5},Xm={dst:{is:!1,uses:!0},id:"ECT",name:"Eastern Caribbean Time",offset:n.UTC_MINUS_4},Cm={dst:{is:!0,uses:!0},id:"EDT",name:"Eastern Daylight Time",offset:n.UTC_MINUS_4},ac={dst:{is:!0,uses:!0},id:"EEST",name:"Eastern European Summer Time",offset:n.UTC_PLUS_3},ec={dst:{is:!1,uses:!0},id:"EET",name:"Eastern European Time",offset:n.UTC_PLUS_2},uc={dst:{is:!0,uses:!0},id:"EGST",name:"Eastern Greenland Summer Time",offset:n.UTC_0},ic={dst:{is:!1,uses:!0},id:"EGT",name:"Eastern Greenland Time",offset:n.UTC_MINUS_1},sc={dst:{is:!1,uses:!0},id:"WIT",name:"Eastern Indonesian Time",offset:n.UTC_PLUS_9},nc={dst:{is:!1,uses:!0},id:"EST",name:"Eastern Standard Time",offset:n.UTC_MINUS_5},rc={dst:{is:!1,uses:!0},id:"ET",name:"Eastern Time",offset:n.UTC_MINUS_5},tc={dst:{is:!1,uses:!0},id:"ECT",name:"Ecuador Time",offset:n.UTC_MINUS_5},lc={dst:{is:!0,uses:!0},id:"FKST",name:"Falkland Islands Summer Time",offset:n.UTC_MINUS_3},mc={dst:{is:!1,uses:!0},id:"FKT",name:"Falkland Islands Time",offset:n.UTC_MINUS_4},cc={dst:{is:!1,uses:!0},id:"FNT",name:"Fernando de Noronha Time",offset:n.UTC_MINUS_2},oc={dst:{is:!1,uses:!0},id:"FJT",name:"Fiji Time",offset:n.UTC_PLUS_12},Ac={dst:{is:!1,uses:!0},id:"GFT",name:"French Guiana Time",offset:n.UTC_MINUS_3},fc={dst:{is:!1,uses:!0},id:"TFT",name:"French Southern and Antarctic Time",offset:n.UTC_PLUS_5},dc={dst:{is:!1,uses:!0},id:"FET",name:"Further Eastern European Time",offset:n.UTC_PLUS_3},Ic={dst:{is:!1,uses:!0},id:"GALT",name:"Galapagos Time",offset:n.UTC_MINUS_6},_c={dst:{is:!1,uses:!0},id:"GIT",name:"Gambier Island Time",offset:n.UTC_MINUS_9},gc={dst:{is:!1,uses:!0},id:"GAMT",name:"Gambier Islands Time",offset:n.UTC_MINUS_9},hc={dst:{is:!1,uses:!0},id:"GET",name:"Georgia Standard Time",offset:n.UTC_PLUS_4},Sc={dst:{is:!1,uses:!0},id:"GILT",name:"Gilbert Island Time",offset:n.UTC_PLUS_12},Ec={dst:{is:!1,uses:!0},id:"GMT",name:"Greenwich Mean Time",offset:n.UTC_0},pc={dst:{is:!1,uses:!0},id:"GST",name:"Gulf Standard Time",offset:n.UTC_PLUS_4},Tc={dst:{is:!1,uses:!0},id:"GYT",name:"Guyana Time",offset:n.UTC_MINUS_4},vc={dst:{is:!0,uses:!0},id:"HDT",name:"Hawaii-Aleutian Daylight Time",offset:n.UTC_MINUS_9},bc={dst:{is:!1,uses:!0},id:"HST",name:"Hawaii-Aleutian Standard Time",offset:n.UTC_MINUS_10},Bc={dst:{is:!1,uses:!0},id:"HMT",name:"Heard and McDonald Islands Time",offset:n.UTC_PLUS_5},Uc={dst:{is:!1,uses:!0},id:"HKT",name:"Hong Kong Time",offset:n.UTC_PLUS_8},Nc={dst:{is:!0,uses:!0},id:"HOVST",name:"Hovd Summer Time",offset:n.UTC_PLUS_8},Dc={dst:{is:!1,uses:!0},id:"HOVT",name:"Hovd Time",offset:n.UTC_PLUS_7},yc={dst:{is:!1,uses:!0},id:"IOT",name:"Indian Ocean Time",offset:n.UTC_PLUS_3},Pc={dst:{is:!1,uses:!0},id:"IST",name:"Indian Standard Time",offset:n.UTC_PLUS_5_30},Fc={dst:{is:!1,uses:!0},id:"ICT",name:"Indochina Time",offset:n.UTC_PLUS_7},kc={dst:{is:!1,uses:!0},id:"IDLW",name:"International Day Line West Time",offset:n.UTC_MINUS_12},Mc={dst:{is:!0,uses:!0},id:"IRDT",name:"Iran Daylight Time",offset:n.UTC_PLUS_4_30},Lc={dst:{is:!1,uses:!0},id:"IRST",name:"Iran Standard Time",offset:n.UTC_PLUS_3_30},wc={dst:{is:!1,uses:!0},id:"IST",name:"Irish Standard Time",offset:n.UTC_PLUS_1},Gc={dst:{is:!1,uses:!0},id:"IRKT",name:"Irkutsk Time",offset:n.UTC_PLUS_8},qc={dst:{is:!0,uses:!0},id:"IDT",name:"Israel Daylight Time",offset:n.UTC_PLUS_3},Kc={dst:{is:!1,uses:!0},id:"IST",name:"Israel Standard Time",offset:n.UTC_PLUS_2},xc={dst:{is:!1,uses:!0},id:"JST",name:"Japan Standard Time",offset:n.UTC_PLUS_9},Oc={dst:{is:!1,uses:!0},id:"KALT",name:"Kaliningrad Time",offset:n.UTC_PLUS_2},Hc={dst:{is:!1,uses:!0},id:"KAMT",name:"Kamchatka Time",offset:n.UTC_PLUS_12},jc={dst:{is:!1,uses:!0},id:"KST",name:"Korea Standard Time",offset:n.UTC_PLUS_9},Wc={dst:{is:!1,uses:!0},id:"KOST",name:"Kosrae Time",offset:n.UTC_PLUS_11},Vc={dst:{is:!1,uses:!0},id:"KRAT",name:"Krasnoyarsk Time",offset:n.UTC_PLUS_7},zc={dst:{is:!1,uses:!0},id:"KGT",name:"Kyrgyzstan Time",offset:n.UTC_PLUS_6},Rc={dst:{is:!1,uses:!0},id:"LINT",name:"Line Islands Time",offset:n.UTC_PLUS_14},Jc={dst:{is:!1,uses:!0},id:"LHST",name:"Lord Howe Standard Time",offset:n.UTC_PLUS_10_30},Yc={dst:{is:!1,uses:!0},id:"LHST",name:"Lord Howe Summer Time",offset:n.UTC_PLUS_11},Zc={dst:{is:!1,uses:!0},id:"MIST",name:"Macquarie Island Station Time",offset:n.UTC_PLUS_11},$c={dst:{is:!1,uses:!0},id:"MAGT",name:"Magadan Time",offset:n.UTC_PLUS_12},Qc={dst:{is:!1,uses:!0},id:"MST",name:"Malaysia Standard Time",offset:n.UTC_PLUS_8},Xc={dst:{is:!1,uses:!0},id:"MYT",name:"Malaysia Time",offset:n.UTC_PLUS_8},Cc={dst:{is:!1,uses:!0},id:"MVT",name:"Maldives Time",offset:n.UTC_PLUS_5},ao={dst:{is:!1,uses:!0},id:"MART",name:"Marquesas Islands Time",offset:n.UTC_PLUS_9_30},eo={dst:{is:!1,uses:!0},id:"MHT",name:"Marshall Islands Time",offset:n.UTC_PLUS_12},uo={dst:{is:!1,uses:!0},id:"MUT",name:"Mauritius Time",offset:n.UTC_PLUS_4},io={dst:{is:!1,uses:!0},id:"MAWT",name:"Mawson Station Time",offset:n.UTC_PLUS_5},so={dst:{is:!1,uses:!0},id:"MEDT",name:"Middle European Summer Time",offset:n.UTC_PLUS_2},no={dst:{is:!1,uses:!0},id:"MET",name:"Middle European Time",offset:n.UTC_PLUS_1},ro={dst:{is:!1,uses:!0},id:"MSK",name:"Moscow Time",offset:n.UTC_PLUS_3},to={dst:{is:!1,uses:!0},id:"MDT",name:"Mountain Daylight Time",offset:n.UTC_MINUS_6},lo={dst:{is:!1,uses:!0},id:"MST",name:"Mountain Standard Time",offset:n.UTC_MINUS_7},mo={dst:{is:!1,uses:!0},id:"MMT",name:"Myanmar Standard Time",offset:n.UTC_PLUS_6_30},co={dst:{is:!1,uses:!0},id:"NCT",name:"Nepal Time",offset:n.UTC_PLUS_5_45},oo={dst:{is:!1,uses:!0},id:"NRT",name:"Nauru Time",offset:n.UTC_PLUS_12},Ao={dst:{is:!1,uses:!0},id:"NCT",name:"New Caledonia Time",offset:n.UTC_PLUS_11},fo={dst:{is:!1,uses:!0},id:"NZDT",name:"New Zealand Daylight Time",offset:n.UTC_PLUS_13},Io={dst:{is:!1,uses:!0},id:"NZST",name:"New Zealand Standard Time",offset:n.UTC_PLUS_12},_o={dst:{is:!1,uses:!0},id:"NDT",name:"Newfoundland Daylight Time",offset:n.UTC_MINUS_2_30},go={dst:{is:!1,uses:!0},id:"NT",name:"Newfoundland Time",offset:n.UTC_MINUS_3_30},ho={dst:{is:!1,uses:!0},id:"NUT",name:"Niue Time",offset:n.UTC_MINUS_11},So={dst:{is:!1,uses:!0},id:"NFT",name:"Norfolk Island Time",offset:n.UTC_PLUS_11},Eo={dst:{is:!1,uses:!0},id:"NOVT",name:"Novosibirsk Time",offset:n.UTC_PLUS_7},po={dst:{is:!1,uses:!0},id:"OMST",name:"Omsk Time",offset:n.UTC_PLUS_6},To={dst:{is:!1,uses:!0},id:"ORAT",name:"Oral Time",offset:n.UTC_PLUS_5},vo={dst:{is:!1,uses:!0},id:"PDT",name:"Pacific Daylight Time",offset:n.UTC_MINUS_7},bo={dst:{is:!1,uses:!0},id:"PST",name:"Pacific Standard Time",offset:n.UTC_MINUS_8},Bo={dst:{is:!1,uses:!0},id:"PKT",name:"Pakistan Standard Time",offset:n.UTC_PLUS_5},Uo={dst:{is:!1,uses:!0},id:"PWT",name:"Palau Time",offset:n.UTC_PLUS_9},No={dst:{is:!1,uses:!0},id:"PGT",name:"Papua New Guinea Time",offset:n.UTC_PLUS_10},Do={dst:{is:!1,uses:!0},id:"PYST",name:"Paraguay Summer Time",offset:n.UTC_MINUS_3},yo={dst:{is:!1,uses:!0},id:"PYT",name:"Paraguay Time",offset:n.UTC_MINUS_4},Po={dst:{is:!1,uses:!0},id:"PET",name:"Peru Time",offset:n.UTC_MINUS_5},Fo={dst:{is:!1,uses:!0},id:"PHST",name:"Philippine Standard Time",offset:n.UTC_PLUS_8},ko={dst:{is:!1,uses:!0},id:"PHT",name:"Philippine Time",offset:n.UTC_PLUS_8},Mo={dst:{is:!1,uses:!0},id:"PHOT",name:"Phoenix Island Time",offset:n.UTC_PLUS_13},Lo={dst:{is:!1,uses:!0},id:"PST",name:"Pitcairn Time",offset:n.UTC_MINUS_8},wo={dst:{is:!1,uses:!0},id:"PONT",name:"Pohnpei Standard Time",offset:n.UTC_PLUS_11},Go={dst:{is:!1,uses:!0},id:"RET",name:"Reunion Time",offset:n.UTC_PLUS_4},qo={dst:{is:!1,uses:!0},id:"ROTT",name:"Rothera Research Station Time",offset:n.UTC_MINUS_3},Ko={dst:{is:!1,uses:!0},id:"PMDT",name:"Saint Pierre and Miquelon Daylight Time",offset:n.UTC_MINUS_2},xo={dst:{is:!1,uses:!0},id:"PMST",name:"Saint Pierre and Miquelon Standard Time",offset:n.UTC_MINUS_3},Oo={dst:{is:!1,uses:!0},id:"SAKT",name:"Sakhalin Island Time",offset:n.UTC_PLUS_11},Ho={dst:{is:!1,uses:!0},id:"SAMT",name:"Samara Time",offset:n.UTC_PLUS_4},jo={dst:{is:!1,uses:!0},id:"SDT",name:"Samoa Daylight Time",offset:n.UTC_MINUS_10},Wo={dst:{is:!1,uses:!0},id:"SST",name:"Samoa Standard Time",offset:n.UTC_MINUS_11},Vo={dst:{is:!1,uses:!0},id:"SCT",name:"Seychelles Time",offset:n.UTC_PLUS_4},zo={dst:{is:!1,uses:!0},id:"SYOT",name:"Showa Station Time",offset:n.UTC_PLUS_3},Ro={dst:{is:!1,uses:!0},id:"SST",name:"Singapore Standard Time",offset:n.UTC_PLUS_8},Jo={dst:{is:!1,uses:!0},id:"SGT",name:"Singapore Time",offset:n.UTC_PLUS_8},Yo={dst:{is:!1,uses:!0},id:"SBT",name:"Solomon Islands Time",offset:n.UTC_PLUS_11},Zo={dst:{is:!1,uses:!0},id:"SAST",name:"South African Standard Time",offset:n.UTC_PLUS_2},$o={dst:{is:!1,uses:!0},id:"GST",name:"South Georgia and the South Sandwich Islands Time",offset:n.UTC_MINUS_2},Qo={dst:{is:!1,uses:!0},id:"SRET",name:"Srednekolymsk Time",offset:n.UTC_PLUS_11},Xo={dst:{is:!1,uses:!0},id:"SLST",name:"Sri Lanka Standard Time",offset:n.UTC_PLUS_5_30},Co={dst:{is:!1,uses:!0},id:"SRT",name:"Suriname Time",offset:n.UTC_MINUS_3},aA={dst:{is:!1,uses:!0},id:"TAHT",name:"Tahiti Time",offset:n.UTC_MINUS_10},eA={dst:{is:!1,uses:!0},id:"TJT",name:"Tajikistan Time",offset:n.UTC_PLUS_5},uA={dst:{is:!1,uses:!0},id:"THA",name:"Thailand Standard Time",offset:n.UTC_PLUS_7},iA={dst:{is:!1,uses:!0},id:"TLT",name:"Timor-Leste Time",offset:n.UTC_PLUS_9},sA={dst:{is:!1,uses:!0},id:"TKT",name:"Tokelau Time",offset:n.UTC_PLUS_13},nA={dst:{is:!1,uses:!0},id:"TOT",name:"Tonga Time",offset:n.UTC_PLUS_13},rA={dst:{is:!1,uses:!0},id:"TRT",name:"Turkey Time",offset:n.UTC_PLUS_3},tA={dst:{is:!1,uses:!0},id:"TMT",name:"Turkmenistan Time",offset:n.UTC_PLUS_5},lA={dst:{is:!1,uses:!0},id:"TVT",name:"Tuvalu Time",offset:n.UTC_PLUS_12},mA={dst:{is:!1,uses:!0},id:"ULAT",name:"Ulaanbaatar Standard Time",offset:n.UTC_PLUS_8},cA={dst:{is:!1,uses:!0},id:"ULAST",name:"Ulaanbaatar Summer Time",offset:n.UTC_PLUS_9},oA={dst:{is:!1,uses:!0},id:"UYT",name:"Uruguay Standard Time",offset:n.UTC_MINUS_3},AA={dst:{is:!1,uses:!0},id:"UYST",name:"Uruguay Summer Time",offset:n.UTC_MINUS_2},fA={dst:{is:!1,uses:!0},id:"UZT",name:"Uzbekistan Time",offset:n.UTC_PLUS_5},dA={dst:{is:!1,uses:!0},id:"VUT",name:"Vanuatu Time",offset:n.UTC_PLUS_11},IA={dst:{is:!1,uses:!0},id:"VET",name:"Venezuela Standard Time",offset:n.UTC_MINUS_4},_A={dst:{is:!1,uses:!0},id:"VLAT",name:"Vladivostok Time",offset:n.UTC_PLUS_10},gA={dst:{is:!1,uses:!0},id:"VOLT",name:"Volgograd Time",offset:n.UTC_PLUS_4},hA={dst:{is:!1,uses:!0},id:"VOST",name:"Vostok Station Time",offset:n.UTC_PLUS_6},SA={dst:{is:!1,uses:!0},id:"WAKT",name:"Wake Island Time",offset:n.UTC_PLUS_12},EA={dst:{is:!1,uses:!0},id:"WAST",name:"West Africa Summer Time",offset:n.UTC_PLUS_2},pA={dst:{is:!1,uses:!0},id:"WAT",name:"West Africa Time",offset:n.UTC_PLUS_1},TA={dst:{is:!1,uses:!0},id:"WGST",name:"West Greenland Summer Time",offset:n.UTC_MINUS_2},vA={dst:{is:!1,uses:!0},id:"WGT",name:"West Greenland Time",offset:n.UTC_MINUS_3},bA={dst:{is:!1,uses:!0},id:"WKT",name:"West Kazakhstan Time",offset:n.UTC_PLUS_5},BA={dst:{is:!1,uses:!0},id:"WEDT",name:"Western European Summer Time",offset:n.UTC_PLUS_1},UA={dst:{is:!1,uses:!0},id:"WET",name:"Western European Time",offset:n.UTC_0},NA={dst:{is:!1,uses:!0},id:"WIT",name:"Western Indonesian Time",offset:n.UTC_PLUS_7},DA={dst:{is:!1,uses:!0},id:"WST",name:"Western Standard Time",offset:n.UTC_PLUS_8},yA={dst:{is:!1,uses:!0},id:"YAKT",name:"Yakutsk Time",offset:n.UTC_PLUS_9},PA={dst:{is:!1,uses:!0},id:"YEKT",name:"Yekaterinburg Time",offset:n.UTC_PLUS_5},xa=(a=>(a.Africa="Africa",a.Americas="Americas",a.Asia="Asia",a.Europe="Europe",a.Oceania="Oceania",a.Polar="Polar",a))(xa||{}),Oa=(a=>(a.CentralAmerica="Central America",a.EasternAsia="Eastern Asia",a.EasternEurope="Eastern Europe",a.EasternAfrica="Eastern Africa",a.MiddleAfrica="Middle Africa",a.MiddleEast="Middle East",a.NorthernAfrica="Northern Africa",a.NorthernAmerica="Northern America",a.NorthernEurope="Northern Europe",a.Polynesia="Polynesia",a.SouthAmerica="South America",a.SouthernAfrica="Southern Africa",a.SouthernAsia="Southern Asia",a.SouthernEurope="Southern Europe",a.WesternAfrica="Western Africa",a.WesternAsia="Western Asia",a.WesternEurope="Western Europe",a.WesternAustralia="Western Australia",a))(Oa||{}),FA={Afghanistan:{i18n:{calling_codes:[93],currencies:[ta.AfghanistanAfghani],languages:[e.Pashto,e.Dari,e.Turkmen,e.Uzbek],tz:{offsets:[n.UTC_PLUS_4_30],regions:[m.AsiaKabul],timezones:[t.AfghanistanTime]}},id:A.Afghanistan,info:{flag:{emoji:"\u{1F1E6}\u{1F1EB}",emoji_unicode:"U+1F1E6 U+1F1EB",svg:"https://www.countryflags.io/af/flat/64.svg"},tld:[".af"]},iso:{alpha2:A.Afghanistan,alpha3:"AFG",numeric:"004"},name:{alt_spellings:["AF","Af\u0121\u0101nist\u0101n"],demonym:"Afghan",native:{endonym:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},official:"Islamic Republic of Afghanistan",short:"Afghanistan",translations:{[e.Afrikaans]:"Afghanistan",[e.Albanian]:"Shqip\xEBri",[e.Amharic]:"\u12A0\u134D\u130B\u1295",[e.Arabic]:"\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Basque]:"Afganist\xE1n",[e.Belarusian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Bengali]:"\u0986\u09AB\u0997\u09BE\u09A8\u09BF\u09B8\u09CD\u09A4\u09BE\u09A8",[e.Berber]:"\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F51\u0F7C\u0F53\u0F0B\u0F63\u0F7A\u0F0B\u0F66\u0F90\u0F51\u0F0B\u0F46\u0F0D",[e.Bosnian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Breton]:"Afganistan",[e.Bulgarian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Burmese]:"\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A",[e.Catalan]:"Afganistan",[e.Chinese]:"\u963F\u5BCC\u6C57",[e.Croatian]:"Afganistan",[e.Czech]:"Afganistan",[e.Danish]:"Afghanistan",[e.Dutch]:"Afghanistan",[e.English]:"Afghanistan",[e.Esperanto]:"Afganistan",[e.Estonian]:"Afganistan",[e.Finnish]:"Afghanistan",[e.French]:"Afghanistan",[e.Frisian]:"Afghanistan",[e.Galician]:"Afganist\xE1n",[e.Georgian]:"\u10D0\u10D5\u10E6\u10D0\u10DC\u10D4\u10D7\u10D8",[e.German]:"Afghanistan",[e.Greenlandic]:"Afghanistan",[e.Greek]:"\u0391\u03C6\u03B3\u03B1\u03BD\u03B9\u03C3\u03C4\u03AC\u03BD",[e.Gujarati]:"\u0A85\u0AAB\u0A97\u0ABE\u0AA8\u0ABF\u0AB8\u0ACD\u0AA4\u0ABE\u0AA8",[e.Haitian]:"Afghanistan",[e.Hausa]:"Afghanistan",[e.Hebrew]:"\u05D0\u05E4\u05D2\u05E0\u05D9\u05E1\u05D8\u05DF",[e.Hindi]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Hungarian]:"Afganistan",[e.Icelandic]:"Afghanistan",[e.Igbo]:"Afghanistan",[e.Indonesian]:"Afghanistan",[e.Irish]:"Afghanistan",[e.Italian]:"Afghanistan",[e.Japanese]:"\u30A2\u30D5\u30AC\u30CB\u30B9\u30BF\u30F3",[e.Javanese]:"Afghanistan",[e.Kannada]:"\u0C85\u0CAB\u0C97\u0CBE\u0CA8\u0CBF\u0CB8\u0CCD\u0CA4\u0CBE\u0CA8",[e.Kazakh]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Khmer]:"\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17B7\u1780",[e.Korean]:"\uC544\uD504\uAC00\uB2C8\uC2A4\uD0C4",[e.Kurdish]:"Afghanistan",[e.Kyrgyz]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Lao]:"\u0EAD\u0EB2\u0E9F\u0EB2\u0EA5\u0EBD\u0E99",[e.Latin]:"Afghanistan",[e.Latvian]:"Afghanistan",[e.Lithuanian]:"Afganistanas",[e.Luxembourgish]:"Afghanistan",[e.Macedonian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Malagasy]:"Afghanistan",[e.Malay]:"Afghanistan",[e.Malayalam]:"\u0D05\u0D2B\u0D17\u0D3E\u0D28\u0D3F\u0D38\u0D4D\u0D24\u0D3E\u0D28",[e.Maltese]:"Afghanistan",[e.Maori]:"Afghanistan",[e.Marathi]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Mongolian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Nepali]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Norwegian]:"Afghanistan",[e.Pashto]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Persian]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Polish]:"Afganistan",[e.Portuguese]:"Afghanistan",[e.Punjabi]:"Afghanistan",[e.Romanian]:"Afghanistan",[e.Polish]:"Afganistan",[e.Russian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Samoan]:"Afghanistan",[e.Sanskrit]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Scots]:"Afghanistan",[e.Serbian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Sesotho]:"Afghanistan",[e.Shona]:"Afghanistan",[e.Sindhi]:"Afghanistan",[e.Sinhala]:"\u0D86\u0D9C\u0DCA\u200D\u0DBB\u0DDC\u0D9A\u0DCA\u0D9A\u0DD2\u0DBA\u0DCF\u0DC0",[e.Slovak]:"Afganistan",[e.Slovenian]:"Afganistan",[e.Somali]:"Afghanistan",[e.Spanish]:"Afganist\xE1n",[e.Sudanese]:"Afghanistan",[e.Swahili]:"Afghanistan",[e.Swedish]:"Afghanistan",[e.Tagalog]:"Afghanistan",[e.Tajik]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Tatar]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Tamil]:"\u0B86\u0BAA\u0BCD\u0BAA\u0B95\u0BBE\u0BA9\u0BBF\u0BB8\u0BCD\u0BA4\u0BBE\u0BA9\u0BCD",[e.Telugu]:"\u0C06\u0C2B\u0C4D\u0C18\u0C28\u0C3F\u0C38\u0C4D\u0C24\u0C3E\u0C28\u0C4D",[e.Thai]:"\u0E2D\u0E31\u0E1F\u0E01\u0E32\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19",[e.Tibetan]:"\u0F68\u0F55\u0F0B\u0F42\u0F7A\u0F0B\u0F53\u0F72\u0F66\u0F72\u0F0B\u0F4F\u0F7A\u0F53\u0F66\u0F72\u0F0D",[e.Turkish]:"Afganistan",[e.Ukrainian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Urdu]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Uzbek]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Vietnamese]:"Afghanistan",[e.Welsh]:"Afghanistan",[e.Xhosa]:"Afghanistan",[e.Yiddish]:"Afghanistan",[e.Yoruba]:"Afghanistan",[e.Zulu]:"Afghanistan"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Kabul",total:341e5}},geography:{area:652230,region:xa.Asia,sub_region:Oa.SouthernAsia},government:{capital:"Kabul",type:"Islamic Emirate"}}},Albania:{i18n:{calling_codes:[355],currencies:[ta.AlbaniaLek],languages:[e.Albanian,e.Greek,e.Turkish],tz:{offsets:[n.UTC_PLUS_1],regions:[m.EuropeBrussels],timezones:[t.CentralEuropeanTime]}},id:A.Albania,info:{flag:{emoji:"\u{1F1E6}\u{1F1F1}",emoji_unicode:"U+1F1E6 U+1F1F1",svg:"https://www.countryflags.io/al/flat/64.svg"},tld:[".al"]},iso:{alpha2:A.Albania,alpha3:"ALB",numeric:"008"},name:{alt_spellings:["AL","Shqip\xEBri","Shqip\xEBria","Shqipnia"],demonym:"Albanian",native:{endonym:"Shqip\xEBri"},official:"Republic of Albania",short:"Albania",translations:{[e.Afrikaans]:"Albania",[e.Albanian]:"Albania",[e.Amharic]:"\u12A0\u120D\u1263\u1295\u12EB",[e.Arabic]:"\u0623\u0644\u0628\u0627\u0646\u064A\u0627",[e.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Basque]:"Albania",[e.Belarusian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Bengali]:"\u0986\u09B2\u09AC\u09BE\u09A8\u09BF\u09AF\u09BC\u09BE",[e.Berber]:"\u0623\u0644\u0628\u0627\u0646\u064A\u0627",[e.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B",[e.Bosnian]:"Albanija",[e.Breton]:"Albania",[e.Bulgarian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Burmese]:"\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A",[e.Catalan]:"Alb\xE0nia",[e.Chinese]:"\u963F\u5C14\u5DF4\u5C3C\u4E9A",[e.Croatian]:"Albanija",[e.Czech]:"Alb\xE1nie",[e.Danish]:"Albanien",[e.Dutch]:"Albani\xEB",[e.English]:"Albania",[e.Esperanto]:"Albanio",[e.Estonian]:"Albaania",[e.Finnish]:"Albania",[e.French]:"Albanie",[e.Frisian]:"Albani\xEB",[e.Galician]:"Alb\xE2nia",[e.Georgian]:"\u10D0\u10DA\u10D1\u10D0\u10DC\u10D8\u10D0",[e.German]:"Albanien",[e.Greenlandic]:"Albania",[e.Greek]:"\u0391\u03BB\u03B2\u03B1\u03BD\u03AF\u03B1",[e.Gujarati]:"\u0A85\u0AB2\u0AAC\u0AA8\u0ABF\u0AAF\u0ABE",[e.Haitian]:"Albanais",[e.Hausa]:"Albania",[e.Hebrew]:"\u05D0\u05DC\u05D1\u05E0\u05D9\u05D4",[e.Hindi]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[e.Hungarian]:"Alb\xE1nia",[e.Icelandic]:"Alb\xFAnir",[e.Igbo]:"Albania",[e.Indonesian]:"Albania",[e.Irish]:"Alb\xE1in",[e.Italian]:"Albania",[e.Japanese]:"\u30A2\u30EB\u30D0\u30CB\u30A2",[e.Javanese]:"Albania",[e.Kannada]:"\u0C85\u0CB2\u0CCD\u0CAC\u0CBE\u0CA8\u0CBF\u0CAF\u0CBE",[e.Kazakh]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Khmer]:"\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17C1\u179F\u17CA\u17B8",[e.Korean]:"\uC54C\uBC14\uB2C8\uC544",[e.Kurdish]:"\u0622\u0644\u0628\u0627\u0646\u06CC\u0627",[e.Kyrgyz]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Lao]:"\u0EAD\u0EB2\u0EA5\u0EB2\u0E99\u0EB5",[e.Latin]:"Albania",[e.Latvian]:"Alb\u0101nija",[e.Lithuanian]:"Albanija",[e.Luxembourgish]:"Albani\xEB",[e.Macedonian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430",[e.Malagasy]:"Albania",[e.Malay]:"Albania",[e.Malayalam]:"\u0D05\u0D32\u0D4D\u0D2C\u0D3E\u0D28\u0D3F\u0D2F\u0D3E",[e.Maltese]:"Albania",[e.Maori]:"Albania",[e.Marathi]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[e.Mongolian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Nepali]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[e.Norwegian]:"Albania",[e.Pashto]:"\u0627\u0627\u0644\u0628\u0627\u0646\u06CC",[e.Persian]:"\u0622\u0644\u0628\u0627\u0646\u06CC",[e.Polish]:"Albania",[e.Portuguese]:"Alb\xE2nia",[e.Punjabi]:"\u0A05\u0A32\u0A2C\u0A28\u0A40\u0A06",[e.Romanian]:"Alb\u0103n",[e.Russian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Samoan]:"Albania",[e.Sanskrit]:"Albani",[e.Scots]:"Alb\xE0inia",[e.Serbian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430",[e.Sesotho]:"Albania",[e.Shona]:"Albania",[e.Sindhi]:"Albania",[e.Sinhala]:"\u0D87\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA",[e.Slovak]:"Alb\xE1nsko",[e.Slovenian]:"Albanija",[e.Somali]:"Albania",[e.Spanish]:"Albania",[e.Sudanese]:"Albania",[e.Swahili]:"Albania",[e.Swedish]:"Albanien",[e.Tagalog]:"Albania",[e.Tajik]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Tamil]:"\u0B85\u0BB2\u0BCD\u0BAA\u0BBE\u0BA9\u0BBF\u0BAF\u0BBE",[e.Tatar]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Telugu]:"\u0C05\u0C32\u0C4D\u0C2C\u0C3E\u0C28\u0C3F\u0C2F\u0C3E",[e.Thai]:"\u0E2D\u0E31\u0E25\u0E41\u0E1A\u0E19\u0E34\u0E19\u0E35",[e.Tibetan]:"\u0F68\u0F63\u0F0B\u0F56\u0F72\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F72",[e.Turkish]:"Albaniye",[e.Ukrainian]:"\u0410\u043B\u0431\u0430\u043D\u0456\u044F",[e.Urdu]:"\u0622\u0644\u0628\u0627\u0646\u06CC",[e.Uzbek]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Vietnamese]:"Albanie",[e.Welsh]:"Albania",[e.Xhosa]:"Albania",[e.Yiddish]:"\u05D0\u05DC\u05D1\u05E0\u05D9\u05E9",[e.Yoruba]:"Albania",[e.Zulu]:"Albania"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Tirana",total:2853e3}},geography:{area:28748,region:xa.Europe,sub_region:Oa.SouthernEurope},government:{capital:"Tirana",type:"Republic"}}},Algeria:{i18n:{calling_codes:[213],currencies:[ta.AlgeriaDinar],languages:[e.Arabic,e.French,e.Berber,e.Tamazight],tz:{offsets:[n.UTC_PLUS_1,n.UTC_PLUS_2],regions:[m.AfricaAlgiers],timezones:[t.CentralEuropeanTime]}},id:A.Algeria,info:{flag:{emoji:"\u{1F1E9}\u{1F1FF}",emoji_unicode:"U+1F1E9 U+1F1FF",svg:"https://www.countryflags.io/dz/flat/64.svg"},tld:[".dz",".\u062C\u0632\u0627\u0626\u0631"]},iso:{alpha2:A.Algeria,alpha3:"DZA",numeric:"012"},name:{alt_spellings:["DZ","Dzayer","Alg\xE9rie"],demonym:"Algerian",native:{endonym:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631"},official:"People's Democratic Republic of Algeria",short:"Algeria",translations:{[e.Afrikaans]:"Algerije",[e.Albanian]:"Algeria",[e.Amharic]:"\u12A0\u120D\u1300\u122D\u1235",[e.Arabic]:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631",[e.Armenian]:"\u0531\u056C\u0563\u0578\u0580\u056B\u0561",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043B\u0436\u0438\u0440",[e.Basque]:"Algeria",[e.Belarusian]:"\u0410\u043B\u0436\u0438\u0440",[e.Bengali]:"\u0986\u09B2\u099C\u09C7\u09B0",[e.Berber]:"\u062C\u0632\u0627\u0626\u0631",[e.Bhutani]:"\u0F62\u0FAB\u0F7C\u0F44\u0F0B\u0F41",[e.Bosnian]:"Al\u017Eir",[e.Breton]:"Algeria",[e.Bulgarian]:"\u0410\u043B\u0436\u0438\u0440",[e.Burmese]:"\u1021\u102C\u101B\u1015\u103A",[e.Catalan]:"Alg\xE8ria",[e.Chinese]:"\u963F\u5C14\u53CA\u5229\u4E9A",[e.Croatian]:"Al\u017Eir",[e.Czech]:"Al\u017E\xEDrsko",[e.Danish]:"Algeriet",[e.Dutch]:"Algerije",[e.English]:"Algeria",[e.Esperanto]:"Al\u011Derio",[e.Estonian]:"Al\u017Eira",[e.Finnish]:"Algeria",[e.French]:"Alg\xE9rie",[e.Frisian]:"Algeri\xEB",[e.Galician]:"Alxeria",[e.Georgian]:"\u10D0\u10DA\u10D2\u10D8\u10E3\u10E0\u10D8",[e.German]:"Algerien",[e.Greenlandic]:"Algeria",[e.Greek]:"\u0391\u03BB\u03B3\u03B5\u03C1\u03AF\u03B1",[e.Gujarati]:"\u0A86\u0AB2\u0AC7\u0A97\u0AB0\u0ABF\u0AAF\u0ABE",[e.Haitian]:"Alg\xE9rie",[e.Hausa]:"Algeria",[e.Hebrew]:"\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4",[e.Hindi]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Hungarian]:"Alg\xE1r",[e.Icelandic]:"Alg\xFAra",[e.Igbo]:"Algeria",[e.Indonesian]:"Aljir",[e.Irish]:"Alg\xE9rie",[e.Italian]:"Algeria",[e.Japanese]:"\u30A2\u30EB\u30B8\u30A7\u30EA\u30A2",[e.Javanese]:"Aljir",[e.Kannada]:"\u0C86\u0CB2\u0CCD\u0C97\u0CC7\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD",[e.Kazakh]:"\u0410\u043B\u0436\u0438\u0440",[e.Khmer]:"\u17A2\u17B6\u179B\u17CB\u1794\u17B6\u1793\u17B8",[e.Korean]:"\uC54C\uC81C\uB9AC",[e.Kurdish]:"\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u062C\u0632\u0627\u06CC\u0631",[e.Kyrgyz]:"\u0410\u043B\u0436\u0438\u0440",[e.Lao]:"\u0EAD\u0EB2\u0EA5\u0EB2\u0E88\u0EB5\u0E99",[e.Latin]:"Algeria",[e.Latvian]:"Al\u017E\u012Brija",[e.Lithuanian]:"Al\u017Eyras",[e.Luxembourgish]:"Algeria",[e.Macedonian]:"\u0410\u043B\u0436\u0438\u0440",[e.Malagasy]:"Alg\xE9rie",[e.Malay]:"Aljir",[e.Malayalam]:"\u0D06\u0D32\u0D02\u0D17\u0D47\u0D30\u0D3F\u0D2F\u0D7B",[e.Maltese]:"Alg\xE9rie",[e.Maori]:"Algeria",[e.Marathi]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Mongolian]:"\u0410\u043B\u0436\u0438\u0440",[e.Nepali]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Norwegian]:"Algeria",[e.Pashto]:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631",[e.Persian]:"\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u0639\u0631\u0628",[e.Polish]:"Algieria",[e.Portuguese]:"Alg\xE9ria",[e.Punjabi]:"\u0A06\u0A32\u0A47\u0A17\u0A40\u0A06",[e.Romanian]:"Algeria",[e.Russian]:"\u0410\u043B\u0436\u0438\u0440",[e.Samoan]:"Algeria",[e.Sanskrit]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Scots]:"Algeria",[e.Serbian]:"\u0410\u043B\u0436\u0438\u0440",[e.Sesotho]:"Algeria",[e.Shona]:"Algeria",[e.Sindhi]:"Algeria",[e.Sinhala]:"\u0D86\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA",[e.Slovak]:"Al\u017E\xEDrsko",[e.Slovenian]:"Al\u017Eir",[e.Somali]:"Algeria",[e.Spanish]:"Algeria",[e.Sudanese]:"Aljir",[e.Swahili]:"Aljir",[e.Swedish]:"Algeriet",[e.Tagalog]:"Algeria",[e.Tajik]:"\u0410\u043B\u0436\u0438\u0440",[e.Tamil]:"\u0B86\u0BB2\u0BCD\u0B95\u0BC7\u0BB0\u0BBF\u0BAF\u0BBE",[e.Tatar]:"\u0410\u043B\u0436\u0438\u0440",[e.Telugu]:"\u0C06\u0C32\u0C4D\u0C17\u0C47\u0C30\u0C3F\u0C2F\u0C3E",[e.Thai]:"\u0E2D\u0E32\u0E23\u0E32\u0E01\u0E2D\u0E19",[e.Tibetan]:"\u0F68\u0F63\u0F9F\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F61\u0F72",[e.Turkish]:"Cezayir",[e.Ukrainian]:"\u0410\u043B\u0436\u0438\u0440",[e.Urdu]:"\u0622\u0644\u062C\u06CC\u0631",[e.Uzbek]:"\u0410\u043B\u0436\u0438\u0440",[e.Vietnamese]:"\u1EA2\u0301\u1EA1\u1EA3\u1EAD\u1EB5",[e.Welsh]:"Algeria",[e.Xhosa]:"Algeria",[e.Yiddish]:"\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4",[e.Yoruba]:"Algeria",[e.Zulu]:"Algeria"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Oran",total:371e5}},geography:{area:2381740,region:xa.Africa,sub_region:Oa.NorthernAfrica},government:{capital:"Algiers",type:"Republic"}}},AmericanSamoa:{i18n:{calling_codes:[1684],currencies:[ta.AmericanSamoaTala],languages:[e.English,e.Samoan],tz:{offsets:[n.UTC_MINUS_11],regions:[m.PacificSamoa],timezones:[t.SamoaStandardTime]}},id:A.AmericanSamoa,info:{flag:{emoji:"\u{1F1E6}\u{1F1F8}",emoji_unicode:"U+1F1E6 U+1F1F8",svg:"https://www.countryflags.io/as/flat/64.svg"},tld:[".as"]},iso:{alpha2:A.AmericanSamoa,alpha3:"ASM",numeric:"016"},name:{alt_spellings:["AS","Amerika S\u0101moa","Amelika S\u0101moa","S\u0101moa Amelika"],demonym:"American Samoan",native:{endonym:"American Samoa"},official:"American Samoa",short:"American Samoa",translations:{[e.Afrikaans]:"Amerikaans Samoa",[e.Albanian]:"Samoa Amerikane",[e.Amharic]:"\u1233\u121E\u12A0\u122D",[e.Arabic]:"\u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629",[e.Armenian]:"\u054D\u0561\u0570\u0561\u0574\u0561\u056C\u056B\u0561",[e.Azerbaijani]:"Samoa Amerikana",[e.Bashkir]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0421\u0430\u043C\u043E\u0430",[e.Basque]:"Samoa Amerikana",[e.Belarusian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430",[e.Bengali]:"\u0986\u09AE\u09C7\u09B0\u09BF\u0995\u09BE\u09A8 \u09B8\u09BE\u09AE\u09CB\u09AF\u09BC\u09BE",[e.Berber]:"\u062C\u0632\u0631 \u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629",[e.Bhutani]:"\u0F68\u0F62\u0F92\u0FB1\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F58\u0F44\u0F66\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F66\u0F90\u0F56\u0F66\u0F0B\u0F62\u0F92\u0FB1\u0F74\u0F51\u0F0B\u0F46\u0F7A\u0F53\u0F0B\u0F54\u0F7C\u0F0D",[e.Bosnian]:"Ameri\u010Dka Samoa",[e.Breton]:"Samoa Amerikan",[e.Bulgarian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Burmese]:"\u1021\u1019\u1039\u1038\u1019\u101B\u102D\u102F\u1018\u102C\u101E\u102C",[e.Catalan]:"Samoa Americana",[e.Chinese]:"\u7F8E\u5C5E\u8428\u6469\u4E9A",[e.Croatian]:"Ameri\u010Dka Samoa",[e.Czech]:"Americk\xE1 Samoa",[e.Danish]:"Amerikansk Samoa",[e.Dutch]:"Amerikaans Samoa",[e.English]:"American Samoa",[e.Esperanto]:"Samoa Amerika",[e.Estonian]:"Ameerika Samoa",[e.Finnish]:"Amerikka Samoa",[e.French]:"American Samoa",[e.Frisian]:"Amerikaans Samoa",[e.Galician]:"Samoa Americana",[e.Georgian]:"\u10D0\u10DB\u10D4\u10E0\u10D8\u10D9\u10D8\u10E1 \u10E1\u10D0\u10DB\u10DD\u10D0",[e.German]:"Amerikanisch-Samoa",[e.Greenlandic]:"Amerikaans Samoa",[e.Greek]:"\u0391\u03BC\u03B5\u03C1\u03B9\u03BA\u03B1\u03BD\u03B9\u03BA\u03AE \u03A3\u03B1\u03BC\u03CC\u03B1",[e.Gujarati]:"\u0A86\u0AAE\u0AC7\u0AB0\u0ABF\u0A95\u0AA8 \u0AB8\u0ABE\u0AAE\u0ACB\u0AAF\u0ABE",[e.Haitian]:"Amerikaans Samoa",[e.Hausa]:"Amerikaans Samoa",[e.Hebrew]:"\u05D0\u05DE\u05E8\u05D9\u05E7\u05E0\u05D9\u05D4 \u05E1\u05DE\u05D5\u05D0\u05D4",[e.Hindi]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Hungarian]:"Amerikai Szamoa",[e.Icelandic]:"Amerikai Szamoa",[e.Igbo]:"Ikina Amerika",[e.Indonesian]:"Samoa Amerika",[e.Irish]:"Samoa Amerikana",[e.Italian]:"Samoa Americane",[e.Japanese]:"\u30A2\u30E1\u30EA\u30AB\u9818\u30B5\u30E2\u30A2",[e.Javanese]:"Samoa Amerika",[e.Kannada]:"\u0C85\u0CAE\u0CC7\u0CB0\u0CBF\u0C95\u0CA8\u0CCD \u0CB8\u0CAE\u0CCB\u0C86",[e.Kazakh]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[e.Khmer]:"\u17A2\u17B6\u1798\u17C9\u17B6\u179A\u17B8\u179F\u17D2\u178F\u1784\u17CB",[e.Korean]:"\uC544\uBA54\uB9AC\uCE74 \uC0AC\uBAA8\uC544",[e.Kurdish]:"Amerikaans Samoa",[e.Kyrgyz]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[e.Lao]:"\u0EAD\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94",[e.Latin]:"Samoa Amerikana",[e.Latvian]:"Amerikas Samoa",[e.Lithuanian]:"Amerikos Samoa",[e.Luxembourgish]:"Amerikaans Samoa",[e.Macedonian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Malagasy]:"Samoa Amerika",[e.Malay]:"Amerika Samo",[e.Malayalam]:"\u0D05\u0D2E\u0D47\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D28\u0D4D\u0D31\u0D4D \u0D38\u0D2E\u0D4B\u0D06",[e.Maltese]:"Samoa Amerika",[e.Maori]:"Samoa Amerika",[e.Marathi]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Mongolian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[e.Nepali]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Norwegian]:"Amerikansk Samoa",[e.Pashto]:"\u0627\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627",[e.Persian]:"\u0622\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627",[e.Polish]:"Samoa Ameryka\u0144skie",[e.Portuguese]:"Samoa Americana",[e.Punjabi]:"\u0A05\u0A2E\u0A30\u0A40\u0A15\u0A40 \u0A38\u0A3E\u0A2E\u0A4B\u0A06",[e.Romanian]:"Samoa americane",[e.Russian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430",[e.Samoan]:"Samoa Amerika",[e.Sanskrit]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Scots]:"Amerikaans Samoa",[e.Serbian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Sesotho]:"Amerikaans Samoa",[e.Shona]:"Amerikaans Samoa",[e.Sindhi]:"Amerikaans Samoa",[e.Sinhala]:"\u0D86\u0DBB\u0DCA\u0DA2\u0DD2\u0DB1\u0DCF\u0DB1\u0DD4 \u0DC3\u0DD0\u0DB8\u0DD0\u0DBD\u0DCA\u0DC0",[e.Slovak]:"Amerikaans Samoa",[e.Slovenian]:"Amerikaans Samoa",[e.Somali]:"Amerikaans Samoa",[e.Spanish]:"Samoa Americana",[e.Sudanese]:"Amerikaans Samoa",[e.Swahili]:"Amerikaans Samoa",[e.Swedish]:"Amerikansk Samoa",[e.Tagalog]:"Amerikaans Samoa",[e.Tajik]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[e.Tamil]:"\u0B85\u0BAE\u0BC6\u0BB0\u0BBF\u0B95\u0BCD \u0B9A\u0BAE\u0BCB\u0BB5\u0BBE",[e.Tatar]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[e.Telugu]:"\u0C05\u0C2E\u0C46\u0C30\u0C3F\u0C15\u0C4D \u0C38\u0C2E\u0C4B\u0C35\u0C3E",[e.Thai]:"\u0E2A\u0E2B\u0E23\u0E32\u0E0A\u0E2D\u0E32\u0E13\u0E32\u0E08\u0E31\u0E01\u0E23\u0E41\u0E2D\u0E1F\u0E23\u0E34\u0E01\u0E32",[e.Tibetan]:"\u0F68\u0F7A\u0F0B\u0F62\u0F72\u0F0B\u0F40\u0F0B\u0F68\u0F7A\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F74\u0F0B\u0F61\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F40",[e.Turkish]:"Amerikan Samoas\u0131",[e.Ukrainian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u044C\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Urdu]:"\u0627\u0645\u0631\u06CC\u06A9\u06CC \u0633\u0645\u0648\u0627",[e.Uzbek]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[e.Vietnamese]:"Amerikaans Samoa",[e.Welsh]:"Amerikaans Samoa",[e.Xhosa]:"Amerikaans Samoa",[e.Yiddish]:"Amerikaans Samoa",[e.Yoruba]:"Amerikaans Samoa",[e.Zulu]:"Amerikaans Samoa"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Pago Pago",total:558e3}},geography:{area:199,region:xa.Oceania,sub_region:Oa.Polynesia},government:{capital:"Pago Pago",type:"Nonmetropolitan Territory of the US"}}},Andorra:{i18n:{calling_codes:[376],currencies:[ta.Euro],languages:[e.Catalan,e.Spanish],tz:{offsets:[n.UTC_PLUS_1,n.UTC_PLUS_2],regions:[m.EuropeAndorra],timezones:[t.CentralEuropeanTime]}},id:A.Andorra,info:{flag:{emoji:"\u{1F1E6}\u{1F1F4}",emoji_unicode:"U+1F1E6 U+1F1F4",svg:"https://www.countryflags.io/ad/flat/64.svg"},tld:[".ad"]},iso:{alpha2:A.Andorra,alpha3:"AND",numeric:"020"},name:{alt_spellings:["AD","Principality of Andorra","Principat d'Andorra"],demonym:"Andorran",native:{endonym:"Andorra"},official:"Principality of Andorra",short:"Andorra",translations:{[e.Afrikaans]:"Andorra",[e.Albanian]:"Andorra",[e.Amharic]:"\u12A0\u1295\u12F6\u122B",[e.Arabic]:"\u0623\u0646\u062F\u0648\u0631\u0627",[e.Armenian]:"\u0540\u0561\u0576\u0564\u0561\u0580\u0561\u057E\u0561\u0575\u0584",[e.Azerbaijani]:"Andorra",[e.Bashkir]:"\u0410\u043D\u0434\u043E\u0440\u0430",[e.Basque]:"Andorra",[e.Belarusian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Bengali]:"\u0985\u09A8\u09CD\u09A1\u09CB\u09B0\u09BE",[e.Berber]:"\u0623\u0646\u062F\u0648\u0631\u0627",[e.Bhutani]:"\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B",[e.Bosnian]:"Andora",[e.Breton]:"Andorra",[e.Bulgarian]:"\u0410\u043D\u0434\u043E\u0440\u0430",[e.Burmese]:"\u1021\u1014\u1039\u1010\u102C\u101B\u102D\u102F\u1038",[e.Catalan]:"Andorra",[e.Chinese]:"\u5B89\u9053\u5C14",[e.Croatian]:"Andora",[e.Czech]:"Andorra",[e.Danish]:"Andorra",[e.Dutch]:"Andorra",[e.English]:"Andorra",[e.Esperanto]:"Andora",[e.Estonian]:"Andorra",[e.Finnish]:"Andorra",[e.French]:"Andorra",[e.Frisian]:"Andorra",[e.Galician]:"Andorra",[e.Georgian]:"\u12A0\u1295\u12F6\u122B",[e.German]:"Andorra",[e.Greek]:"\u0391\u03BD\u03B4\u03CC\u03C1\u03B1",[e.Hebrew]:"\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4",[e.Hindi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Hungarian]:"Andorra",[e.Icelandic]:"Andorra",[e.Igbo]:"Andorra",[e.Indonesian]:"Andorra",[e.Irish]:"Andorra",[e.Italian]:"Andorra",[e.Japanese]:"\u30A2\u30F3\u30C9\u30E9",[e.Javanese]:"Andorra",[e.Kannada]:"\u0C85\u0C82\u0CA1\u0CCB\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD",[e.Kazakh]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Khmer]:"\u17A2\u1784\u17CB\u178A\u17B6\u179A\u17B6",[e.Korean]:"\uC548\uB3C4\uB77C",[e.Kurdish]:"Andorra",[e.Kyrgyz]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Lao]:"\u0EAD\u0EB1\u0E99\u0EC2\u0E94\u0EA3\u0EB2",[e.Latin]:"Andorra",[e.Latvian]:"Andora",[e.Lithuanian]:"Andora",[e.Luxembourgish]:"Andorra",[e.Macedonian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Malagasy]:"Andorra",[e.Malay]:"Andorra",[e.Malayalam]:"\u0D05\u0D02\u0D21\u0D4B\u0D30\u0D3F\u0D2F\u0D28\u0D4D",[e.Maltese]:"Andorra",[e.Maori]:"Andorra",[e.Marathi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Mongolian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Nepali]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Norwegian]:"Andorra",[e.Pashto]:"\u0622\u0646\u062F\u0648\u0631\u0627",[e.Persian]:"\u0622\u0646\u062F\u0648\u0631\u0627",[e.Polish]:"Andora",[e.Portuguese]:"Andorra",[e.Punjabi]:"\u0A05\u0A70\u0A21\u0A4B\u0A30\u0A3E",[e.Romanian]:"Andorra",[e.Russian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Samoan]:"Andorra",[e.Sanskrit]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Scots]:"Andorra",[e.Serbian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Sesotho]:"Andorra",[e.Shona]:"Andorra",[e.Sindhi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Sinhala]:"\u0D86\u0DB1\u0DCA\u0DAF\u0DDA",[e.Slovak]:"Andorra",[e.Slovenian]:"Andora",[e.Somali]:"Andorra",[e.Spanish]:"Andorra",[e.Sudanese]:"Andorra",[e.Swahili]:"Andorra",[e.Swedish]:"Andorra",[e.Tagalog]:"Andorra",[e.Tajik]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Tamil]:"\u0B85\u0BA9\u0BCB\u0BB0\u0BCD\u0B9F\u0BBE",[e.Tatar]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Telugu]:"\u0C05\u0C02\u0C21\u0C4B\u0C30\u0C4D\u0C30\u0C3E",[e.Thai]:"\u0E2D\u0E31\u0E19\u0E14\u0E2D\u0E23\u0E4C\u0E23\u0E32",[e.Tibetan]:"\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B",[e.Turkish]:"Andora",[e.Ukrainian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Urdu]:"\u0622\u0646\u062F\u0648\u0631\u0627",[e.Uzbek]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Vietnamese]:"Andorra",[e.Welsh]:"Andorra",[e.Xhosa]:"Andorra",[e.Yiddish]:"\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4",[e.Yoruba]:"Andorra",[e.Zulu]:"Andorra"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Andorra la Vella",total:78e3}},geography:{area:468,region:xa.Europe,sub_region:Oa.SouthernEurope},government:{capital:"Andorra la Vella",type:"Constitutional Monarchy"}}},Angola:{i18n:{calling_codes:[244],currencies:[ta.AngolaKwanza],languages:[e.Portuguese,e.Spanish,e.French,e.Italian,e.German,e.English],tz:{offsets:[n.UTC_0,n.UTC_PLUS_1,n.UTC_PLUS_2],regions:[m.AfricaLuanda],timezones:[t.WestAfricaTime]}},id:A.Angola,info:{flag:{emoji:"\u{1F1E6}\u{1F1EC}",emoji_unicode:"U+1F1E6 U+1F1EC",svg:"https://www.countryflags.io/ao/flat/64.svg"},tld:[".ao"]},iso:{alpha2:A.Angola,alpha3:"AGO",numeric:"024"},name:{alt_spellings:["AO","Rep\xFAblica de Angola","\u0281\u025Bpublika de an"],demonym:"Angolan",native:{endonym:"Angola"},official:"Republic of Angola",short:"Angola",translations:{[e.Afrikaans]:"Angola",[e.Albanian]:"Ang\xF2la",[e.Amharic]:"\u12A0\u1295\u130E\u120A\u12EB",[e.Arabic]:"\u0623\u0646\u063A\u0648\u0644\u0627",[e.Armenian]:"\u0540\u0561\u0576\u0563\u0561\u056C\u0561\u056F\u0561",[e.Azerbaijani]:"Ang\u0259l",[e.Bashkir]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Basque]:"Angola",[e.Belarusian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Bengali]:"\u0985\u0999\u09CD\u0997\u09B2\u09BE",[e.Berber]:"Angola",[e.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42",[e.Bosnian]:"Angola",[e.Breton]:"Angola",[e.Bulgarian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Burmese]:"\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A",[e.Catalan]:"Angola",[e.Chinese]:"\u5B89\u54E5\u62C9",[e.Croatian]:"Angola",[e.Czech]:"Angola",[e.Danish]:"Angola",[e.Dutch]:"Angola",[e.English]:"Angola",[e.Esperanto]:"Angolo",[e.Estonian]:"Angola",[e.Finnish]:"Angola",[e.French]:"Angola",[e.Frisian]:"Angola",[e.Galician]:"Angola",[e.Georgian]:"\u10D0\u10DC\u10D2\u10DD\u10DA\u10D0",[e.German]:"Angola",[e.Greenlandic]:"Angola",[e.Greek]:"\u0391\u03B3\u03BA\u03CC\u03BB\u03B1",[e.Gujarati]:"\u0A85\u0A82\u0A97\u0ACB\u0AB2\u0ABE",[e.Haitian]:"Angola",[e.Hausa]:"Angola",[e.Hebrew]:"\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4",[e.Hindi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Hungarian]:"Angola",[e.Icelandic]:"Angola",[e.Igbo]:"Angola",[e.Indonesian]:"Angola",[e.Irish]:"Angola",[e.Italian]:"Angola",[e.Japanese]:"\u30A2\u30F3\u30B4\u30E9",[e.Javanese]:"Anggol",[e.Kannada]:"\u0C85\u0C82\u0C97\u0CCB\u0CB2\u0CBE",[e.Kazakh]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Khmer]:"\u17A2\u1784\u17CB\u1780\u17B6\u179B\u17A2\u1784\u17CB\u1782\u17D2\u179B\u17C1\u179F",[e.Korean]:"\uC559\uACE8\uB77C",[e.Kurdish]:"Angola",[e.Kyrgyz]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Lao]:"\u0EAD\u0EB0\u0E99\u0EB2\u0E94\u0EB2",[e.Latin]:"Angola",[e.Latvian]:"Angola",[e.Lithuanian]:"Angola",[e.Luxembourgish]:"Angola",[e.Macedonian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Malagasy]:"Angola",[e.Malay]:"Angola",[e.Malayalam]:"\u0D05\u0D02\u0D17\u0D4B\u0D33\u0D3E",[e.Maltese]:"Angola",[e.Maori]:"Angola",[e.Marathi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Mongolian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Nepali]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Norwegian]:"Angola",[e.Pashto]:"\u0627\u0646\u06AB\u0648\u0644\u0627",[e.Persian]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Polish]:"Angola",[e.Portuguese]:"Angola",[e.Punjabi]:"\u0A05\u0A19\u0A4D\u0A17\u0A4B\u0A32\u0A3E",[e.Romanian]:"Angole",[e.Russian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Samoan]:"Angola",[e.Sanskrit]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Scots]:"Angola",[e.Serbian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Sesotho]:"Angola",[e.Shona]:"Angola",[e.Sindhi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Sinhala]:"\u0D86\u0D9C\u0DBD\u0DD2\u0DBA\u0DCF\u0DC0",[e.Slovak]:"Angola",[e.Slovenian]:"Angola",[e.Somali]:"Angola",[e.Spanish]:"Angola",[e.Sudanese]:"Angola",[e.Swahili]:"Angola",[e.Swedish]:"Angola",[e.Tagalog]:"Angola",[e.Tajik]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Tamil]:"\u0B85\u0B99\u0BCD\u0B95\u0BCB\u0BB2\u0BBE",[e.Tatar]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Telugu]:"\u0C05\u0C02\u0C17\u0C4B\u0C32\u0C3E",[e.Thai]:"\u0E2D\u0E07\u0E04\u0E4C\u0E01\u0E32\u0E23\u0E2D\u0E32\u0E19\u0E32\u0E21\u0E34\u0E2A\u0E16\u0E32\u0E19",[e.Tibetan]:"\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B",[e.Turkish]:"Angola",[e.Ukrainian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Urdu]:"\u0627\u0646\u06AF\u0648\u0644\u0627",[e.Uzbek]:"Angola",[e.Vietnamese]:"Angola",[e.Xhosa]:"Angola",[e.Welsh]:"Angola",[e.Yiddish]:"\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4",[e.Yoruba]:"Angola",[e.Zulu]:"Angola"}}},Anguilla:{i18n:{calling_codes:[1264],currencies:[ta.DominicaDollar,ta.EastCaribbeanDollar,ta.Euro,ta.UnitedStatesDollar,ta.BritishPound],languages:[e.English,e.Spanish],tz:{offsets:[n.UTC_MINUS_4],regions:[m.AmericaAnguilla],timezones:[t.AtlanticStandardTime]}},id:A.Anguilla,info:{flag:{emoji:"\u{1F1E6}\u{1F1EC}",emoji_unicode:"U+1F1E6 U+1F1EC",svg:"https://www.countryflags.io/ai/flat/64.svg"},tld:[".ai"]},iso:{alpha2:A.Anguilla,alpha3:"AIA",numeric:"660"},name:{alt_spellings:["AI"],demonym:"Anguillian",native:{endonym:"Anguilla"},official:"Anguilla",short:"Anguilla",translations:{[e.Afrikaans]:"Anguilla",[e.Albanian]:"Anguilla",[e.Amharic]:"\u12A0\u1295\u1309\u120B",[e.Arabic]:"\u0623\u0646\u063A\u0648\u064A\u0644\u0627",[e.Armenian]:"\u0531\u0576\u0563\u056B\u056C\u0561",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Basque]:"Angila",[e.Belarusian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Bengali]:"\u0985\u0999\u09CD\u0997\u09C0\u09B2\u09BE",[e.Berber]:"\u0623\u0646\u063A\u0648\u064A\u0644\u0627",[e.Bhutani]:"\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B",[e.Bosnian]:"Angila",[e.Breton]:"Angila",[e.Bulgarian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Burmese]:"\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A",[e.Catalan]:"Angilla",[e.Chinese]:"\u5B89\u572D\u62C9",[e.Croatian]:"Angila",[e.Czech]:"Anguilla",[e.Danish]:"Anguilla",[e.Dutch]:"Anguilla",[e.English]:"Anguilla",[e.Esperanto]:"Angila",[e.Estonian]:"Anguilla",[e.Finnish]:"Anguilla",[e.French]:"Anguilla",[e.Frisian]:"Angila",[e.Galician]:"Anguilla",[e.Georgian]:"\u10D0\u10DC\u10D2\u10D8\u10DA\u10D0",[e.German]:"Anguilla",[e.Greenlandic]:"Anguilla",[e.Greek]:"\u0391\u03BD\u03B3\u03BA\u03C5\u03BB\u03AC",[e.Gujarati]:"\u0A85\u0A82\u0A97\u0ACD\u0AAF\u0ABE\u0AB2\u0ABE",[e.Haitian]:"Anguilla",[e.Hausa]:"Anguilla",[e.Hebrew]:"\u05D0\u05E0\u05D2\u05D5\u05D9\u05D0\u05DC\u05D4",[e.Hindi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Hungarian]:"Anguilla",[e.Icelandic]:"Anguilla",[e.Igbo]:"Anguilla",[e.Indonesian]:"Anguilla",[e.Irish]:"Anguilla",[e.Italian]:"Anguilla",[e.Japanese]:"\u30A2\u30F3\u30AE\u30E9",[e.Javanese]:"Anguilla",[e.Kannada]:"\u0C85\u0C82\u0C97\u0CCD\u0CB5\u0CC7\u0CB2\u0CBE",[e.Kazakh]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Khmer]:"\u17A2\u1784\u17CB\u1780\u17B6\u179A\u17A0\u17D2\u1782\u17B8\u1798",[e.Korean]:"\uC575\uADC8\uB77C",[e.Kurdish]:"Anguilla",[e.Kyrgyz]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Lao]:"\u0EAD\u0EB0\u0E99\u0EB0\u0E88\u0EB3",[e.Latin]:"Anguilla",[e.Latvian]:"Anguilla",[e.Lithuanian]:"Anguilla",[e.Luxembourgish]:"Angilla",[e.Macedonian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Malagasy]:"Angila",[e.Malay]:"Anguilla",[e.Malayalam]:"\u0D05\u0D02\u0D17\u0D4D\u0D35\u0D47\u0D32\u0D3E",[e.Maltese]:"Anguilla",[e.Maori]:"Anguilla",[e.Marathi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Mongolian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Nepali]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Norwegian]:"Anguilla",[e.Pashto]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Persian]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Polish]:"Anguilla",[e.Portuguese]:"Anguilla",[e.Punjabi]:"\u0A05\u0A02\u0A17\u0A40\u0A32\u0A3E",[e.Romanian]:"Anguilla",[e.Russian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Samoan]:"Anguilla",[e.Sanskrit]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Scots]:"Anguilla",[e.Serbian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Sesotho]:"Anguilla",[e.Shona]:"Anguilla",[e.Sindhi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Sinhala]:"\u0D86\u0D82\u0D9C\u0DD2\u0DBD\u0DCF\u0DC0",[e.Slovak]:"Anguilla",[e.Slovenian]:"Anguilla",[e.Somali]:"Anguilla",[e.Spanish]:"Anguilla",[e.Sudanese]:"Anguilla",[e.Swahili]:"Anguilla",[e.Swedish]:"Anguilla",[e.Tagalog]:"Anguilla",[e.Tajik]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Tamil]:"\u0B85\u0B99\u0BCD\u0B95\u0BC8\u0BB2\u0BBE",[e.Tatar]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Telugu]:"\u0C05\u0C02\u0C17\u0C4D\u0C35\u0C47\u0C32\u0C3E",[e.Thai]:"\u0E2D\u0E31\u0E07\u0E01\u0E32\u0E25\u0E32",[e.Tibetan]:"\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B",[e.Turkish]:"Anguilla",[e.Ukrainian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Urdu]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Uzbek]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Vietnamese]:"Anguilla",[e.Welsh]:"Anguilla",[e.Xhosa]:"Anguilla",[e.Yiddish]:"Anguilla",[e.Yoruba]:"Anguilla",[e.Zulu]:"Anguilla"}}},Antarctica:{i18n:{calling_codes:[672],currencies:[ta.UnitedStatesDollar,ta.Euro],languages:[e.English,e.Spanish,e.French,e.Portuguese,e.Italian,e.Dutch,e.German,e.Swedish,e.Norwegian,e.Danish,e.Finnish],tz:{offsets:[n.UTC_PLUS_1,n.UTC_PLUS_2],regions:[m.AntarcticaCasey,m.AntarcticaDavis,m.AntarcticaMcMurdo,m.AntarcticaPalmer,m.AntarcticaRothera],timezones:[t.AtlanticStandardTime,t.CentralTime,t.EasternTime,t.AtlanticStandardTime,t.AzoresStandardTime,t.NewfoundlandStandardTime]}},id:A.Antarctica,info:{flag:{emoji:"\u{1F1E6}\u{1F1F6}",emoji_unicode:"U+1F1E6 U+1F1F6",svg:"https://www.countryflags.io/aq/flat/64.svg"},tld:[".aq"]},iso:{alpha2:A.Antarctica,alpha3:"ATA",numeric:"010"},name:{alt_spellings:["AQ"],demonym:"Antarctican",native:{endonym:"Antarctica"},official:"Antarctica",short:"Antarctica",translations:{[e.Afrikaans]:"Antarctica",[e.Albanian]:"Antarktika",[e.Amharic]:"\u12A0\u1295\u1272\u120D\u12AB\u1293",[e.Arabic]:"\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[e.Armenian]:"\u0540\u0561\u0576\u0561\u0580\u0561\u057F\u056F\u0578",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Basque]:"Antarktika",[e.Belarusian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Bengali]:"\u0985\u09A8\u09CD\u09A4\u09B0\u09BE\u09B6\u09CD\u09AC\u09C0",[e.Berber]:"\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[e.Bhutani]:"\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B",[e.Bosnian]:"Antarktika",[e.Breton]:"Antarktika",[e.Bulgarian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Burmese]:"\u1021\u1014\u1039\u1010\u102C\u101B\u102E\u1038\u101A\u102C\u1038",[e.Catalan]:"Ant\xE0rtida",[e.Chinese]:"\u5357\u6781\u6D32",[e.Croatian]:"Antarktika",[e.Czech]:"Antarktida",[e.Danish]:"Antarktis",[e.Dutch]:"Antarctica",[e.English]:"Antarctica",[e.Esperanto]:"Antarktika",[e.Estonian]:"Antarktika",[e.Finnish]:"Antarktis",[e.French]:"Antarctica",[e.Frisian]:"Antarktis",[e.Galician]:"Ant\xE1rtida",[e.Georgian]:"\u10D0\u10DC\u10E2\u10D0\u10E0\u10E5\u10E2\u10D8\u10D9\u10D0",[e.German]:"Antarktis",[e.Greenlandic]:"Antarktis",[e.Greek]:"\u0391\u03BD\u03C4\u03B1\u03C1\u03BA\u03C4\u03B9\u03BA\u03AE",[e.Gujarati]:"\u0A85\u0AA8\u0ACD\u0AA4\u0AB0\u0ABE\u0AB6\u0ACD\u0AB5\u0AC0",[e.Haitian]:"Antarctica",[e.Hausa]:"Antarktika",[e.Hebrew]:"\u05D0\u05E0\u05D8\u05E8\u05E7\u05D8\u05D9\u05E7\u05D4",[e.Hindi]:"\u0905\u0928\u094D\u0924\u0930\u0915\u094D\u0937\u0947\u0924\u094D\u0930",[e.Hungarian]:"Antarktika",[e.Icelandic]:"Antarktis",[e.Igbo]:"Antarktika",[e.Indonesian]:"Antarktika",[e.Irish]:"Antarktika",[e.Italian]:"Antartide",[e.Japanese]:"\u5357\u6975",[e.Javanese]:"Antarktika",[e.Kannada]:"\u0C85\u0CA8\u0CCD\u0CA4\u0CB0\u0CBE\u0CB6\u0CCD\u0CB5\u0CBF",[e.Kazakh]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Khmer]:"\u17A2\u1784\u17CB\u179F\u17D2\u1780\u179A\u17A2\u17B6\u1798\u17C9\u17BB\u1799",[e.Korean]:"\uC564\uD2F0\uCE74\uD1A0\uB2C9",[e.Kurdish]:"Antarktika",[e.Kyrgyz]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Lao]:"\u0EAD\u0EB0\u0E99\u0EAD\u0EA5\u0EB2\u0E81\u0EB4\u0EAA\u0EB0",[e.Latin]:"Antarctica",[e.Latvian]:"Antarktika",[e.Lithuanian]:"Antarktis",[e.Luxembourgish]:"Antarktis",[e.Macedonian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Malagasy]:"Antarctica",[e.Malay]:"Antarktika",[e.Malayalam]:"\u0D05\u0D28\u0D4D\u0D24\u0D30\u0D3E\u0D36\u0D4D\u0D35\u0D3F",[e.Maltese]:"Antarktika",[e.Maori]:"Antarktika",[e.Marathi]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[e.Mongolian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Nepali]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[e.Norwegian]:"Antarktis",[e.Pashto]:"\u0627\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[e.Persian]:"\u0622\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627",[e.Polish]:"Antarktyka",[e.Portuguese]:"Ant\xE1rtida",[e.Punjabi]:"\u0A05\u0A28\u0A4D\u0A24\u0A30\u0A3E\u0A36\u0A3F\u0A15\u0A3E",[e.Romanian]:"Antarctica",[e.Russian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Samoan]:"Antarktika",[e.Sanskrit]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[e.Scots]:"Antarktika",[e.Serbian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Sesotho]:"Antarktika",[e.Shona]:"Antarktika",[e.Sindhi]:"Antarktika",[e.Sinhala]:"\u0D86\u0DB1\u0DCA\u0DA7\u0DCA\u0DA7\u0DD2\u0D9A\u0DCF\u0DC0",[e.Slovak]:"Antarktika",[e.Slovenian]:"Antarktika",[e.Somali]:"Antarktika",[e.Spanish]:"Ant\xE1rtida",[e.Sudanese]:"Antarktika",[e.Swahili]:"Antarktika",[e.Swedish]:"Antarktis",[e.Tagalog]:"Antarktika",[e.Tajik]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Tamil]:"\u0B85\u0BA9\u0BCD\u0BA4\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BBF\u0B95\u0BCD",[e.Tatar]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Telugu]:"\u0C05\u0C28\u0C4D\u0C24\u0C30\u0C3E\u0C36\u0C4D\u0C35\u0C3F\u0C15\u0C3E",[e.Thai]:"\u0E20\u0E39\u0E21\u0E34\u0E20\u0E32\u0E04\u0E2D\u0E32\u0E19\u0E31\u0E19\u0E15\u0E34\u0E01\u0E32",[e.Tibetan]:"\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72\u0F0B\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72",[e.Turkish]:"Antarktika",[e.Ukrainian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Urdu]:"\u0627\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627",[e.Uzbek]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Vietnamese]:"\u0110\u1EA5t Antarktik",[e.Welsh]:"Antarktika",[e.Xhosa]:"Antarktika",[e.Yiddish]:"Antarktika",[e.Yoruba]:"Antarktika",[e.Zulu]:"Antarktika"}}},Armenia:{i18n:{calling_codes:[374],currencies:[ta.ArmeniaDram],languages:[e.Armenian],tz:{offsets:[n.UTC_PLUS_4],regions:[m.AsiaJakarta],timezones:[t.ArmeniaTime]}},id:A.Armenia,info:{flag:{emoji:"\u{1F1E6}\u{1F1F2}",emoji_unicode:"U+1F1E6 U+1F1F2",svg:"https://www.countryflags.io/am/flat/64.svg"},tld:[".am"]},iso:{alpha2:A.Armenia,alpha3:"ARM",numeric:"051"},name:{alt_spellings:["AM","Hayastan","Republic of Armenia","\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"],demonym:"Armenian",native:{endonym:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"},official:"Republic of Armenia",short:"Armenia",translations:{[e.Afrikaans]:"Armeni\xEB",[e.Albanian]:"Armenia",[e.Amharic]:"\u12A0\u121B\u122D\u129B",[e.Arabic]:"\u0623\u0631\u0645\u064A\u0646\u064A\u0627",[e.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Basque]:"Arm\xE9nia",[e.Belarusian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Bengali]:"\u0986\u09B0\u09CD\u09AE\u09C7\u09A8\u09BF",[e.Berber]:"\u0623\u0631\u0645\u064A\u0646\u064A\u0627",[e.Bhutani]:"\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42",[e.Bosnian]:"Armenija",[e.Breton]:"Armeni\xEB",[e.Bulgarian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Burmese]:"\u1021\u102C\u1019\u1010\u102D\u1010\u1039",[e.Catalan]:"Arm\xE8nia",[e.Chinese]:"\u4E9A\u7F8E\u5C3C\u4E9A",[e.Croatian]:"Armenija",[e.Czech]:"Arm\xE9nie",[e.Danish]:"Armenien",[e.Dutch]:"Armeni\xEB",[e.English]:"Armenia",[e.Esperanto]:"Armenia",[e.Estonian]:"Armeenia",[e.Finnish]:"Armenia",[e.French]:"Armenia",[e.Frisian]:"Armeenia",[e.Galician]:"Arm\xE9nia",[e.Georgian]:"\u10D0\u10E0\u10DB\u10DD\u10DC\u10D8",[e.German]:"Armenien",[e.Greenlandic]:"Armenia",[e.Greek]:"\u0391\u03C1\u03BC\u03B5\u03BD\u03AF\u03B1",[e.Gujarati]:"\u0A85\u0AB0\u0ACD\u0AAE\u0AC7\u0AA8\u0ABF",[e.Haitian]:"Armenia",[e.Hausa]:"Armenia",[e.Hebrew]:"\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4",[e.Hindi]:"\u0905\u05E8\u05DE\u05E0\u093F\u092F\u093E",[e.Hungarian]:"\xD6rm\xE9nyorsz\xE1g",[e.Icelandic]:"Armenia",[e.Igbo]:"Armenia",[e.Indonesian]:"Armenia",[e.Irish]:"Armenia",[e.Italian]:"Armenia",[e.Japanese]:"\u30A2\u30EB\u30E1\u30CB\u30A2",[e.Javanese]:"Armenia",[e.Kannada]:"\u0C85\u0CB0\u0CCD\u0CAE\u0CC7\u0CA8\u0CBF",[e.Kazakh]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Khmer]:"\u17A2\u17B6\u1798\u17C9\u17C1\u179A\u17B8",[e.Korean]:"\uC544\uB974\uBA54\uB2C8\uC544",[e.Kurdish]:"Armenia",[e.Kyrgyz]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Lao]:"\u0EAD\u0EB2\u0EAB\u0EBC\u0E99\u0EB2",[e.Latin]:"Armenia",[e.Latvian]:"Armeenia",[e.Lithuanian]:"Arm\u0117nija",[e.Luxembourgish]:"Armenien",[e.Macedonian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430",[e.Malagasy]:"Armenia",[e.Malay]:"Armenia",[e.Malayalam]:"\u0D05\u0D30\u0D4D\u200D\u0D2E\u0D47\u0D28\u0D3F",[e.Maltese]:"Armenia",[e.Maori]:"Armenia",[e.Marathi]:"\u0905\u0930\u094D\u092E\u0947\u0928\u093F",[e.Mongolian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Nepali]:"\u0905\u0930\u094D\u092E\u0947\u0928\u093F",[e.Norwegian]:"Armenia",[e.Pashto]:"\u0622\u0631\u0645\u06CC\u0646\u06CC\u0627",[e.Persian]:"\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646",[e.Polish]:"Armenia",[e.Portuguese]:"Armenia",[e.Punjabi]:"\u0A05\u0A30\u0A2E\u0A40\u0A28\u0A40",[e.Romanian]:"Armenia",[e.Russian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Samoan]:"Armenia",[e.Sanskrit]:"Armenia",[e.Scots]:"Armenia",[e.Serbian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430",[e.Sesotho]:"Armenia",[e.Shona]:"Armenia",[e.Sindhi]:"Armenia",[e.Sinhala]:"\u0D86\u0DBB\u0DCA\u0DB8\u0DD3\u0DB1\u0DD2",[e.Slovak]:"Armenia",[e.Slovenian]:"Armenija",[e.Somali]:"Armenia",[e.Spanish]:"Armenia",[e.Sudanese]:"Armenia",[e.Swahili]:"Armenia",[e.Swedish]:"Armenien",[e.Tagalog]:"Armenia",[e.Tajik]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Tamil]:"\u0B85\u0BB0\u0BCD\u0BAE\u0BC7\u0BA9\u0BBF\u0BAF\u0BA9\u0BCD",[e.Tatar]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Telugu]:"\u0C05\u0C30\u0C4D\u0C2E\u0C47\u0C28\u0C3F",[e.Thai]:"\u0E2D\u0E32\u0E23\u0E4C\u0E40\u0E21\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19",[e.Tibetan]:"\u0F68\u0F62\u0F0B\u0F58\u0F7A\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F74\u0F0D",[e.Turkish]:"Ermenistan",[e.Ukrainian]:"\u0410\u0440\u043C\u0435\u043D\u0456\u044F",[e.Urdu]:"\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646",[e.Uzbek]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Vietnamese]:"Armenia",[e.Welsh]:"Armenia",[e.Xhosa]:"Armenia",[e.Yiddish]:"\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4",[e.Yoruba]:"Armenia",[e.Zulu]:"Armenia"}}},SomeCountry:{i18n:{calling_codes:[],currencies:[],languages:[],tz:{offsets:[],regions:[],timezones:[]}},id:A.AmericanSamoa,info:{flag:{emoji:"",emoji_unicode:"",svg:""},tld:[]},iso:{alpha2:A.AmericanSamoa,alpha3:"",numeric:""},name:{alt_spellings:[],demonym:"",native:{endonym:""},official:"",short:"",translations:{[e.Afrikaans]:"",[e.Albanian]:"",[e.Amharic]:"",[e.Arabic]:"",[e.Armenian]:"",[e.Azerbaijani]:"",[e.Bashkir]:"",[e.Basque]:"",[e.Belarusian]:"",[e.Bengali]:"",[e.Berber]:"",[e.Bhutani]:"",[e.Bosnian]:"",[e.Breton]:"",[e.Bulgarian]:"",[e.Burmese]:"",[e.Catalan]:"",[e.Chinese]:"",[e.Croatian]:"",[e.Czech]:"",[e.Danish]:"",[e.Dutch]:"",[e.English]:"",[e.Esperanto]:"",[e.Estonian]:"",[e.Finnish]:"",[e.French]:"",[e.Frisian]:"",[e.Galician]:"",[e.Georgian]:"",[e.German]:"",[e.Greenlandic]:"",[e.Greek]:"",[e.Gujarati]:"",[e.Haitian]:"",[e.Hausa]:"",[e.Hebrew]:"",[e.Hindi]:"",[e.Hungarian]:"",[e.Icelandic]:"",[e.Igbo]:"",[e.Indonesian]:"",[e.Irish]:"",[e.Italian]:"",[e.Japanese]:"",[e.Javanese]:"",[e.Kannada]:"",[e.Kazakh]:"",[e.Khmer]:"",[e.Korean]:"",[e.Kurdish]:"",[e.Kyrgyz]:"",[e.Lao]:"",[e.Latin]:"",[e.Latvian]:"",[e.Lithuanian]:"",[e.Luxembourgish]:"",[e.Macedonian]:"",[e.Malagasy]:"",[e.Malay]:"",[e.Malayalam]:"",[e.Maltese]:"",[e.Maori]:"",[e.Marathi]:"",[e.Mongolian]:"",[e.Nepali]:"",[e.Norwegian]:"",[e.Pashto]:"",[e.Persian]:"",[e.Polish]:"",[e.Portuguese]:"",[e.Punjabi]:"",[e.Romanian]:"",[e.Russian]:"",[e.Samoan]:"",[e.Sanskrit]:"",[e.Scots]:"",[e.Serbian]:"",[e.Sesotho]:"",[e.Shona]:"",[e.Sindhi]:"",[e.Sinhala]:"",[e.Slovak]:"",[e.Slovenian]:"",[e.Somali]:"",[e.Spanish]:"",[e.Sudanese]:"",[e.Swahili]:"",[e.Swedish]:"",[e.Tagalog]:"",[e.Tajik]:"",[e.Tamil]:"",[e.Tatar]:"",[e.Telugu]:"",[e.Thai]:"",[e.Tibetan]:"",[e.Turkish]:"",[e.Ukrainian]:"",[e.Urdu]:"",[e.Uzbek]:"",[e.Vietnamese]:"",[e.Welsh]:"",[e.Xhosa]:"",[e.Yiddish]:"",[e.Yoruba]:"",[e.Zulu]:""}}}},kA={id:e.Afrikaans,language:{code:I.Afrikaans,name:"Afrikaans",native:"Afrikaans"},name:"Afrikaans",native_name:"Afrikaans",rtl:!1},MA={country:{code:A.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.AfrikaansSouthAfrica,language:{code:I.Afrikaans,name:"Afrikaans",native:"Afrikaans"},name:"Afrikaans (South Africa)",native_name:"Afrikaans (Suid-Afrika)",rtl:!1},LA={id:e.Albanian,language:{code:I.Albanian,name:"Albanian",native:"Shqip"},name:"Albanian",native_name:"Shqip",rtl:!1},wA={country:{code:A.Albania,name:"Albania",native:"Shqip\xEBria"},id:e.AlbanianAlbania,language:{code:I.Albanian,name:"Albanian",native:"Shqip"},name:"Albanian (Albania)",native_name:"Shqip (Shqip\xEBria)",rtl:!1},GA={id:e.Amharic,language:{code:I.Amharic,name:"Amharic",native:"\u12A0\u121B\u122D\u129B"},name:"Amharic",native_name:"\u12A0\u121B\u122D\u129B",rtl:!1},qA={country:{code:A.Ethiopia,name:"Ethiopia",native:"\u12A2\u1275\u12EE\u1335\u12EB"},id:e.AmharicEthiopia,language:{code:I.Amharic,name:"Amharic",native:"\u12A0\u121B\u122D\u129B"},name:"Amharic (Ethiopia)",native_name:"\u12A0\u121B\u122D\u129B (\u12A2\u1275\u12EE\u1335\u12EB)",rtl:!1},KA={id:e.Arabic,language:{code:I.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629",rtl:!0},xA={country:{code:A.Algeria,name:"Algeria",native:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631"},id:e.ArabicAlgeria,language:{code:I.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Algeria)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u062C\u0632\u0627\u0626\u0631)",rtl:!0},OA={country:{code:A.Bahrain,name:"Bahrain",native:"\u0627\u0644\u0628\u062D\u0631\u064A\u0646"},id:e.ArabicBahrain,language:{code:I.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Bahrain)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0628\u062D\u0631\u064A\u0646)",rtl:!0},HA={country:{code:A.Egypt,name:"Egypt",native:"\u0645\u0635\u0631"},id:e.ArabicEgypt,language:{code:I.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Egypt)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0645\u0635\u0631)",rtl:!0},jA={country:{code:A.Iraq,name:"Iraq",native:"\u0627\u0644\u0639\u0631\u0627\u0642"},id:e.ArabicIraq,language:{code:I.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Iraq)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0639\u0631\u0627\u0642)",rtl:!0},WA={country:{code:A.Jordan,name:"Jordan",native:"\u0627\u0644\u0623\u0631\u062F\u0646"},id:e.ArabicJordan,language:{code:I.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Jordan)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0623\u0631\u062F\u0646)",rtl:!0},VA={country:{code:A.Kuwait,name:"Kuwait",native:"\u0627\u0644\u0643\u0648\u064A\u062A"},id:e.ArabicKuwait,language:{code:I.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Kuwait)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0643\u0648\u064A\u062A)",rtl:!0},zA={country:{code:A.Lebanon,name:"Lebanon",native:"\u0644\u0628\u0646\u0627\u0646"},id:e.ArabicLebanon,language:{code:I.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Lebanon)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u0628\u0646\u0627\u0646)",rtl:!0},RA={country:{code:A.Libya,name:"Libya",native:"\u0644\u064A\u0628\u064A\u0627"},id:e.ArabicLibya,language:{code:I.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Libya)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u064A\u0628\u064A\u0627)",rtl:!0},JA={country:{code:A.Morocco,name:"Morocco",native:"\u0627\u0644\u0645\u063A\u0631\u0628"},id:e.ArabicMorocco,language:{code:I.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Morocco)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u063A\u0631\u0628)",rtl:!0},YA={country:{code:A.Oman,name:"Oman",native:"\u0639\u0645\u0627\u0646"},id:e.ArabicOman,language:{code:I.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Oman)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0639\u0645\u0627\u0646)",rtl:!0},ZA={country:{code:A.Qatar,name:"Qatar",native:"\u0642\u0637\u0631"},id:e.ArabicQatar,language:{code:I.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Qatar)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0642\u0637\u0631)",rtl:!0},$A={country:{code:A.SaudiArabia,name:"Saudi Arabia",native:"\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629"},id:e.ArabicSaudiArabia,language:{code:I.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Saudi Arabia)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629)",rtl:!0},QA={country:{code:A.Tunisia,name:"Tunisia",native:"\u062A\u0648\u0646\u0633"},id:e.ArabicTunisia,language:{code:I.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Tunisia)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u062A\u0648\u0646\u0633)",rtl:!0},XA={country:{code:A.UnitedArabEmirates,name:"United Arab Emirates",native:"\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629"},id:e.ArabicUnitedArabEmirates,language:{code:I.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (United Arab Emirates)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629)",rtl:!0},CA={country:{code:A.Yemen,name:"Yemen",native:"\u0627\u0644\u064A\u0645\u0646"},id:e.ArabicYemen,language:{code:I.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Yemen)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u064A\u0645\u0646)",rtl:!0},af={id:e.Armenian,language:{code:I.Armenian,name:"Armenian",native:"\u0540\u0561\u0575\u0565\u0580\u0565\u0576"},name:"Armenian",native_name:"\u0540\u0561\u0575\u0565\u0580\u0565\u0576",rtl:!1},ef={country:{code:A.Armenia,name:"Armenia",native:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"},id:e.ArmenianArmenia,language:{code:I.Armenian,name:"Armenian",native:"\u0570\u0561\u0575\u0565\u0580\u0565\u0576"},name:"Armenian (Armenia)",native_name:"\u0570\u0561\u0575\u0565\u0580\u0565\u0576 (\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576)",rtl:!1},uf={id:e.Azerbaijani,language:{code:I.Azerbaijani,name:"Azeribaijani",native:"Az\u0259rbaycan"},name:"Azeri",native_name:"Az\u0259rbaycan",rtl:!1},sf={country:{code:A.Azerbaijan,name:"Azerbaijan",native:"Az\u0259rbaycan"},id:e.AzerbaijaniAzerbaijan,language:{code:I.Azerbaijani,name:"Azerbaijani",native:"Az\u0259rbaycan"},name:"Azeri (Azerbaijan)",native_name:"Az\u0259rbaycan (Az\u0259rbaycan)",rtl:!1},nf={id:e.Basque,language:{code:I.Basque,name:"Basque",native:"Euskara"},name:"Basque",native_name:"Euskara",rtl:!1},rf={country:{code:A.Spain,name:"Spain",native:"Espa\xF1a"},id:e.BasqueSpain,language:{code:I.Basque,name:"Basque",native:"Euskara"},name:"Basque (Spain)",native_name:"Euskara (Espa\xF1a)",rtl:!1},tf={id:e.Belarusian,language:{code:I.Belarusian,name:"Belarusian",native:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F"},name:"Belarusian",native_name:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F",rtl:!1},lf={country:{code:A.Belarus,name:"Belarus",native:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C"},id:e.BelarusianBelarus,language:{code:I.Belarusian,name:"Belarusian",native:"\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F"},name:"Belarusian (Belarus)",native_name:"\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F (\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C)",rtl:!1},mf={id:e.Bengali,language:{code:I.Bengali,name:"Bengali",native:"\u09AC\u09BE\u0982\u09B2\u09BE"},name:"Bengali",native_name:"\u09AC\u09BE\u0982\u09B2\u09BE",rtl:!1},cf={country:{code:A.Bangladesh,name:"Bangladesh",native:"\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6"},id:e.BengaliBangladesh,language:{code:I.Bengali,name:"Bengali",native:"\u09AC\u09BE\u0982\u09B2\u09BE"},name:"Bengali (Bangladesh)",native_name:"\u09AC\u09BE\u0982\u09B2\u09BE (\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6)",rtl:!1},of={id:e.Bhutani,language:{code:I.Bhutani,name:"Bhutani",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Bhutani",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42",rtl:!1},Af={country:{code:A.Bhutan,name:"Bhutan",native:"\u0F60\u0F56\u0FB2\u0F74\u0F42"},id:e.BhutaniBhutan,language:{code:I.Bhutani,name:"Bhutani",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Bhutani (Bhutan)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42)",rtl:!1},ff={id:e.Bulgarian,language:{code:I.Bulgarian,name:"Bulgarian",native:"\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438"},name:"Bulgarian",native_name:"\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438",rtl:!1},df={country:{code:A.Bulgaria,name:"Bulgaria",native:"\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F"},id:e.BulgarianBulgaria,language:{code:I.Bulgarian,name:"Bulgarian",native:"\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438"},name:"Bulgarian (Bulgaria)",native_name:"\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438 (\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F)",rtl:!1},If={id:e.Burmese,language:{code:I.Burmese,name:"Burmese",native:"\u1017\u1019\u102C\u1005\u102C"},name:"Burmese",native_name:"\u1017\u1019\u102C\u1005\u102C",rtl:!1},_f={country:{code:A.Myanmar,name:"Myanmar",native:"\u1019\u103C\u1014\u103A\u1019\u102C"},id:e.BurmeseMyanmar,language:{code:I.Burmese,name:"Burmese",native:"\u1017\u1019\u102C\u1005\u102C"},name:"Burmese (Myanmar)",native_name:"\u1017\u1019\u102C\u1005\u102C (\u1019\u103C\u1014\u103A\u1019\u102C)",rtl:!1},gf={id:e.Cantonese,language:{code:I.Cantonese,name:"Cantonese",native:"\u5EE3\u6771\u8A71"},name:"Cantonese",native_name:"\u5EE3\u6771\u8A71",rtl:!1},hf={country:{code:A.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:e.CantoneseHongKong,language:{code:I.Cantonese,name:"Cantonese",native:"\u5EE3\u6771\u8A71"},name:"Cantonese (Hong Kong)",native_name:"\u5EE3\u6771\u8A71 (\u9999\u6E2F)",rtl:!1},Sf={id:e.Catalan,language:{code:I.Catalan,name:"Catalan",native:"Catal\xE0"},name:"Catalan",native_name:"Catal\xE0",rtl:!1},Ef={country:{code:A.Spain,name:"Spain",native:"Espa\xF1a"},id:e.CatalanSpain,language:{code:I.Catalan,name:"Catalan",native:"Catal\xE0"},name:"Catalan (Spain)",native_name:"Catal\xE0 (Espanya)",rtl:!1},pf={id:e.ChineseSimplified,language:{code:I.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified)",native_name:"\u4E2D\u6587",rtl:!1},Tf={country:{code:A.China,name:"China",native:"\u4E2D\u56FD"},id:e.ChineseSimplifiedChina,language:{code:I.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/China)",native_name:"\u4E2D\u6587 (\u4E2D\u56FD)",rtl:!1},vf={country:{code:A.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:e.ChineseSimplifiedHongKong,language:{code:I.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Hong Kong)",native_name:"\u4E2D\u6587 (\u9999\u6E2F)",rtl:!1},bf={country:{code:A.Macau,name:"Macau",native:"\u6FB3\u9580"},id:e.ChineseSimplifiedMacau,language:{code:I.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Macau)",native_name:"\u4E2D\u6587 (\u6FB3\u9580)",rtl:!1},Bf={country:{code:A.Singapore,name:"Singapore",native:"\u65B0\u52A0\u5761"},id:e.ChineseSimplifiedSingapore,language:{code:I.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Singapore)",native_name:"\u4E2D\u6587 (\u65B0\u52A0\u5761)",rtl:!1},Uf={id:e.ChineseTraditional,language:{code:I.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Traditional)",native_name:"\u4E2D\u6587",rtl:!1},Nf={country:{code:A.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:e.ChineseTraditionalHongKong,language:{code:I.Chinese,name:"Chinese (Traditional/Hong Kong)",native:"\u4E2D\u6587"},name:"Chinese (Hong Kong)",native_name:"\u4E2D\u6587 (\u9999\u6E2F)",rtl:!1},Df={country:{code:A.Macau,name:"Macau",native:"\u6FB3\u9580"},id:e.ChineseTraditionalMacau,language:{code:I.Chinese,name:"Chinese (Traditional/Macau)",native:"\u4E2D\u6587"},name:"Chinese (Macau)",native_name:"\u4E2D\u6587 (\u6FB3\u9580)",rtl:!1},yf={country:{code:A.Singapore,name:"Singapore",native:"\u65B0\u52A0\u5761"},id:e.ChineseTraditionalSingapore,language:{code:I.Chinese,name:"Chinese (Traditional/Singapore)",native:"\u4E2D\u6587"},name:"Chinese (Singapore)",native_name:"\u4E2D\u6587 (\u65B0\u52A0\u5761)",rtl:!1},Pf={id:e.Croatian,language:{code:I.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian",native_name:"Hrvatski",rtl:!1},Ff={country:{code:A.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"Bosna i Hercegovina"},id:e.CroatianBosniaAndHerzegovina,language:{code:I.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian (Bosnia and Herzegovina)",native_name:"Hrvatski (Bosna i Hercegovina)",rtl:!1},kf={country:{code:A.Croatia,name:"Croatia",native:"Hrvatska"},id:e.CroatianCroatia,language:{code:I.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian (Croatia)",native_name:"Hrvatski (Hrvatska)",rtl:!1},Mf={id:e.Czech,language:{code:I.Czech,name:"Czech",native:"\u010Ce\u0161tina"},name:"Czech",native_name:"\u010Ce\u0161tina",rtl:!1},Lf={country:{code:A.CzechRepublic,name:"Czech Republic",native:"\u010Cesk\xE1 republika"},id:e.CzechCzechRepublic,language:{code:I.Czech,name:"Czech",native:"\u010Ce\u0161tina"},name:"Czech (Czech Republic)",native_name:"\u010Ce\u0161tina (\u010Cesk\xE1 republika)",rtl:!1},wf={id:e.Danish,language:{code:I.Danish,name:"Danish",native:"Dansk"},name:"Danish",native_name:"Dansk",rtl:!1},Gf={country:{code:A.Denmark,name:"Denmark",native:"Danmark"},id:e.DanishDenmark,language:{code:I.Danish,name:"Danish",native:"Dansk"},name:"Danish (Denmark)",native_name:"Dansk (Danmark)",rtl:!1},qf={id:e.Divehi,language:{code:I.Divehi,name:"Divehi",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0"},name:"Divehi",native_name:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0",rtl:!0},Kf={country:{code:A.Maldives,name:"Maldives",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC"},id:e.DivehiMaldives,language:{code:I.Divehi,name:"Divehi",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0"},name:"Divehi (Maldives)",native_name:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0 (\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC)",rtl:!0},xf={id:e.Dutch,language:{code:I.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch",native_name:"Nederlands",rtl:!1},Of={country:{code:A.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.DutchBelgium,language:{code:I.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch (Belgium)",native_name:"Nederlands (Belgi\xEB)",rtl:!1},Hf={country:{code:A.Netherlands,name:"Netherlands",native:"Nederland"},id:e.DutchNetherlands,language:{code:I.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch (Netherlands)",native_name:"Nederlands (Nederland)",rtl:!1},jf={id:e.English,language:{code:I.English,name:"English",native:"English"},name:"English",native_name:"English",rtl:!1},Wf={country:{code:A.Australia,name:"Australia",native:"Australia"},id:e.EnglishAustralia,language:{code:I.English,name:"English",native:"English"},name:"English (Australia)",native_name:"English (Australia)",rtl:!1},Vf={country:{code:A.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.EnglishBelgium,language:{code:I.English,name:"English",native:"English"},name:"English (Belgium)",native_name:"English (Belgi\xEB)",rtl:!1},zf={country:{code:A.Canada,name:"Canada",native:"Canada"},id:e.EnglishCanada,language:{code:I.English,name:"English",native:"English"},name:"English (Canada)",native_name:"English (Canada)",rtl:!1},Rf={country:{code:A.Ireland,name:"Ireland",native:"\xC9ire"},id:e.EnglishIreland,language:{code:I.English,name:"English",native:"English"},name:"English (Ireland)",native_name:"English (\xC9ire)",rtl:!1},Jf={country:{code:A.Jamaica,name:"Jamaica",native:"Jamaica"},id:e.EnglishJamaica,language:{code:I.English,name:"English",native:"English"},name:"English (Jamaica)",native_name:"English (Jamaica)",rtl:!1},Yf={country:{code:A.NewZealand,name:"New Zealand",native:"New Zealand"},id:e.EnglishNewZealand,language:{code:I.English,name:"English",native:"English"},name:"English (New Zealand)",native_name:"English (New Zealand)",rtl:!1},Zf={country:{code:A.Philippines,name:"Philippines",native:"Philippines"},id:e.EnglishPhilippines,language:{code:I.English,name:"English",native:"English"},name:"English (Philippines)",native_name:"English (Philippines)",rtl:!1},$f={country:{code:A.Singapore,name:"Singapore",native:"Singapore"},id:e.EnglishSingapore,language:{code:I.English,name:"English",native:"English"},name:"English (Singapore)",native_name:"English (Singapore)",rtl:!1},Qf={country:{code:A.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.EnglishSouthAfrica,language:{code:I.English,name:"English",native:"English"},name:"English (South Africa)",native_name:"English (South Africa)",rtl:!1},Xf={country:{code:A.TrinidadAndTobago,name:"Trinidad and Tobago",native:"Trinidad and Tobago"},id:e.EnglishTrinidadAndTobago,language:{code:I.English,name:"English",native:"English"},name:"English (Trinidad and Tobago)",native_name:"English (Trinidad and Tobago)",rtl:!1},Cf={country:{code:A.UnitedKingdom,name:"United Kingdom",native:"United Kingdom"},id:e.EnglishUnitedKingdom,language:{code:I.English,name:"English",native:"English"},name:"English (United Kingdom)",native_name:"English (United Kingdom)",rtl:!1},ad={country:{code:A.UnitedStates,name:"United States",native:"United States"},id:e.EnglishUnitedStates,language:{code:I.English,name:"English",native:"English"},name:"English (United States)",native_name:"English (United States)",rtl:!1},ed={country:{code:A.Zimbabwe,name:"Zimbabwe",native:"Zimbabwe"},id:e.EnglishZimbabwe,language:{code:I.English,name:"English",native:"English"},name:"English (Zimbabwe)",native_name:"English (Zimbabwe)",rtl:!1},ud={id:e.Esperanto,language:{code:I.Esperanto,name:"Esperanto",native:"Esperanto"},name:"Esperanto",native_name:"Esperanto",rtl:!1},id={id:e.Estonian,language:{code:I.Estonian,name:"Estonian",native:"Eesti"},name:"Estonian",native_name:"Eesti",rtl:!1},sd={country:{code:A.Estonia,name:"Estonia",native:"Eesti"},id:e.EstonianEstonia,language:{code:I.Estonian,name:"Estonian",native:"Eesti"},name:"Estonian (Estonia)",native_name:"Eesti (Eesti)",rtl:!1},nd={id:e.Faroese,language:{code:I.Faroese,name:"Faroese",native:"F\xF8royskt"},name:"Faroese",native_name:"F\xF8royskt",rtl:!1},rd={country:{code:A.FaroeIslands,name:"Faroe Islands",native:"F\xF8royar"},id:e.FaroeseFaroeIslands,language:{code:I.Faroese,name:"Faroese",native:"F\xF8royskt"},name:"Faroese (Faroe Islands)",native_name:"F\xF8royskt (F\xF8royar)",rtl:!1},td={id:e.Farsi,language:{code:I.Farsi,name:"Farsi",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Farsi",native_name:"\u0641\u0627\u0631\u0633\u06CC",rtl:!0},ld={country:{code:A.Iran,name:"Iran",native:"\u0627\u06CC\u0631\u0627\u0646"},id:e.FarsiIran,language:{code:I.Farsi,name:"Farsi",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Farsi (Iran)",native_name:"\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)",rtl:!0},md={id:e.Filipino,language:{code:I.Filipino,name:"Filipino",native:"Filipino"},name:"Filipino",native_name:"Filipino",rtl:!1},cd={country:{code:A.Philippines,name:"Philippines",native:"Pilipinas"},id:e.FilipinoPhilippines,language:{code:I.Filipino,name:"Filipino",native:"Filipino"},name:"Filipino (Philippines)",native_name:"Filipino (Pilipinas)",rtl:!1},od={id:e.Finnish,language:{code:I.Finnish,name:"Finnish",native:"Suomi"},name:"Finnish",native_name:"Suomi",rtl:!1},Ad={country:{code:A.Finland,name:"Finland",native:"Suomi"},id:e.FinnishFinland,language:{code:I.Finnish,name:"Finnish",native:"Suomi"},name:"Finnish (Finland)",native_name:"Suomi (Suomi)",rtl:!1},fd={id:e.French,language:{code:I.French,name:"French",native:"Fran\xE7ais"},name:"French",native_name:"Fran\xE7ais",rtl:!1},dd={country:{code:A.Belgium,name:"Belgium",native:"Belgique"},id:e.FrenchBelgium,language:{code:I.French,name:"French",native:"Fran\xE7ais"},name:"French (Belgium)",native_name:"Fran\xE7ais (Belgique)",rtl:!1},Id={country:{code:A.Canada,name:"Canada",native:"Canada"},id:e.FrenchCanada,language:{code:I.French,name:"French",native:"Fran\xE7ais"},name:"French (Canada)",native_name:"Fran\xE7ais (Canada)",rtl:!1},_d={country:{code:A.France,name:"France",native:"France"},id:e.FrenchFrance,language:{code:I.French,name:"French",native:"Fran\xE7ais"},name:"French (France)",native_name:"Fran\xE7ais (France)",rtl:!1},gd={country:{code:A.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:e.FrenchLuxembourg,language:{code:I.French,name:"French",native:"Fran\xE7ais"},name:"French (Luxembourg)",native_name:"Fran\xE7ais (Luxembourg)",rtl:!1},hd={country:{code:A.Monaco,name:"Monaco",native:"Monaco"},id:e.FrenchMonaco,language:{code:I.French,name:"French",native:"Fran\xE7ais"},name:"French (Monaco)",native_name:"Fran\xE7ais (Monaco)",rtl:!1},Sd={country:{code:A.Reunion,name:"Reunion",native:"La R\xE9union"},id:e.FrenchReunion,language:{code:I.French,name:"French",native:"Fran\xE7ais"},name:"French (Reunion)",native_name:"Fran\xE7ais (La R\xE9union)",rtl:!1},Ed={country:{code:A.Switzerland,name:"Switzerland",native:"Suisse"},id:e.FrenchSwitzerland,language:{code:I.French,name:"French",native:"Fran\xE7ais"},name:"French (Switzerland)",native_name:"Fran\xE7ais (Suisse)",rtl:!1},pd={id:e.Frisian,language:{code:I.Frisian,name:"Frisian",native:"Frysk"},name:"Frisian",native_name:"Frysk",rtl:!1},Td={country:{code:A.Netherlands,name:"Netherlands",native:"Nederland"},id:e.FrisianNetherlands,language:{code:I.Frisian,name:"Frisian",native:"Frysk"},name:"Frisian (Netherlands)",native_name:"Frysk (Nederland)",rtl:!1},vd={id:e.Galician,language:{code:I.Galician,name:"Galician",native:"Galego"},name:"Galician",native_name:"Galego",rtl:!1},bd={country:{code:A.Spain,name:"Spain",native:"Espa\xF1a"},id:e.GalicianSpain,language:{code:I.Galician,name:"Galician",native:"Galego"},name:"Galician (Spain)",native_name:"Galego (Espa\xF1a)",rtl:!1},Bd={id:e.Georgian,language:{code:I.Georgian,name:"Georgian",native:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8"},name:"Georgian",native_name:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8",rtl:!1},Ud={country:{code:A.Georgia,name:"Georgia",native:"\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD"},id:e.GeorgianGeorgia,language:{code:I.Georgian,name:"Georgian",native:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8"},name:"Georgian (Georgia)",native_name:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8 (\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD)",rtl:!1},Nd={id:e.German,language:{code:I.German,name:"German",native:"Deutsch"},name:"German",native_name:"Deutsch",rtl:!1},Dd={country:{code:A.Austria,name:"Austria",native:"\xD6sterreich"},id:e.GermanAustria,language:{code:I.German,name:"German",native:"Deutsch"},name:"German (Austria)",native_name:"Deutsch (\xD6sterreich)",rtl:!1},yd={country:{code:A.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.GermanBelgium,language:{code:I.German,name:"German",native:"Deutsch"},name:"German (Belgium)",native_name:"Deutsch (Belgi\xEB)",rtl:!1},Pd={country:{code:A.Switzerland,name:"Switzerland",native:"Suisse"},id:e.GermanSwitzerland,language:{code:I.German,name:"German",native:"Deutsch"},name:"German (Switzerland)",native_name:"Deutsch (Suisse)",rtl:!1},Fd={country:{code:A.Liechtenstein,name:"Liechtenstein",native:"Liechtenstein"},id:e.GermanLiechtenstein,language:{code:I.German,name:"German",native:"Deutsch"},name:"German (Liechtenstein)",native_name:"Deutsch (Liechtenstein)",rtl:!1},kd={country:{code:A.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:e.GermanLuxembourg,language:{code:I.German,name:"German",native:"Deutsch"},name:"German (Luxembourg)",native_name:"Deutsch (Luxembourg)",rtl:!1},Md={id:e.Greek,language:{code:I.Greek,name:"Greek",native:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC"},name:"Greek",native_name:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC",rtl:!1},Ld={country:{code:A.Greece,name:"Greece",native:"\u0395\u03BB\u03BB\u03AC\u03B4\u03B1"},id:e.GreekGreece,language:{code:I.Greek,name:"Greek",native:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC"},name:"Greek (Greece)",native_name:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC (\u0395\u03BB\u03BB\u03AC\u03B4\u03B1)",rtl:!1},wd={id:e.Greenlandic,language:{code:I.Greenlandic,name:"Greenlandic",native:"Kalaallisut"},name:"Greenlandic",native_name:"Kalaallisut",rtl:!1},Gd={country:{code:A.Greenland,name:"Greenland",native:"Kalaallit Nunaat"},id:e.GreenlandicGreenland,language:{code:I.Greenlandic,name:"Greenlandic",native:"Kalaallisut"},name:"Greenlandic (Greenland)",native_name:"Kalaallisut (Kalaallit Nunaat)",rtl:!1},qd={id:e.Gujarati,language:{code:I.Gujarati,name:"Gujarati",native:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0"},name:"Gujarati",native_name:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0",rtl:!1},Kd={country:{code:A.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.GujaratiIndia,language:{code:I.Gujarati,name:"Gujarati",native:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0"},name:"Gujarati (India)",native_name:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0 (\u092D\u093E\u0930\u0924)",rtl:!1},xd={id:e.Hausa,language:{code:I.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E",rtl:!1},Od={country:{code:A.Ghana,name:"Ghana",native:"Ghana"},id:e.HausaGhana,language:{code:I.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Ghana)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Ghana)",rtl:!1},Hd={country:{code:A.Niger,name:"Niger",native:"Niger"},id:e.HausaNiger,language:{code:I.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Niger)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Niger)",rtl:!1},jd={country:{code:A.Nigeria,name:"Nigeria",native:"Nigeria"},id:e.HausaNigeria,language:{code:I.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Nigeria)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Nigeria)",rtl:!1},Wd={id:e.Hebrew,language:{code:I.Hebrew,name:"Hebrew",native:"\u05E2\u05D1\u05E8\u05D9\u05EA"},name:"Hebrew",native_name:"\u05E2\u05D1\u05E8\u05D9\u05EA",rtl:!0},Vd={country:{code:A.Israel,name:"Hebrew",native:""},id:e.HebrewIsrael,language:{code:I.Hebrew,name:"Hebrew",native:""},name:"Hebrew (Israel)",native_name:"",rtl:!0},zd={id:e.Hindi,language:{code:I.Hindi,name:"Hindi",native:"\u0939\u093F\u0928\u094D\u0926\u0940"},name:"Hindi",native_name:"\u0939\u093F\u0928\u094D\u0926\u0940",rtl:!1},Rd={country:{code:A.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.HindiIndia,language:{code:I.Hindi,name:"Hindi",native:"\u092D\u093E\u0930\u0924\u0940\u092F"},name:"Hindi (India)",native_name:"\u092D\u093E\u0930\u0924\u0940\u092F",rtl:!1},Jd={id:e.Hungarian,language:{code:I.Hungarian,name:"Hungarian",native:"Magyar"},name:"Hungarian",native_name:"Magyar",rtl:!1},Yd={country:{code:A.Hungary,name:"Hungary",native:"Magyarorsz\xE1g"},id:e.HungarianHungary,language:{code:I.Hungarian,name:"Hungarian",native:"Magyar"},name:"Hungarian (Hungary)",native_name:"Magyar (Magyarorsz\xE1g)",rtl:!1},Zd={id:e.Icelandic,language:{code:I.Icelandic,name:"Icelandic",native:"\xCDslenska"},name:"Icelandic",native_name:"\xCDslenska",rtl:!1},$d={country:{code:A.Iceland,name:"Iceland",native:"\xCDsland"},id:e.IcelandicIceland,language:{code:I.Icelandic,name:"Icelandic",native:"\xCDslenska"},name:"Icelandic (Iceland)",native_name:"\xCDslenska (\xCDsland)",rtl:!1},Qd={id:e.Igbo,language:{code:I.Igbo,name:"Igbo",native:"Igbo"},name:"Igbo",native_name:"Igbo",rtl:!1},Xd={id:e.Indonesian,language:{code:I.Indonesian,name:"Indonesian",native:"Bahasa Indonesia"},name:"Indonesian",native_name:"Bahasa Indonesia",rtl:!1},Cd={country:{code:A.Indonesia,name:"Indonesia",native:"Indonesia"},id:e.IndonesianIndonesia,language:{code:I.Indonesian,name:"Indonesian",native:"Bahasa Indonesia"},name:"Indonesian (Indonesia)",native_name:"Bahasa Indonesia (Indonesia)",rtl:!1},a4={id:e.Irish,language:{code:I.Irish,name:"Irish",native:"Gaeilge"},name:"Irish",native_name:"Gaeilge",rtl:!1},e4={country:{code:A.Ireland,name:"Ireland",native:"\xC9ire"},id:e.IrishIreland,language:{code:I.Irish,name:"Irish",native:"Gaeilge"},name:"Irish (Ireland)",native_name:"Gaeilge (\xC9ire)",rtl:!1},u4={id:e.Italian,language:{code:I.Italian,name:"Italian",native:"Italiano"},name:"Italian",native_name:"Italiano",rtl:!1},i4={country:{code:A.Italy,name:"Italy",native:"Italia"},id:e.ItalianItaly,language:{code:I.Italian,name:"Italian",native:"Italiano"},name:"Italian (Italy)",native_name:"Italiano (Italia)",rtl:!1},s4={country:{code:A.Switzerland,name:"Switzerland",native:"Schweiz"},id:e.ItalianSwitzerland,language:{code:I.Italian,name:"Italian",native:"Italiano"},name:"Italian (Switzerland)",native_name:"Italiano (Svizzera)",rtl:!1},n4={id:e.Japanese,language:{code:I.Japanese,name:"Japanese",native:"\u65E5\u672C\u8A9E"},name:"Japanese",native_name:"\u65E5\u672C\u8A9E",rtl:!1},r4={country:{code:A.Japan,name:"Japan",native:"\u65E5\u672C"},id:e.JapaneseJapan,language:{code:I.Japanese,name:"Japanese",native:"\u65E5\u672C\u8A9E"},name:"Japanese (Japan)",native_name:"\u65E5\u672C\u8A9E (\u65E5\u672C)",rtl:!1},t4={id:e.Kannada,language:{code:I.Kannada,name:"Kannada",native:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1"},name:"Kannada",native_name:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1",rtl:!1},l4={country:{code:A.India,name:"India",native:"\u0CAD\u0CBE\u0CB0\u0CA4"},id:e.KannadaIndia,language:{code:I.Kannada,name:"Kannada",native:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1"},name:"Kannada (India)",native_name:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1 (\u0CAD\u0CBE\u0CB0\u0CA4)",rtl:!1},m4={id:e.Kazakh,language:{code:I.Kazakh,name:"Kazakh",native:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456"},name:"Kazakh",native_name:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456",rtl:!1},c4={country:{code:A.Kazakhstan,name:"Kazakhstan",native:"\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D"},id:e.KazakhKazakhstan,language:{code:I.Kazakh,name:"Kazakh",native:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456"},name:"Kazakh (Kazakhstan)",native_name:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)",rtl:!1},o4={id:e.Khmer,language:{code:I.Khmer,name:"Khmer",native:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A"},name:"Khmer",native_name:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A",rtl:!1},A4={country:{code:A.Cambodia,name:"Cambodia",native:"\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6"},id:e.KhmerCambodia,language:{code:I.Khmer,name:"Khmer",native:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A"},name:"Khmer (Cambodia)",native_name:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A (\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6)",rtl:!1},f4={id:e.Konkani,language:{code:I.Konkani,name:"Konkani",native:"\u0915\u094B\u0902\u0915\u0923\u0940"},name:"Konkani",native_name:"\u0915\u094B\u0902\u0915\u0923\u0940",rtl:!1},d4={country:{code:A.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.KonkaniIndia,language:{code:I.Konkani,name:"Konkani",native:"\u0915\u094B\u0902\u0915\u0923\u0940"},name:"Konkani (India)",native_name:"\u0915\u094B\u0902\u0915\u0923\u0940 (\u092D\u093E\u0930\u0924)",rtl:!1},I4={id:e.Korean,language:{code:I.Korean,name:"Korean",native:"\uD55C\uAD6D\uC5B4"},name:"Korean",native_name:"\uD55C\uAD6D\uC5B4",rtl:!1},_4={country:{code:A.SouthKorea,name:"South Korea",native:"\uB300\uD55C\uBBFC\uAD6D"},id:e.KoreanSouthKorea,language:{code:I.Korean,name:"Korean",native:"\uD55C\uAD6D\uC5B4"},name:"Korean (South Korea)",native_name:"\uD55C\uAD6D\uC5B4 (\uB300\uD55C\uBBFC\uAD6D)",rtl:!1},g4={id:e.Kurdish,language:{code:I.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish",native_name:"Kurd\xEE",rtl:!1},h4={country:{code:A.Iraq,name:"Iraq",native:"\u0627\u0644\u0639\u0631\u0627\u0642"},id:e.KurdishIraq,language:{code:I.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish (Iraq)",native_name:"Kurd\xEE (\u0627\u0644\u0639\u0631\u0627\u0642)",rtl:!1},S4={country:{code:A.Turkey,name:"Turkey",native:"T\xFCrkiye"},id:e.KurdishTurkey,language:{code:I.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish (Turkey)",native_name:"Kurd\xEE (T\xFCrkiye)",rtl:!1},E4={id:e.Kyrgyz,language:{code:I.Kyrgyz,name:"Kyrgyz",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},name:"Kyrgyz",native_name:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430",rtl:!1},p4={country:{code:A.Kyrgyzstan,name:"Kyrgyzstan",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D"},id:e.KyrgyzKyrgyzstan,language:{code:I.Kyrgyz,name:"Kyrgyz",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},name:"Kyrgyz (Kyrgyzstan)",native_name:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430 (\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D)",rtl:!1},T4={id:e.Lao,language:{code:I.Lao,name:"Lao",native:"\u0EA5\u0EB2\u0EA7"},name:"Lao",native_name:"\u0EA5\u0EB2\u0EA7",rtl:!1},v4={country:{code:A.Laos,name:"Laos",native:"\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95"},id:e.LaoLaos,language:{code:I.Lao,name:"Lao",native:"\u0EA5\u0EB2\u0EA7"},name:"Lao (Laos)",native_name:"\u0EA5\u0EB2\u0EA7 (\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95)",rtl:!1},b4={id:e.Latvian,language:{code:I.Latvian,name:"Latvian",native:"Latvie\u0161u"},name:"Latvian",native_name:"Latvie\u0161u",rtl:!1},B4={country:{code:A.Latvia,name:"Latvia",native:"Latvija"},id:e.LatvianLatvia,language:{code:I.Latvian,name:"Latvian",native:"Latvie\u0161u"},name:"Latvian (Latvia)",native_name:"Latvie\u0161u (Latvija)",rtl:!1},U4={id:e.Lithuanian,language:{code:I.Lithuanian,name:"Lithuanian",native:"Lietuvi\u0173"},name:"Lithuanian",native_name:"Lietuvi\u0173",rtl:!1},N4={country:{code:A.Lithuania,name:"Lithuania",native:"Lietuva"},id:e.LithuanianLithuania,language:{code:I.Lithuanian,name:"Lithuanian",native:"Lietuvi\u0173"},name:"Lithuanian (Lithuania)",native_name:"Lietuvi\u0173 (Lietuva)",rtl:!1},D4={id:e.Luxembourgish,language:{code:I.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish",native_name:"L\xEBtzebuergesch",rtl:!1},y4={country:{code:A.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.LuxembourgishBelgium,language:{code:I.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish (Belgium)",native_name:"L\xEBtzebuergesch (Belgi\xEB)",rtl:!1},P4={country:{code:A.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:e.LuxembourgishLuxembourg,language:{code:I.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish (Luxembourg)",native_name:"L\xEBtzebuergesch (Luxembourg)",rtl:!1},F4={id:e.Macedonian,language:{code:I.Macedonian,name:"Macedonian",native:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438"},name:"Macedonian",native_name:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438",rtl:!1},k4={country:{code:A.NorthMacedonia,name:"Macedonia",native:"\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430"},id:e.MacedonianNorthMacedonia,language:{code:I.Macedonian,name:"Macedonian",native:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438"},name:"Macedonian (North Macedonia)",native_name:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438 (\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430)",rtl:!1},M4={id:e.Malay,language:{code:I.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay",native_name:"Bahasa Melayu",rtl:!1},L4={country:{code:A.Brunei,name:"Brunei",native:"Negara Brunei Darussalam"},id:e.MalayBrunei,language:{code:I.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Brunei)",native_name:"Bahasa Melayu (Negara Brunei Darussalam)",rtl:!1},w4={country:{code:A.Malaysia,name:"Malaysia",native:"Malaysia"},id:e.MalayMalaysia,language:{code:I.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Malaysia)",native_name:"Bahasa Melayu (Malaysia)",rtl:!1},G4={country:{code:A.Singapore,name:"Singapore",native:"Singapore"},id:e.MalaySingapore,language:{code:I.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Singapore)",native_name:"Bahasa Melayu (Singapore)",rtl:!1},q4={country:{code:A.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.MalayIndia,language:{code:I.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (India)",native_name:"Bahasa Melayu (\u092D\u093E\u0930\u0924)",rtl:!1},K4={id:e.Maltese,language:{code:I.Maltese,name:"Maltese",native:"Malti"},name:"Maltese",native_name:"Malti",rtl:!1},x4={country:{code:A.Malta,name:"Malta",native:"Malta"},id:e.MalteseMalta,language:{code:I.Maltese,name:"Maltese",native:"Malti"},name:"Maltese (Malta)",native_name:"Malti (Malta)",rtl:!1},O4={id:e.Maori,language:{code:I.Maori,name:"Maori",native:"M\u0101ori"},name:"Maori",native_name:"M\u0101ori",rtl:!1},H4={country:{code:A.NewZealand,name:"New Zealand",native:"New Zealand"},id:e.MaoriNewZealand,language:{code:I.Maori,name:"Maori",native:"M\u0101ori"},name:"Maori (New Zealand)",native_name:"M\u0101ori (New Zealand)",rtl:!1},j4={id:e.Marathi,language:{code:I.Marathi,name:"Marathi",native:"\u092E\u0930\u093E\u0920\u0940"},name:"Marathi",native_name:"\u092E\u0930\u093E\u0920\u0940",rtl:!1},W4={country:{code:A.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.MarathiIndia,language:{code:I.Marathi,name:"Marathi",native:"\u092E\u0930\u093E\u0920\u0940"},name:"Marathi (India)",native_name:"\u092E\u0930\u093E\u0920\u0940 (\u092D\u093E\u0930\u0924)",rtl:!1},V4={id:e.Mongolian,language:{code:I.Mongolian,name:"Mongolian",native:"\u041C\u043E\u043D\u0433\u043E\u043B"},name:"Mongolian",native_name:"\u041C\u043E\u043D\u0433\u043E\u043B",rtl:!1},z4={country:{code:A.Mongolia,name:"Mongolia",native:"\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441"},id:e.MongolianMongolia,language:{code:I.Mongolian,name:"Mongolian",native:"\u041C\u043E\u043D\u0433\u043E\u043B"},name:"Mongolian (Mongolia)",native_name:"\u041C\u043E\u043D\u0433\u043E\u043B (\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441)",rtl:!1},R4={id:e.Montenegrin,language:{code:I.Montenegrin,name:"Montenegrin",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},name:"Montenegrin",native_name:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A",rtl:!1},J4={country:{code:A.Montenegro,name:"Montenegro",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},id:e.MontenegrinMontenegro,language:{code:I.Montenegrin,name:"Montenegrin",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},name:"Montenegrin (Montenegro)",native_name:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A (\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A)",rtl:!1},Y4={id:e.Nepali,language:{code:I.Nepali,name:"Nepali",native:"\u0928\u0947\u092A\u093E\u0932\u0940"},name:"Nepali",native_name:"\u0928\u0947\u092A\u093E\u0932\u0940",rtl:!1},Z4={country:{code:A.Nepal,name:"Nepal",native:"\u0928\u0947\u092A\u093E\u0932"},id:e.NepaliNepal,language:{code:I.Nepali,name:"Nepali",native:"\u0928\u0947\u092A\u093E\u0932\u0940"},name:"Nepali (Nepal)",native_name:"\u0928\u0947\u092A\u093E\u0932\u0940 (\u0928\u0947\u092A\u093E\u0932)",rtl:!1},$4={id:e.NorthernSotho,language:{code:I.NorthernSotho,name:"Northern Sotho",native:"Sesotho sa Leboa"},name:"Northern Sotho",native_name:"Sesotho sa Leboa",rtl:!1},Q4={country:{code:A.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.NorthernSothoSouthAfrica,language:{code:I.NorthernSotho,name:"Northern Sotho",native:"Sesotho sa Leboa"},name:"Northern Sotho (South Africa)",native_name:"Sesotho sa Leboa (South Africa)",rtl:!1},X4={id:e.Norwegian,language:{code:I.Norwegian,name:"Norwegian",native:"Norsk"},name:"Norwegian",native_name:"Norsk",rtl:!1},C4={country:{code:A.Norway,name:"Norway",native:"Norge"},id:e.NorwegianBokmalNorway,language:{code:I.NorwegianBokmal,name:"Norwegian",native:"Norsk"},name:"Norwegian (Bokmal)",native_name:"Norsk (Bokm\xE5l)",rtl:!1},aI={country:{code:A.Norway,name:"Norway",native:"Norge"},id:e.NorwegianNynorskNorway,language:{code:I.NorwegianNynorsk,name:"Norwegian",native:"Norsk"},name:"Norwegian (Nynorsk)",native_name:"Norsk (Nynorsk)",rtl:!1},eI={id:e.Oriya,language:{code:I.Oriya,name:"Oriya",native:"\u0B13\u0B21\u0B3C\u0B3F\u0B06"},name:"Oriya",native_name:"\u0B13\u0B21\u0B3C\u0B3F\u0B06",rtl:!1},uI={country:{code:A.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:e.OriyaIndia,language:{code:I.Oriya,name:"Oriya",native:"\u0B13\u0B21\u0B3C\u0B3F\u0B06"},name:"Oriya (India)",native_name:"\u0B13\u0B21\u0B3C\u0B3F\u0B06 (\u0B2D\u0B3E\u0B30\u0B24)",rtl:!1},iI={id:e.Pashto,language:{code:I.Pashto,name:"Pashto",native:"\u067E\u069A\u062A\u0648"},name:"Pashto",native_name:"\u067E\u069A\u062A\u0648",rtl:!0},sI={country:{code:A.Afghanistan,name:"Afghanistan",native:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},id:e.PashtoAfghanistan,language:{code:I.Pashto,name:"Pashto",native:"\u067E\u069A\u062A\u0648"},name:"Pashto (Afghanistan)",native_name:"\u067E\u069A\u062A\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)",rtl:!0},nI={id:e.Persian,language:{code:I.Persian,name:"Persian",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Persian",native_name:"\u0641\u0627\u0631\u0633\u06CC",rtl:!0},rI={country:{code:A.Iran,name:"Iran",native:"\u0627\u06CC\u0631\u0627\u0646"},id:e.PersianIran,language:{code:I.Persian,name:"Persian",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Persian (Iran)",native_name:"\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)",rtl:!0},tI={id:e.Polish,language:{code:I.Polish,name:"Polish",native:"Polski"},name:"Polish",native_name:"Polski",rtl:!1},lI={country:{code:A.Poland,name:"Poland",native:"Polska"},id:e.PolishPoland,language:{code:I.Polish,name:"Polish",native:"Polski"},name:"Polish (Poland)",native_name:"Polski (Polska)",rtl:!1},mI={id:e.Portuguese,language:{code:I.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese",native_name:"Portugu\xEAs",rtl:!1},cI={country:{code:A.Brazil,name:"Brazil",native:"Brasil"},id:e.PortugueseBrazil,language:{code:I.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese (Brazil)",native_name:"Portugu\xEAs (Brasil)",rtl:!1},oI={country:{code:A.Portugal,name:"Portugal",native:"Portugal"},id:e.PortuguesePortugal,language:{code:I.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese (Portugal)",native_name:"Portugu\xEAs (Portugal)",rtl:!1},AI={id:e.Punjabi,language:{code:I.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40",rtl:!0},fI={country:{code:A.Pakistan,name:"Pakistan",native:"\u067E\u0627\u06A9\u0633\u062A\u0627\u0646"},id:e.PunjabiPakistan,language:{code:I.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi (Pakistan)",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)",rtl:!0},dI={country:{code:A.India,name:"India",native:"\u0A2D\u0A3E\u0A30\u0A24"},id:e.PunjabiIndia,language:{code:I.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi (India)",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u0A2D\u0A3E\u0A30\u0A24)",rtl:!0},II={id:e.Quechua,language:{code:I.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua",native_name:"Runa Simi",rtl:!1},_I={country:{code:A.Bolivia,name:"Bolivia",native:"Bolivia"},id:e.QuechuaBolivia,language:{code:I.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Bolivia)",native_name:"Runa Simi (Bolivia)",rtl:!1},gI={country:{code:A.Ecuador,name:"Ecuador",native:"Ecuador"},id:e.QuechuaEcuador,language:{code:I.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Ecuador)",native_name:"Runa Simi (Ecuador)",rtl:!1},hI={country:{code:A.Peru,name:"Peru",native:"Per\xFA"},id:e.QuechuaPeru,language:{code:I.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Peru)",native_name:"Runa Simi (Per\xFA)",rtl:!1},SI={id:e.Romanian,language:{code:I.Romanian,name:"Romanian",native:"Rom\xE2n\u0103"},name:"Romanian",native_name:"Rom\xE2n\u0103",rtl:!1},EI={country:{code:A.Romania,name:"Romania",native:"Rom\xE2nia"},id:e.RomanianRomania,language:{code:I.Romanian,name:"Romanian",native:"Rom\xE2n\u0103"},name:"Romanian (Romania)",native_name:"Rom\xE2n\u0103 (Rom\xE2nia)",rtl:!1},pI={id:e.Russian,language:{code:I.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439",rtl:!1},TI={country:{code:A.RussianFederation,name:"Russian Federation",native:"\u0420\u043E\u0441\u0441\u0438\u044F"},id:e.RussianRussia,language:{code:I.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Russia)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0420\u043E\u0441\u0441\u0438\u044F)",rtl:!1},vI={country:{code:A.Ukraine,name:"Ukraine",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0430"},id:e.RussianUkraine,language:{code:I.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Ukraine)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)",rtl:!1},bI={country:{code:A.Kazakhstan,name:"Kazakhstan",native:"\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D"},id:e.RussianKazakhstan,language:{code:I.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Kazakhstan)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)",rtl:!1},BI={country:{code:A.Kyrgyzstan,name:"Kyrgyzstan",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},id:e.RussianKyrgyzstan,language:{code:I.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Kyrgyzstan)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430)",rtl:!1},UI={id:e.Sanskrit,language:{code:I.Sanskrit,name:"Sanskrit",native:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D"},name:"Sanskrit",native_name:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D",rtl:!1},NI={country:{code:A.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.SanskritIndia,language:{code:I.Sanskrit,name:"Sanskrit",native:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D"},name:"Sanskrit (India)",native_name:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D (\u092D\u093E\u0930\u0924)",rtl:!1},DI={id:e.Sami,language:{code:I.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami",native_name:"S\xE1megiella",rtl:!1},yI={country:{code:A.Finland,name:"Finland",native:"Suomi"},id:e.SamiFinland,language:{code:I.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Finland)",native_name:"S\xE1megiella (Suomi)",rtl:!1},PI={country:{code:A.Norway,name:"Norway",native:"Norge"},id:e.SamiNorway,language:{code:I.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Norway)",native_name:"S\xE1megiella (Norge)",rtl:!1},FI={country:{code:A.Sweden,name:"Sweden",native:"Sverige"},id:e.SamiSweden,language:{code:I.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Sweden)",native_name:"S\xE1megiella (Sverige)",rtl:!1},kI={id:e.Samoan,language:{code:I.Samoan,name:"Samoan",native:"Gagana fa\u2019a S\u0101moa"},name:"Samoan",native_name:"Gagana fa\u2019a S\u0101moa",rtl:!1},MI={country:{code:A.Samoa,name:"Samoa",native:"Samoa"},id:e.SamoanSamoa,language:{code:I.Samoan,name:"Samoan",native:"Gagana fa\u2019a S\u0101moa"},name:"Samoan (Samoa)",native_name:"Gagana fa\u2019a S\u0101moa (Samoa)",rtl:!1},LI={id:e.Serbian,language:{code:I.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin)",native_name:"Srpski (Latinica)",rtl:!1},wI={country:{code:A.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"Bosna i Hercegovina"},id:e.SerbianBosniaAndHerzegovina,language:{code:I.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin) (Bosnia and Herzegovina)",native_name:"Srpski (Latinica) (Bosna i Hercegovina)",rtl:!1},GI={country:{code:A.SerbiaAndMontenegro,name:"Serbia and Montenegro",native:"Srbija i Crna Gora"},id:e.SerbianSerbiaAndMontenegro,language:{code:I.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin) (Serbia and Montenegro)",native_name:"Srpski (Latinica) (Srbija i Crna Gora)",rtl:!1},qI={id:e.SerbianCyrillic,language:{code:I.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430)",rtl:!1},KI={country:{code:A.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"\u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430"},id:e.SerbianCyrillicBosniaAndHerzegovina,language:{code:I.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic, Bosnia and Herzegovina)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430)",rtl:!1},xI={country:{code:A.SerbiaAndMontenegro,name:"Serbia and Montenegro",native:"\u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430"},id:e.SerbianCyrillicSerbiaAndMontenegro,language:{code:I.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic, Serbia and Montenegro)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430)",rtl:!1},OI={id:e.Slovak,language:{code:I.Slovak,name:"Slovak",native:"Sloven\u010Dina"},name:"Slovak",native_name:"Sloven\u010Dina",rtl:!1},HI={country:{code:A.Slovakia,name:"Slovakia",native:"Slovensko"},id:e.SlovakSlovakia,language:{code:I.Slovak,name:"Slovak",native:"Sloven\u010Dina"},name:"Slovak (Slovakia)",native_name:"Sloven\u010Dina (Slovensko)",rtl:!1},jI={id:e.Slovenian,language:{code:I.Slovenian,name:"Slovenian",native:"Sloven\u0161\u010Dina"},name:"Slovenian",native_name:"Sloven\u0161\u010Dina",rtl:!1},WI={country:{code:A.Slovenia,name:"Slovenia",native:"Slovenija"},id:e.SlovenianSlovenia,language:{code:I.Slovenian,name:"Slovenian",native:"Sloven\u0161\u010Dina"},name:"Slovenian (Slovenia)",native_name:"Sloven\u0161\u010Dina (Slovenija)",rtl:!1},VI={id:e.Somali,language:{code:I.Somali,name:"Somali",native:"Soomaaliga"},name:"Somali",native_name:"Soomaaliga",rtl:!0},zI={country:{code:A.Somalia,name:"Somalia",native:"Soomaaliya"},id:e.SomaliSomalia,language:{code:I.Somali,name:"Somali",native:"Soomaaliga"},name:"Somali (Somalia)",native_name:"Soomaaliga (Soomaaliya)",rtl:!0},RI={id:e.Spanish,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish",native_name:"Espa\xF1ol",rtl:!1},JI={country:{code:A.Argentina,name:"Argentina",native:"Argentina"},id:e.SpanishArgentina,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Argentina)",native_name:"Espa\xF1ol (Argentina)",rtl:!1},YI={country:{code:A.Bolivia,name:"Bolivia",native:"Bolivia"},id:e.SpanishBolivia,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Bolivia)",native_name:"Espa\xF1ol (Bolivia)",rtl:!1},ZI={country:{code:A.Chile,name:"Chile",native:"Chile"},id:e.SpanishChile,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Chile)",native_name:"Espa\xF1ol (Chile)",rtl:!1},$I={country:{code:A.Colombia,name:"Colombia",native:"Colombia"},id:e.SpanishColombia,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Colombia)",native_name:"Espa\xF1ol (Colombia)",rtl:!1},QI={country:{code:A.CostaRica,name:"Costa Rica",native:"Costa Rica"},id:e.SpanishCostaRica,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Costa Rica)",native_name:"Espa\xF1ol (Costa Rica)",rtl:!1},XI={country:{code:A.Cuba,name:"Cuba",native:"Cuba"},id:e.SpanishCuba,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Cuba)",native_name:"Espa\xF1ol (Cuba)",rtl:!1},CI={country:{code:A.DominicanRepublic,name:"Dominican Republic",native:"Rep\xFAblica Dominicana"},id:e.SpanishDominicanRepublic,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Dominican Republic)",native_name:"Espa\xF1ol (Rep\xFAblica Dominicana)",rtl:!1},a_={country:{code:A.Ecuador,name:"Ecuador",native:"Ecuador"},id:e.SpanishEcuador,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Ecuador)",native_name:"Espa\xF1ol (Ecuador)",rtl:!1},e_={country:{code:A.ElSalvador,name:"El Salvador",native:"El Salvador"},id:e.SpanishElSalvador,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (El Salvador)",native_name:"Espa\xF1ol (El Salvador)",rtl:!1},u_={country:{code:A.EquatorialGuinea,name:"Equatorial Guinea",native:"Guinea Ecuatorial"},id:e.SpanishEquatorialGuinea,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Equatorial Guinea)",native_name:"Espa\xF1ol (Guinea Ecuatorial)",rtl:!1},i_={country:{code:A.Guatemala,name:"Guatemala",native:"Guatemala"},id:e.SpanishGuatemala,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Guatemala)",native_name:"Espa\xF1ol (Guatemala)",rtl:!1},s_={country:{code:A.Honduras,name:"Honduras",native:"Honduras"},id:e.SpanishHonduras,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Honduras)",native_name:"Espa\xF1ol (Honduras)",rtl:!1},n_={country:{code:A.Mexico,name:"Mexico",native:"M\xE9xico"},id:e.SpanishMexico,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Mexico)",native_name:"Espa\xF1ol (M\xE9xico)",rtl:!1},r_={country:{code:A.Nicaragua,name:"Nicaragua",native:"Nicaragua"},id:e.SpanishNicaragua,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Nicaragua)",native_name:"Espa\xF1ol (Nicaragua)",rtl:!1},t_={country:{code:A.Panama,name:"Panama",native:"Panam\xE1"},id:e.SpanishPanama,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Panama)",native_name:"Espa\xF1ol (Panam\xE1)",rtl:!1},l_={country:{code:A.Paraguay,name:"Paraguay",native:"Paraguay"},id:e.SpanishParaguay,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Paraguay)",native_name:"Espa\xF1ol (Paraguay)",rtl:!1},m_={country:{code:A.Peru,name:"Peru",native:"Per\xFA"},id:e.SpanishPeru,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Peru)",native_name:"Espa\xF1ol (Per\xFA)",rtl:!1},c_={country:{code:A.PuertoRico,name:"Puerto Rico",native:"Puerto Rico"},id:e.SpanishPuertoRico,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Puerto Rico)",native_name:"Espa\xF1ol (Puerto Rico)",rtl:!1},o_={country:{code:A.Uruguay,name:"Uruguay",native:"Uruguay"},id:e.SpanishUruguay,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Uruguay)",native_name:"Espa\xF1ol (Uruguay)",rtl:!1},A_={country:{code:A.Venezuela,name:"Venezuela",native:"Venezuela"},id:e.SpanishVenezuela,language:{code:I.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Venezuela)",native_name:"Espa\xF1ol (Venezuela)",rtl:!1},f_={country:{code:A.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.SutuSouthAfrica,language:{code:I.Sutu,name:"Sutu",native:"Sesotho"},name:"Sutu (South Africa)",native_name:"Sesotho (Afrika Borwa)",rtl:!1},d_={id:e.Swahili,language:{code:I.Swahili,name:"Swahili",native:"Kiswahili"},name:"Swahili",native_name:"Kiswahili",rtl:!1},I_={country:{code:A.Kenya,name:"Kenya",native:"Kenya"},id:e.SwahiliKenya,language:{code:I.Swahili,name:"Swahili",native:"Kiswahili"},name:"Swahili (Kenya)",native_name:"Kiswahili (Kenya)",rtl:!1},__={id:e.Swedish,language:{code:I.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish",native_name:"Svenska",rtl:!1},g_={country:{code:A.Finland,name:"Finland",native:"Suomi"},id:e.SwedishFinland,language:{code:I.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish (Finland)",native_name:"Svenska (Finland)",rtl:!1},h_={country:{code:A.Sweden,name:"Sweden",native:"Sverige"},id:e.SwedishSweden,language:{code:I.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish (Sweden)",native_name:"Svenska (Sverige)",rtl:!1},S_={id:e.Syriac,language:{code:I.Syriac,name:"Syriac",native:"\u0723\u0718\u072A\u071D\u071D\u0710"},name:"Syriac",native_name:"\u0723\u0718\u072A\u071D\u071D\u0710",rtl:!0},E_={country:{code:A.Syria,name:"Syria",native:"\u0633\u0648\u0631\u064A\u0627"},id:e.SyriacSyria,language:{code:I.Syriac,name:"Syriac",native:"\u0723\u0718\u072A\u071D\u071D\u0710"},name:"Syriac (Syria)",native_name:"\u0723\u0718\u072A\u071D\u071D\u0710 (\u0633\u0648\u0631\u064A\u0627)",rtl:!0},p_={id:e.Tajik,language:{code:I.Tajik,name:"Tajik",native:"\u0422\u043E\u04B7\u0438\u043A\u04E3"},name:"Tajik",native_name:"\u0422\u043E\u04B7\u0438\u043A\u04E3",rtl:!1},T_={country:{code:A.Tajikistan,name:"Tajikistan",native:"\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D"},id:e.TajikTajikistan,language:{code:I.Tajik,name:"Tajik",native:"\u0422\u043E\u04B7\u0438\u043A\u04E3"},name:"Tajik (Tajikistan)",native_name:"\u0422\u043E\u04B7\u0438\u043A\u04E3 (\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D)",rtl:!1},v_={id:e.Tagalog,language:{code:I.Tagalog,name:"Tagalog",native:"Tagalog"},name:"Tagalog",native_name:"Tagalog",rtl:!1},b_={country:{code:A.Philippines,name:"Philippines",native:"Pilipinas"},id:e.TagalogPhilippines,language:{code:I.Tagalog,name:"Tagalog",native:"Tagalog"},name:"Tagalog (Philippines)",native_name:"Tagalog (Pilipinas)",rtl:!1},B_={id:e.Tamil,language:{code:I.Tamil,name:"Tamil",native:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD"},name:"Tamil",native_name:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD",rtl:!1},U_={country:{code:A.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:e.TamilIndia,language:{code:I.Tamil,name:"Tamil",native:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD"},name:"Tamil (India)",native_name:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)",rtl:!1},N_={id:e.Telugu,language:{code:I.Telugu,name:"Telugu",native:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41"},name:"Telugu",native_name:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41",rtl:!1},D_={country:{code:A.India,name:"India",native:"\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02"},id:e.TeluguIndia,language:{code:I.Telugu,name:"Telugu",native:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41"},name:"Telugu (India)",native_name:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41 (\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02)",rtl:!1},y_={id:e.Thai,language:{code:I.Thai,name:"Thai",native:"\u0E44\u0E17\u0E22"},name:"Thai",native_name:"\u0E44\u0E17\u0E22",rtl:!1},P_={country:{code:A.Thailand,name:"Thailand",native:"\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22"},id:e.ThaiThailand,language:{code:I.Thai,name:"Thai",native:"\u0E44\u0E17\u0E22"},name:"Thai (Thailand)",native_name:"\u0E44\u0E17\u0E22 (\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22)",rtl:!1},F_={id:e.Tibetan,language:{code:I.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42",rtl:!1},k_={country:{code:A.China,name:"China",native:"\u4E2D\u56FD"},id:e.TibetanChina,language:{code:I.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (China)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42)",rtl:!1},M_={country:{code:A.Bhutan,name:"Bhutan",native:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D"},id:e.TibetanBhutan,language:{code:I.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (Bhutan)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D)",rtl:!1},L_={country:{code:A.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:e.TibetanIndia,language:{code:I.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (India)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)",rtl:!1},w_={id:e.Tsonga,language:{code:I.Tsonga,name:"Tsonga",native:"Xitsonga"},name:"Tsonga",native_name:"Xitsonga",rtl:!1},G_={id:e.Tswana,language:{code:I.Tswana,name:"Tswana",native:"Setswana"},name:"Tswana",native_name:"Setswana",rtl:!1},q_={country:{code:A.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.TswanaSouthAfrica,language:{code:I.Tswana,name:"Tswana",native:"Setswana"},name:"Tswana (South Africa)",native_name:"Setswana (South Africa)",rtl:!1},K_={id:e.Turkish,language:{code:I.Turkish,name:"Turkish",native:"T\xFCrk\xE7e"},name:"Turkish",native_name:"T\xFCrk\xE7e",rtl:!1},x_={country:{code:A.Turkey,name:"Turkey",native:"T\xFCrkiye"},id:e.TurkishTurkey,language:{code:I.Turkish,name:"Turkish",native:"T\xFCrk\xE7e"},name:"Turkish (Turkey)",native_name:"T\xFCrk\xE7e (T\xFCrkiye)",rtl:!1},O_={id:e.Ukrainian,language:{code:I.Ukrainian,name:"Ukrainian",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430"},name:"Ukrainian",native_name:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430",rtl:!1},H_={country:{code:A.Ukraine,name:"Ukraine",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0430"},id:e.UkrainianUkraine,language:{code:I.Ukrainian,name:"Ukrainian",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430"},name:"Ukrainian (Ukraine)",native_name:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)",rtl:!1},j_={id:e.Urdu,language:{code:I.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu",native_name:"\u0627\u0631\u062F\u0648",rtl:!0},W_={country:{code:A.Afghanistan,name:"Afghanistan",native:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},id:e.UrduAfghanistan,language:{code:I.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (Afghanistan)",native_name:"\u0627\u0631\u062F\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)",rtl:!0},V_={country:{code:A.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.UrduIndia,language:{code:I.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (India)",native_name:"\u0627\u0631\u062F\u0648 (\u092D\u093E\u0930\u0924)",rtl:!0},z_={country:{code:A.Pakistan,name:"Pakistan",native:"\u067E\u0627\u06A9\u0633\u062A\u0627\u0646"},id:e.UrduPakistan,language:{code:I.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (Pakistan)",native_name:"\u0627\u0631\u062F\u0648 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)",rtl:!0},R_={id:e.Uzbek,language:{code:I.Uzbek,name:"Uzbek",native:"O\u02BBzbekcha"},name:"Uzbek",native_name:"O\u02BBzbekcha",rtl:!1},J_={country:{code:A.Uzbekistan,name:"Uzbekistan",native:"O\u02BBzbekiston"},id:e.UzbekUzbekistan,language:{code:I.Uzbek,name:"Uzbek",native:"O\u02BBzbekcha"},name:"Uzbek (Latin, Uzbekistan)",native_name:"O\u02BBzbekcha (O\u02BBzbekiston)",rtl:!1},Y_={country:{code:A.Uzbekistan,name:"Uzbekistan",native:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D"},id:e.UzbekCyrillic,language:{code:I.Uzbek,name:"Uzbek",native:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D"},name:"Uzbek (Cyrillic)",native_name:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D (\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D)",rtl:!1},Z_={id:e.Vietnamese,language:{code:I.Vietnamese,name:"Vietnamese",native:"Ti\u1EBFng Vi\u1EC7t"},name:"Vietnamese",native_name:"Ti\u1EBFng Vi\u1EC7t",rtl:!1},$_={country:{code:A.Vietnam,name:"Vietnam",native:"Vi\u1EC7t Nam"},id:e.VietnameseVietnam,language:{code:I.Vietnamese,name:"Vietnamese",native:"Ti\u1EBFng Vi\u1EC7t"},name:"Vietnamese (Vietnam)",native_name:"Ti\u1EBFng Vi\u1EC7t (Vi\u1EC7t Nam)",rtl:!1},Q_={id:e.Welsh,language:{code:I.Welsh,name:"Welsh",native:"Cymraeg"},name:"Welsh",native_name:"Cymraeg",rtl:!1},X_={country:{code:A.UnitedKingdom,name:"United Kingdom",native:"United Kingdom"},id:e.WelshUnitedKingdom,language:{code:I.Welsh,name:"Welsh",native:"Cymraeg"},name:"Welsh (United Kingdom)",native_name:"Cymraeg (United Kingdom)",rtl:!1},C_={id:e.Xhosa,language:{code:I.Xhosa,name:"Xhosa",native:"isiXhosa"},name:"Xhosa",native_name:"isiXhosa",rtl:!1},ag={country:{code:A.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.XhosaSouthAfrica,language:{code:I.Xhosa,name:"Xhosa",native:"isiXhosa"},name:"Xhosa (South Africa)",native_name:"isiXhosa (South Africa)",rtl:!1},eg={id:e.Yiddish,language:{code:I.Yiddish,name:"Yiddish",native:"\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9"},name:"Yiddish",native_name:"\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9",rtl:!1},ug={id:e.Yoruba,language:{code:I.Yoruba,name:"Yoruba",native:"Yor\xF9b\xE1"},name:"Yoruba",native_name:"Yor\xF9b\xE1",rtl:!1},ig={country:{code:A.Nigeria,name:"Nigeria",native:"Nigeria"},id:e.YorubaNigeria,language:{code:I.Yoruba,name:"Yoruba",native:"Yor\xF9b\xE1"},name:"Yoruba (Nigeria)",native_name:"Yor\xF9b\xE1 (Nigeria)",rtl:!1},sg={id:e.Zulu,language:{code:I.Zulu,name:"Zulu",native:"isiZulu"},name:"Zulu",native_name:"isiZulu",rtl:!1},ng={country:{code:A.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.ZuluSouthAfrica,language:{code:I.Zulu,name:"Zulu",native:"isiZulu"},name:"Zulu (South Africa)",native_name:"isiZulu (South Africa)",rtl:!1},rg={id:m.AfricaAbidjan,name:"Africa/Abidjan",offset:n.UTC_0,timezone:t.CoordinatedUniversalTime},tg={id:m.AfricaAccra,name:"Africa/Accra",offset:n.UTC_0,timezone:t.CoordinatedUniversalTime},lg={id:m.AfricaAddisAbaba,name:"Africa/Addis_Ababa",offset:n.UTC_PLUS_3,timezone:t.EastAfricaTime},mg={id:m.AfricaAlgiers,name:"Africa/Algiers",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},cg={id:m.AfricaAsmara,name:"Africa/Asmara",offset:n.UTC_PLUS_3,timezone:t.EastAfricaTime},og={id:m.AfricaBamako,name:"Africa/Bamako",offset:n.UTC_0,timezone:t.CoordinatedUniversalTime},Ag={id:m.AfricaBangui,name:"Africa/Bangui",offset:n.UTC_PLUS_1,timezone:t.WestAfricaTime},fg={id:m.AfricaBanjul,name:"Africa/Banjul",offset:n.UTC_0,timezone:t.CoordinatedUniversalTime},dg={id:m.AfricaBissau,name:"Africa/Bissau",offset:n.UTC_0,timezone:t.CoordinatedUniversalTime},Ig={id:m.AfricaBlantyre,name:"Africa/Blantyre",offset:n.UTC_PLUS_2,timezone:t.CentralAfricaTime},_g={id:m.AfricaBrazzaville,name:"Africa/Brazzaville",offset:n.UTC_PLUS_1,timezone:t.WestAfricaTime},gg={id:m.AfricaBujumbura,name:"Africa/Bujumbura",offset:n.UTC_PLUS_2,timezone:t.CentralAfricaTime},hg={id:m.AfricaCairo,name:"Africa/Cairo",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},Sg={id:m.AfricaCasablanca,name:"Africa/Casablanca",offset:n.UTC_PLUS_1,timezone:t.WesternEuropeanTime},Eg={id:m.AfricaCeuta,name:"Africa/Ceuta",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},pg={id:m.AfricaConakry,name:"Africa/Conakry",offset:n.UTC_0,timezone:t.CoordinatedUniversalTime},Tg={id:m.AfricaDakar,name:"Africa/Dakar",offset:n.UTC_0,timezone:t.CoordinatedUniversalTime},vg={id:m.AfricaDarEsSalaam,name:"Africa/Dar_es_Salaam",offset:n.UTC_PLUS_3,timezone:t.EastAfricaTime},bg={id:m.AfricaDjibouti,name:"Africa/Djibouti",offset:n.UTC_PLUS_3,timezone:t.EastAfricaTime},Bg={id:m.AfricaDouala,name:"Africa/Douala",offset:n.UTC_PLUS_1,timezone:t.WestAfricaTime},Ug={id:m.AfricaElAaiun,name:"Africa/El_Aaiun",offset:n.UTC_PLUS_1,timezone:t.WestAfricaTime},Ng={id:m.AfricaFreetown,name:"Africa/Freetown",offset:n.UTC_0,timezone:t.CoordinatedUniversalTime},Dg={id:m.AfricaGaborone,name:"Africa/Gaborone",offset:n.UTC_PLUS_2,timezone:t.CentralAfricaTime},yg={id:m.AfricaHarare,name:"Africa/Harare",offset:n.UTC_PLUS_2,timezone:t.CentralAfricaTime},Pg={id:m.AfricaJohannesburg,name:"Africa/Johannesburg",offset:n.UTC_PLUS_2,timezone:t.SouthAfricanStandardTime},Fg={id:m.AfricaJuba,name:"Africa/Juba",offset:n.UTC_PLUS_3,timezone:t.EastAfricaTime},kg={id:m.AfricaKampala,name:"Africa/Kampala",offset:n.UTC_PLUS_3,timezone:t.EastAfricaTime},Mg={id:m.AfricaKhartoum,name:"Africa/Khartoum",offset:n.UTC_PLUS_2,timezone:t.EastAfricaTime},Lg={id:m.AfricaKigali,name:"Africa/Kigali",offset:n.UTC_PLUS_2,timezone:t.CentralAfricaTime},wg={id:m.AfricaKinshasa,name:"Africa/Kinshasa",offset:n.UTC_PLUS_1,timezone:t.WestAfricaTime},Gg={id:m.AfricaLagos,name:"Africa/Lagos",offset:n.UTC_PLUS_1,timezone:t.WestAfricaTime},qg={id:m.AfricaLibreville,name:"Africa/Libreville",offset:n.UTC_PLUS_1,timezone:t.WestAfricaTime},Kg={id:m.AfricaLome,name:"Africa/Lome",offset:n.UTC_0,timezone:t.CoordinatedUniversalTime},xg={id:m.AfricaLuanda,name:"Africa/Luanda",offset:n.UTC_PLUS_1,timezone:t.WestAfricaTime},Og={id:m.AfricaLubumbashi,name:"Africa/Lubumbashi",offset:n.UTC_PLUS_2,timezone:t.CentralAfricaTime},Hg={id:m.AfricaLusaka,name:"Africa/Lusaka",offset:n.UTC_PLUS_2,timezone:t.CentralAfricaTime},jg={id:m.AfricaMalabo,name:"Africa/Malabo",offset:n.UTC_PLUS_1,timezone:t.WestAfricaTime},Wg={id:m.AfricaMaputo,name:"Africa/Maputo",offset:n.UTC_PLUS_2,timezone:t.CentralAfricaTime},Vg={id:m.AfricaMaseru,name:"Africa/Maseru",offset:n.UTC_PLUS_2,timezone:t.SouthAfricanStandardTime},zg={id:m.AfricaMbabane,name:"Africa/Mbabane",offset:n.UTC_PLUS_2,timezone:t.SouthAfricanStandardTime},Rg={id:m.AfricaMogadishu,name:"Africa/Mogadishu",offset:n.UTC_PLUS_3,timezone:t.EastAfricaTime},Jg={id:m.AfricaMonrovia,name:"Africa/Monrovia",offset:n.UTC_0,timezone:t.CoordinatedUniversalTime},Yg={id:m.AfricaNairobi,name:"Africa/Nairobi",offset:n.UTC_PLUS_3,timezone:t.EastAfricaTime},Zg={id:m.AfricaNdjamena,name:"Africa/Ndjamena",offset:n.UTC_PLUS_1,timezone:t.WestAfricaTime},$g={id:m.AfricaNiamey,name:"Africa/Niamey",offset:n.UTC_PLUS_1,timezone:t.WestAfricaTime},Qg={id:m.AfricaNouakchott,name:"Africa/Nouakchott",offset:n.UTC_0,timezone:t.GreenwichMeanTime},Xg={id:m.AfricaOuagadougou,name:"Africa/Ouagadougou",offset:n.UTC_0,timezone:t.CoordinatedUniversalTime},Cg={id:m.AfricaPortoNovo,name:"Africa/Porto-Novo",offset:n.UTC_PLUS_1,timezone:t.WestAfricaTime},ah={id:m.AfricaSaoTome,name:"Africa/SaoTome",offset:n.UTC_0,timezone:t.CoordinatedUniversalTime},eh={id:m.AfricaTripoli,name:"Africa/Tripoli",offset:n.UTC_0,timezone:t.CoordinatedUniversalTime},uh={id:m.AfricaTunis,name:"Africa/Tunis",offset:n.UTC_0,timezone:t.CoordinatedUniversalTime},ih={id:m.AfricaWindhoek,name:"Africa/Windhoek",offset:n.UTC_PLUS_2,timezone:t.WestAfricaTime},sh={id:m.AmericaAdak,name:"America/Adak",offset:n.UTC_PLUS_10,timezone:t.HawaiiAleutianStandardTime},nh={id:m.AmericaAnchorage,name:"America/Anchorage",offset:n.UTC_PLUS_9,timezone:t.AlaskaStandardTime},rh={id:m.AmericaAnguilla,name:"America/Anguilla",offset:n.UTC_0,timezone:t.AtlanticStandardTime},th={id:m.AmericaAntigua,name:"America/Antigua",offset:n.UTC_0,timezone:t.AtlanticStandardTime},lh={id:m.AmericaAraguaina,name:"America/Araguaina",offset:n.UTC_MINUS_3,timezone:t.BrasiliaTime},mh={id:m.AmericaArgentinaBuenosAires,name:"America/Argentina/Buenos_Aires",offset:n.UTC_MINUS_3,timezone:t.ArgentinaTime},ch={id:m.AmericaArgentinaCatamarca,name:"America/Argentina/Catamarca",offset:n.UTC_MINUS_3,timezone:t.ArgentinaTime},oh={id:m.AmericaArgentinaCordoba,name:"America/Argentina/Cordoba",offset:n.UTC_MINUS_3,timezone:t.ArgentinaTime},Ah={id:m.AmericaArgentinaJujuy,name:"America/Argentina/Jujuy",offset:n.UTC_MINUS_3,timezone:t.ArgentinaTime},fh={id:m.AmericaArgentinaLaRioja,name:"America/Argentina/La_Rioja",offset:n.UTC_MINUS_3,timezone:t.ArgentinaTime},dh={id:m.AmericaArgentinaMendoza,name:"America/Argentina/Mendoza",offset:n.UTC_MINUS_3,timezone:t.ArgentinaTime},Ih={id:m.AmericaArgentinaRioGallegos,name:"America/Argentina/Rio_Gallegos",offset:n.UTC_MINUS_3,timezone:t.ArgentinaTime},_h={id:m.AmericaArgentinaSalta,name:"America/Argentina/Salta",offset:n.UTC_MINUS_3,timezone:t.ArgentinaTime},gh={id:m.AmericaArgentinaSanJuan,name:"America/Argentina/San_Juan",offset:n.UTC_MINUS_3,timezone:t.ArgentinaTime},hh={id:m.AmericaArgentinaSanLuis,name:"America/Argentina/San_Luis",offset:n.UTC_MINUS_3,timezone:t.ArgentinaTime},Sh={id:m.AmericaArgentinaTucuman,name:"America/Argentina/Tucuman",offset:n.UTC_MINUS_3,timezone:t.ArgentinaTime},Eh={id:m.AmericaArgentinaUshuaia,name:"America/Argentina/Ushuaia",offset:n.UTC_MINUS_3,timezone:t.ArgentinaTime},ph={id:m.AmericaAruba,name:"America/Aruba",offset:n.UTC_0,timezone:t.AtlanticStandardTime},Th={id:m.AmericaAsuncion,name:"America/Asuncion",offset:n.UTC_MINUS_4,timezone:t.ParaguayTime},vh={id:m.AmericaAtikokan,name:"America/Atikokan",offset:n.UTC_0,timezone:t.EasternStandardTime},bh={id:m.AmericaAtka,name:"America/Atka",offset:n.UTC_MINUS_10,timezone:t.HawaiiAleutianStandardTime},Bh={id:m.AmericaBahia,name:"America/Bahia",offset:n.UTC_MINUS_3,timezone:t.BrasiliaTime},Uh={id:m.AmericaBahiaBanderas,name:"America/Bahia_Banderas",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},Nh={id:m.AmericaBarbados,name:"America/Barbados",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},Dh={id:m.AmericaBelem,name:"America/Belem",offset:n.UTC_MINUS_3,timezone:t.BrasiliaTime},yh={id:m.AmericaBelize,name:"America/Belize",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},Ph={id:m.AmericaBlancSablon,name:"America/Blanc-Sablon",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},Fh={id:m.AmericaBoaVista,name:"America/Boa_Vista",offset:n.UTC_MINUS_4,timezone:t.AmazonTime},kh={id:m.AmericaBogota,name:"America/Bogota",offset:n.UTC_MINUS_5,timezone:t.ColombiaTime},Mh={id:m.AmericaBoise,name:"America/Boise",offset:n.UTC_MINUS_7,timezone:t.MountainStandardTime},Lh={id:m.AmericaCambridgeBay,name:"America/Cambridge_Bay",offset:n.UTC_MINUS_7,timezone:t.MountainStandardTime},wh={id:m.AmericaCampoGrande,name:"America/Campo_Grande",offset:n.UTC_MINUS_4,timezone:t.AmazonTime},Gh={id:m.AmericaCancun,name:"America/Cancun",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},qh={id:m.AmericaCaracas,name:"America/Caracas",offset:n.UTC_MINUS_4,timezone:t.VenezuelaStandardTime},Kh={id:m.AmericaCayenne,name:"America/Cayenne",offset:n.UTC_MINUS_3,timezone:t.FrenchGuianaTime},xh={id:m.AmericaCayman,name:"America/Cayman",offset:n.UTC_0,timezone:t.AtlanticStandardTime},Oh={id:m.AmericaChicago,name:"America/Chicago",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},Hh={id:m.AmericaChihuahua,name:"America/Chihuahua",offset:n.UTC_MINUS_7,timezone:t.MountainStandardTime},jh={id:m.AmericaCoralHarbour,name:"America/Coral_Harbour",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},Wh={id:m.AmericaCordoba,name:"America/Cordoba",offset:n.UTC_MINUS_3,timezone:t.ArgentinaTime},Vh={id:m.AmericaCostaRica,name:"America/Costa_Rica",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},zh={id:m.AmericaCreston,name:"America/Creston",offset:n.UTC_MINUS_7,timezone:t.MountainStandardTime},Rh={id:m.AmericaCuiaba,name:"America/Cuiaba",offset:n.UTC_MINUS_4,timezone:t.AmazonTime},Jh={id:m.AmericaCuracao,name:"America/Curacao",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},Yh={id:m.AmericaDanmarkshavn,name:"America/Danmarkshavn",offset:n.UTC_0,timezone:t.GreenwichMeanTime},Zh={id:m.AmericaDawson,name:"America/Dawson",offset:n.UTC_MINUS_8,timezone:t.PacificStandardTime},$h={id:m.AmericaDawsonCreek,name:"America/Dawson_Creek",offset:n.UTC_MINUS_8,timezone:t.PacificStandardTime},Qh={id:m.AmericaDenver,name:"America/Denver",offset:n.UTC_MINUS_7,timezone:t.MountainStandardTime},Xh={id:m.AmericaDetroit,name:"America/Detroit",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},Ch={id:m.AmericaDominica,name:"America/Dominica",offset:n.UTC_0,timezone:t.AtlanticStandardTime},aS={id:m.AmericaEdmonton,name:"America/Edmonton",offset:n.UTC_MINUS_7,timezone:t.MountainStandardTime},eS={id:m.AmericaEirunepe,name:"America/Eirunepe",offset:n.UTC_MINUS_5,timezone:t.AcreTime},uS={id:m.AmericaElSalvador,name:"America/El_Salvador",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},iS={id:m.AmericaFortaleza,name:"America/Fortaleza",offset:n.UTC_MINUS_3,timezone:t.BrasiliaTime},sS={id:m.AmericaGlaceBay,name:"America/Glace_Bay",offset:n.UTC_0,timezone:t.AtlanticStandardTime},nS={id:m.AmericaGodthab,name:"America/Godthab",offset:n.UTC_MINUS_3,timezone:t.WestGreenlandTime},rS={id:m.AmericaGooseBay,name:"America/Goose_Bay",offset:n.UTC_0,timezone:t.AtlanticStandardTime},tS={id:m.AmericaGrandTurk,name:"America/Grand_Turk",offset:n.UTC_0,timezone:t.AtlanticStandardTime},lS={id:m.AmericaGrenada,name:"America/Grenada",offset:n.UTC_0,timezone:t.AtlanticStandardTime},mS={id:m.AmericaGuadeloupe,name:"America/Guadeloupe",offset:n.UTC_0,timezone:t.AtlanticStandardTime},cS={id:m.AmericaGuatemala,name:"America/Guatemala",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},oS={id:m.AmericaGuayaquil,name:"America/Guayaquil",offset:n.UTC_MINUS_5,timezone:t.EcuadorTime},AS={id:m.AmericaGuyana,name:"America/Guyana",offset:n.UTC_0,timezone:t.AtlanticStandardTime},fS={id:m.AmericaHalifax,name:"America/Halifax",offset:n.UTC_0,timezone:t.AtlanticStandardTime},dS={id:m.AmericaHavana,name:"America/Havana",offset:n.UTC_MINUS_5,timezone:t.CubaStandardTime},IS={id:m.AmericaHermosillo,name:"America/Hermosillo",offset:n.UTC_MINUS_7,timezone:t.MountainStandardTime},_S={id:m.AmericaIndianaIndianapolis,name:"America/Indiana/Indianapolis",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},gS={id:m.AmericaIndianaKnox,name:"America/Indiana/Knox",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},hS={id:m.AmericaIndianaMarengo,name:"America/Indiana/Marengo",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},SS={id:m.AmericaIndianaPetersburg,name:"America/Indiana/Petersburg",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},ES={id:m.AmericaIndianaTellCity,name:"America/Indiana/Tell_City",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},pS={id:m.AmericaIndianaVevay,name:"America/Indiana/Vevay",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},TS={id:m.AmericaIndianaVincennes,name:"America/Indiana/Vincennes",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},vS={id:m.AmericaIndianaWinamac,name:"America/Indiana/Winamac",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},bS={id:m.AmericaInuvik,name:"America/Inuvik",offset:n.UTC_MINUS_7,timezone:t.MountainStandardTime},BS={id:m.AmericaIqaluit,name:"America/Iqaluit",offset:n.UTC_0,timezone:t.EasternStandardTime},US={id:m.AmericaJamaica,name:"America/Jamaica",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},NS={id:m.AmericaJuneau,name:"America/Juneau",offset:n.UTC_MINUS_9,timezone:t.AlaskaStandardTime},DS={id:m.AmericaKentuckyLouisville,name:"America/Kentucky/Louisville",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},yS={id:m.AmericaKentuckyMonticello,name:"America/Kentucky/Monticello",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},PS={id:m.AmericaKralendijk,name:"America/Kralendijk",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},FS={id:m.AmericaLaPaz,name:"America/La_Paz",offset:n.UTC_MINUS_4,timezone:t.BoliviaTime},kS={id:m.AmericaLima,name:"America/Lima",offset:n.UTC_MINUS_5,timezone:t.PeruTime},MS={id:m.AmericaLosAngeles,name:"America/Los_Angeles",offset:n.UTC_MINUS_8,timezone:t.PacificStandardTime},LS={id:m.AmericaLouisville,name:"America/Louisville",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},wS={id:m.AmericaLowerPrinces,name:"America/Lower_Princes",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},GS={id:m.AmericaMaceio,name:"America/Maceio",offset:n.UTC_MINUS_3,timezone:t.BrasiliaTime},qS={id:m.AmericaManagua,name:"America/Managua",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},KS={id:m.AmericaManaus,name:"America/Manaus",offset:n.UTC_MINUS_4,timezone:t.AmazonTime},xS={id:m.AmericaMarigot,name:"America/Marigot",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},OS={id:m.AmericaMartinique,name:"America/Martinique",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},HS={id:m.AmericaMatamoros,name:"America/Matamoros",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},jS={id:m.AmericaMazatlan,name:"America/Mazatlan",offset:n.UTC_MINUS_7,timezone:t.MountainStandardTime},WS={id:m.AmericaMenominee,name:"America/Menominee",offset:n.UTC_MINUS_5,timezone:t.CentralStandardTime},VS={id:m.AmericaMerida,name:"America/Merida",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},zS={id:m.AmericaMetlakatla,name:"America/Metlakatla",offset:n.UTC_MINUS_9,timezone:t.AlaskaStandardTime},RS={id:m.AmericaMexicoCity,name:"America/Mexico_City",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},JS={id:m.AmericaMiquelon,name:"America/Miquelon",offset:n.UTC_MINUS_3,timezone:t.SaintPierreAndMiquelonStandardTime},YS={id:m.AmericaMoncton,name:"America/Moncton",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},ZS={id:m.AmericaMonterrey,name:"America/Monterrey",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},$S={id:m.AmericaMontevideo,name:"America/Montevideo",offset:n.UTC_MINUS_3,timezone:t.UruguayStandardTime},QS={id:m.AmericaMontreal,name:"America/Montreal",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},XS={id:m.AmericaMontserrat,name:"America/Montserrat",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},CS={id:m.AmericaNassau,name:"America/Nassau",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},aE={id:m.AmericaNewYork,name:"America/New_York",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},eE={id:m.AmericaNipigon,name:"America/Nipigon",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},uE={id:m.AmericaNome,name:"America/Nome",offset:n.UTC_MINUS_9,timezone:t.AlaskaStandardTime},iE={id:m.AmericaNoronha,name:"America/Noronha",offset:n.UTC_MINUS_2,timezone:t.FernandoDeNoronhaTime},sE={id:m.AmericaNorthDakotaBeulah,name:"America/North_Dakota/Beulah",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},nE={id:m.AmericaNorthDakotaCenter,name:"America/North_Dakota/Center",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},rE={id:m.AmericaNorthDakotaNewSalem,name:"America/North_Dakota/New_Salem",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},tE={id:m.AmericaOjinaga,name:"America/Ojinaga",offset:n.UTC_MINUS_7,timezone:t.MountainStandardTime},lE={id:m.AmericaPanama,name:"America/Panama",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},mE={id:m.AmericaPangnirtung,name:"America/Pangnirtung",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},cE={id:m.AmericaParamaribo,name:"America/Paramaribo",offset:n.UTC_MINUS_3,timezone:t.SurinameTime},oE={id:m.AmericaPhoenix,name:"America/Phoenix",offset:n.UTC_MINUS_7,timezone:t.MountainStandardTime},AE={id:m.AmericaPortAuPrince,name:"America/Port-au-Prince",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},fE={id:m.AmericaPortOfSpain,name:"America/Port_of_Spain",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},dE={id:m.AmericaPortoVelho,name:"America/Porto_Velho",offset:n.UTC_MINUS_4,timezone:t.AmazonTime},IE={id:m.AmericaPuertoRico,name:"America/Puerto_Rico",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},_E={id:m.AmericaRainyRiver,name:"America/Rainy_River",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},gE={id:m.AmericaRankinInlet,name:"America/Rankin_Inlet",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},hE={id:m.AmericaRecife,name:"America/Recife",offset:n.UTC_MINUS_3,timezone:t.BrasiliaTime},SE={id:m.AmericaRegina,name:"America/Regina",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},EE={id:m.AmericaResolute,name:"America/Resolute",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},pE={id:m.AmericaRioBranco,name:"America/Rio_Branco",offset:n.UTC_MINUS_5,timezone:t.AcreTime},TE={id:m.AmericaSantaIsabel,name:"America/Santa_Isabel",offset:n.UTC_MINUS_8,timezone:t.PacificStandardTime},vE={id:m.AmericaSantarem,name:"America/Santarem",offset:n.UTC_MINUS_3,timezone:t.BrasiliaTime},bE={id:m.AmericaSantiago,name:"America/Santiago",offset:n.UTC_MINUS_4,timezone:t.ChileStandardTime},BE={id:m.AmericaSantoDomingo,name:"America/Santo_Domingo",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},UE={id:m.AmericaSaoPaulo,name:"America/Sao_Paulo",offset:n.UTC_MINUS_3,timezone:t.BrasiliaTime},NE={id:m.AmericaScoresbysund,name:"America/Scoresbysund",offset:n.UTC_MINUS_1,timezone:t.EasternGreenlandTime},DE={id:m.AmericaShiprock,name:"America/Shiprock",offset:n.UTC_MINUS_7,timezone:t.MountainStandardTime},yE={id:m.AmericaSitka,name:"America/Sitka",offset:n.UTC_MINUS_9,timezone:t.AlaskaStandardTime},PE={id:m.AmericaStBarthelemy,name:"America/St_Barthelemy",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},FE={id:m.AmericaStJohns,name:"America/St_Johns",offset:n.UTC_MINUS_3,timezone:t.NewfoundlandStandardTime},kE={id:m.AmericaStKitts,name:"America/St_Kitts",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},ME={id:m.AmericaStLucia,name:"America/St_Lucia",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},LE={id:m.AmericaStThomas,name:"America/St_Thomas",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},wE={id:m.AmericaStVincent,name:"America/St_Vincent",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},GE={id:m.AmericaSwiftCurrent,name:"America/Swift_Current",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},qE={id:m.AmericaTegucigalpa,name:"America/Tegucigalpa",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},KE={id:m.AmericaThule,name:"America/Thule",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},xE={id:m.AmericaThunderBay,name:"America/Thunder_Bay",offset:n.UTC_MINUS_4,timezone:t.EasternStandardTime},OE={id:m.AmericaTijuana,name:"America/Tijuana",offset:n.UTC_MINUS_8,timezone:t.PacificStandardTime},HE={id:m.AmericaToronto,name:"America/Toronto",offset:n.UTC_MINUS_5,timezone:t.EasternStandardTime},jE={id:m.AmericaTortola,name:"America/Tortola",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},WE={id:m.AmericaVancouver,name:"America/Vancouver",offset:n.UTC_MINUS_8,timezone:t.PacificStandardTime},VE={id:m.AmericaWhitehorse,name:"America/Whitehorse",offset:n.UTC_MINUS_8,timezone:t.PacificStandardTime},zE={id:m.AmericaWinnipeg,name:"America/Winnipeg",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},RE={id:m.AmericaYakutat,name:"America/Yakutat",offset:n.UTC_MINUS_9,timezone:t.AlaskaStandardTime},JE={id:m.AmericaYellowknife,name:"America/Yellowknife",offset:n.UTC_MINUS_6,timezone:t.MountainStandardTime},YE={id:m.AntarcticaCasey,name:"Antarctica/Casey",offset:n.UTC_MINUS_8,timezone:t.WesternStandardTime},ZE={id:m.AntarcticaDavis,name:"Antarctica/Davis",offset:n.UTC_MINUS_7,timezone:t.NewfoundlandStandardTime},$E={id:m.AntarcticaDumontDUrville,name:"Antarctica/DumontDUrville",offset:n.UTC_MINUS_10,timezone:t.CentralStandardTime},QE={id:m.AntarcticaMacquarie,name:"Antarctica/Macquarie",offset:n.UTC_MINUS_11,timezone:t.CentralStandardTime},XE={id:m.AntarcticaMawson,name:"Antarctica/Mawson",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},CE={id:m.AntarcticaMcMurdo,name:"Antarctica/McMurdo",offset:n.UTC_MINUS_12,timezone:t.NewZealandStandardTime},ap={id:m.AntarcticaPalmer,name:"Antarctica/Palmer",offset:n.UTC_MINUS_4,timezone:t.ChathamStandardTime},ep={id:m.AntarcticaRothera,name:"Antarctica/Rothera",offset:n.UTC_MINUS_3,timezone:t.RotheraResearchStationTime},up={id:m.AntarcticaSyowa,name:"Antarctica/Syowa",offset:n.UTC_MINUS_3,timezone:t.ShowaStationTime},ip={id:m.AntarcticaTroll,name:"Antarctica/Troll",offset:n.UTC_MINUS_2,timezone:t.CentralStandardTime},sp={id:m.AntarcticaVostok,name:"Antarctica/Vostok",offset:n.UTC_MINUS_6,timezone:t.CentralStandardTime},np={id:m.ArcticLongyearbyen,name:"Arctic/Longyearbyen",offset:n.UTC_MINUS_1,timezone:t.CentralEuropeanTime},rp={id:m.AsiaAden,name:"Asia/Aden",offset:n.UTC_PLUS_3,timezone:t.ArabiaStandardTime},tp={id:m.AsiaAlmaty,name:"Asia/Almaty",offset:n.UTC_PLUS_6,timezone:t.AlmaAtaTime},lp={id:m.AsiaAmman,name:"Asia/Amman",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},mp={id:m.AsiaAnadyr,name:"Asia/Anadyr",offset:n.UTC_PLUS_12,timezone:t.NewCaledoniaTime},cp={id:m.AsiaAqtau,name:"Asia/Aqtau",offset:n.UTC_PLUS_5,timezone:t.AqtobeTime},op={id:m.AsiaAqtobe,name:"Asia/Aqtobe",offset:n.UTC_PLUS_5,timezone:t.AqtobeTime},Ap={id:m.AsiaAshgabat,name:"Asia/Ashgabat",offset:n.UTC_PLUS_5,timezone:t.TurkmenistanTime},fp={id:m.AsiaBaghdad,name:"Asia/Baghdad",offset:n.UTC_PLUS_3,timezone:t.ArabiaStandardTime},dp={id:m.AsiaBahrain,name:"Asia/Bahrain",offset:n.UTC_PLUS_3,timezone:t.ArabiaStandardTime},Ip={id:m.AsiaBaku,name:"Asia/Baku",offset:n.UTC_PLUS_4,timezone:t.AzerbaijanTime},_p={id:m.AsiaBangkok,name:"Asia/Bangkok",offset:n.UTC_PLUS_7,timezone:t.IndochinaTime},gp={id:m.AsiaBarnaul,name:"Asia/Barnaul",offset:n.UTC_PLUS_7,timezone:t.KrasnoyarskTime},hp={id:m.AsiaBeirut,name:"Asia/Beirut",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},Sp={id:m.AsiaBishkek,name:"Asia/Bishkek",offset:n.UTC_PLUS_6,timezone:t.KyrgyzstanTime},Ep={id:m.AsiaBrunei,name:"Asia/Brunei",offset:n.UTC_PLUS_8,timezone:t.BruneiTime},pp={id:m.AsiaChita,name:"Asia/Chita",offset:n.UTC_PLUS_9,timezone:t.YakutskTime},Tp={id:m.AsiaChoibalsan,name:"Asia/Choibalsan",offset:n.UTC_PLUS_8,timezone:t.ChoibalsanStandardTime},vp={id:m.AsiaColombo,name:"Asia/Colombo",offset:n.UTC_PLUS_5,timezone:t.IndianStandardTime},bp={id:m.AsiaDamascus,name:"Asia/Damascus",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},Bp={id:m.AsiaDhaka,name:"Asia/Dhaka",offset:n.UTC_PLUS_6,timezone:t.BangladeshStandardTime},Up={id:m.AsiaDili,name:"Asia/Dili",offset:n.UTC_PLUS_9,timezone:t.JapanStandardTime},Np={id:m.AsiaDubai,name:"Asia/Dubai",offset:n.UTC_PLUS_4,timezone:t.GulfStandardTime},Dp={id:m.AsiaDushanbe,name:"Asia/Dushanbe",offset:n.UTC_PLUS_5,timezone:t.TajikistanTime},yp={id:m.AsiaFamagusta,name:"Asia/Famagusta",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},Pp={id:m.AsiaGaza,name:"Asia/Gaza",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},Fp={id:m.AsiaHebron,name:"Asia/Hebron",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},kp={id:m.AsiaHoChiMinh,name:"Asia/Ho_Chi_Minh",offset:n.UTC_PLUS_7,timezone:t.IndochinaTime},Mp={id:m.AsiaHongKong,name:"Asia/Hong_Kong",offset:n.UTC_PLUS_8,timezone:t.HongKongTime},Lp={id:m.AsiaHovd,name:"Asia/Hovd",offset:n.UTC_PLUS_7,timezone:t.HovdTime},wp={id:m.AsiaIrkutsk,name:"Asia/Irkutsk",offset:n.UTC_PLUS_8,timezone:t.IrkutskTime},Gp={id:m.AsiaJakarta,name:"Asia/Jakarta",offset:n.UTC_PLUS_7,timezone:t.WesternIndonesianTime},qp={id:m.AsiaJayapura,name:"Asia/Jayapura",offset:n.UTC_PLUS_9,timezone:t.JapanStandardTime},Kp={id:m.AsiaJerusalem,name:"Asia/Jerusalem",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},xp={id:m.AsiaKabul,name:"Asia/Kabul",offset:n.UTC_PLUS_4,timezone:t.AfghanistanTime},Op={id:m.AsiaKamchatka,name:"Asia/Kamchatka",offset:n.UTC_PLUS_12,timezone:t.KamchatkaTime},Hp={id:m.AsiaKarachi,name:"Asia/Karachi",offset:n.UTC_PLUS_5,timezone:t.PakistanStandardTime},jp={id:m.AsiaKathmandu,name:"Asia/Kathmandu",offset:n.UTC_PLUS_5,timezone:t.NepalTime},Wp={id:m.AsiaKhandyga,name:"Asia/Khandyga",offset:n.UTC_PLUS_9,timezone:t.YakutskTime},Vp={id:m.AsiaKolkata,name:"Asia/Kolkata",offset:n.UTC_PLUS_5,timezone:t.IndianStandardTime},zp={id:m.AsiaKrasnoyarsk,name:"Asia/Krasnoyarsk",offset:n.UTC_PLUS_7,timezone:t.KrasnoyarskTime},Rp={id:m.AsiaKualaLumpur,name:"Asia/Kuala_Lumpur",offset:n.UTC_PLUS_8,timezone:t.MalaysiaStandardTime},Jp={id:m.AsiaKuching,name:"Asia/Kuching",offset:n.UTC_PLUS_8,timezone:t.MalaysiaStandardTime},Yp={id:m.AsiaKuwait,name:"Asia/Kuwait",offset:n.UTC_PLUS_3,timezone:t.ArabiaStandardTime},Zp={id:m.AsiaMacau,name:"Asia/Macau",offset:n.UTC_PLUS_8,timezone:t.ChinaStandardTime},$p={id:m.AsiaMagadan,name:"Asia/Magadan",offset:n.UTC_PLUS_11,timezone:t.MagadanTime},Qp={id:m.AsiaMakassar,name:"Asia/Makassar",offset:n.UTC_PLUS_8,timezone:t.MalaysiaTime},Xp={id:m.AsiaManila,name:"Asia/Manila",offset:n.UTC_PLUS_8,timezone:t.PhilippineTime},Cp={id:m.AsiaMuscat,name:"Asia/Muscat",offset:n.UTC_PLUS_4,timezone:t.GulfStandardTime},aT={id:m.AsiaNovokuznetsk,name:"Asia/Novokuznetsk",offset:n.UTC_PLUS_6,timezone:t.NovosibirskTime},eT={id:m.AsiaNovosibirsk,name:"Asia/Novosibirsk",offset:n.UTC_PLUS_6,timezone:t.NovosibirskTime},uT={id:m.AsiaOmsk,name:"Asia/Omsk",offset:n.UTC_PLUS_6,timezone:t.OmskTime},iT={id:m.AsiaOral,name:"Asia/Oral",offset:n.UTC_PLUS_5,timezone:t.OralTime},sT={id:m.AsiaPhnomPenh,name:"Asia/Phnom_Penh",offset:n.UTC_PLUS_7,timezone:t.IndochinaTime},nT={id:m.AsiaPontianak,name:"Asia/Pontianak",offset:n.UTC_PLUS_7,timezone:t.WesternIndonesianTime},rT={id:m.AsiaPyongyang,name:"Asia/Pyongyang",offset:n.UTC_PLUS_9,timezone:t.KoreaStandardTime},tT={id:m.AsiaQatar,name:"Asia/Qatar",offset:n.UTC_PLUS_3,timezone:t.ArabiaStandardTime},lT={id:m.AsiaQyzylorda,name:"Asia/Qyzylorda",offset:n.UTC_PLUS_5,timezone:t.WestKazakhstanTime},mT={id:m.AsiaRangoon,name:"Asia/Rangoon",offset:n.UTC_PLUS_6,timezone:t.MyanmarStandardTime},cT={id:m.AsiaRiyadh,name:"Asia/Riyadh",offset:n.UTC_PLUS_3,timezone:t.ArabiaStandardTime},oT={id:m.AsiaSakhalin,name:"Asia/Sakhalin",offset:n.UTC_PLUS_11,timezone:t.SakhalinIslandTime},AT={id:m.AsiaSamarkand,name:"Asia/Samarkand",offset:n.UTC_PLUS_5,timezone:t.UzbekistanTime},fT={id:m.AsiaSeoul,name:"Asia/Seoul",offset:n.UTC_PLUS_9,timezone:t.KoreaStandardTime},dT={id:m.AsiaShanghai,name:"Asia/Shanghai",offset:n.UTC_PLUS_8,timezone:t.ChinaStandardTime},IT={id:m.AsiaSingapore,name:"Asia/Singapore",offset:n.UTC_PLUS_8,timezone:t.SingaporeStandardTime},_T={id:m.AsiaSrednekolymsk,name:"Asia/Srednekolymsk",offset:n.UTC_PLUS_11,timezone:t.SrednekolymskTime},gT={id:m.AsiaTaipei,name:"Asia/Taipei",offset:n.UTC_PLUS_8,timezone:t.ChinaStandardTime},hT={id:m.AsiaTashkent,name:"Asia/Tashkent",offset:n.UTC_PLUS_5,timezone:t.UzbekistanTime},ST={id:m.AsiaTbilisi,name:"Asia/Tbilisi",offset:n.UTC_PLUS_4,timezone:t.GeorgiaStandardTime},ET={id:m.AsiaTehran,name:"Asia/Tehran",offset:n.UTC_PLUS_3,timezone:t.IranStandardTime},pT={id:m.AsiaThimphu,name:"Asia/Thimphu",offset:n.UTC_PLUS_6,timezone:t.BhutanTime},TT={id:m.AsiaTokyo,name:"Asia/Tokyo",offset:n.UTC_PLUS_9,timezone:t.JapanStandardTime},vT={id:m.AsiaTomsk,name:"Asia/Tomsk",offset:n.UTC_PLUS_6,timezone:t.KrasnoyarskTime},bT={id:m.AsiaUlaanbaatar,name:"Asia/Ulaanbaatar",offset:n.UTC_PLUS_8,timezone:t.UlaanbaatarStandardTime},BT={id:m.AsiaUrumqi,name:"Asia/Urumqi",offset:n.UTC_PLUS_8,timezone:t.ChinaStandardTime},UT={id:m.AsiaUstNera,name:"Asia/Ust-Nera",offset:n.UTC_PLUS_10,timezone:t.VladivostokTime},NT={id:m.AsiaVientiane,name:"Asia/Vientiane",offset:n.UTC_PLUS_7,timezone:t.IndochinaTime},DT={id:m.AsiaVladivostok,name:"Asia/Vladivostok",offset:n.UTC_PLUS_10,timezone:t.VladivostokTime},yT={id:m.AsiaYakutsk,name:"Asia/Yakutsk",offset:n.UTC_PLUS_9,timezone:t.YakutskTime},PT={id:m.AsiaYekaterinburg,name:"Asia/Yekaterinburg",offset:n.UTC_PLUS_5,timezone:t.YekaterinburgTime},FT={id:m.AsiaYerevan,name:"Asia/Yerevan",offset:n.UTC_PLUS_4,timezone:t.ArmeniaTime},kT={id:m.AtlanticAzores,name:"Atlantic/Azores",offset:n.UTC_MINUS_1,timezone:t.AzoresStandardTime},MT={id:m.AtlanticBermuda,name:"Atlantic/Bermuda",offset:n.UTC_MINUS_4,timezone:t.AtlanticStandardTime},LT={id:m.AtlanticCanary,name:"Atlantic/Canary",offset:n.UTC_MINUS_1,timezone:t.WesternEuropeanTime},wT={id:m.AtlanticCapeVerde,name:"Atlantic/Cape_Verde",offset:n.UTC_0,timezone:t.CapeVerdeTime},GT={id:m.AtlanticFaroe,name:"Atlantic/Faroe",offset:n.UTC_0,timezone:t.GreenwichMeanTime},qT={id:m.AtlanticMadeira,name:"Atlantic/Madeira",offset:n.UTC_0,timezone:t.WesternEuropeanTime},KT={id:m.AtlanticReykjavik,name:"Atlantic/Reykjavik",offset:n.UTC_0,timezone:t.GreenwichMeanTime},xT={id:m.AtlanticSouthGeorgia,name:"Atlantic/South_Georgia",offset:n.UTC_0,timezone:t.CoordinatedUniversalTime},OT={id:m.AtlanticStHelena,name:"Atlantic/St_Helena",offset:n.UTC_0,timezone:t.GreenwichMeanTime},HT={id:m.AtlanticStanley,name:"Atlantic/Stanley",offset:n.UTC_0,timezone:t.FalklandIslandsTime},jT={id:m.AustraliaAdelaide,name:"Australia/Adelaide",offset:n.UTC_PLUS_9_30,timezone:t.AustralianCentralStandardTime},WT={id:m.AustraliaBrisbane,name:"Australia/Brisbane",offset:n.UTC_PLUS_10,timezone:t.AustralianEasternStandardTime},VT={id:m.AustraliaBrokenHill,name:"Australia/Broken_Hill",offset:n.UTC_PLUS_9_30,timezone:t.AustralianCentralStandardTime},zT={id:m.AustraliaCanberra,name:"Australia/Canberra",offset:n.UTC_PLUS_10,timezone:t.AustralianEasternStandardTime},RT={id:m.AustraliaCurrie,name:"Australia/Currie",offset:n.UTC_PLUS_10,timezone:t.AustralianEasternStandardTime},JT={id:m.AustraliaDarwin,name:"Australia/Darwin",offset:n.UTC_PLUS_9_30,timezone:t.AustralianCentralStandardTime},YT={id:m.AustraliaEucla,name:"Australia/Eucla",offset:n.UTC_PLUS_8_45,timezone:t.AustralianCentralWesternStandardTime},ZT={id:m.AustraliaHobart,name:"Australia/Hobart",offset:n.UTC_PLUS_10,timezone:t.AustralianEasternStandardTime},$T={id:m.AustraliaLindeman,name:"Australia/Lindeman",offset:n.UTC_PLUS_10,timezone:t.AustralianEasternStandardTime},QT={id:m.AustraliaLordHowe,name:"Australia/Lord_Howe",offset:n.UTC_PLUS_10_30,timezone:t.LordHoweStandardTime},XT={id:m.AustraliaMelbourne,name:"Australia/Melbourne",offset:n.UTC_PLUS_10,timezone:t.AustralianEasternStandardTime},CT={id:m.AustraliaPerth,name:"Australia/Perth",offset:n.UTC_PLUS_8,timezone:t.AustralianWesternStandardTime},a3={id:m.AustraliaSydney,name:"Australia/Sydney",offset:n.UTC_PLUS_10,timezone:t.AustralianEasternStandardTime},e3={id:m.EuropeAmsterdam,name:"Europe/Amsterdam",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},u3={id:m.EuropeAndorra,name:"Europe/Andorra",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},i3={id:m.EuropeAthens,name:"Europe/Athens",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},s3={id:m.EuropeBelgrade,name:"Europe/Belgrade",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},n3={id:m.EuropeBerlin,name:"Europe/Berlin",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},r3={id:m.EuropeBratislava,name:"Europe/Bratislava",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},t3={id:m.EuropeBrussels,name:"Europe/Brussels",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},l3={id:m.EuropeBucharest,name:"Europe/Bucharest",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},m3={id:m.EuropeBudapest,name:"Europe/Budapest",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},c3={id:m.EuropeBusingen,name:"Europe/Busingen",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},o3={id:m.EuropeChisinau,name:"Europe/Chisinau",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},A3={id:m.EuropeCopenhagen,name:"Europe/Copenhagen",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},f3={id:m.EuropeDublin,name:"Europe/Dublin",offset:n.UTC_0,timezone:t.GreenwichMeanTime},d3={id:m.EuropeGibraltar,name:"Europe/Gibraltar",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},I3={id:m.EuropeGuernsey,name:"Europe/Guernsey",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},_3={id:m.EuropeHelsinki,name:"Europe/Helsinki",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},g3={id:m.EuropeIsleOfMan,name:"Europe/Isle_of_Man",offset:n.UTC_0,timezone:t.GreenwichMeanTime},h3={id:m.EuropeIstanbul,name:"Europe/Istanbul",offset:n.UTC_PLUS_3,timezone:t.EasternEuropeanTime},S3={id:m.EuropeJersey,name:"Europe/Jersey",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},E3={id:m.EuropeKaliningrad,name:"Europe/Kaliningrad",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},p3={id:m.EuropeKiev,name:"Europe/Kiev",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},T3={id:m.EuropeLisbon,name:"Europe/Lisbon",offset:n.UTC_0,timezone:t.GreenwichMeanTime},v3={id:m.EuropeLjubljana,name:"Europe/Ljubljana",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},b3={id:m.EuropeLondon,name:"Europe/London",offset:n.UTC_0,timezone:t.GreenwichMeanTime},B3={id:m.EuropeLuxembourg,name:"Europe/Luxembourg",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},U3={id:m.EuropeMadrid,name:"Europe/Madrid",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},N3={id:m.EuropeMalta,name:"Europe/Malta",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},D3={id:m.EuropeMariehamn,name:"Europe/Mariehamn",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},y3={id:m.EuropeMinsk,name:"Europe/Minsk",offset:n.UTC_PLUS_3,timezone:t.EasternEuropeanTime},P3={id:m.EuropeMonaco,name:"Europe/Monaco",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},F3={id:m.EuropeMoscow,name:"Europe/Moscow",offset:n.UTC_PLUS_3,timezone:t.EasternEuropeanTime},k3={id:m.EuropeOslo,name:"Europe/Oslo",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},M3={id:m.EuropeParis,name:"Europe/Paris",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},L3={id:m.EuropePodgorica,name:"Europe/Podgorica",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},w3={id:m.EuropePrague,name:"Europe/Prague",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},G3={id:m.EuropeRiga,name:"Europe/Riga",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},q3={id:m.EuropeRome,name:"Europe/Rome",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},K3={id:m.EuropeSamara,name:"Europe/Samara",offset:n.UTC_PLUS_4,timezone:t.EasternEuropeanTime},x3={id:m.EuropeSanMarino,name:"Europe/San_Marino",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},O3={id:m.EuropeSarajevo,name:"Europe/Sarajevo",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},H3={id:m.EuropeSimferopol,name:"Europe/Simferopol",offset:n.UTC_PLUS_3,timezone:t.EasternEuropeanTime},j3={id:m.EuropeSkopje,name:"Europe/Skopje",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},W3={id:m.EuropeSofia,name:"Europe/Sofia",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},V3={id:m.EuropeStockholm,name:"Europe/Stockholm",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},z3={id:m.EuropeTallinn,name:"Europe/Tallinn",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},R3={id:m.EuropeTirane,name:"Europe/Tirane",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},J3={id:m.EuropeUzhgorod,name:"Europe/Uzhgorod",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},Y3={id:m.EuropeVaduz,name:"Europe/Vaduz",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},Z3={id:m.EuropeVatican,name:"Europe/Vatican",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},$3={id:m.EuropeVienna,name:"Europe/Vienna",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},Q3={id:m.EuropeVilnius,name:"Europe/Vilnius",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},X3={id:m.EuropeVolgograd,name:"Europe/Volgograd",offset:n.UTC_PLUS_4,timezone:t.EasternEuropeanTime},C3={id:m.EuropeWarsaw,name:"Europe/Warsaw",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},av={id:m.EuropeZagreb,name:"Europe/Zagreb",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},ev={id:m.EuropeZaporozhye,name:"Europe/Zaporozhye",offset:n.UTC_PLUS_2,timezone:t.EasternEuropeanTime},uv={id:m.EuropeZurich,name:"Europe/Zurich",offset:n.UTC_PLUS_1,timezone:t.CentralEuropeanTime},iv={id:m.IndianAntananarivo,name:"Indian/Antananarivo",offset:n.UTC_PLUS_3,timezone:t.EastAfricaTime},sv={id:m.IndianChagos,name:"Indian/Chagos",offset:n.UTC_PLUS_6,timezone:t.IndianOceanTime},nv={id:m.IndianChristmas,name:"Indian/Christmas",offset:n.UTC_PLUS_7,timezone:t.ChristmasIslandTime},rv={id:m.IndianCocos,name:"Indian/Cocos",offset:n.UTC_PLUS_6,timezone:t.CocosIslandsTime},tv={id:m.IndianComoro,name:"Indian/Comoro",offset:n.UTC_PLUS_3,timezone:t.EastAfricaTime},lv={id:m.IndianKerguelen,name:"Indian/Kerguelen",offset:n.UTC_PLUS_5,timezone:t.FrenchSouthernAndAntarcticTime},mv={id:m.IndianMahe,name:"Indian/Mahe",offset:n.UTC_PLUS_4,timezone:t.SeychellesTime},cv={id:m.IndianMaldives,name:"Indian/Maldives",offset:n.UTC_PLUS_5,timezone:t.MaldivesTime},ov={id:m.IndianMauritius,name:"Indian/Mauritius",offset:n.UTC_PLUS_4,timezone:t.MauritiusTime},Av={id:m.IndianMayotte,name:"Indian/Mayotte",offset:n.UTC_PLUS_3,timezone:t.EastAfricaTime},fv={id:m.IndianReunion,name:"Indian/Reunion",offset:n.UTC_PLUS_4,timezone:t.ReunionTime},dv={id:m.PacificApia,name:"Pacific/Apia",offset:n.UTC_PLUS_13,timezone:t.SamoaStandardTime},Iv={id:m.PacificAuckland,name:"Pacific/Auckland",offset:n.UTC_PLUS_13,timezone:t.NewZealandStandardTime},_v={id:m.PacificChatham,name:"Pacific/Chatham",offset:n.UTC_PLUS_13,timezone:t.ChathamStandardTime},gv={id:m.PacificEaster,name:"Pacific/Easter",offset:n.UTC_PLUS_6,timezone:t.EasterIslandStandardTime},hv={id:m.PacificEfate,name:"Pacific/Efate",offset:n.UTC_PLUS_11,timezone:t.VanuatuTime},Sv={id:m.PacificEnderbury,name:"Pacific/Enderbury",offset:n.UTC_PLUS_13,timezone:t.TongaTime},Ev={id:m.PacificFakaofo,name:"Pacific/Fakaofo",offset:n.UTC_PLUS_13,timezone:t.TongaTime},pv={id:m.PacificFiji,name:"Pacific/Fiji",offset:n.UTC_PLUS_12,timezone:t.FijiTime},Tv={id:m.PacificFunafuti,name:"Pacific/Funafuti",offset:n.UTC_PLUS_12,timezone:t.TuvaluTime},vv={id:m.PacificGalapagos,name:"Pacific/Galapagos",offset:n.UTC_PLUS_6,timezone:t.GalapagosTime},bv={id:m.PacificGambier,name:"Pacific/Gambier",offset:n.UTC_PLUS_9,timezone:t.GambierIslandTime},Bv={id:m.PacificGuadalcanal,name:"Pacific/Guadalcanal",offset:n.UTC_PLUS_11,timezone:t.SolomonIslandsTime},Uv={id:m.PacificGuam,name:"Pacific/Guam",offset:n.UTC_PLUS_10,timezone:t.ChamorroStandardTime},Nv={id:m.PacificHonolulu,name:"Pacific/Honolulu",offset:n.UTC_PLUS_10,timezone:t.HawaiiAleutianStandardTime},Dv={id:m.PacificJohnston,name:"Pacific/Johnston",offset:n.UTC_PLUS_10,timezone:t.HawaiiAleutianStandardTime},yv={id:m.PacificKiritimati,name:"Pacific/Kiritimati",offset:n.UTC_PLUS_14,timezone:t.LineIslandsTime},Pv={id:m.PacificKosrae,name:"Pacific/Kosrae",offset:n.UTC_PLUS_11,timezone:t.KosraeTime},Fv={id:m.PacificKwajalein,name:"Pacific/Kwajalein",offset:n.UTC_PLUS_12,timezone:t.MarshallIslandsTime},kv={id:m.PacificMajuro,name:"Pacific/Majuro",offset:n.UTC_PLUS_12,timezone:t.MarshallIslandsTime},Mv={id:m.PacificMarquesas,name:"Pacific/Marquesas",offset:n.UTC_PLUS_9,timezone:t.MarquesasIslandsTime},Lv={id:m.PacificMidway,name:"Pacific/Midway",offset:n.UTC_PLUS_11,timezone:t.SamoaStandardTime},wv={id:m.PacificNauru,name:"Pacific/Nauru",offset:n.UTC_PLUS_12,timezone:t.NauruTime},Gv={id:m.PacificNiue,name:"Pacific/Niue",offset:n.UTC_PLUS_11,timezone:t.NiueTime},qv={id:m.PacificNorfolk,name:"Pacific/Norfolk",offset:n.UTC_PLUS_11,timezone:t.NorfolkIslandTime},Kv={id:m.PacificNoumea,name:"Pacific/Noumea",offset:n.UTC_PLUS_11,timezone:t.NewCaledoniaTime},xv={id:m.PacificPagoPago,name:"Pacific/Pago_Pago",offset:n.UTC_PLUS_11,timezone:t.SamoaStandardTime},Ov={id:m.PacificPalau,name:"Pacific/Palau",offset:n.UTC_PLUS_9,timezone:t.PalauTime},Hv={id:m.PacificPitcairn,name:"Pacific/Pitcairn",offset:n.UTC_PLUS_8,timezone:t.PitcairnTime},jv={id:m.PacificPonape,name:"Pacific/Ponape",offset:n.UTC_PLUS_11,timezone:t.PohnpeiStandardTime},Wv={id:m.PacificPortMoresby,name:"Pacific/Port_Moresby",offset:n.UTC_PLUS_10,timezone:t.PapuaNewGuineaTime},Vv={id:m.PacificRarotonga,name:"Pacific/Rarotonga",offset:n.UTC_PLUS_10,timezone:t.CookIslandTime},zv={id:m.PacificSaipan,name:"Pacific/Saipan",offset:n.UTC_PLUS_10,timezone:t.ChamorroStandardTime},Rv={id:m.PacificTahiti,name:"Pacific/Tahiti",offset:n.UTC_PLUS_10,timezone:t.TahitiTime},Jv={id:m.PacificTarawa,name:"Pacific/Tarawa",offset:n.UTC_PLUS_12,timezone:t.GilbertIslandTime},Yv={id:m.PacificTongatapu,name:"Pacific/Tongatapu",offset:n.UTC_PLUS_13,timezone:t.TongaTime},Zv={id:m.PacificChuuk,name:"Pacific/Chuuk",offset:n.UTC_PLUS_10,timezone:t.ChuukTime},$v={id:m.PacificPohnpei,name:"Pacific/Pohnpei",offset:n.UTC_PLUS_11,timezone:t.PohnpeiStandardTime},Qv={id:m.PacificYap,name:"Pacific/Yap",offset:n.UTC_PLUS_10,timezone:t.ChuukTime};var Q=(a=>(a.CJS="cjs",a.ESM="esm",a.IIFE="iife",a.UMD="umd",a))(Q||{}),ee=(a=>(a.ES5="es5",a.ES6="es6",a.ES2015="es2015",a.ES2016="es2016",a.ES2017="es2017",a.ES2018="es2018",a.ES2019="es2019",a.ES2020="es2020",a.ES2021="es2021",a.ES2022="es2022",a.ESNext="esnext",a.Latest="latest",a))(ee||{}),Ha=(a=>(a.ESBuild="esbuild",a.Vite="vite",a))(Ha||{}),ue=(a=>(a.Browser="browser",a.Node="node",a))(ue||{});var ie=(a=>(a.Development="development",a.QA="qa",a.Preview="preview",a.Production="production",a))(ie||{});var _a=(a=>(a.DesktopApplication="desktop-application",a.MobileApplication="mobile-application",a.WebApplication="web-application",a.CLIApplication="cli-application",a.Library="library",a.WebService="web-service",a))(_a||{});var i=(a=>(a.Contains="contains",a.HasCharacterCount="has-character-count",a.HasNumberCount="has-number-count",a.HasLetterCount="has-letter-count",a.HasLowercaseCount="has-lowercase-count",a.HasSpacesCount="has-spaces-count",a.HasSymbolCount="has-symbol-count",a.HasUppercaseCount="has-uppercase-count",a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsAirport="is-airport",a.IsAlpha="is-alpha",a.IsAlphanumeric="is-alphanumeric",a.IsAlgorithmHash="is-algorithm-hash",a.IsAscii="is-ascii",a.IsBase64="is-base-64",a.IsBefore="is-before",a.IsBeforeOrAfter="is-before-or-after",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsBIC="is-bic",a.IsBitcoinAddress="is-bitcoin-address",a.IsBoolean="is-boolean",a.IsColor="is-color",a.IsComplexEnough="is-complex-enough",a.IsCountry="is-country",a.IsCreditCard="is-credit-card",a.IsCurrency="is-currency",a.IsDataURI="is-data-uri",a.IsDate="is-date",a.IsDateRange="is-date-range",a.IsDateTime="is-date-time",a.IsDayOfMonth="is-day-of-month",a.IsDecimal="is-decimal",a.IsDivisibleBy="is-divisible-by",a.IsDomainName="is-domain-name",a.IsEmailAddress="is-email-address",a.IsEthereumAddress="is-ethereum-address",a.IsEAN="is-ean",a.IsEIN="is-ein",a.IsEqual="is-equal",a.IsEvenNumber="is-even-number",a.IsFloat="is-float",a.IsIBAN="is-iban",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsHSLColor="is-hsl-color",a.IsHexColor="is-hex-color",a.IsHexadecimal="is-hexadecimal",a.IsIdentityCardCode="is-identity-card-code",a.IsIMEI="is-imei",a.IsInIPAddressRange="is-in-ip-address-range",a.IsInList="is-in-list",a.IsInTheLast="is-in-the-last",a.IsInteger="is-integer",a.IsIPAddress="is-ip-address",a.IsIPAddressRange="is-ip-address-range",a.IsISBN="is-isbn",a.IsISIN="is-isin",a.IsISMN="is-ismn",a.IsISRC="is-isrc",a.IsISSN="is-issn",a.IsISO4217="is-iso-4217",a.IsISO8601="is-iso-8601",a.IsISO31661Alpha2="is-iso-31661-alpha-2",a.IsISO31661Alpha3="is-iso-31661-alpha-3",a.IsJSON="is-json",a.IsLanguage="is-language",a.IsLatitude="is-latitude",a.IsLongitude="is-longitude",a.IsLengthEqual="is-length-equal",a.IsLengthGreaterThan="is-length-greater-than",a.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",a.IsLengthLessThan="is-length-less-than",a.IsLengthLessThanOrEqual="is-length-less-than-or-equal",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsLicensePlateNumber="is-license-plate-number",a.IsLowercase="is-lowercase",a.IsOctal="is-octal",a.IsMACAddress="is-mac-address",a.IsMD5="is-md5",a.IsMagnetURI="is-magnet-uri",a.IsMarkdown="is-markdown",a.IsMimeType="is-mime-type",a.IsMonth="is-month",a.IsNegativeNumber="is-negative-number",a.IsNotDate="is-not-date",a.IsNotEqual="is-not-equal",a.IsNotInIPAddressRange="is-not-in-ip-address-range",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsNotRegexMatch="is-not-regex-match",a.IsNotToday="is-not-today",a.IsNumber="is-number",a.IsNumeric="is-numeric",a.IsOddNumber="is-odd-number",a.IsPassportNumber="is-passport-number",a.IsPhoneNumber="is-phone-number",a.IsPort="is-port",a.IsPositiveNumber="is-positive-number",a.IsPostalCode="is-postal-code",a.IsProvince="is-province",a.IsRGBColor="is-rgb-color",a.IsRegexMatch="is-regex-match",a.IsRequired="is-required",a.IsSemanticVersion="is-semantic-version",a.IsSlug="is-slug",a.IsSSN="is-ssn",a.IsState="is-state",a.IsStreetAddress="is-street-address",a.IsString="is-string",a.IsStrongPassword="is-strong-password",a.IsTags="is-tags",a.IsTaxIDNumber="is-tax-id-number",a.IsThisMonth="is-this-month",a.IsThisQuarter="is-this-quarter",a.IsThisWeek="is-this-week",a.IsThisWeekend="is-this-weekend",a.IsThisYear="is-this-year",a.IsTime="is-time",a.IsTimeOfDay="is-time-of-day",a.IsTimeRange="is-time-range",a.IsToday="is-today",a.IsURL="is-url",a.IsUUID="is-uuid",a.IsUppercase="is-uppercase",a.IsUsernameAvailable="is-username-available",a.IsValidStreetAddress="is-valid-street-address",a.IsVATIDNumber="is-vat-id-number",a.IsWeekday="is-weekday",a.IsWeekend="is-weekend",a.IsYear="is-year",a))(i||{});var gr=(a=>(a[a.IsHSLColor=i.IsHSLColor]="IsHSLColor",a[a.IsHexColor=i.IsHexColor]="IsHexColor",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsRGBColor=i.IsRGBColor]="IsRGBColor",a[a.IsString=i.IsString]="IsString",a))(gr||{}),hr=(a=>(a[a.IsAlgorithmHash=i.IsAlgorithmHash]="IsAlgorithmHash",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(hr||{}),Sr=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsSemanticVersion=i.IsSemanticVersion]="IsSemanticVersion",a[a.IsString=i.IsString]="IsString",a))(Sr||{}),Er=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a[a.IsUUID=i.IsUUID]="IsUUID",a))(Er||{}),pr=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsMD5=i.IsMD5]="IsMD5",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(pr||{}),Tr=(a=>(a[a.IsBoolean=i.IsBoolean]="IsBoolean",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(Tr||{}),vr=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsAfterOrEqual=i.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=i.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsDate=i.IsDate]="IsDate",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotDate=i.IsNotDate]="IsNotDate",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNotToday=i.IsNotToday]="IsNotToday",a[a.IsThisWeek=i.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=i.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=i.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=i.IsThisYear]="IsThisYear",a[a.IsToday=i.IsToday]="IsToday",a[a.IsWeekend=i.IsWeekend]="IsWeekend",a))(vr||{}),br=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=i.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsDate=i.IsDate]="IsDate",a[a.IsDateRange=i.IsDateRange]="IsDateRange",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(br||{}),Br=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsAfterOrEqual=i.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=i.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsDate=i.IsDate]="IsDate",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotDate=i.IsNotDate]="IsNotDate",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNotToday=i.IsNotToday]="IsNotToday",a[a.IsThisWeek=i.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=i.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=i.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=i.IsThisYear]="IsThisYear",a[a.IsToday=i.IsToday]="IsToday",a[a.IsWeekend=i.IsWeekend]="IsWeekend",a))(Br||{}),Ur=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsAfterOrEqual=i.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=i.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsDayOfMonth=i.IsDayOfMonth]="IsDayOfMonth",a[a.IsEvenNumber=i.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=i.IsInteger]="IsInteger",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsOddNumber=i.IsOddNumber]="IsOddNumber",a[a.IsToday=i.IsToday]="IsToday",a[a.IsWeekday=i.IsWeekday]="IsWeekday",a[a.IsWeekend=i.IsWeekend]="IsWeekend",a))(Ur||{}),Nr=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsAfterOrEqual=i.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=i.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsEvenNumber=i.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=i.IsInteger]="IsInteger",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMonth=i.IsMonth]="IsMonth",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsOddNumber=i.IsOddNumber]="IsOddNumber",a[a.IsThisMonth=i.IsThisMonth]="IsThisMonth",a))(Nr||{}),Dr=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsAfterOrEqual=i.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=i.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsTime=i.IsTime]="IsTime",a))(Dr||{}),yr=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=i.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsTime=i.IsTime]="IsTime",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsTimeRange=i.IsTimeRange]="IsTimeRange",a))(yr||{}),Pr=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=i.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsTimeOfDay=i.IsTimeOfDay]="IsTimeOfDay",a[a.IsTimeRange=i.IsTimeRange]="IsTimeRange",a))(Pr||{}),Fr=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsAfterOrEqual=i.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=i.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsEvenNumber=i.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsOddNumber=i.IsOddNumber]="IsOddNumber",a[a.IsWeekday=i.IsWeekday]="IsWeekday",a[a.IsWeekend=i.IsWeekend]="IsWeekend",a))(Fr||{}),kr=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsAfterOrEqual=i.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=i.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsEvenNumber=i.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=i.IsInteger]="IsInteger",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsOddNumber=i.IsOddNumber]="IsOddNumber",a[a.IsThisYear=i.IsThisYear]="IsThisYear",a[a.IsYear=i.IsYear]="IsYear",a))(kr||{}),Mr=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsHexadecimal=i.IsHexadecimal]="IsHexadecimal",a[a.IsLengthEqual=i.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=i.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=i.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=i.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=i.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(Mr||{}),Lr=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsJSON=i.IsJSON]="IsJSON",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(Lr||{}),wr=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsMarkdown=i.IsMarkdown]="IsMarkdown",a[a.IsString=i.IsString]="IsString",a))(wr||{}),Gr=(a=>(a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsCurrency=i.IsCurrency]="IsCurrency",a[a.IsDecimal=i.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=i.IsDivisibleBy]="IsDivisibleBy",a[a.IsEvenNumber=i.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=i.IsFloat]="IsFloat",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=i.IsInteger]="IsInteger",a[a.IsISO8601=i.IsISO8601]="IsISO8601",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNegativeNumber=i.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsOddNumber=i.IsOddNumber]="IsOddNumber",a[a.IsPositiveNumber=i.IsPositiveNumber]="IsPositiveNumber",a))(Gr||{}),qr=(a=>(a[a.IsBitcoinAddress=i.IsBitcoinAddress]="IsBitcoinAddress",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(qr||{}),Kr=(a=>(a[a.IsEthereumAddress=i.IsEthereumAddress]="IsEthereumAddress",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(Kr||{}),xr=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsJSON=i.IsJSON]="IsJSON",a[a.IsLanguage=i.IsLanguage]="IsLanguage",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(xr||{}),Or=(a=>(a[a.IsAlpha=i.IsAlpha]="IsAlpha",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(Or||{}),Hr=(a=>(a[a.IsAlpha=i.IsAlpha]="IsAlpha",a[a.IsCountry=i.IsCountry]="IsCountry",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(Hr||{}),jr=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsFloat=i.IsFloat]="IsFloat",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumeric=i.IsNumeric]="IsNumeric",a))(jr||{}),Wr=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsFloat=i.IsFloat]="IsFloat",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumeric=i.IsNumeric]="IsNumeric",a))(Wr||{}),Vr=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsPostalCode=i.IsPostalCode]="IsPostalCode",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(Vr||{}),zr=(a=>(a[a.IsAlpha=i.IsAlpha]="IsAlpha",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsProvince=i.IsProvince]="IsProvince",a[a.IsString=i.IsString]="IsString",a))(zr||{}),Rr=(a=>(a[a.IsAlpha=i.IsAlpha]="IsAlpha",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsState=i.IsState]="IsState",a[a.IsString=i.IsString]="IsString",a))(Rr||{}),Jr=(a=>(a[a.IsAlphanumeric=i.IsAlphanumeric]="IsAlphanumeric",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a[a.IsStreetAddress=i.IsStreetAddress]="IsStreetAddress",a))(Jr||{}),Yr=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(Yr||{}),Zr=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(Zr||{}),$r=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsDataURI=i.IsDataURI]="IsDataURI",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))($r||{}),Qr=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsDomainName=i.IsDomainName]="IsDomainName",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(Qr||{}),Xr=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEmailAddress=i.IsEmailAddress]="IsEmailAddress",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(Xr||{}),Cr=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsIPAddress=i.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=i.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=i.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(Cr||{}),at=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsIPAddressRange=i.IsIPAddressRange]="IsIPAddressRange",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=i.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(at||{}),et=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=i.IsInteger]="IsInteger",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a))(et||{}),ut=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsMACAddress=i.IsMACAddress]="IsMACAddress",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(ut||{}),it=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsMagnetURI=i.IsMagnetURI]="IsMagnetURI",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(it||{}),st=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsMimeType=i.IsMimeType]="IsMimeType",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(st||{}),nt=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a[a.IsSlug=i.IsSlug]="IsSlug",a))(nt||{}),rt=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a[a.IsURL=i.IsURL]="IsURL",a))(rt||{}),tt=(a=>(a[a.IsAfter=i.IsAfter]="IsAfter",a[a.IsAfterOrEqual=i.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=i.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=i.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=i.IsBetween]="IsBetween",a[a.IsDecimal=i.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=i.IsDivisibleBy]="IsDivisibleBy",a[a.IsEAN=i.IsEAN]="IsEAN",a[a.IsEIN=i.IsEIN]="IsEIN",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsEvenNumber=i.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=i.IsFloat]="IsFloat",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInt=i.IsInteger]="IsInt",a[a.IsISBN=i.IsISBN]="IsISBN",a[a.IsISMN=i.IsISMN]="IsISMN",a[a.IsISSN=i.IsISSN]="IsISSN",a[a.IsLatitude=i.IsLatitude]="IsLatitude",a[a.IsLongitude=i.IsLongitude]="IsLongitude",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMACAddress=i.IsMACAddress]="IsMACAddress",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsNegativeNumber=i.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsOddNumber=i.IsOddNumber]="IsOddNumber",a[a.IsPassportNumber=i.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=i.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=i.IsPort]="IsPort",a[a.IsPositiveNumber=i.IsPositiveNumber]="IsPositiveNumber",a[a.IsPostalCode=i.IsPostalCode]="IsPostalCode",a[a.IsSemanticVersion=i.IsSemanticVersion]="IsSemanticVersion",a[a.IsSSN=i.IsSSN]="IsSSN",a[a.IsTaxIDNumber=i.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsUUID=i.IsUUID]="IsUUID",a[a.IsVATIDNumber=i.IsVATIDNumber]="IsVATIDNumber",a))(tt||{}),lt=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsFloat=i.IsFloat]="IsFloat",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsNumeric=i.IsNumeric]="IsNumeric",a))(lt||{}),mt=(a=>(a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInteger=i.IsInteger]="IsInteger",a[a.IsGreaterThan=i.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=i.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=i.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=i.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsNumeric=i.IsNumeric]="IsNumeric",a))(mt||{}),ct=(a=>(a[a.IsCreditCard=i.IsCreditCard]="IsCreditCard",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsLengthEqual=i.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=i.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=i.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=i.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=i.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsRegexMatch=i.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=i.IsNotRegexMatch]="IsNotRegexMatch",a))(ct||{}),ot=(a=>(a[a.isEmailAddress=i.IsEmailAddress]="isEmailAddress",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsLengthEqual=i.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=i.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=i.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=i.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=i.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsRegexMatch=i.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=i.IsNotRegexMatch]="IsNotRegexMatch",a))(ot||{}),At=(a=>(a[a.IsLicensePlateNumber=i.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=i.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsString=i.IsString]="IsString",a[a.IsRegexMatch=i.IsRegexMatch]="IsRegexMatch",a))(At||{}),ft=(a=>(a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsPassportNumber=i.IsPassportNumber]="IsPassportNumber",a[a.IsString=i.IsString]="IsString",a[a.IsRegexMatch=i.IsRegexMatch]="IsRegexMatch",a))(ft||{}),dt=(a=>(a[a.IsComplexEnough=i.IsComplexEnough]="IsComplexEnough",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=i.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsLengthGreaterThan=i.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=i.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=i.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=i.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsStrongPassword=i.IsStrongPassword]="IsStrongPassword",a[a.IsString=i.IsString]="IsString",a[a.IsRegexMatch=i.IsRegexMatch]="IsRegexMatch",a))(dt||{}),It=(a=>(a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=i.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsPhoneNumber=i.IsPhoneNumber]="IsPhoneNumber",a[a.IsRegexMatch=i.IsRegexMatch]="IsRegexMatch",a))(It||{}),_t=(a=>(a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsSSN=i.IsSSN]="IsSSN",a[a.IsString=i.IsString]="IsString",a[a.IsRegexMatch=i.IsRegexMatch]="IsRegexMatch",a))(_t||{}),gt=(a=>(a[a.IsAirport=i.IsAirport]="IsAirport",a[a.IsAlpha=i.IsAlpha]="IsAlpha",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(gt||{}),ht=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsBIC=i.IsBIC]="IsBIC",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(ht||{}),St=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEAN=i.IsEAN]="IsEAN",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(St||{}),Et=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEIN=i.IsEIN]="IsEIN",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(Et||{}),pt=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsIBAN=i.IsIBAN]="IsIBAN",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(pt||{}),Tt=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsISBN=i.IsISBN]="IsISBN",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(Tt||{}),vt=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsISIN=i.IsISIN]="IsISIN",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(vt||{}),bt=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsISMN=i.IsISMN]="IsISMN",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(bt||{}),Bt=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsISSN=i.IsISSN]="IsISSN",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a))(Bt||{}),Ut=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a[a.IsTaxIDNumber=i.IsTaxIDNumber]="IsTaxIDNumber",a))(Ut||{}),Nt=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsInList=i.IsInList]="IsInList",a[a.IsNotEqual=i.IsNotEqual]="IsNotEqual",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsString=i.IsString]="IsString",a[a.IsVATIDNumber=i.IsVATIDNumber]="IsVATIDNumber",a))(Nt||{}),Dt=(a=>(a[a.Contains=i.Contains]="Contains",a[a.HasNumberCount=i.HasNumberCount]="HasNumberCount",a[a.HasLowercaseCount=i.HasLowercaseCount]="HasLowercaseCount",a[a.HasLetterCount=i.HasLetterCount]="HasLetterCount",a[a.HasSpacesCount=i.HasSpacesCount]="HasSpacesCount",a[a.HasSymbolCount=i.HasSymbolCount]="HasSymbolCount",a[a.HasUppercaseCount=i.HasUppercaseCount]="HasUppercaseCount",a[a.IsAlpha=i.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=i.IsAlphanumeric]="IsAlphanumeric",a[a.IsAscii=i.IsAscii]="IsAscii",a[a.IsBase64=i.IsBase64]="IsBase64",a[a.IsColor=i.IsColor]="IsColor",a[a.IsComplexEnough=i.IsComplexEnough]="IsComplexEnough",a[a.IsCreditCard=i.IsCreditCard]="IsCreditCard",a[a.IsDataURI=i.IsDataURI]="IsDataURI",a[a.IsDomainName=i.IsDomainName]="IsDomainName",a[a.IsEmailAddress=i.IsEmailAddress]="IsEmailAddress",a[a.IsEthereumAddress=i.IsEthereumAddress]="IsEthereumAddress",a[a.IsEAN=i.IsEAN]="IsEAN",a[a.IsEIN=i.IsEIN]="IsEIN",a[a.IsEqual=i.IsEqual]="IsEqual",a[a.IsIBAN=i.IsIBAN]="IsIBAN",a[a.IsHSLColor=i.IsHSLColor]="IsHSLColor",a[a.IsHexColor=i.IsHexColor]="IsHexColor",a[a.IsHexadecimal=i.IsHexadecimal]="IsHexadecimal",a[a.IsIdentityCardCode=i.IsIdentityCardCode]="IsIdentityCardCode",a[a.IsIMEI=i.IsIMEI]="IsIMEI",a[a.IsInList=i.IsInList]="IsInList",a[a.IsIPAddress=i.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=i.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsISBN=i.IsISBN]="IsISBN",a[a.IsISIN=i.IsISIN]="IsISIN",a[a.IsISMN=i.IsISMN]="IsISMN",a[a.IsISRC=i.IsISRC]="IsISRC",a[a.IsISSN=i.IsISSN]="IsISSN",a[a.IsLanguage=i.IsLanguage]="IsLanguage",a[a.IsLatitude=i.IsLatitude]="IsLatitude",a[a.IsLongitude=i.IsLongitude]="IsLongitude",a[a.IsLengthEqual=i.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=i.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=i.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=i.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=i.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsLicensePlateNumber=i.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsLowercase=i.IsLowercase]="IsLowercase",a[a.IsOctal=i.IsOctal]="IsOctal",a[a.IsMACAddress=i.IsMACAddress]="IsMACAddress",a[a.IsMD5=i.IsMD5]="IsMD5",a[a.IsMagnetURI=i.IsMagnetURI]="IsMagnetURI",a[a.IsMarkdown=i.IsMarkdown]="IsMarkdown",a[a.IsMimeType=i.IsMimeType]="IsMimeType",a[a.IsMonth=i.IsMonth]="IsMonth",a[a.IsNotInIPAddressRange=i.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNotNull=i.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=i.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=i.IsNumber]="IsNumber",a[a.IsNumeric=i.IsNumeric]="IsNumeric",a[a.IsPassportNumber=i.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=i.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=i.IsPort]="IsPort",a[a.IsPostalCode=i.IsPostalCode]="IsPostalCode",a[a.IsProvince=i.IsProvince]="IsProvince",a[a.IsRegexMatch=i.IsRegexMatch]="IsRegexMatch",a[a.IsSemanticVersion=i.IsSemanticVersion]="IsSemanticVersion",a[a.IsSlug=i.IsSlug]="IsSlug",a[a.IsSSN=i.IsSSN]="IsSSN",a[a.IsState=i.IsState]="IsState",a[a.IsStreetAddress=i.IsStreetAddress]="IsStreetAddress",a[a.IsString=i.IsString]="IsString",a[a.IsTaxIDNumber=i.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsURL=i.IsURL]="IsURL",a[a.IsUUID=i.IsUUID]="IsUUID",a[a.IsUppercase=i.IsUppercase]="IsUppercase",a[a.IsVATIDNumber=i.IsVATIDNumber]="IsVATIDNumber",a[a.IsWeekday=i.IsWeekday]="IsWeekday",a[a.IsWeekend=i.IsWeekend]="IsWeekend",a[a.IsYear=i.IsYear]="IsYear",a))(Dt||{}),yt=(a=>(a[a.Contains=i.Contains]="Contains",a[a.IsAlpha=i.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=i.IsAlphanumeric]="IsAlphanumeric",a[a.IsInList=i.IsInList]="IsInList",a[a.IsMarkdown=i.IsMarkdown]="IsMarkdown",a[a.IsNotInList=i.IsNotInList]="IsNotInList",a[a.IsNumeric=i.IsNumeric]="IsNumeric",a[a.IsLowercase=i.IsLowercase]="IsLowercase",a[a.IsString=i.IsString]="IsString",a[a.IsUppercase=i.IsUppercase]="IsUppercase",a))(yt||{});var Ba=(a=>(a.Ava="ava",a.Jest="jest",a))(Ba||{}),Fe=(a=>(a.Clover="clover",a.Cobertura="cobertura",a.HTML="html",a.JSONSummary="json-summary",a.JSON="json",a.Lcov="lcov",a.Lcovonly="lcovonly",a.None="none",a.TeamCity="teamcity",a.TextLcov="text-lcov",a.TextSummary="text-summary",a.Text="text",a))(Fe||{});var re=L(require("path"),1);function gi(a){switch(a){case Q.CJS:return".cjs";case Q.ESM:return".mjs";case Q.IIFE:return".iife.js";case Q.UMD:return".umd.js";default:return".js"}}function hi(a){switch(a){case"cjs":case"commonjs":return".cjs";case"es":case"esm":case"module":return".mjs";case"iife":return".iife.js";case"umd":return".umd.js";default:return`unknown-${a}.js`}}var ke=L(require("fs-extra"),1),ou=L(require("node:path"),1);async function Si(a){if(!a)throw new Error("Directory must be provided");if(a==="/")throw new Error("Cannot empty root directory");try{await(0,ke.emptyDir)(a)}catch{throw new Error(`Could not empty directory: ${a}`)}}async function Ei(a){if(!a)throw new Error("File path must be provided");try{return ou.default.join(ou.default.resolve(),".srclaunch","config.json"),await ke.default.readFile(a)}catch{throw new Error(`Could not read file: ${a}`)}}var pi=(a=0)=>d=>`\x1B[${d+a}m`,Ti=(a=0)=>d=>`\x1B[${38+a};5;${d}m`,vi=(a=0)=>(d,g,S)=>`\x1B[${38+a};2;${d};${g};${S}m`;function Pt(){let a=new Map,d={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],overline:[53,55],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};d.color.gray=d.color.blackBright,d.bgColor.bgGray=d.bgColor.bgBlackBright,d.color.grey=d.color.blackBright,d.bgColor.bgGrey=d.bgColor.bgBlackBright;for(let[g,S]of Object.entries(d)){for(let[E,v]of Object.entries(S))d[E]={open:`\x1B[${v[0]}m`,close:`\x1B[${v[1]}m`},S[E]=d[E],a.set(v[0],v[1]);Object.defineProperty(d,g,{value:S,enumerable:!1})}return Object.defineProperty(d,"codes",{value:a,enumerable:!1}),d.color.close="\x1B[39m",d.bgColor.close="\x1B[49m",d.color.ansi=pi(),d.color.ansi256=Ti(),d.color.ansi16m=vi(),d.bgColor.ansi=pi(10),d.bgColor.ansi256=Ti(10),d.bgColor.ansi16m=vi(10),Object.defineProperties(d,{rgbToAnsi256:{value:(g,S,E)=>g===S&&S===E?g<8?16:g>248?231:Math.round((g-8)/247*24)+232:16+36*Math.round(g/255*5)+6*Math.round(S/255*5)+Math.round(E/255*5),enumerable:!1},hexToRgb:{value:g=>{let S=/(?<colorString>[a-f\d]{6}|[a-f\d]{3})/i.exec(g.toString(16));if(!S)return[0,0,0];let{colorString:E}=S.groups;E.length===3&&(E=[...E].map(B=>B+B).join(""));let v=Number.parseInt(E,16);return[v>>16&255,v>>8&255,v&255]},enumerable:!1},hexToAnsi256:{value:g=>d.rgbToAnsi256(...d.hexToRgb(g)),enumerable:!1},ansi256ToAnsi:{value:g=>{if(g<8)return 30+g;if(g<16)return 90+(g-8);let S,E,v;if(g>=232)S=((g-232)*10+8)/255,E=S,v=S;else{g-=16;let D=g%36;S=Math.floor(g/36)/5,E=Math.floor(D/6)/5,v=D%6/5}let B=Math.max(S,E,v)*2;if(B===0)return 30;let U=30+(Math.round(v)<<2|Math.round(E)<<1|Math.round(S));return B===2&&(U+=60),U},enumerable:!1},rgbToAnsi:{value:(g,S,E)=>d.ansi256ToAnsi(d.rgbToAnsi256(g,S,E)),enumerable:!1},hexToAnsi:{value:g=>d.ansi256ToAnsi(d.hexToAnsi256(g)),enumerable:!1}}),d}var Ft=Pt(),Sa=Ft;var Le=L(require("node:process"),1),Bi=L(require("node:os"),1),Au=L(require("node:tty"),1);function ga(a,d=Le.default.argv){let g=a.startsWith("-")?"":a.length===1?"-":"--",S=d.indexOf(g+a),E=d.indexOf("--");return S!==-1&&(E===-1||S<E)}var{env:$}=Le.default,Me;ga("no-color")||ga("no-colors")||ga("color=false")||ga("color=never")?Me=0:(ga("color")||ga("colors")||ga("color=true")||ga("color=always"))&&(Me=1);function kt(){if("FORCE_COLOR"in $)return $.FORCE_COLOR==="true"?1:$.FORCE_COLOR==="false"?0:$.FORCE_COLOR.length===0?1:Math.min(Number.parseInt($.FORCE_COLOR,10),3)}function Mt(a){return a===0?!1:{level:a,hasBasic:!0,has256:a>=2,has16m:a>=3}}function Lt(a,{streamIsTTY:d,sniffFlags:g=!0}={}){let S=kt();S!==void 0&&(Me=S);let E=g?Me:S;if(E===0)return 0;if(g){if(ga("color=16m")||ga("color=full")||ga("color=truecolor"))return 3;if(ga("color=256"))return 2}if(a&&!d&&E===void 0)return 0;let v=E||0;if($.TERM==="dumb")return v;if(Le.default.platform==="win32"){let B=Bi.default.release().split(".");return Number(B[0])>=10&&Number(B[2])>=10586?Number(B[2])>=14931?3:2:1}if("CI"in $)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","GITHUB_ACTIONS","BUILDKITE","DRONE"].some(B=>B in $)||$.CI_NAME==="codeship"?1:v;if("TEAMCITY_VERSION"in $)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test($.TEAMCITY_VERSION)?1:0;if("TF_BUILD"in $&&"AGENT_NAME"in $)return 1;if($.COLORTERM==="truecolor")return 3;if("TERM_PROGRAM"in $){let B=Number.parseInt(($.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch($.TERM_PROGRAM){case"iTerm.app":return B>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test($.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test($.TERM)||"COLORTERM"in $?1:v}function bi(a,d={}){let g=Lt(a,{streamIsTTY:a&&a.isTTY,...d});return Mt(g)}var wt={stdout:bi({isTTY:Au.default.isatty(1)}),stderr:bi({isTTY:Au.default.isatty(2)})},Ui=wt;function Ni(a,d,g){let S=a.indexOf(d);if(S===-1)return a;let E=d.length,v=0,B="";do B+=a.substr(v,S-v)+d+g,v=S+E,S=a.indexOf(d,v);while(S!==-1);return B+=a.slice(v),B}function Di(a,d,g,S){let E=0,v="";do{let B=a[S-1]==="\r";v+=a.substr(E,(B?S-1:S)-E)+d+(B?`\r
`:`
`)+g,E=S+1,S=a.indexOf(`
`,E)}while(S!==-1);return v+=a.slice(E),v}var{stdout:yi,stderr:Pi}=Ui,fu=Symbol("GENERATOR"),ja=Symbol("STYLER"),se=Symbol("IS_EMPTY"),Fi=["ansi","ansi","ansi256","ansi16m"],Wa=Object.create(null),Gt=(a,d={})=>{if(d.level&&!(Number.isInteger(d.level)&&d.level>=0&&d.level<=3))throw new Error("The `level` option should be an integer from 0 to 3");let g=yi?yi.level:0;a.level=d.level===void 0?g:d.level};var qt=a=>{let d=(...g)=>g.join(" ");return Gt(d,a),Object.setPrototypeOf(d,ne.prototype),d};function ne(a){return qt(a)}Object.setPrototypeOf(ne.prototype,Function.prototype);for(let[a,d]of Object.entries(Sa))Wa[a]={get(){let g=we(this,Iu(d.open,d.close,this[ja]),this[se]);return Object.defineProperty(this,a,{value:g}),g}};Wa.visible={get(){let a=we(this,this[ja],!0);return Object.defineProperty(this,"visible",{value:a}),a}};var du=(a,d,g,...S)=>a==="rgb"?d==="ansi16m"?Sa[g].ansi16m(...S):d==="ansi256"?Sa[g].ansi256(Sa.rgbToAnsi256(...S)):Sa[g].ansi(Sa.rgbToAnsi(...S)):a==="hex"?du("rgb",d,g,...Sa.hexToRgb(...S)):Sa[g][a](...S),Kt=["rgb","hex","ansi256"];for(let a of Kt){Wa[a]={get(){let{level:g}=this;return function(...S){let E=Iu(du(a,Fi[g],"color",...S),Sa.color.close,this[ja]);return we(this,E,this[se])}}};let d="bg"+a[0].toUpperCase()+a.slice(1);Wa[d]={get(){let{level:g}=this;return function(...S){let E=Iu(du(a,Fi[g],"bgColor",...S),Sa.bgColor.close,this[ja]);return we(this,E,this[se])}}}}var xt=Object.defineProperties(()=>{},{...Wa,level:{enumerable:!0,get(){return this[fu].level},set(a){this[fu].level=a}}}),Iu=(a,d,g)=>{let S,E;return g===void 0?(S=a,E=d):(S=g.openAll+a,E=d+g.closeAll),{open:a,close:d,openAll:S,closeAll:E,parent:g}},we=(a,d,g)=>{let S=(...E)=>Ot(S,E.length===1?""+E[0]:E.join(" "));return Object.setPrototypeOf(S,xt),S[fu]=a,S[ja]=d,S[se]=g,S},Ot=(a,d)=>{if(a.level<=0||!d)return a[se]?"":d;let g=a[ja];if(g===void 0)return d;let{openAll:S,closeAll:E}=g;if(d.includes("\x1B"))for(;g!==void 0;)d=Ni(d,g.close,g.open),g=g.parent;let v=d.indexOf(`
`);return v!==-1&&(d=Di(d,E,S,v)),S+d+E};Object.defineProperties(ne.prototype,Wa);var Ht=ne(),lb=ne({level:Pi?Pi.level:0});var R=Ht;async function Ta({bundle:a=!0,format:d=Q.ESM,input:g,minify:S=!0,output:E,platform:v=ue.Browser,sourcemap:B=!0,splitting:U=!0,target:D=ee.ESNext,treeShaking:k=!0,types:z=!0}){try{let Y=[re.default.join(re.default.resolve(),g?.directory??"src",g?.file??"index.ts"),...g?.files?g.files.map(M=>re.default.join(re.default.resolve(),g?.directory??"src",M)):[]];E?.clean&&(console.info("Cleaning output directory..."),await Si(E?.directory??"dist"));let J=await(0,ki.build)({bundle:Boolean(a),entryPoints:Y,external:typeof a=="object"?a.exclude:[],format:d,minify:S,outdir:U?E?.directory??"dist":void 0,outfile:U?void 0:`${E?.directory??"dist"}/${E?.file??"index"}${gi(d)}`,platform:v,sourcemap:B,splitting:d==="esm"&&U,target:D,treeShaking:k});J.warnings&&J.warnings.forEach(M=>{console.warn(M.text)}),J.errors&&J.errors.forEach(M=>{console.error(M.text)}),z&&(await Pe({input:g,types:z,output:E}),console.info(`${R.green("\u2714")} compiled types`)),console.info(`${R.green("\u2714")} bundled to ${R.bold(d.toLocaleUpperCase())} format`)}catch(Y){console.error(Y)}}var Mi=require("vite"),Li=L(require("@vitejs/plugin-react"),1);var Va=L(require("node:path"),1);async function te({assets:a,bundle:d,format:g=Q.ESM,formats:S=[Q.ESM,Q.UMD],input:E,library:v=!1,optimize:B,manifest:U=!0,minify:D=!0,output:k,platform:z=ue.Browser,rootDir:Y,sourcemap:J=!0,target:M=ee.ESNext,types:da=!0,webApp:X}){try{let C=S&&S.length>0?S?.map(Aa=>Aa===Q.ESM?"es":Aa):[g===Q.ESM?"es":g];await(0,Mi.build)({build:{assetsDir:a?.directory?Va.default.join(Va.default.resolve(),a?.directory):void 0,emptyOutDir:k?.clean??!0,outDir:k?.directory??"dist",lib:Boolean(v)?{entry:Va.default.join(Va.default.resolve(),E?.directory??"src",E?.file??"index.ts"),formats:C,name:v&&typeof v=="object"?v?.name:void 0,fileName:Aa=>`${k?.file??"index"}${hi(Aa)}`}:!1,manifest:U,minify:D,rollupOptions:{external:typeof d=="object"?d.exclude??[]:[]},sourcemap:J,ssrManifest:U&&X?.ssr,target:M},configFile:!1,envPrefix:"SRCLAUNCH_",optimizeDeps:{exclude:B?.exclude??[],include:B?.include??[]},plugins:X?.react?[(0,Li.default)()]:[],root:Y??Va.default.resolve()}),da&&(await Pe({input:E,types:da,output:k}),console.info(`${R.green("\u2714")} compiled types`)),console.info(`${R.green("\u2714")} bundled to ${S&&S.length>0?`${R.bold(S.join(", ").toLocaleUpperCase())} formats`:`${R.bold(g.toLocaleUpperCase())} format`}`)}catch(C){console.error(`Error occurred while building: ${C.name}`,C)}}var wi=new y({name:"build",description:"Commands for building various types of projects",run:async({config:a,flags:d})=>{let g=a.build;if(!g)throw new Error("Missing build configuration");let S=0;if(typeof g=="object"&&!Array.isArray(g))switch(g.tool){case Ha.Vite:await te({...g,library:a.type===_a.Library||a.type===_a.CLIApplication?{name:a.name}:!1});return;case Ha.ESBuild:default:let E=g.formats??[Q.ESM];for(let v of E){let B=g.output?.clean??S===0,U=g.types??S===0;await Ta({...g,output:{...g.output,clean:B},format:v,types:U}),S=S+1}}else if(Array.isArray(g))for(let E of g)switch(E.tool){case Ha.Vite:await te({...E,library:a.type===_a.Library||a.type===_a.CLIApplication?{name:a.name}:!1});break;case Ha.ESBuild:default:let v=E?.formats??[E.format??Q.ESM];for(let B of v){let U=E.output?.clean??S===0,D=E.types??S===0;await Ta({...E,output:{...E.output,clean:U},format:B,types:D}),S=S+1}}},commands:[new y({name:"esbuild",description:"Compiles and optionally bundles a package using esbuild",run:async({config:a,flags:d})=>{let g=a.build;if(!g)throw new Error("Missing build configuration");let S=0;if(typeof g=="object"&&!Array.isArray(g))if(g.formats&&g.formats?.length>0)for(let E of g.formats){let v=g.output?.clean??S===0,B=g.types??S===0;await Ta({...g,output:{...g.output,clean:v},format:E,types:B}),S=S=1}else await Ta(g);else if(Array.isArray(g)&&g)for(let E of g)if(E.formats&&E.formats?.length>0)for(let v of E.formats){let B=(E.output?.clean||Boolean(d.clean))??S===0,U=E.types??S===0;await Ta({...E,output:{directory:"dist",file:"index",...E.output,clean:B},format:v,types:U}),S=S=1}else{let v=(E.output?.clean||Boolean(d.clean))&&S===0,B=E.types??S===0;await Ta({...E,output:{directory:"dist",file:"index",...E.output,clean:v},types:B})}}}),new y({name:"vite",description:"Compiles and bundles a package using Vite",run:async({config:a,flags:d})=>{let g=a.build;if(!g)throw new Error("Missing build configuration");if(typeof g=="object"&&!Array.isArray(g))await te({...g,library:a.type===_a.Library||a.type===_a.CLIApplication?{name:a.name}:!1});else if(Array.isArray(g)&&g)for(let S of g)await te({...S,library:a.type===_a.Library||a.type===_a.CLIApplication?{name:a.name}:!1})},type:"project"}),new y({name:"types",description:"Builds Typescript definitions",run:async({config:a,flags:d})=>{}}),new y({name:"help",description:"Shows help for build commands",run:async()=>{console.info("Available build commands are: lib, web-app, web-service, types, and help")},type:"project"})]});var ms=L(require("simple-git"),1);var cs=require("ink");var va=require("ink"),me=L(Ua(),1);var Yi=require("ink"),Oe=L(Ua(),1),Zi=({children:a,...d})=>{let[g,S]=(0,Oe.useState)({columns:process.stdout.columns,rows:process.stdout.rows});return(0,Oe.useEffect)(()=>{function E(){S({columns:process.stdout.columns,rows:process.stdout.rows})}return process.stdout.on("resize",E),process.stdout.write("\x1B[?1049h"),()=>{process.stdout.off("resize",E),process.stdout.write("\x1B[?1049l")}},[]),React.createElement(Yi.Box,{width:g.columns,height:g.rows,...d},a)};var fa=require("ink"),W=L(Ua(),1);var Na=require("ink"),$i=L(Ua(),1),sl=({label:a,onFocus:d,status:g})=>{let{isFocused:S}=(0,Na.useFocus)();return(0,$i.useEffect)(()=>{S&&d()},[S,d]),React.createElement(Na.Box,{height:1},React.createElement(Na.Text,{backgroundColor:S?"cyanBright":void 0,color:S?"#000000":"grayBright"},g&&React.createElement(Na.Text,{color:(()=>{switch(g){case"started":return"#82d800";case"starting":case"init":return"#ffcc00";case"error":return"#cc5222";default:return"#ffcc00"}})()}," \u25CF"),React.createElement(Na.Text,null," ",a," ")))},Qi=sl;var Xi=({children:a,title:d,...g})=>{let{enableFocus:S,focusNext:E}=(0,fa.useFocusManager)(),[v,B]=(0,W.useState)(0),{isFocused:U}=(0,fa.useFocus)({autoFocus:!0});return(0,W.useEffect)(()=>{S()},[S]),(0,W.useEffect)(()=>{U&&E()},[U,E]),(0,W.useEffect)(()=>{W.default.Children.forEach(a,(D,k)=>{D?.props?.initial&&B(k)})},[a]),W.default.createElement(fa.Box,{flexGrow:1,flexDirection:"column",...g},W.default.createElement(fa.Box,{flexDirection:"row",height:1},W.default.createElement(fa.Box,{paddingLeft:1,flexGrow:1},W.default.Children.map(a,(D,k)=>W.default.createElement(fa.Box,{marginRight:2},W.default.createElement(Qi,{onFocus:()=>B(k),label:D?.props?.label,status:D?.props?.status})))),d&&W.default.createElement(fa.Box,{alignItems:"flex-end",paddingRight:1},W.default.createElement(fa.Text,null,d))),W.default.createElement(fa.Box,{flexGrow:1,flexDirection:"column",borderStyle:"round",borderColor:"black",width:"100%"},W.default.Children.map(a,(D,k)=>W.default.createElement(fa.Box,{display:v===k?"flex":"none",flexDirection:"column"},W.default.Children.map(D,z=>W.default.createElement(W.default.Fragment,null,z))))))},Ra=({children:a})=>W.default.createElement(W.default.Fragment,null,a);var ma=require("ink"),Ci=()=>React.createElement(ma.Box,{flexGrow:1},React.createElement(ma.Box,{borderStyle:"round",borderColor:"blue",flexDirection:"column",width:30,padding:1,paddingLeft:2},React.createElement(ma.Box,null,React.createElement(ma.Text,null,"Change type")),React.createElement(ma.Box,null,React.createElement(ma.Text,null,"New Feature"),React.createElement(ma.Text,null,"Bugfix"),React.createElement(ma.Text,null,"Documentation"),React.createElement(ma.Text,null,"Formatting"),React.createElement(ma.Text,null,"Refactor"),React.createElement(ma.Text,null,"Performance"),React.createElement(ma.Text,null,"Testing"),React.createElement(ma.Text,null,"Chore"))));var Tu=require("ink"),as=L(Ua(),1);var ua=require("ink"),ea=L(Ua(),1),He=({items:a})=>{let[d,g]=(0,ea.useState)(0),[S,E]=(0,ea.useState)(0),[v,B]=(0,ea.useState)([]),[U,D]=(0,ea.useState)(!1),[k,z]=(0,ea.useState)(!0),[Y,J]=(0,ea.useState)(1),[M,da]=(0,ea.useState)(0);(0,ua.useInput)((O,ia)=>{ia.upArrow?(d>0&&g(d-1),z(d>=a.length-1)):ia.downArrow&&(v.length>d+1&&g(d+1),z(d>=a.length-1))});let X=(0,ea.createRef)();(0,ea.useEffect)(()=>{let O=Math.ceil(S/v.length*100);J(O),D(v.length>=S)},[v.length,S]),(0,ea.useEffect)(()=>{if(X.current){let O=(0,ua.measureElement)(X.current)?.height;E(O??20)}},[a]),(0,ea.useEffect)(()=>{if(X.current){let O=(0,ua.measureElement)(X.current)?.height;E(O??20)}},[]),(0,ea.useEffect)(()=>{S&&B(a.map((O,ia)=>{let _e=ia<S&&d<S||ia<=d&&ia>=d-S;return{key:ia,message:O,visible:_e}}))},[a,d,S]);let C=O=>O===d?"\u276F\xA0":"\xA0\xA0";(0,ea.useEffect)(()=>{k&&g(a.length-1)},[a.length,k]),(0,ea.useEffect)(()=>{let O=Math.floor(d/v.length*100);da(O)},[d,v.length]);let Aa=O=>O.indexOf("src/")===0?React.createElement(ua.Text,{color:"magenta"},O):React.createElement(ua.Text,{color:"lightGrey"},O);return React.createElement(ua.Box,{flexDirection:"row",minHeight:"100%",minWidth:"100%"},React.createElement(ua.Box,{flexDirection:"column",flexGrow:1,ref:X},React.createElement(ua.Box,{flexDirection:"column",flexGrow:1},v.map((O,ia)=>O.visible?React.createElement(ua.Text,{key:ia},!O.visible&&"X ",C(ia),Aa(O.message.toString())):null))),U&&React.createElement(ua.Box,{alignItems:"stretch",borderStyle:"round",flexGrow:0,width:1,minHeight:"100%",flexDirection:"column"},React.createElement(ua.Box,{flexGrow:0,height:`${M}%`}),React.createElement(ua.Box,{borderStyle:"round",flexGrow:0,width:1,height:`${Y}%`,marginLeft:-1})))};var es=()=>{let[a,d]=(0,as.useState)([]),g=S=>{d(E=>[...E,S])};return React.createElement(Tu.Box,{flexGrow:1},React.createElement(Tu.Box,{flexGrow:1,borderStyle:"round",borderColor:"gray",marginLeft:1},React.createElement(He,{items:a})))};var us=require("ink"),is=()=>React.createElement(us.Box,{flexGrow:1});var vu=require("ink"),ss=L(Ua(),1);var ns=()=>{let[a,d]=(0,ss.useState)([]),g=S=>{d(E=>[...E,S])};return React.createElement(vu.Box,{flexGrow:1},React.createElement(vu.Box,{flexGrow:1,borderStyle:"round",borderColor:"gray",marginLeft:1},React.createElement(He,{items:a})))};var rs=require("ink"),ts=()=>React.createElement(rs.Box,{flexGrow:1});var ls=({initialTab:a,cliVersion:d})=>{let[g,S]=(0,me.useState)([]),[E,v]=(0,me.useState)(void 0),B=U=>{S(D=>[...D,U])};return(0,va.useInput)(async(U,D)=>{if(U==="q")throw B("Quitting"),new Error("Quitting");D.leftArrow}),(0,me.useEffect)(()=>{(async()=>{B(""),E&&B(E)})()},[]),React.createElement(Zi,{borderStyle:"round",borderColor:"lightgrey",flexDirection:"column"},React.createElement(Xi,null,React.createElement(Ra,{initial:a==="Overview",label:"Overview"},React.createElement(ts,null)),React.createElement(Ra,{initial:a==="Build",label:"Build"},React.createElement(ns,null)),React.createElement(Ra,{initial:a==="Tests",label:"Tests"},React.createElement(es,null)),React.createElement(Ra,{initial:a==="Changes",label:"Changes"},React.createElement(Ci,null)),React.createElement(Ra,{initial:a==="Release",label:"Release"},React.createElement(is,null))),React.createElement(va.Box,{flexDirection:"row"},React.createElement(va.Spacer,null),React.createElement(va.Box,{alignItems:"flex-end",paddingRight:1},React.createElement(va.Text,null,d))))};var os=new y({name:"changesets",description:"Manage changesets",commands:[new y({name:"add",description:"Create a changeset",run:async({cli:a,config:d,flags:g})=>{let S=g.message;if(g.interactive){let{waitUntilExit:E}=(0,cs.render)(React.createElement(ls,{initialTab:"Changes",cliVersion:a.pkg.version,flags:g}));await E()}else try{let E=(0,ms.default)();await E.add("."),await E.commit(S),console.log(`${R.green("\u2714")} added new changeset`)}catch(E){console.error("commit err",E)}},type:"project"}),new y({name:"list",description:"List changesets",run:async({config:a,flags:d})=>{},type:"project"}),new y({name:"help",description:"Show help for changesets",run:async()=>{console.info("Available changesets commands are: create, list")},type:"project"})]});var As=new y({name:"dev",description:"Development environment commands",commands:[new y({name:"start",description:"Launches the local development environment.",run:async({cli:a,flags:d})=>{},type:"project"}),new y({name:"help",description:"Shows help for dev commands",run:async()=>{console.info("Available dev commands are: start, help")},type:"project"})]});var fs=new y({name:"help",description:"Shows help for commands",run:async({cli:a})=>{a.showHelp()}});var ds=new y({name:"infrastructure",description:"Manage infrastructure",commands:[new y({name:"deploy",description:"Deploy infrastructure",run:async({config:a,flags:d})=>{},type:"workspace"}),new y({name:"help",description:"Shows help for infrastructure commands",run:async()=>{console.info("Available infrastructure commands are: deploy, help")},type:"workspace"})]});var Pa=L(require("fs-extra"),1),Ja=L(require("node:path"),1);function Is(a,d="srclaunch"){try{let g="",S="",E="export default {",v=`.${d==="srclaunch"||d==="sequelize"?"ts":"json"}`;for(let B of a){let U=B.split(v)[0];d==="json"?S+=`import ${U} from './${U}.json';
`:d==="sequelize"?(S+=`import ${U}Init, { ${U} } from './${U}';
`,E+=`${U}: ${U}Init,`):S+=`import { ${U} } from './${U}.js';
`,g+=`  ${U},
`}return d==="sequelize"&&(E+="};"),`${S}
export {
${g}};
${d==="sequelize"?E:""}
`}catch(g){console.error(g)}}async function _s(a,d){try{let g=Ja.default.join(Ja.default.resolve(),d,"src");await Pa.default.emptyDir(g);let S=await Pa.default.readdir(a);for(let U of S){let D=await Pa.default.readFile(Ja.default.join(a,U),"utf8");if(!D.includes("fields: {"))throw new Error(`${U} is missing the fields property.`);let z=`
    created_date: {
      label: 'Created Date',
      required: false,
      type: Primitives.DateTime,
    },
    updated_date: {
      label: 'Updated Date',
      required: false,
      type: Primitives.DateTime,
    },
  `,Y=D.indexOf("relationships:")+15,J=D.indexOf("}",Y)+1,M=D.slice(Y,J);if(M){let X=M.indexOf("belongsTo:")+10,C=M.indexOf("]",X)+1,Aa=M.slice(X,C);if(Aa){let O=Aa.replace(/'/g,'"').replace(/ {2}|\r\n|\n|\r/g,"").replace(/\s/g,"").replace(",]","]"),ia=JSON.parse(O);for(let $a of ia)z+=`
        ${$a}Id: {
          label: '${$a}',
          required: false,
          type: Primitives.UUID
        },
        `}}let da=D.replace("fields: {",`fields: {
        ${z}`);await Pa.default.writeFile(Ja.default.join(g,U),da,"utf8")}let v=(await Pa.default.readdir(g)).filter(U=>U.slice(-3)===".ts"&&U.split(".ts")[0]!=="index"),B=Is(v,"srclaunch");await Pa.default.writeFile(Ja.default.join(g,"index.ts"),B,"utf8")}catch(g){throw console.error(g),g}}var ha=L(require("fs-extra"),1),ca=L(require("node:path"),1);function gs(){return`import { ModelProps, Primitives } from "@srclaunch/types";

  export const Document: ModelProps = {
    fields: {
      name: {
        label: "Name",
        type: Primitives.String,
        required: true,
      },
      description: {
        label: "Description",
        type: Primitives.String,
        required: true,
      }
    },
    name: "Document",
    relationships: {
      belongsTo: ["Organization", "Invoice", "User"],
    },
  };
  `}function hs(){return`import { ModelProps, Primitives } from "@srclaunch/types";

  export const Invoice: ModelProps = {
    fields: {
      amount: {
        label: "Amount",
        type: Primitives.Number,
        required: true,
      },
      currency: {
        label: "Currency",
        type: Primitives.CurrencyCode,
        required: true,
      },
      date: {
        label: "Date",
        type: Primitives.Date,
        required: true,
      },
      due_date: {
        label: "Due Date",
        type: Primitives.Date,
        required: true,
      },
      notes: {
        label: "Notes",
        type: Primitives.String,
      },
      status: {
        label: "Status",
        type: Primitives.String,
        required: true,
      },
    },
    name: "Invoice",
    relationships: {
      belongsTo: ["Organization", "Payment", "User"],
    },
  };`}function Ss(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const Organization: ModelProps = {
  fields: {
    description: {
      label: "Description",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
  },
  name: "Organization",
  relationships: {},
};`}function Es(){return`import { ModelProps, Primitives } from "@srclaunch/types";

  export const Payment: ModelProps = {
    fields: {
      amount: {
        label: "Amount",
        type: Primitives.Number,
        required: true,
      },
      currency: {
        label: "Currency",
        type: Primitives.CurrencyCode,
        required: true,
      },
      date: {
        label: "Date",
        type: Primitives.Date,
        required: true,
      },
      failure_reason: {
        label: "Failure Reason",
        type: Primitives.Menu,
        menu: [
          {
            label: 'Insufficient Funds',
            value: 'insufficient-funds',
          },
          {
            label: 'Invalid Amount',
            value: 'invalid-amount',
          },
          {
            label: 'Invalid Currency',
            value: 'invalid-currency',
          },
          {
            label: 'Invalid Card',
            value: 'invalid-card',
          },
          {
            label: 'Invalid Card Expiry',
            value: 'invalid-card-expiry',
          },
          {
            label: 'Invalid Card Number',
            value: 'invalid-card-number',
          },
          {
            label: 'Invalid Card Security Code',
            value: 'invalid-card-security-code',
          },
          {
            label: 'Invalid Card Holder',
            value: 'invalid-card-holder',
          },
          {
            label: 'Invalid Card Address',
            value: 'invalid-card-address',
          },
        ]
      },
      notes: {
        label: "Notes",
        type: Primitives.String,
        required: true,
      },
      status: {
        label: "Status",
        type: Primitives.Menu,
        required: true,
        menu: [
          {
            label: "Paid",
            value: "paid",
          },
          {
            label: "Failure",
            value: "failure",
          },
          {
            label: "Pending",
            value: "pending",
          },
        ],
      }
    },
    name: "Payment",
    relationships: {
      belongsTo: ["Organization", "User"],
    },
  };`}function ps(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const PaymentMethod: ModelProps = {
  fields: {
    default: {
      label: "Default",
      type: Primitives.Boolean,
    },
    masked_number: {
      label: "Number",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
    type: {
      label: "Type",
      menu: [
        {
          label: "Bank Transfer",
          value: "bank-transfer",
        },
        {
          label: "Credit Card",
          value: "credit-card",
        },
        {
          label: "Crypto",
          value: "crypto",
        },
      ],
      type: Primitives.Menu,
    },
  },
  name: "PaymentMethod",
  relationships: {
    belongsTo: ["Organization", "Payment", "Team", "User"],
  },
};`}function Ts(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const Person: ModelProps = {
  fields: {
    analytics: {
      label: "Analytics",
      type: Primitives.JSON,
    },
    billing: {
      label: "Billing Details",
      type: Primitives.JSON,
    },
  },
  name: "Person",
  relationships: {
    hasMany: ["Event"],
    hasOne: ["User"],
  },
};`}function vs(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const Subscription: ModelProps = {
  fields: {
    status: {
      label: "Status",
      menu: [
        {
          label: "Active",
          value: "active",
        },
        {
          label: "Expired",
          value: "expired",
        },
        {
          label: "Canceled",
          value: "canceled",
        },
      ],
      type: Primitives.Menu,
    },
    cancel_date: {
      label: "Cancel date",
      type: Primitives.DateTime,
    },
    expiration_date: {
      label: "Expiration date",
      type: Primitives.DateTime,
    },
    renewal_date: {
      label: "Renewal date",
      type: Primitives.DateTime,
    },
    start_date: {
      label: "Start date",
      type: Primitives.DateTime,
    },
  },
  name: "Subscription",
  relationships: {
    belongsTo: ["Organization", "Product", "Team", "User"],
  },
};`}function bs(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const Team: ModelProps = {
  fields: {
    description: {
      label: "Description",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
  },
  name: "Team",
  relationships: {
    belongsTo: ["Organization"],
  },
};`}function Bs(){return`import {
  CurrencyCode,
  LanguageCode,
  LocaleCode,
  ModelProps,
  Primitives,
} from "@srclaunch/types";

export const User: ModelProps = {
  description: "A user that signs into the application",
  fields: {
    access: {
      label: "Access Details",
      type: Primitives.JSON,
    },
    cognito_id: {
      label: "Cognito ID",
      type: Primitives.String,
    },
    membership: {
      label: "Membership",
      type: Primitives.JSON,
    },
    onboarding: {
      label: "Onboarding",
      type: Primitives.JSON,
    },
    preferences: {
      defaultValue: {
        accessibility: {
          outlines: false,
        },
        localization: {
          currency: CurrencyCode.UnitedStatesDollar,
          language: LanguageCode.English,
          locale: LocaleCode.EnglishUnitedStates,
        },
        look_and_feel: {
          theme: "light",
        },
      },
      label: "Preferences",
      type: Primitives.JSON,
    },
  },
  name: "User",
  relationships: {
    belongsTo: ["Person", "Team"]
  },
};`}function Us(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const UserGroup: ModelProps = {
  fields: {
    description: {
      label: "Description",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
  },
  name: "UserGroup",
  relationships: {
    belongsTo: ["Organization", "Team"],
  },
};`}function Ns(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const UserRole: ModelProps = {
  fields: {
    description: {
      label: "Description",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
  },
  name: "UserRole",
  relationships: {
    belongsTo: ["Organization", "Team"],
  },
};`}async function Ds(){try{let a=ca.default.join(ca.default.resolve(),".applab/dependencies/models"),d=ca.default.join(a,"src");await ha.default.writeFile(ca.default.join(d,"Organization.ts"),Ss(),"utf8"),await ha.default.writeFile(ca.default.join(d,"Team.ts"),bs(),"utf8"),await ha.default.writeFile(ca.default.join(d,"Document.ts"),gs(),"utf8"),await ha.default.writeFile(ca.default.join(d,"Payment.ts"),Es(),"utf8"),await ha.default.writeFile(ca.default.join(d,"Invoice.ts"),hs(),"utf8"),await ha.default.writeFile(ca.default.join(d,"PaymentMethod.ts"),ps(),"utf8"),await ha.default.writeFile(ca.default.join(d,"Person.ts"),Ts(),"utf8"),await ha.default.writeFile(ca.default.join(d,"Subscription.ts"),vs(),"utf8"),await ha.default.writeFile(ca.default.join(d,"User.ts"),Bs(),"utf8"),await ha.default.writeFile(ca.default.join(d,"UserGroup.ts"),Us(),"utf8"),await ha.default.writeFile(ca.default.join(d,"UserRole.ts"),Ns(),"utf8")}catch(a){console.error(a)}}async function ys(a,{dependencies:d}){console.info("Building Core Object dependencies..."),console.info("Adding out of box Core Objects..."),await Ds(),console.info("Building SrcLaunch models..."),await _s(a,d.models.path),await Ta({format:Q.ESM,rootDir:d.models.path})}var Ps=L(require("fs-extra"),1),Fs=L(require("path"),1);async function ks(){let a=Fs.default.join("models"),d=Ps.default.readdirSync(a).filter(g=>g.slice(-3)===".ts"&&g.split(".ts")[0]!=="index");console.info(d.map(g=>g.split(".ts")[0]).toString())}var Ms=L(require("fs-extra"),1),je=L(require("node:path"),1);async function Ls(){try{let a=je.default.join(je.default.resolve(),"dependencies/models");await Ms.default.emptyDir(je.default.join(a,"src"))}catch(a){console.error(a)}}var bu=L(require("path"),1),ws=new y({name:"",description:"",commands:[new y({name:"clean",description:"",run:async({config:a,flags:d})=>{await Ls()},type:"workspace"}),new y({name:"create",description:"",run:async({config:a,flags:d})=>{},type:"workspace"}),new y({name:"build",description:"",run:async({config:a,flags:d})=>{await ys(bu.default.join(bu.default.resolve(),a.models?.path??"models"),{dependencies:a.dependencies})},type:"workspace"}),new y({name:"list",description:"",run:async({config:a,flags:d})=>{await ks()},type:"workspace"}),new y({name:"help",description:"Shows help for model commands",run:async()=>{console.info("Available model commands are: clean, build, list, and help.")},type:"workspace"})]});var Gs=new y({name:"preview",description:"Creates a preview of the production build with currently pending changesets",commands:[new y({name:"start",description:"Builds a preview of the production build, and serves locally on the port provided in the project configuration file",run:async()=>{},type:"project"}),new y({name:"help",description:"Shows help for preview commands",run:async()=>{console.info("Available preview commands are: help")},type:"project"})]});var qs=new y({name:"projects",description:"Manage projects",commands:[new y({name:"create",description:"Create a new SrcLaunch project",run:async({config:a,flags:d})=>{},type:"workspace"}),new y({name:"help",description:"Shows help for projects commands",run:async()=>{console.info("Available projects commands are: create, help")},type:"workspace"})]});var Ks=L(require("standard-version"),1),xs=L(require("simple-git"),1);var Os=new y({name:"release",description:"Create a release",run:async({config:a})=>{try{let d=(0,xs.default)(),g=await(await d.branchLocal()).current,S=await(await d.getRemotes()).find(v=>v.name==="origin");await(0,Ks.default)({noVerify:!0,infile:"CHANGELOG.md",silent:!1});let E=await d.push(S?.name??"origin",g,{"--follow-tags":null});console.log(`${R.green("\u2714")} pushed release to ${R.bold(E.repo)} on branch ${R.bold(g)}`)}catch(d){console.error("err",d)}},type:"project",commands:[new y({name:"help",description:"Shows help for release commands",run:async()=>{console.info("Available release commands are: create, help")},type:"project"})]});var f=(a=>(a.Afghanistan="AF",a.Albania="AL",a.Algeria="DZ",a.AmericanSamoa="AS",a.Andorra="AD",a.Angola="AO",a.Anguilla="AI",a.Antarctica="AQ",a.AntiguaAndBarbuda="AG",a.Argentina="AR",a.Armenia="AM",a.Aruba="AW",a.Australia="AU",a.Austria="AT",a.Azerbaijan="AZ",a.Bahamas="BS",a.Bahrain="BH",a.Bangladesh="BD",a.Barbados="BB",a.Belarus="BY",a.Belgium="BE",a.Belize="BZ",a.Benin="BJ",a.Bermuda="BM",a.Bhutan="BT",a.Bolivia="BO",a.BosniaAndHerzegovina="BA",a.Botswana="BW",a.BouvetIsland="BV",a.Brazil="BR",a.BritishIndianOceanTerritory="IO",a.Brunei="BN",a.Bulgaria="BG",a.BurkinaFaso="BF",a.Burundi="BI",a.Cambodia="KH",a.Cameroon="CM",a.Canada="CA",a.CapeVerde="CV",a.CaymanIslands="KY",a.CentralAfricanRepublic="CF",a.Chad="TD",a.Chile="CL",a.China="CN",a.ChristmasIsland="CX",a.CocosKeelingIslands="CC",a.Colombia="CO",a.Comoros="KM",a.Congo="CG",a.CongoTheDemocraticRepublicOfThe="CD",a.CookIslands="CK",a.CostaRica="CR",a.CoteDIvoire="CI",a.Croatia="HR",a.Cuba="CU",a.Cyprus="CY",a.CzechRepublic="CZ",a.Denmark="DK",a.Djibouti="DJ",a.Dominica="DM",a.DominicanRepublic="DO",a.Ecuador="EC",a.Egypt="EG",a.ElSalvador="SV",a.EquatorialGuinea="GQ",a.Eritrea="ER",a.Estonia="EE",a.Ethiopia="ET",a.FalklandIslands="FK",a.FaroeIslands="FO",a.Fiji="FJ",a.Finland="FI",a.France="FR",a.FrenchGuiana="GF",a.FrenchPolynesia="PF",a.FrenchSouthernTerritories="TF",a.Gabon="GA",a.Gambia="GM",a.Georgia="GE",a.Germany="DE",a.Ghana="GH",a.Gibraltar="GI",a.Greece="GR",a.Greenland="GL",a.Grenada="GD",a.Guadeloupe="GP",a.Guam="GU",a.Guatemala="GT",a.Guernsey="GG",a.Guinea="GN",a.GuineaBissau="GW",a.Guyana="GY",a.Haiti="HT",a.HeardIslandMcdonaldIslands="HM",a.HolySeeVaticanCityState="VA",a.Honduras="HN",a.HongKong="HK",a.Hungary="HU",a.Iceland="IS",a.India="IN",a.Indonesia="ID",a.Iran="IR",a.Iraq="IQ",a.Ireland="IE",a.IsleOfMan="IM",a.Israel="IL",a.Italy="IT",a.Jamaica="JM",a.Japan="JP",a.Jersey="JE",a.Jordan="JO",a.Kazakhstan="KZ",a.Kenya="KE",a.Kiribati="KI",a.Kuwait="KW",a.Kyrgyzstan="KG",a.Laos="LA",a.Latvia="LV",a.Lebanon="LB",a.Lesotho="LS",a.Liberia="LR",a.Libya="LY",a.Liechtenstein="LI",a.Lithuania="LT",a.Luxembourg="LU",a.Macau="MO",a.Madagascar="MG",a.Malawi="MW",a.Malaysia="MY",a.Maldives="MV",a.Mali="ML",a.Malta="MT",a.MarshallIslands="MH",a.Martinique="MQ",a.Mauritania="MR",a.Mauritius="MU",a.Mayotte="YT",a.Mexico="MX",a.MicronesiaFederatedStatesOf="FM",a.Moldova="MD",a.Monaco="MC",a.Mongolia="MN",a.Montenegro="ME",a.Montserrat="MS",a.Morocco="MA",a.Mozambique="MZ",a.Myanmar="MM",a.Namibia="NA",a.Nauru="NR",a.Nepal="NP",a.Netherlands="NL",a.NetherlandsAntilles="AN",a.NewCaledonia="NC",a.NewZealand="NZ",a.NorthKorea="KP",a.Nicaragua="NI",a.Niger="NE",a.Nigeria="NG",a.Niue="NU",a.NorfolkIsland="NF",a.NorthMacedonia="MK",a.NorthernMarianaIslands="MP",a.Norway="NO",a.Oman="OM",a.Pakistan="PK",a.Palau="PW",a.PalestinianTerritoryOccupied="PS",a.Panama="PA",a.PapuaNewGuinea="PG",a.Paraguay="PY",a.Peru="PE",a.Philippines="PH",a.Pitcairn="PN",a.Poland="PL",a.Portugal="PT",a.PuertoRico="PR",a.Qatar="QA",a.Reunion="RE",a.Romania="RO",a.RussianFederation="RU",a.Rwanda="RW",a.SaintBarthelemy="BL",a.SaintHelena="SH",a.SaintKittsAndNevis="KN",a.SaintLucia="LC",a.SaintMartin="MF",a.SaintPierreAndMiquelon="PM",a.SaintVincentAndTheGrenadines="VC",a.Samoa="WS",a.SanMarino="SM",a.SaoTomeAndPrincipe="ST",a.SaudiArabia="SA",a.Senegal="SN",a.Serbia="RS",a.SerbiaAndMontenegro="CS",a.Seychelles="SC",a.SierraLeone="SL",a.Singapore="SG",a.Slovakia="SK",a.Slovenia="SI",a.SolomonIslands="SB",a.Somalia="SO",a.SouthAfrica="ZA",a.SouthGeorgiaAndTheSouthSandwichIslands="GS",a.SouthKorea="KR",a.Spain="ES",a.SriLanka="LK",a.Sudan="SD",a.Suriname="SR",a.SvalbardAndJanMayen="SJ",a.Swaziland="SZ",a.Sweden="SE",a.Switzerland="CH",a.Syria="SY",a.Taiwan="TW",a.Tajikistan="TJ",a.Tanzania="TZ",a.Thailand="TH",a.TimorLeste="TL",a.Togo="TG",a.Tokelau="TK",a.Tonga="TO",a.TrinidadAndTobago="TT",a.Tunisia="TN",a.Turkey="TR",a.Turkmenistan="TM",a.TurksAndCaicosIslands="TC",a.Tuvalu="TV",a.Uganda="UG",a.Ukraine="UA",a.UnitedArabEmirates="AE",a.UnitedKingdom="GB",a.UnitedStates="US",a.UnitedStatesMinorOutlyingIslands="UM",a.Uruguay="UY",a.Uzbekistan="UZ",a.Vanuatu="VU",a.Venezuela="VE",a.Vietnam="VN",a.VirginIslandsBritish="VG",a.VirginIslandsUS="VI",a.WallisAndFutuna="WF",a.WesternSahara="EH",a.Yemen="YE",a.Zambia="ZM",a.Zimbabwe="ZW",a))(f||{}),oa=(a=>(a.AfghanistanAfghani="AFN",a.AlbaniaLek="ALL",a.ArmeniaDram="AMD",a.AlgeriaDinar="DZD",a.AmericanSamoaTala="WST",a.AngolaKwanza="AOA",a.ArgentinaPeso="ARS",a.AustraliaDollar="AUD",a.ArubaFlorin="AWG",a.AzerbaijanNewManat="AZN",a.BosniaAndHerzegovinaConvertibleMark="BAM",a.BahrainDinar="BHD",a.BarbadosDollar="BBD",a.BangladeshTaka="BDT",a.BelgiumFranc="BGN",a.BermudaDollar="BMD",a.BruneiDollar="BND",a.BoliviaBoliviano="BOB",a.BrazilReal="BRL",a.BahamasDollar="BSD",a.BhutanNgultrum="BTN",a.BotswanaPula="BWP",a.BelarusRuble="BYN",a.BelizeDollar="BZD",a.BulgariaLev="BGN",a.BurundiFranc="BIF",a.BritishPound="GBP",a.CanadaDollar="CAD",a.CambodiaRiel="KHR",a.ComorosFranc="KMF",a.CaymanIslandsDollar="KYD",a.ChilePeso="CLP",a.ChinaYuan="CNY",a.ColombiaPeso="COP",a.CostaRicaColon="CRC",a.CroatiaKuna="HRK",a.CubaConvertiblePeso="CUC",a.CubaPeso="CUP",a.CapeVerdeEscudo="CVE",a.CyprusPound="CYP",a.CzechRepublicKoruna="CZK",a.DjiboutiFranc="DJF",a.DenmarkKrone="DKK",a.DominicaDollar="XCD",a.DominicanRepublicPeso="DOP",a.EastCaribbeanDollar="XCD",a.EgyptPound="EGP",a.ElSalvadorColon="SVC",a.EquatorialGuineaEkwele="GQE",a.EritreaNakfa="ERN",a.EstoniaKroon="EEK",a.EthiopiaBirr="ETB",a.Euro="EUR",a.FijiDollar="FJD",a.FalklandIslandsPound="FKP",a.GambiaDalasi="GMD",a.GabonFranc="GMD",a.GeorgiaLari="GEL",a.GhanaCedi="GHS",a.GibraltarPound="GIP",a.GuatemalaQuetzal="GTQ",a.GuernseyPound="GGP",a.GuineaBissauPeso="GWP",a.GuyanaDollar="GYD",a.HongKongDollar="HKD",a.HondurasLempira="HNL",a.HaitiGourde="HTG",a.HungaryForint="HUF",a.IndonesiaRupiah="IDR",a.IsleOfManPound="IMP",a.IsraelNewShekel="ILS",a.IndiaRupee="INR",a.IraqDinar="IQD",a.IranRial="IRR",a.IcelandKrona="ISK",a.JamaicaDollar="JMD",a.JapanYen="JPY",a.JerseyPound="JEP",a.JordanDinar="JOD",a.KazakhstanTenge="KZT",a.KenyaShilling="KES",a.KyrgyzstanSom="KGS",a.NorthKoreaWon="KPW",a.SouthKoreaWon="KRW",a.KuwaitDinar="KWD",a.LaosKip="LAK",a.LebanonPound="LBP",a.LiberiaDollar="LRD",a.LesothoLoti="LSL",a.LibyanDinar="LYD",a.LithuaniaLitas="LTL",a.LatviaLats="LVL",a.LibyaDinar="LYD",a.MacauPataca="MOP",a.MaldivesRufiyaa="MVR",a.MalawiKwacha="MWK",a.MaltaLira="MTL",a.MauritiusRupee="MUR",a.MongoliaTughrik="MNT",a.MoroccoDirham="MAD",a.MoldovaLeu="MDL",a.MozambiqueMetical="MZN",a.MadagascarAriary="MGA",a.MacedoniaDenar="MKD",a.MexicoPeso="MXN",a.MalaysiaRinggit="MYR",a.MyanmarKyat="MMK",a.MicronesiaFederatedStatesDollar="USD",a.NicaraguaCordoba="NIO",a.NamibiaDollar="NAD",a.NetherlandsAntillesGuilder="ANG",a.NewCaledoniaFranc="XPF",a.NigeriaNaira="NGN",a.NicaraguaCordobaOro="NIO",a.NigerCFAFranc="XOF",a.NorwayKrone="NOK",a.NepalRupee="NPR",a.NewZealandDollar="NZD",a.OmanRial="OMR",a.PanamaBalboa="PAB",a.PeruNuevoSol="PEN",a.PapuaNewGuineaKina="PGK",a.PhilippinesPeso="PHP",a.PakistanRupee="PKR",a.PeruNuevo="PEN",a.PolandZloty="PLN",a.ParaguayGuarani="PYG",a.QatarRial="QAR",a.RomaniaNewLeu="RON",a.SerbiaDinar="RSD",a.SriLankaRupee="LKR",a.RussiaRuble="RUB",a.RwandaFranc="RWF",a.SaudiArabiaRiyal="SAR",a.SlovakiaKoruna="SKK",a.SloveniaTolar="SIT",a.SolomonIslandsDollar="SBD",a.SeychellesRupee="SCR",a.SudanPound="SDG",a.SwedenKrona="SEK",a.SingaporeDollar="SGD",a.SaintHelenaPound="SHP",a.SierraLeoneLeone="SLL",a.SomaliaShilling="SOS",a.SurinameDollar="SRD",a.SintMaartenPound="SXD",a.SyriaPound="SYP",a.SwazilandLilangeni="SZL",a.SwitzerlandFranc="CHF",a.ThailandBaht="THB",a.TajikistanSomoni="TJS",a.TurkmenistanManat="TMT",a.TunisiaDinar="TND",a.TongaPaanga="TOP",a.TurkeyLira="TRY",a.TrinidadAndTobagoDollar="TTD",a.TaiwanNewDollar="TWD",a.TanzaniaShilling="TZS",a.UnitedArabEmiratesDirham="AED",a.UkraineHryvnia="UAH",a.UgandaShilling="UGX",a.UnitedKingdomPound="GBP",a.UnitedStatesDollar="USD",a.UruguayPeso="UYU",a.UzbekistanSom="UZS",a.VenezuelaBolivar="VEF",a.VietnamDong="VND",a.VanuatuVatu="VUV",a.SamoaTala="WST",a.YemenRial="YER",a.SouthAfricaRand="ZAR",a.ZambiaKwacha="ZMW",a.ZimbabweDollar="ZWL",a))(oa||{});f.Afghanistan,f.Albania,f.Algeria,f.Argentina,f.Armenia,f.Aruba,f.Australia,f.Azerbaijan,f.Bahrain,f.Bangladesh,f.Barbados,f.Belarus,f.Belize,f.Bermuda,f.Bolivia,f.BosniaAndHerzegovina,f.Botswana,f.Brazil,f.Brunei,f.Bulgaria,f.Burundi,f.Cambodia,f.Canada,f.CapeVerde,f.CaymanIslands,f.Chile,f.China,f.Colombia,f.Comoros,f.CostaRica,f.Croatia,f.Cuba,f.Cuba,f.Cyprus,f.CzechRepublic,f.Denmark,f.Djibouti,f.DominicanRepublic,f.AntiguaAndBarbuda,f.Dominica,f.Grenada,f.SaintKittsAndNevis,f.SaintLucia,f.SaintVincentAndTheGrenadines,f.Egypt,f.ElSalvador,f.EquatorialGuinea,f.Eritrea,f.Estonia,f.Ethiopia,f.Andorra,f.Austria,f.Belgium,f.Cyprus,f.Estonia,f.Finland,f.France,f.Germany,f.Greece,f.Ireland,f.Italy,f.Latvia,f.Lithuania,f.Luxembourg,f.Malta,f.Monaco,f.Netherlands,f.Portugal,f.Spain,f.Sweden,f.UnitedKingdom,f.FalklandIslands,f.Fiji,f.Gambia,f.Georgia,f.Ghana,f.Gibraltar,f.Guatemala,f.Guernsey,f.GuineaBissau,f.Guyana,f.Haiti,f.Honduras,f.HongKong,f.Hungary,f.Iceland,f.India,f.Bhutan,f.Indonesia,f.Iran,f.IsleOfMan,f.Israel,f.Jamaica,f.Japan,f.Jersey,f.Jordan,f.Kazakhstan,f.Kenya,f.Kuwait,f.Kyrgyzstan,f.Laos,f.Latvia,f.Lebanon,f.Lesotho,f.Liberia,f.Libya,f.Lithuania,f.Macau,f.NorthMacedonia,f.Madagascar,f.Malawi,f.Malaysia,f.Maldives,f.Malta,f.Mauritius,f.Mexico,f.Moldova,f.Mongolia,f.Morocco,f.Mozambique,f.Myanmar,f.Namibia,f.Nepal,f.NetherlandsAntilles,f.NewCaledonia,f.NewZealand,f.Nicaragua,f.Niger,f.Nigeria,f.NorthKorea,f.Norway,f.Oman,f.Pakistan,f.Panama,f.Paraguay,f.Peru,f.Philippines,f.Poland,f.Qatar,f.Romania,f.RussianFederation,f.Rwanda,f.SaudiArabia,f.Serbia,f.Seychelles,f.Singapore,f.Slovakia,f.Slovenia,f.SolomonIslands,f.Somalia,f.SouthAfrica,f.SouthKorea,f.SriLanka,f.Sudan,f.Suriname,f.Swaziland,f.Sweden,f.Switzerland,f.Syria,f.Taiwan,f.Tajikistan,f.Tanzania,f.Thailand,f.Tunisia,f.Turkey,f.Turkmenistan,f.Uganda,f.Ukraine,f.UnitedArabEmirates,f.UnitedKingdom,f.UnitedStates,f.Uruguay,f.Uzbekistan,f.Vanuatu,f.Venezuela,f.Vietnam,f.Yemen,f.Zambia,f.Zimbabwe;var _=(a=>(a.Afrikaans="af",a.Albanian="sq",a.Amharic="am",a.Arabic="ar",a.Armenian="hy",a.Azerbaijani="az",a.Bashkir="ba",a.Basque="eu",a.Belarusian="be",a.Bengali="bn",a.Berber="ber",a.Bhutani="dz",a.Bihari="bh",a.Bislama="bi",a.Bosnian="bs",a.Breten="br",a.Bulgarian="bg",a.Burmese="my",a.Cantonese="yue",a.Catalan="ca",a.Chinese="zh",a.Chuvash="cv",a.Corsican="co",a.Croatian="hr",a.Czech="cs",a.Danish="da",a.Dari="prs",a.Divehi="dv",a.Dutch="nl",a.English="en",a.Esperanto="eo",a.Estonian="et",a.Faroese="fo",a.Farsi="fa",a.Filipino="fil",a.Finnish="fi",a.French="fr",a.Frisian="fy",a.Galician="gl",a.Georgian="ka",a.German="de",a.Greek="el",a.Greenlandic="kl",a.Gujarati="gu",a.Haitian="ht",a.Hausa="ha",a.Hebrew="he",a.Hindi="hi",a.Hungarian="hu",a.Icelandic="is",a.Igbo="ig",a.Indonesian="id",a.Irish="ga",a.Italian="it",a.Japanese="ja",a.Javanese="jv",a.Kannada="kn",a.Karelian="krl",a.Kazakh="kk",a.Khmer="km",a.Komi="kv",a.Konkani="kok",a.Korean="ko",a.Kurdish="ku",a.Kyrgyz="ky",a.Lao="lo",a.Latin="la",a.Latvian="lv",a.Lithuanian="lt",a.Luxembourgish="lb",a.Ossetian="os",a.Macedonian="mk",a.Malagasy="mg",a.Malay="ms",a.Malayalam="ml",a.Maltese="mt",a.Maori="mi",a.Marathi="mr",a.Mari="mhr",a.Mongolian="mn",a.Montenegrin="me",a.Nepali="ne",a.NorthernSotho="nso",a.Norwegian="no",a.NorwegianBokmal="nb",a.NorwegianNynorsk="nn",a.Oriya="or",a.Pashto="ps",a.Persian="fa",a.Polish="pl",a.Portuguese="pt",a.Punjabi="pa",a.Quechua="qu",a.Romanian="ro",a.Russian="ru",a.Sakha="sah",a.Sami="se",a.Samoan="sm",a.Sanskrit="sa",a.Scots="gd",a.Serbian="sr",a.SerbianCyrillic="sr-Cyrl",a.Sesotho="st",a.Shona="sn",a.Sindhi="sd",a.Sinhala="si",a.Slovak="sk",a.Slovenian="sl",a.Somali="so",a.Spanish="es",a.Sudanese="su",a.Sutu="sx",a.Swahili="sw",a.Swedish="sv",a.Syriac="syr",a.Tagalog="tl",a.Tajik="tg",a.Tamazight="tmh",a.Tamil="ta",a.Tatar="tt",a.Telugu="te",a.Thai="th",a.Tibetan="bo",a.Tsonga="ts",a.Tswana="tn",a.Turkish="tr",a.Turkmen="tk",a.Ukrainian="uk",a.Urdu="ur",a.Uzbek="uz",a.Vietnamese="vi",a.Welsh="cy",a.Xhosa="xh",a.Yiddish="yi",a.Yoruba="yo",a.Zulu="zu",a))(_||{}),u=(a=>(a.Afrikaans="af",a.AfrikaansSouthAfrica="af-ZA",a.Albanian="sq",a.AlbanianAlbania="sq-AL",a.Amharic="am",a.AmharicEthiopia="am-ET",a.Arabic="ar",a.ArabicAlgeria="ar-DZ",a.ArabicBahrain="ar-BH",a.ArabicEgypt="ar-EG",a.ArabicIraq="ar-IQ",a.ArabicJordan="ar-JO",a.ArabicKuwait="ar-KW",a.ArabicLebanon="ar-LB",a.ArabicLibya="ar-LY",a.ArabicMorocco="ar-MA",a.ArabicOman="ar-OM",a.ArabicQatar="ar-QA",a.ArabicSaudiArabia="ar-SA",a.ArabicSyria="ar-SY",a.ArabicTunisia="ar-TN",a.ArabicUnitedArabEmirates="ar-AE",a.ArabicYemen="ar-YE",a.Armenian="hy",a.ArmenianArmenia="hy-AM",a.Azerbaijani="az",a.AzerbaijaniAzerbaijan="az-AZ",a.AzerbaijaniCyrillicAzerbaijan="az-Cyrl-AZ",a.Bashkir="ba",a.Basque="eu",a.BasqueSpain="eu-ES",a.Belarusian="be",a.BelarusianBelarus="be-BY",a.Bengali="bn",a.BengaliBangladesh="bn-BD",a.BengaliIndia="bn-IN",a.Berber="ber",a.Bhutani="dz",a.BhutaniBhutan="dz-BT",a.Bosnian="bs",a.BosnianBosniaAndHerzegovina="bs-BA",a.Breton="br",a.Bulgarian="bg",a.BulgarianBosniaAndHerzegovina="bg-BG",a.BulgarianBulgaria="bg-BG",a.Burmese="my",a.BurmeseMyanmar="my-MM",a.Cantonese="yue",a.CantoneseHongKong="yue-HK",a.Catalan="ca",a.CatalanSpain="ca-ES",a.Chechen="ce",a.Cherokee="chr",a.Chinese="zh",a.ChineseSimplified="zh-Hans",a.ChineseSimplifiedChina="zh-Hans-CN",a.ChineseSimplifiedHongKong="zh-Hans-HK",a.ChineseSimplifiedMacau="zh-Hans-MO",a.ChineseSimplifiedSingapore="zh-Hans-SG",a.ChineseTraditional="zh-Hant",a.ChineseTraditionalHongKong="zh-Hant-HK",a.ChineseTraditionalMacau="zh-Hant-MO",a.ChineseTraditionalSingapore="zh-Hant-SG",a.ChineseTraditionalTaiwan="zh-Hant-TW",a.Chuvash="cv",a.CorsicanFrance="co-FR",a.Croatian="hr",a.CroatianBosniaAndHerzegovina="hr-BA",a.CroatianCroatia="hr-HR",a.Czech="cs",a.CzechCzechRepublic="cs-CZ",a.Danish="da",a.DanishDenmark="da-DK",a.Dari="prs",a.DariAfghanistan="prs-AF",a.Divehi="dv",a.DivehiMaldives="dv-MV",a.Dutch="nl",a.DutchBelgium="nl-BE",a.DutchNetherlands="nl-NL",a.English="en",a.EnglishAustralia="en-AU",a.EnglishBelgium="en-BE",a.EnglishBelize="en-BZ",a.EnglishCanada="en-CA",a.EnglishCaribbean="en-029",a.EnglishIreland="en-IE",a.EnglishJamaica="en-JM",a.EnglishNewZealand="en-NZ",a.EnglishPhilippines="en-PH",a.EnglishSingapore="en-SG",a.EnglishSouthAfrica="en-ZA",a.EnglishTrinidadAndTobago="en-TT",a.EnglishUnitedKingdom="en-GB",a.EnglishUnitedStates="en-US",a.EnglishZimbabwe="en-ZW",a.Esperanto="eo",a.Estonian="et",a.EstonianEstonia="et-EE",a.Faroese="fo",a.FaroeseFaroeIslands="fo-FO",a.Farsi="fa",a.FarsiIran="fa-IR",a.Filipino="fil",a.FilipinoPhilippines="fil-PH",a.Finnish="fi",a.FinnishFinland="fi-FI",a.French="fr",a.FrenchBelgium="fr-BE",a.FrenchCanada="fr-CA",a.FrenchFrance="fr-FR",a.FrenchLuxembourg="fr-LU",a.FrenchMonaco="fr-MC",a.FrenchReunion="fr-RE",a.FrenchSwitzerland="fr-CH",a.Frisian="fy",a.FrisianNetherlands="fy-NL",a.Galician="gl",a.GalicianSpain="gl-ES",a.Georgian="ka",a.GeorgianGeorgia="ka-GE",a.German="de",a.GermanAustria="de-AT",a.GermanBelgium="de-BE",a.GermanGermany="de-DE",a.GermanLiechtenstein="de-LI",a.GermanLuxembourg="de-LU",a.GermanSwitzerland="de-CH",a.Greenlandic="kl",a.GreenlandicGreenland="kl-GL",a.Greek="el",a.GreekGreece="el-GR",a.Gujarati="gu",a.GujaratiIndia="gu-IN",a.Haitian="ht",a.Hausa="ha",a.HausaGhana="ha-GH",a.HausaNiger="ha-NE",a.HausaNigeria="ha-NG",a.Hebrew="he",a.HebrewIsrael="he-IL",a.Hindi="hi",a.HindiIndia="hi-IN",a.Hungarian="hu",a.HungarianHungary="hu-HU",a.Icelandic="is",a.IcelandicIceland="is-IS",a.Igbo="ig",a.IgboNigeria="ig-NG",a.Indonesian="id",a.IndonesianIndonesia="id-ID",a.Irish="ga",a.IrishIreland="ga-IE",a.Italian="it",a.ItalianItaly="it-IT",a.ItalianSwitzerland="it-CH",a.Japanese="ja",a.JapaneseJapan="ja-JP",a.Javanese="jv",a.Kannada="kn",a.KannadaIndia="kn-IN",a.Karelian="krl",a.Kazakh="kk",a.KazakhKazakhstan="kk-KZ",a.Khmer="km",a.KhmerCambodia="km-KH",a.KinyarwandaRwanda="rw-RW",a.Komi="kv",a.Konkani="kok",a.KonkaniIndia="kok-IN",a.Korean="ko",a.KoreanSouthKorea="ko-KR",a.Kurdish="ku",a.KurdishIraq="ku-IQ",a.KurdishTurkey="ku-TR",a.Kyrgyz="ky",a.KyrgyzKyrgyzstan="ky-KG",a.Lao="lo",a.LaoLaos="lo-LA",a.Latin="la",a.Latvian="lv",a.LatvianLatvia="lv-LV",a.Lithuanian="lt",a.LithuanianLithuania="lt-LT",a.Luxembourgish="lb",a.LuxembourgishBelgium="lb-LU",a.LuxembourgishLuxembourg="lb-LU",a.Macedonian="mk",a.MacedonianNorthMacedonia="mk-MK",a.Malagasy="mg",a.Malay="ms",a.MalayBrunei="ms-BN",a.MalayIndia="ms-IN",a.MalayMalaysia="ms-MY",a.MalaySingapore="ms-SG",a.Malayalam="ml",a.MalayalamIndia="ml-IN",a.Maltese="mt",a.MalteseMalta="mt-MT",a.Maori="mi",a.MaoriNewZealand="mi-NZ",a.Marathi="mr",a.MarathiIndia="mr-IN",a.Mari="chm",a.Mongolian="mn",a.MongolianMongolia="mn-MN",a.Montenegrin="me",a.MontenegrinMontenegro="me-ME",a.Nepali="ne",a.NepaliNepal="ne-NP",a.NorthernSotho="ns",a.NorthernSothoSouthAfrica="ns-ZA",a.Norwegian="nb",a.NorwegianBokmalNorway="nb-NO",a.NorwegianNynorskNorway="nn-NO",a.Oriya="or",a.OriyaIndia="or-IN",a.Ossetian="os",a.Pashto="ps",a.PashtoAfghanistan="ps-AF",a.Persian="fa",a.PersianIran="fa-IR",a.Polish="pl",a.PolishPoland="pl-PL",a.Portuguese="pt",a.PortugueseBrazil="pt-BR",a.PortuguesePortugal="pt-PT",a.Punjabi="pa",a.PunjabiIndia="pa-IN",a.PunjabiPakistan="pa-PK",a.Quechua="qu",a.QuechuaBolivia="qu-BO",a.QuechuaEcuador="qu-EC",a.QuechuaPeru="qu-PE",a.Romanian="ro",a.RomanianRomania="ro-RO",a.Russian="ru",a.RussianKazakhstan="ru-KZ",a.RussianKyrgyzstan="ru-KG",a.RussianRussia="ru-RU",a.RussianUkraine="ru-UA",a.Sakha="sah",a.Sanskrit="sa",a.SanskritIndia="sa-IN",a.Sami="se",a.SamiNorway="se-NO",a.SamiSweden="se-SE",a.SamiFinland="se-FI",a.Samoan="sm",a.SamoanSamoa="sm-WS",a.Scots="gd",a.Serbian="sr",a.SerbianBosniaAndHerzegovina="sr-BA",a.SerbianSerbiaAndMontenegro="sr-SP",a.SerbianCyrillic="sr-SP-Cyrl",a.SerbianCyrillicBosniaAndHerzegovina="sr-Cyrl-BA",a.SerbianCyrillicSerbiaAndMontenegro="sr-Cyrl-SP",a.Sesotho="st",a.SesothoSouthAfrica="st-ZA",a.Shona="sn",a.ShonaZimbabwe="sn-ZW",a.Sindhi="sd",a.SindhiPakistan="sd-PK",a.Sinhala="si",a.SinhalaSriLanka="si-LK",a.Slovak="sk",a.SlovakSlovakia="sk-SK",a.Slovenian="sl",a.SlovenianSlovenia="sl-SI",a.Somali="so",a.SomaliSomalia="so-SO",a.Spanish="es",a.SpanishArgentina="es-AR",a.SpanishBolivia="es-BO",a.SpanishChile="es-CL",a.SpanishColombia="es-CO",a.SpanishCostaRica="es-CR",a.SpanishCuba="es-CU",a.SpanishDominicanRepublic="es-DO",a.SpanishEcuador="es-EC",a.SpanishEquatorialGuinea="es-GQ",a.SpanishElSalvador="es-SV",a.SpanishGuatemala="es-GT",a.SpanishHonduras="es-HN",a.SpanishMexico="es-MX",a.SpanishNicaragua="es-NI",a.SpanishPanama="es-PA",a.SpanishParaguay="es-PY",a.SpanishPeru="es-PE",a.SpanishPuertoRico="es-PR",a.SpanishSpain="es-ES",a.SpanishUnitedStates="es-US",a.SpanishUruguay="es-UY",a.SpanishVenezuela="es-VE",a.Sudanese="su",a.Sutu="st",a.SutuSouthAfrica="st-ZA",a.Swahili="sw",a.SwahiliKenya="sw-KE",a.Swedish="sv",a.SwedishFinland="sv-FI",a.SwedishSweden="sv-SE",a.Syriac="syr",a.SyriacSyria="syr-SY",a.Tajik="tg",a.TajikTajikistan="tg-TJ",a.Tagalog="tl",a.TagalogPhilippines="tl-PH",a.Tamazight="tmh",a.Tamil="ta",a.TamilIndia="ta-IN",a.Tatar="tt",a.Telugu="te",a.TeluguIndia="te-IN",a.Thai="th",a.ThaiThailand="th-TH",a.Tibetan="bo",a.TibetanBhutan="bo-BT",a.TibetanChina="bo-CN",a.TibetanIndia="bo-IN",a.Tsonga="ts",a.Tswana="tn",a.TswanaSouthAfrica="tn-ZA",a.Turkish="tr",a.TurkishTurkey="tr-TR",a.Turkmen="tk",a.Ukrainian="uk",a.UkrainianUkraine="uk-UA",a.Urdu="ur",a.UrduAfghanistan="ur-AF",a.UrduIndia="ur-IN",a.UrduPakistan="ur-PK",a.Uzbek="uz",a.UzbekCyrillic="uz-Cyrl-UZ",a.UzbekLatin="uz-Latn-UZ",a.UzbekUzbekistan="uz-UZ",a.Vietnamese="vi",a.VietnameseVietnam="vi-VN",a.Welsh="cy",a.WelshUnitedKingdom="cy-GB",a.Xhosa="xh",a.XhosaSouthAfrica="xh-ZA",a.Yiddish="yi",a.Yoruba="yo",a.YorubaNigeria="yo-NG",a.ZhuyinMandarinChina="yue-Hant-CN",a.Zulu="zu",a.ZuluSouthAfrica="zu-ZA",a))(u||{}),c=(a=>(a.AfricaAbidjan="Africa/Abidjan",a.AfricaAccra="Africa/Accra",a.AfricaAddisAbaba="Africa/Addis_Ababa",a.AfricaAlgiers="Africa/Algiers",a.AfricaAsmara="Africa/Asmara",a.AfricaBamako="Africa/Bamako",a.AfricaBangui="Africa/Bangui",a.AfricaBanjul="Africa/Banjul",a.AfricaBissau="Africa/Bissau",a.AfricaBlantyre="Africa/Blantyre",a.AfricaBrazzaville="Africa/Brazzaville",a.AfricaBujumbura="Africa/Bujumbura",a.AfricaCairo="Africa/Cairo",a.AfricaCasablanca="Africa/Casablanca",a.AfricaCeuta="Africa/Ceuta",a.AfricaConakry="Africa/Conakry",a.AfricaDakar="Africa/Dakar",a.AfricaDarEsSalaam="Africa/Dar_es_Salaam",a.AfricaDjibouti="Africa/Djibouti",a.AfricaDouala="Africa/Douala",a.AfricaElAaiun="Africa/El_Aaiun",a.AfricaFreetown="Africa/Freetown",a.AfricaGaborone="Africa/Gaborone",a.AfricaHarare="Africa/Harare",a.AfricaJohannesburg="Africa/Johannesburg",a.AfricaJuba="Africa/Juba",a.AfricaKampala="Africa/Kampala",a.AfricaKhartoum="Africa/Khartoum",a.AfricaKigali="Africa/Kigali",a.AfricaKinshasa="Africa/Kinshasa",a.AfricaLagos="Africa/Lagos",a.AfricaLibreville="Africa/Libreville",a.AfricaLome="Africa/Lome",a.AfricaLuanda="Africa/Luanda",a.AfricaLubumbashi="Africa/Lubumbashi",a.AfricaLusaka="Africa/Lusaka",a.AfricaMalabo="Africa/Malabo",a.AfricaMaputo="Africa/Maputo",a.AfricaMaseru="Africa/Maseru",a.AfricaMbabane="Africa/Mbabane",a.AfricaMogadishu="Africa/Mogadishu",a.AfricaMonrovia="Africa/Monrovia",a.AfricaNairobi="Africa/Nairobi",a.AfricaNdjamena="Africa/Ndjamena",a.AfricaNiamey="Africa/Niamey",a.AfricaNouakchott="Africa/Nouakchott",a.AfricaOuagadougou="Africa/Ouagadougou",a.AfricaPortoNovo="Africa/Porto-Novo",a.AfricaSaoTome="Africa/Sao_Tome",a.AfricaTripoli="Africa/Tripoli",a.AfricaTunis="Africa/Tunis",a.AfricaWindhoek="Africa/Windhoek",a.AmericaAdak="America/Adak",a.AmericaAnchorage="America/Anchorage",a.AmericaAnguilla="America/Anguilla",a.AmericaAntigua="America/Antigua",a.AmericaAraguaina="America/Araguaina",a.AmericaArgentinaBuenosAires="America/Argentina/Buenos_Aires",a.AmericaArgentinaCatamarca="America/Argentina/Catamarca",a.AmericaArgentinaCordoba="America/Argentina/Cordoba",a.AmericaArgentinaJujuy="America/Argentina/Jujuy",a.AmericaArgentinaLaRioja="America/Argentina/La_Rioja",a.AmericaArgentinaMendoza="America/Argentina/Mendoza",a.AmericaArgentinaRioGallegos="America/Argentina/Rio_Gallegos",a.AmericaArgentinaSalta="America/Argentina/Salta",a.AmericaArgentinaSanJuan="America/Argentina/San_Juan",a.AmericaArgentinaSanLuis="America/Argentina/San_Luis",a.AmericaArgentinaTucuman="America/Argentina/Tucuman",a.AmericaArgentinaUshuaia="America/Argentina/Ushuaia",a.AmericaAruba="America/Aruba",a.AmericaAsuncion="America/Asuncion",a.AmericaAtikokan="America/Atikokan",a.AmericaAtka="America/Atka",a.AmericaBahia="America/Bahia",a.AmericaBahiaBanderas="America/Bahia_Banderas",a.AmericaBarbados="America/Barbados",a.AmericaBelem="America/Belem",a.AmericaBelize="America/Belize",a.AmericaBlancSablon="America/Blanc-Sablon",a.AmericaBoaVista="America/Boa_Vista",a.AmericaBogota="America/Bogota",a.AmericaBoise="America/Boise",a.AmericaCambridgeBay="America/Cambridge_Bay",a.AmericaCampoGrande="America/Campo_Grande",a.AmericaCancun="America/Cancun",a.AmericaCaracas="America/Caracas",a.AmericaCayenne="America/Cayenne",a.AmericaCayman="America/Cayman",a.AmericaChicago="America/Chicago",a.AmericaChihuahua="America/Chihuahua",a.AmericaCoralHarbour="America/Coral_Harbour",a.AmericaCordoba="America/Cordoba",a.AmericaCostaRica="America/Costa_Rica",a.AmericaCreston="America/Creston",a.AmericaCuiaba="America/Cuiaba",a.AmericaCuracao="America/Curacao",a.AmericaDanmarkshavn="America/Danmarkshavn",a.AmericaDawson="America/Dawson",a.AmericaDawsonCreek="America/Dawson_Creek",a.AmericaDenver="America/Denver",a.AmericaDetroit="America/Detroit",a.AmericaDominica="America/Dominica",a.AmericaEdmonton="America/Edmonton",a.AmericaEirunepe="America/Eirunepe",a.AmericaElSalvador="America/El_Salvador",a.AmericaFortaleza="America/Fortaleza",a.AmericaGlaceBay="America/Glace_Bay",a.AmericaGodthab="America/Godthab",a.AmericaGooseBay="America/Goose_Bay",a.AmericaGrandTurk="America/Grand_Turk",a.AmericaGrenada="America/Grenada",a.AmericaGuadeloupe="America/Guadeloupe",a.AmericaGuatemala="America/Guatemala",a.AmericaGuayaquil="America/Guayaquil",a.AmericaGuyana="America/Guyana",a.AmericaHalifax="America/Halifax",a.AmericaHavana="America/Havana",a.AmericaHermosillo="America/Hermosillo",a.AmericaIndianaIndianapolis="America/Indiana/Indianapolis",a.AmericaIndianaKnox="America/Indiana/Knox",a.AmericaIndianaMarengo="America/Indiana/Marengo",a.AmericaIndianaPetersburg="America/Indiana/Petersburg",a.AmericaIndianaTellCity="America/Indiana/Tell_City",a.AmericaIndianaVevay="America/Indiana/Vevay",a.AmericaIndianaVincennes="America/Indiana/Vincennes",a.AmericaIndianaWinamac="America/Indiana/Winamac",a.AmericaInuvik="America/Inuvik",a.AmericaIqaluit="America/Iqaluit",a.AmericaJamaica="America/Jamaica",a.AmericaJuneau="America/Juneau",a.AmericaKentuckyLouisville="America/Kentucky/Louisville",a.AmericaKentuckyMonticello="America/Kentucky/Monticello",a.AmericaKralendijk="America/Kralendijk",a.AmericaLaPaz="America/La_Paz",a.AmericaLima="America/Lima",a.AmericaLosAngeles="America/Los_Angeles",a.AmericaLouisville="America/Louisville",a.AmericaLowerPrinces="America/Lower_Princes",a.AmericaMaceio="America/Maceio",a.AmericaManagua="America/Managua",a.AmericaManaus="America/Manaus",a.AmericaMarigot="America/Marigot",a.AmericaMartinique="America/Martinique",a.AmericaMatamoros="America/Matamoros",a.AmericaMazatlan="America/Mazatlan",a.AmericaMenominee="America/Menominee",a.AmericaMerida="America/Merida",a.AmericaMetlakatla="America/Metlakatla",a.AmericaMexicoCity="America/Mexico_City",a.AmericaMiquelon="America/Miquelon",a.AmericaMoncton="America/Moncton",a.AmericaMonterrey="America/Monterrey",a.AmericaMontevideo="America/Montevideo",a.AmericaMontserrat="America/Montserrat",a.AmericaMontreal="America/Montreal",a.AmericaNassau="America/Nassau",a.AmericaNewYork="America/New_York",a.AmericaNipigon="America/Nipigon",a.AmericaNome="America/Nome",a.AmericaNoronha="America/Noronha",a.AmericaNorthDakotaBeulah="America/North_Dakota/Beulah",a.AmericaNorthDakotaCenter="America/North_Dakota/Center",a.AmericaNorthDakotaNewSalem="America/North_Dakota/New_Salem",a.AmericaOjinaga="America/Ojinaga",a.AmericaPanama="America/Panama",a.AmericaPangnirtung="America/Pangnirtung",a.AmericaParamaribo="America/Paramaribo",a.AmericaPhoenix="America/Phoenix",a.AmericaPortAuPrince="America/Port-au-Prince",a.AmericaPortOfSpain="America/Port_of_Spain",a.AmericaPortoVelho="America/Porto_Velho",a.AmericaPuertoRico="America/Puerto_Rico",a.AmericaRainyRiver="America/Rainy_River",a.AmericaRankinInlet="America/Rankin_Inlet",a.AmericaRecife="America/Recife",a.AmericaRegina="America/Regina",a.AmericaResolute="America/Resolute",a.AmericaRioBranco="America/Rio_Branco",a.AmericaSantaIsabel="America/Santa_Isabel",a.AmericaSantarem="America/Santarem",a.AmericaSantiago="America/Santiago",a.AmericaSantoDomingo="America/Santo_Domingo",a.AmericaSaoPaulo="America/Sao_Paulo",a.AmericaScoresbysund="America/Scoresbysund",a.AmericaShiprock="America/Shiprock",a.AmericaSitka="America/Sitka",a.AmericaStBarthelemy="America/St_Barthelemy",a.AmericaStJohns="America/St_Johns",a.AmericaStKitts="America/St_Kitts",a.AmericaStLucia="America/St_Lucia",a.AmericaStThomas="America/St_Thomas",a.AmericaStVincent="America/St_Vincent",a.AmericaSwiftCurrent="America/Swift_Current",a.AmericaTegucigalpa="America/Tegucigalpa",a.AmericaThule="America/Thule",a.AmericaThunderBay="America/Thunder_Bay",a.AmericaTijuana="America/Tijuana",a.AmericaToronto="America/Toronto",a.AmericaTortola="America/Tortola",a.AmericaVancouver="America/Vancouver",a.AmericaWhitehorse="America/Whitehorse",a.AmericaWinnipeg="America/Winnipeg",a.AmericaYakutat="America/Yakutat",a.AmericaYellowknife="America/Yellowknife",a.AntarcticaCasey="Antarctica/Casey",a.AntarcticaDavis="Antarctica/Davis",a.AntarcticaDumontDUrville="Antarctica/DumontDUrville",a.AntarcticaMacquarie="Antarctica/Macquarie",a.AntarcticaMawson="Antarctica/Mawson",a.AntarcticaMcMurdo="Antarctica/McMurdo",a.AntarcticaPalmer="Antarctica/Palmer",a.AntarcticaRothera="Antarctica/Rothera",a.AntarcticaSyowa="Antarctica/Syowa",a.AntarcticaTroll="Antarctica/Troll",a.AntarcticaVostok="Antarctica/Vostok",a.ArcticLongyearbyen="Arctic/Longyearbyen",a.AsiaAden="Asia/Aden",a.AsiaAlmaty="Asia/Almaty",a.AsiaAmman="Asia/Amman",a.AsiaAnadyr="Asia/Anadyr",a.AsiaAqtau="Asia/Aqtau",a.AsiaAqtobe="Asia/Aqtobe",a.AsiaAshgabat="Asia/Ashgabat",a.AsiaBaghdad="Asia/Baghdad",a.AsiaBahrain="Asia/Bahrain",a.AsiaBaku="Asia/Baku",a.AsiaBangkok="Asia/Bangkok",a.AsiaBarnaul="Asia/Barnaul",a.AsiaBeirut="Asia/Beirut",a.AsiaBishkek="Asia/Bishkek",a.AsiaBrunei="Asia/Brunei",a.AsiaChita="Asia/Chita",a.AsiaChoibalsan="Asia/Choibalsan",a.AsiaColombo="Asia/Colombo",a.AsiaDamascus="Asia/Damascus",a.AsiaDhaka="Asia/Dhaka",a.AsiaDili="Asia/Dili",a.AsiaDubai="Asia/Dubai",a.AsiaDushanbe="Asia/Dushanbe",a.AsiaFamagusta="Asia/Famagusta",a.AsiaGaza="Asia/Gaza",a.AsiaHebron="Asia/Hebron",a.AsiaHoChiMinh="Asia/Ho_Chi_Minh",a.AsiaHongKong="Asia/Hong_Kong",a.AsiaHovd="Asia/Hovd",a.AsiaIrkutsk="Asia/Irkutsk",a.AsiaJakarta="Asia/Jakarta",a.AsiaJayapura="Asia/Jayapura",a.AsiaJerusalem="Asia/Jerusalem",a.AsiaKabul="Asia/Kabul",a.AsiaKamchatka="Asia/Kamchatka",a.AsiaKarachi="Asia/Karachi",a.AsiaKathmandu="Asia/Kathmandu",a.AsiaKhandyga="Asia/Khandyga",a.AsiaKolkata="Asia/Kolkata",a.AsiaKrasnoyarsk="Asia/Krasnoyarsk",a.AsiaKualaLumpur="Asia/Kuala_Lumpur",a.AsiaKuching="Asia/Kuching",a.AsiaKuwait="Asia/Kuwait",a.AsiaMacau="Asia/Macau",a.AsiaMagadan="Asia/Magadan",a.AsiaMakassar="Asia/Makassar",a.AsiaManila="Asia/Manila",a.AsiaMuscat="Asia/Muscat",a.AsiaNicosia="Asia/Nicosia",a.AsiaNovokuznetsk="Asia/Novokuznetsk",a.AsiaNovosibirsk="Asia/Novosibirsk",a.AsiaOmsk="Asia/Omsk",a.AsiaOral="Asia/Oral",a.AsiaPhnomPenh="Asia/Phnom_Penh",a.AsiaPontianak="Asia/Pontianak",a.AsiaPyongyang="Asia/Pyongyang",a.AsiaQatar="Asia/Qatar",a.AsiaQyzylorda="Asia/Qyzylorda",a.AsiaRangoon="Asia/Rangoon",a.AsiaRiyadh="Asia/Riyadh",a.AsiaSakhalin="Asia/Sakhalin",a.AsiaSamarkand="Asia/Samarkand",a.AsiaSeoul="Asia/Seoul",a.AsiaShanghai="Asia/Shanghai",a.AsiaSingapore="Asia/Singapore",a.AsiaSrednekolymsk="Asia/Srednekolymsk",a.AsiaTaipei="Asia/Taipei",a.AsiaTashkent="Asia/Tashkent",a.AsiaTbilisi="Asia/Tbilisi",a.AsiaTehran="Asia/Tehran",a.AsiaThimphu="Asia/Thimphu",a.AsiaTokyo="Asia/Tokyo",a.AsiaTomsk="Asia/Tomsk",a.AsiaUlaanbaatar="Asia/Ulaanbaatar",a.AsiaUrumqi="Asia/Urumqi",a.AsiaUstNera="Asia/Ust-Nera",a.AsiaVientiane="Asia/Vientiane",a.AsiaVladivostok="Asia/Vladivostok",a.AsiaYakutsk="Asia/Yakutsk",a.AsiaYekaterinburg="Asia/Yekaterinburg",a.AsiaYerevan="Asia/Yerevan",a.AtlanticAzores="Atlantic/Azores",a.AtlanticBermuda="Atlantic/Bermuda",a.AtlanticCanary="Atlantic/Canary",a.AtlanticCapeVerde="Atlantic/Cape_Verde",a.AtlanticFaroe="Atlantic/Faroe",a.AtlanticMadeira="Atlantic/Madeira",a.AtlanticReykjavik="Atlantic/Reykjavik",a.AtlanticSouthGeorgia="Atlantic/South_Georgia",a.AtlanticStHelena="Atlantic/St_Helena",a.AtlanticStanley="Atlantic/Stanley",a.AustraliaAdelaide="Australia/Adelaide",a.AustraliaBrisbane="Australia/Brisbane",a.AustraliaBrokenHill="Australia/Broken_Hill",a.AustraliaCanberra="Australia/Canberra",a.AustraliaCurrie="Australia/Currie",a.AustraliaDarwin="Australia/Darwin",a.AustraliaEucla="Australia/Eucla",a.AustraliaHobart="Australia/Hobart",a.AustraliaLindeman="Australia/Lindeman",a.AustraliaLordHowe="Australia/Lord_Howe",a.AustraliaMelbourne="Australia/Melbourne",a.AustraliaPerth="Australia/Perth",a.AustraliaSydney="Australia/Sydney",a.EuropeAmsterdam="Europe/Amsterdam",a.EuropeAndorra="Europe/Andorra",a.EuropeAthens="Europe/Athens",a.EuropeBelgrade="Europe/Belgrade",a.EuropeBerlin="Europe/Berlin",a.EuropeBratislava="Europe/Bratislava",a.EuropeBrussels="Europe/Brussels",a.EuropeBucharest="Europe/Bucharest",a.EuropeBudapest="Europe/Budapest",a.EuropeBusingen="Europe/Busingen",a.EuropeChisinau="Europe/Chisinau",a.EuropeCopenhagen="Europe/Copenhagen",a.EuropeDublin="Europe/Dublin",a.EuropeGibraltar="Europe/Gibraltar",a.EuropeGuernsey="Europe/Guernsey",a.EuropeHelsinki="Europe/Helsinki",a.EuropeIsleOfMan="Europe/Isle_of_Man",a.EuropeIstanbul="Europe/Istanbul",a.EuropeJersey="Europe/Jersey",a.EuropeKaliningrad="Europe/Kaliningrad",a.EuropeKiev="Europe/Kiev",a.EuropeKirov="Europe/Kirov",a.EuropeLisbon="Europe/Lisbon",a.EuropeLjubljana="Europe/Ljubljana",a.EuropeLondon="Europe/London",a.EuropeLuxembourg="Europe/Luxembourg",a.EuropeMadrid="Europe/Madrid",a.EuropeMalta="Europe/Malta",a.EuropeMariehamn="Europe/Mariehamn",a.EuropeMinsk="Europe/Minsk",a.EuropeMonaco="Europe/Monaco",a.EuropeMoscow="Europe/Moscow",a.EuropeOslo="Europe/Oslo",a.EuropeParis="Europe/Paris",a.EuropePodgorica="Europe/Podgorica",a.EuropePrague="Europe/Prague",a.EuropeRiga="Europe/Riga",a.EuropeRome="Europe/Rome",a.EuropeSamara="Europe/Samara",a.EuropeSanMarino="Europe/San_Marino",a.EuropeSarajevo="Europe/Sarajevo",a.EuropeSimferopol="Europe/Simferopol",a.EuropeSkopje="Europe/Skopje",a.EuropeSofia="Europe/Sofia",a.EuropeStockholm="Europe/Stockholm",a.EuropeTallinn="Europe/Tallinn",a.EuropeTirane="Europe/Tirane",a.EuropeUzhgorod="Europe/Uzhgorod",a.EuropeVaduz="Europe/Vaduz",a.EuropeVatican="Europe/Vatican",a.EuropeVienna="Europe/Vienna",a.EuropeVilnius="Europe/Vilnius",a.EuropeVolgograd="Europe/Volgograd",a.EuropeWarsaw="Europe/Warsaw",a.EuropeZagreb="Europe/Zagreb",a.EuropeZaporozhye="Europe/Zaporozhye",a.EuropeZurich="Europe/Zurich",a.GMT="GMT",a.IndianAntananarivo="Indian/Antananarivo",a.IndianChagos="Indian/Chagos",a.IndianChristmas="Indian/Christmas",a.IndianCocos="Indian/Cocos",a.IndianComoro="Indian/Comoro",a.IndianKerguelen="Indian/Kerguelen",a.IndianMahe="Indian/Mahe",a.IndianMaldives="Indian/Maldives",a.IndianMauritius="Indian/Mauritius",a.IndianMayotte="Indian/Mayotte",a.IndianReunion="Indian/Reunion",a.PacificApia="Pacific/Apia",a.PacificAuckland="Pacific/Auckland",a.PacificBougainville="Pacific/Bougainville",a.PacificChatham="Pacific/Chatham",a.PacificChuuk="Pacific/Chuuk",a.PacificEaster="Pacific/Easter",a.PacificEfate="Pacific/Efate",a.PacificEnderbury="Pacific/Enderbury",a.PacificFakaofo="Pacific/Fakaofo",a.PacificFiji="Pacific/Fiji",a.PacificFunafuti="Pacific/Funafuti",a.PacificGalapagos="Pacific/Galapagos",a.PacificGambier="Pacific/Gambier",a.PacificGuadalcanal="Pacific/Guadalcanal",a.PacificGuam="Pacific/Guam",a.PacificHonolulu="Pacific/Honolulu",a.PacificJohnston="Pacific/Johnston",a.PacificKiritimati="Pacific/Kiritimati",a.PacificKosrae="Pacific/Kosrae",a.PacificKwajalein="Pacific/Kwajalein",a.PacificMajuro="Pacific/Majuro",a.PacificMarquesas="Pacific/Marquesas",a.PacificMidway="Pacific/Midway",a.PacificNauru="Pacific/Nauru",a.PacificNiue="Pacific/Niue",a.PacificNorfolk="Pacific/Norfolk",a.PacificNoumea="Pacific/Noumea",a.PacificPagoPago="Pacific/Pago_Pago",a.PacificPalau="Pacific/Palau",a.PacificPitcairn="Pacific/Pitcairn",a.PacificPohnpei="Pacific/Pohnpei",a.PacificPonape="Pacific/Ponape",a.PacificPortMoresby="Pacific/Port_Moresby",a.PacificRarotonga="Pacific/Rarotonga",a.PacificSaipan="Pacific/Saipan",a.PacificSamoa="Pacific/Samoa",a.PacificTahiti="Pacific/Tahiti",a.PacificTarawa="Pacific/Tarawa",a.PacificTongatapu="Pacific/Tongatapu",a.PacificTruk="Pacific/Truk",a.PacificWake="Pacific/Wake",a.PacificWallis="Pacific/Wallis",a.PacificYap="Pacific/Yap",a))(c||{}),r=(a=>(a.UTC_MINUS_12="UTC-12",a.UTC_MINUS_11_30="UTC-11:30",a.UTC_MINUS_11="UTC-11",a.UTC_MINUS_10_30="UTC-10:30",a.UTC_MINUS_10="UTC-10",a.UTC_MINUS_9_30="UTC-9:30",a.UTC_MINUS_9="UTC-09",a.UTC_MINUS_8_45="UTC-8:45",a.UTC_MINUS_8="UTC-08",a.UTC_MINUS_7="UTC-07",a.UTC_MINUS_6_30="UTC-6:30",a.UTC_MINUS_6="UTC-06",a.UTC_MINUS_5_45="UTC-5:45",a.UTC_MINUS_5_30="UTC-5:30",a.UTC_MINUS_5="UTC-05",a.UTC_MINUS_4_30="UTC-4:30",a.UTC_MINUS_4="UTC-04",a.UTC_MINUS_3_30="UTC-3:30",a.UTC_MINUS_3="UTC-03",a.UTC_MINUS_2_30="UTC-2:30",a.UTC_MINUS_2="UTC-02",a.UTC_MINUS_1="UTC-01",a.UTC_0="UTC+00",a.UTC_PLUS_1="UTC+01",a.UTC_PLUS_2="UTC+02",a.UTC_PLUS_3="UTC+03",a.UTC_PLUS_3_30="UTC+3:30",a.UTC_PLUS_4="UTC+04",a.UTC_PLUS_4_30="UTC+4:30",a.UTC_PLUS_5="UTC+05",a.UTC_PLUS_5_30="UTC+5:30",a.UTC_PLUS_5_45="UTC+5:45",a.UTC_PLUS_6="UTC+06",a.UTC_PLUS_6_30="UTC+6:30",a.UTC_PLUS_7="UTC+07",a.UTC_PLUS_8="UTC+08",a.UTC_PLUS_8_45="UTC+8:45",a.UTC_PLUS_9="UTC+09",a.UTC_PLUS_9_30="UTC+9:30",a.UTC_PLUS_10="UTC+10",a.UTC_PLUS_10_30="UTC+10:30",a.UTC_PLUS_11="UTC+11",a.UTC_PLUS_11_30="UTC+11:30",a.UTC_PLUS_12="UTC+12",a.UTC_PLUS_12_45="UTC+12:45",a.UTC_PLUS_13="UTC+13",a.UTC_PLUS_13_45="UTC+13:45",a.UTC_PLUS_14="UTC+14",a))(r||{}),l=(a=>(a.AcreTime="ACT",a.AfghanistanTime="AFT",a.AIXCentralEuropeanTime="DFT",a.AlaskaDaylightTime="AKDT",a.AlaskaStandardTime="AKST",a.AlmaAtaTime="ALMT",a.AmazonSummerTime="AMST",a.AmazonTime="AMT",a.AnadyrTime="ANAT",a.AqtobeTime="AQTT",a.ArabiaStandardTime="AST",a.ArgentinaTime="ART",a.ArmeniaTime="AMT",a.ASEANCommonTime="ASEAN",a.AtlanticDaylightTime="ADT",a.AtlanticStandardTime="AST",a.AustralianCentralDaylightSavingTime="ACDT",a.AustralianCentralStandardTime="ACST",a.AustralianCentralWesternStandardTime="ACWST",a.AustralianEasternDaylightSavingTime="AEDT",a.AustralianEasternStandardTime="AEST",a.AustralianEasternTime="AET",a.AustralianWesternStandardTime="AWST",a.AzerbaijanTime="AZT",a.AzoresStandardTime="AZOT",a.AzoresSummerTime="AZOST",a.BakerIslandTime="BIT",a.BangladeshStandardTime="BST",a.BhutanTime="BTT",a.BoliviaTime="BOT",a.BougainvilleStandardTime="BST",a.BrasiliaSummerTime="BRST",a.BrasiliaTime="BRT",a.BritishIndianOceanTime="BIOT",a.BritishSummerTime="BST",a.BruneiTime="BNT",a.CapeVerdeTime="CVT",a.CentralAfricaTime="CAT",a.CentralDaylightTime="CDT",a.CentralEuropeanSummerTime="CEST",a.CentralEuropeanTime="CET",a.CentralIndonesiaTime="WITA",a.CentralStandardTime="CST",a.CentralTime="CT",a.CentralWesternStandardTime="CWST",a.ChamorroStandardTime="CHST",a.ChathamDaylightTime="CHADT",a.ChathamStandardTime="CHAST",a.ChileStandardTime="CLT",a.ChileSummerTime="CLST",a.ChinaStandardTime="CST",a.ChoibalsanStandardTime="CHOT",a.ChoibalsanSummerTime="CHOST",a.ChristmasIslandTime="CXT",a.ChuukTime="CHUT",a.ClipptertonIslandStandardTime="CIST",a.CocosIslandsTime="CCT",a.ColombiaSummerTime="COST",a.ColombiaTime="COT",a.CookIslandTime="CKT",a.CoordinatedUniversalTime="UTC",a.CubaDaylightTime="CDT",a.CubaStandardTime="CST",a.DavisTime="DAVT",a.DumontDUrvilleTime="DDUT",a.EastAfricaTime="EAT",a.EasterIslandStandardTime="EAST",a.EasterIslandSummerTime="EASST",a.EasternCaribbeanTime="ECT",a.EasternDaylightTime="EDT",a.EasternEuropeanSummerTime="EEST",a.EasternEuropeanTime="EET",a.EasternGreenlandSummerTime="EGST",a.EasternGreenlandTime="EGT",a.EasternIndonesianTime="WIT",a.EasternStandardTime="EST",a.EasternTime="ET",a.EcuadorTime="ECT",a.FalklandIslandsSummerTime="FKST",a.FalklandIslandsTime="FKT",a.FernandoDeNoronhaTime="FNT",a.FijiTime="FJT",a.FrenchGuianaTime="GFT",a.FrenchSouthernAndAntarcticTime="TFT",a.FurtherEasternEuropeanTime="FET",a.GalapagosTime="GALT",a.GambierIslandTime="GIT",a.GambierIslandsTime="GAMT",a.GeorgiaStandardTime="GET",a.GilbertIslandTime="GILT",a.GreenwichMeanTime="GMT",a.GulfStandardTime="GST",a.GuyanaTime="GYT",a.HawaiiAleutianDaylightTime="HDT",a.HawaiiAleutianStandardTime="HST",a.HeardAndMcDonaldIslandsTime="HMT",a.HeureAvanceeDEuropeCentraleTime="HAEC",a.HongKongTime="HKT",a.HovdSummerTime="HOVST",a.HovdTime="HOVT",a.IndianOceanTime="IOT",a.IndianStandardTime="IST",a.IndochinaTime="ICT",a.InternationalDayLineWestTime="IDLW",a.IranDaylightTime="IRDT",a.IranStandardTime="IRST",a.IrishStandardTime="IST",a.IrkutskSummerTime="IRKST",a.IrkutskTime="IRKT",a.IsraelDaylightTime="IDT",a.IsraelStandardTime="IST",a.JapanStandardTime="JST",a.KaliningradTime="KALT",a.KamchatkaTime="KAMT",a.KoreaStandardTime="KST",a.KosraeTime="KOST",a.KrasnoyarskSummerTime="KRAST",a.KrasnoyarskTime="KRAT",a.KyrgyzstanTime="KGT",a.LineIslandsTime="LINT",a.KazakhstanStandardTime="KAST",a.LordHoweStandardTime="LHST",a.LordHoweSummerTime="LHST",a.MacquarieIslandStationTime="MIST",a.MagadanTime="MAGT",a.MalaysiaStandardTime="MST",a.MalaysiaTime="MYT",a.MaldivesTime="MVT",a.MarquesasIslandsTime="MART",a.MarshallIslandsTime="MHT",a.MauritiusTime="MUT",a.MawsonStationTime="MAWT",a.MiddleEuropeanSummerTime="MEDT",a.MiddleEuropeanTime="MET",a.MoscowTime="MSK",a.MountainDaylightTime="MDT",a.MountainStandardTime="MST",a.MyanmarStandardTime="MMT",a.NepalTime="NCT",a.NauruTime="NRT",a.NewCaledoniaTime="NCT",a.NewZealandDaylightTime="NZDT",a.NewZealandStandardTime="NZST",a.NewfoundlandDaylightTime="NDT",a.NewfoundlandStandardTime="NST",a.NewfoundlandTime="NT",a.NiueTime="NUT",a.NorfolkIslandTime="NFT",a.NovosibirskTime="NOVT",a.OmskTime="OMST",a.OralTime="ORAT",a.PacificDaylightTime="PDT",a.PacificStandardTime="PST",a.PakistanStandardTime="PKT",a.PalauTime="PWT",a.PapuaNewGuineaTime="PGT",a.ParaguaySummerTime="PYST",a.ParaguayTime="PYT",a.PeruTime="PET",a.PhilippineStandardTime="PHST",a.PhilippineTime="PHT",a.PhoenixIslandTime="PHOT",a.PitcairnTime="PST",a.PohnpeiStandardTime="PONT",a.ReunionTime="RET",a.RotheraResearchStationTime="ROTT",a.SaintPierreAndMiquelonDaylightTime="PMDT",a.SaintPierreAndMiquelonStandardTime="PMST",a.SakhalinIslandTime="SAKT",a.SamaraTime="SAMT",a.SamoaDaylightTime="SDT",a.SamoaStandardTime="SST",a.SeychellesTime="SCT",a.ShowaStationTime="SYOT",a.SingaporeStandardTime="SST",a.SingaporeTime="SGT",a.SolomonIslandsTime="SBT",a.SouthAfricanStandardTime="SAST",a.SouthGeorgiaAndTheSouthSandwichIslandsTime="GST",a.SrednekolymskTime="SRET",a.SriLankaStandardTime="SLST",a.SurinameTime="SRT",a.TahitiTime="TAHT",a.TajikistanTime="TJT",a.ThailandStandardTime="THA",a.TimorLesteTime="TLT",a.TokelauTime="TKT",a.TongaTime="TOT",a.TurkeyTime="TRT",a.TurkmenistanTime="TMT",a.TuvaluTime="TVT",a.UlaanbaatarStandardTime="ULAT",a.UlaanbaatarSummerTime="ULAST",a.UruguayStandardTime="UYT",a.UruguaySummerTime="UYST",a.UzbekistanTime="UZT",a.VanuatuTime="VUT",a.VenezuelaStandardTime="VET",a.VladivostokTime="VLAT",a.VolgogradTime="VOLT",a.VostokStationTime="VOST",a.WakeIslandTime="WAKT",a.WestAfricaSummerTime="WAST",a.WestAfricaTime="WAT",a.WestGreenlandSummerTime="WGST",a.WestGreenlandTime="WGT",a.WestKazakhstanTime="WKT",a.WesternEuropeanSummerTime="WEDT",a.WesternEuropeanTime="WET",a.WesternIndonesianTime="WIT",a.WesternStandardTime="WST",a.YakutskTime="YAKT",a.YekaterinburgTime="YEKT",a))(l||{});r.UTC_MINUS_5;r.UTC_PLUS_4_30;r.UTC_PLUS_1;r.UTC_MINUS_8;r.UTC_MINUS_9;r.UTC_PLUS_6;r.UTC_MINUS_3;r.UTC_MINUS_4;r.UTC_PLUS_12;r.UTC_PLUS_5;r.UTC_PLUS_3;r.UTC_MINUS_3;r.UTC_PLUS_4;r.UTC_MINUS_3;r.UTC_MINUS_4;r.UTC_PLUS_10_30;r.UTC_PLUS_9_30;r.UTC_PLUS_8_45;r.UTC_PLUS_11;r.UTC_PLUS_10;r.UTC_PLUS_10;r.UTC_PLUS_8;r.UTC_PLUS_4;r.UTC_MINUS_1;r.UTC_0;r.UTC_MINUS_12;r.UTC_PLUS_6;r.UTC_PLUS_6;r.UTC_MINUS_4;r.UTC_PLUS_11;r.UTC_MINUS_2;r.UTC_MINUS_3;r.UTC_PLUS_6;r.UTC_PLUS_1;r.UTC_PLUS_8;r.UTC_MINUS_1;r.UTC_PLUS_2;r.UTC_MINUS_5;r.UTC_PLUS_2;r.UTC_PLUS_1;r.UTC_PLUS_8;r.UTC_MINUS_6;r.UTC_MINUS_5;r.UTC_PLUS_8_45;r.UTC_PLUS_10;r.UTC_PLUS_13_45;r.UTC_PLUS_12_45;r.UTC_MINUS_4;r.UTC_MINUS_3;r.UTC_PLUS_8;r.UTC_PLUS_8;r.UTC_PLUS_9;r.UTC_PLUS_7;r.UTC_PLUS_10;r.UTC_MINUS_8;r.UTC_PLUS_6_30;r.UTC_MINUS_4;r.UTC_MINUS_5;r.UTC_MINUS_10;r.UTC_0;r.UTC_MINUS_4;r.UTC_MINUS_5;r.UTC_PLUS_7;r.UTC_PLUS_10;r.UTC_PLUS_3;r.UTC_MINUS_6;r.UTC_MINUS_5;r.UTC_MINUS_4;r.UTC_MINUS_4;r.UTC_PLUS_3;r.UTC_PLUS_2;r.UTC_0;r.UTC_MINUS_1;r.UTC_PLUS_9;r.UTC_MINUS_5;r.UTC_MINUS_5;r.UTC_MINUS_5;r.UTC_MINUS_3;r.UTC_MINUS_4;r.UTC_MINUS_2;r.UTC_PLUS_12;r.UTC_MINUS_3;r.UTC_PLUS_5;r.UTC_PLUS_3;r.UTC_MINUS_6;r.UTC_MINUS_9;r.UTC_MINUS_9;r.UTC_PLUS_4;r.UTC_PLUS_12;r.UTC_0;r.UTC_PLUS_4;r.UTC_MINUS_4;r.UTC_MINUS_9;r.UTC_MINUS_10;r.UTC_PLUS_5;r.UTC_PLUS_8;r.UTC_PLUS_8;r.UTC_PLUS_7;r.UTC_PLUS_3;r.UTC_PLUS_5_30;r.UTC_PLUS_7;r.UTC_MINUS_12;r.UTC_PLUS_4_30;r.UTC_PLUS_3_30;r.UTC_PLUS_1;r.UTC_PLUS_8;r.UTC_PLUS_3;r.UTC_PLUS_2;r.UTC_PLUS_9;r.UTC_PLUS_2;r.UTC_PLUS_12;r.UTC_PLUS_9;r.UTC_PLUS_11;r.UTC_PLUS_7;r.UTC_PLUS_6;r.UTC_PLUS_14;r.UTC_PLUS_10_30;r.UTC_PLUS_11;r.UTC_PLUS_11;r.UTC_PLUS_12;r.UTC_PLUS_8;r.UTC_PLUS_8;r.UTC_PLUS_5;r.UTC_PLUS_9_30;r.UTC_PLUS_12;r.UTC_PLUS_4;r.UTC_PLUS_5;r.UTC_PLUS_2;r.UTC_PLUS_1;r.UTC_PLUS_3;r.UTC_MINUS_6;r.UTC_MINUS_7;r.UTC_PLUS_6_30;r.UTC_PLUS_5_45;r.UTC_PLUS_12;r.UTC_PLUS_11;r.UTC_PLUS_13;r.UTC_PLUS_12;r.UTC_MINUS_2_30;r.UTC_MINUS_3_30;r.UTC_MINUS_11;r.UTC_PLUS_11;r.UTC_PLUS_7;r.UTC_PLUS_6;r.UTC_PLUS_5;r.UTC_MINUS_7;r.UTC_MINUS_8;r.UTC_PLUS_5;r.UTC_PLUS_9;r.UTC_PLUS_10;r.UTC_MINUS_3;r.UTC_MINUS_4;r.UTC_MINUS_5;r.UTC_PLUS_8;r.UTC_PLUS_8;r.UTC_PLUS_13;r.UTC_MINUS_8;r.UTC_PLUS_11;r.UTC_PLUS_4;r.UTC_MINUS_3;r.UTC_MINUS_2;r.UTC_MINUS_3;r.UTC_PLUS_11;r.UTC_PLUS_4;r.UTC_MINUS_10;r.UTC_MINUS_11;r.UTC_PLUS_4;r.UTC_PLUS_3;r.UTC_PLUS_8;r.UTC_PLUS_8;r.UTC_PLUS_11;r.UTC_PLUS_2;r.UTC_MINUS_2;r.UTC_PLUS_11;r.UTC_PLUS_5_30;r.UTC_MINUS_3;r.UTC_MINUS_10;r.UTC_PLUS_5;r.UTC_PLUS_7;r.UTC_PLUS_9;r.UTC_PLUS_13;r.UTC_PLUS_13;r.UTC_PLUS_3;r.UTC_PLUS_5;r.UTC_PLUS_12;r.UTC_PLUS_8;r.UTC_PLUS_9;r.UTC_MINUS_3;r.UTC_MINUS_2;r.UTC_PLUS_5;r.UTC_PLUS_11;r.UTC_MINUS_4;r.UTC_PLUS_10;r.UTC_PLUS_4;r.UTC_PLUS_6;r.UTC_PLUS_12;r.UTC_PLUS_2;r.UTC_PLUS_1;r.UTC_MINUS_2;r.UTC_MINUS_3;r.UTC_PLUS_5;r.UTC_PLUS_1;r.UTC_0;r.UTC_PLUS_7;r.UTC_PLUS_8;r.UTC_PLUS_9;r.UTC_PLUS_5;var Ya=(a=>(a.Africa="Africa",a.Americas="Americas",a.Asia="Asia",a.Europe="Europe",a.Oceania="Oceania",a.Polar="Polar",a))(Ya||{}),Za=(a=>(a.CentralAmerica="Central America",a.EasternAsia="Eastern Asia",a.EasternEurope="Eastern Europe",a.EasternAfrica="Eastern Africa",a.MiddleAfrica="Middle Africa",a.MiddleEast="Middle East",a.NorthernAfrica="Northern Africa",a.NorthernAmerica="Northern America",a.NorthernEurope="Northern Europe",a.Polynesia="Polynesia",a.SouthAmerica="South America",a.SouthernAfrica="Southern Africa",a.SouthernAsia="Southern Asia",a.SouthernEurope="Southern Europe",a.WesternAfrica="Western Africa",a.WesternAsia="Western Asia",a.WesternEurope="Western Europe",a.WesternAustralia="Western Australia",a))(Za||{});oa.AfghanistanAfghani,u.Pashto,u.Dari,u.Turkmen,u.Uzbek,r.UTC_PLUS_4_30,c.AsiaKabul,l.AfghanistanTime,f.Afghanistan,f.Afghanistan,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Polish+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tatar+"",u.Tamil+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",Ya.Asia,Za.SouthernAsia,oa.AlbaniaLek,u.Albanian,u.Greek,u.Turkish,r.UTC_PLUS_1,c.EuropeBrussels,l.CentralEuropeanTime,f.Albania,f.Albania,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",Ya.Europe,Za.SouthernEurope,oa.AlgeriaDinar,u.Arabic,u.French,u.Berber,u.Tamazight,r.UTC_PLUS_1,r.UTC_PLUS_2,c.AfricaAlgiers,l.CentralEuropeanTime,f.Algeria,f.Algeria,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",Ya.Africa,Za.NorthernAfrica,oa.AmericanSamoaTala,u.English,u.Samoan,r.UTC_MINUS_11,c.PacificSamoa,l.SamoaStandardTime,f.AmericanSamoa,f.AmericanSamoa,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",Ya.Oceania,Za.Polynesia,oa.Euro,u.Catalan,u.Spanish,r.UTC_PLUS_1,r.UTC_PLUS_2,c.EuropeAndorra,l.CentralEuropeanTime,f.Andorra,f.Andorra,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greek+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",Ya.Europe,Za.SouthernEurope,oa.AngolaKwanza,u.Portuguese,u.Spanish,u.French,u.Italian,u.German,u.English,r.UTC_0,r.UTC_PLUS_1,r.UTC_PLUS_2,c.AfricaLuanda,l.WestAfricaTime,f.Angola,f.Angola,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Xhosa+"",u.Welsh+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",oa.DominicaDollar,oa.EastCaribbeanDollar,oa.Euro,oa.UnitedStatesDollar,oa.BritishPound,u.English,u.Spanish,r.UTC_MINUS_4,c.AmericaAnguilla,l.AtlanticStandardTime,f.Anguilla,f.Anguilla,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",oa.UnitedStatesDollar,oa.Euro,u.English,u.Spanish,u.French,u.Portuguese,u.Italian,u.Dutch,u.German,u.Swedish,u.Norwegian,u.Danish,u.Finnish,r.UTC_PLUS_1,r.UTC_PLUS_2,c.AntarcticaCasey,c.AntarcticaDavis,c.AntarcticaMcMurdo,c.AntarcticaPalmer,c.AntarcticaRothera,l.AtlanticStandardTime,l.CentralTime,l.EasternTime,l.AtlanticStandardTime,l.AzoresStandardTime,l.NewfoundlandStandardTime,f.Antarctica,f.Antarctica,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",oa.ArmeniaDram,u.Armenian,r.UTC_PLUS_4,c.AsiaJakarta,l.ArmeniaTime,f.Armenia,f.Armenia,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",f.AmericanSamoa,f.AmericanSamoa,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"";u.Afrikaans,_.Afrikaans;f.SouthAfrica,u.AfrikaansSouthAfrica,_.Afrikaans;u.Albanian,_.Albanian;f.Albania,u.AlbanianAlbania,_.Albanian;u.Amharic,_.Amharic;f.Ethiopia,u.AmharicEthiopia,_.Amharic;u.Arabic,_.Arabic;f.Algeria,u.ArabicAlgeria,_.Arabic;f.Bahrain,u.ArabicBahrain,_.Arabic;f.Egypt,u.ArabicEgypt,_.Arabic;f.Iraq,u.ArabicIraq,_.Arabic;f.Jordan,u.ArabicJordan,_.Arabic;f.Kuwait,u.ArabicKuwait,_.Arabic;f.Lebanon,u.ArabicLebanon,_.Arabic;f.Libya,u.ArabicLibya,_.Arabic;f.Morocco,u.ArabicMorocco,_.Arabic;f.Oman,u.ArabicOman,_.Arabic;f.Qatar,u.ArabicQatar,_.Arabic;f.SaudiArabia,u.ArabicSaudiArabia,_.Arabic;f.Tunisia,u.ArabicTunisia,_.Arabic;f.UnitedArabEmirates,u.ArabicUnitedArabEmirates,_.Arabic;f.Yemen,u.ArabicYemen,_.Arabic;u.Armenian,_.Armenian;f.Armenia,u.ArmenianArmenia,_.Armenian;u.Azerbaijani,_.Azerbaijani;f.Azerbaijan,u.AzerbaijaniAzerbaijan,_.Azerbaijani;u.Basque,_.Basque;f.Spain,u.BasqueSpain,_.Basque;u.Belarusian,_.Belarusian;f.Belarus,u.BelarusianBelarus,_.Belarusian;u.Bengali,_.Bengali;f.Bangladesh,u.BengaliBangladesh,_.Bengali;u.Bhutani,_.Bhutani;f.Bhutan,u.BhutaniBhutan,_.Bhutani;u.Bulgarian,_.Bulgarian;f.Bulgaria,u.BulgarianBulgaria,_.Bulgarian;u.Burmese,_.Burmese;f.Myanmar,u.BurmeseMyanmar,_.Burmese;u.Cantonese,_.Cantonese;f.HongKong,u.CantoneseHongKong,_.Cantonese;u.Catalan,_.Catalan;f.Spain,u.CatalanSpain,_.Catalan;u.ChineseSimplified,_.Chinese;f.China,u.ChineseSimplifiedChina,_.Chinese;f.HongKong,u.ChineseSimplifiedHongKong,_.Chinese;f.Macau,u.ChineseSimplifiedMacau,_.Chinese;f.Singapore,u.ChineseSimplifiedSingapore,_.Chinese;u.ChineseTraditional,_.Chinese;f.HongKong,u.ChineseTraditionalHongKong,_.Chinese;f.Macau,u.ChineseTraditionalMacau,_.Chinese;f.Singapore,u.ChineseTraditionalSingapore,_.Chinese;u.Croatian,_.Croatian;f.BosniaAndHerzegovina,u.CroatianBosniaAndHerzegovina,_.Croatian;f.Croatia,u.CroatianCroatia,_.Croatian;u.Czech,_.Czech;f.CzechRepublic,u.CzechCzechRepublic,_.Czech;u.Danish,_.Danish;f.Denmark,u.DanishDenmark,_.Danish;u.Divehi,_.Divehi;f.Maldives,u.DivehiMaldives,_.Divehi;u.Dutch,_.Dutch;f.Belgium,u.DutchBelgium,_.Dutch;f.Netherlands,u.DutchNetherlands,_.Dutch;u.English,_.English;f.Australia,u.EnglishAustralia,_.English;f.Belgium,u.EnglishBelgium,_.English;f.Canada,u.EnglishCanada,_.English;f.Ireland,u.EnglishIreland,_.English;f.Jamaica,u.EnglishJamaica,_.English;f.NewZealand,u.EnglishNewZealand,_.English;f.Philippines,u.EnglishPhilippines,_.English;f.Singapore,u.EnglishSingapore,_.English;f.SouthAfrica,u.EnglishSouthAfrica,_.English;f.TrinidadAndTobago,u.EnglishTrinidadAndTobago,_.English;f.UnitedKingdom,u.EnglishUnitedKingdom,_.English;f.UnitedStates,u.EnglishUnitedStates,_.English;f.Zimbabwe,u.EnglishZimbabwe,_.English;u.Esperanto,_.Esperanto;u.Estonian,_.Estonian;f.Estonia,u.EstonianEstonia,_.Estonian;u.Faroese,_.Faroese;f.FaroeIslands,u.FaroeseFaroeIslands,_.Faroese;u.Farsi,_.Farsi;f.Iran,u.FarsiIran,_.Farsi;u.Filipino,_.Filipino;f.Philippines,u.FilipinoPhilippines,_.Filipino;u.Finnish,_.Finnish;f.Finland,u.FinnishFinland,_.Finnish;u.French,_.French;f.Belgium,u.FrenchBelgium,_.French;f.Canada,u.FrenchCanada,_.French;f.France,u.FrenchFrance,_.French;f.Luxembourg,u.FrenchLuxembourg,_.French;f.Monaco,u.FrenchMonaco,_.French;f.Reunion,u.FrenchReunion,_.French;f.Switzerland,u.FrenchSwitzerland,_.French;u.Frisian,_.Frisian;f.Netherlands,u.FrisianNetherlands,_.Frisian;u.Galician,_.Galician;f.Spain,u.GalicianSpain,_.Galician;u.Georgian,_.Georgian;f.Georgia,u.GeorgianGeorgia,_.Georgian;u.German,_.German;f.Austria,u.GermanAustria,_.German;f.Belgium,u.GermanBelgium,_.German;f.Switzerland,u.GermanSwitzerland,_.German;f.Liechtenstein,u.GermanLiechtenstein,_.German;f.Luxembourg,u.GermanLuxembourg,_.German;u.Greek,_.Greek;f.Greece,u.GreekGreece,_.Greek;u.Greenlandic,_.Greenlandic;f.Greenland,u.GreenlandicGreenland,_.Greenlandic;u.Gujarati,_.Gujarati;f.India,u.GujaratiIndia,_.Gujarati;u.Hausa,_.Hausa;f.Ghana,u.HausaGhana,_.Hausa;f.Niger,u.HausaNiger,_.Hausa;f.Nigeria,u.HausaNigeria,_.Hausa;u.Hebrew,_.Hebrew;f.Israel,u.HebrewIsrael,_.Hebrew;u.Hindi,_.Hindi;f.India,u.HindiIndia,_.Hindi;u.Hungarian,_.Hungarian;f.Hungary,u.HungarianHungary,_.Hungarian;u.Icelandic,_.Icelandic;f.Iceland,u.IcelandicIceland,_.Icelandic;u.Igbo,_.Igbo;u.Indonesian,_.Indonesian;f.Indonesia,u.IndonesianIndonesia,_.Indonesian;u.Irish,_.Irish;f.Ireland,u.IrishIreland,_.Irish;u.Italian,_.Italian;f.Italy,u.ItalianItaly,_.Italian;f.Switzerland,u.ItalianSwitzerland,_.Italian;u.Japanese,_.Japanese;f.Japan,u.JapaneseJapan,_.Japanese;u.Kannada,_.Kannada;f.India,u.KannadaIndia,_.Kannada;u.Kazakh,_.Kazakh;f.Kazakhstan,u.KazakhKazakhstan,_.Kazakh;u.Khmer,_.Khmer;f.Cambodia,u.KhmerCambodia,_.Khmer;u.Konkani,_.Konkani;f.India,u.KonkaniIndia,_.Konkani;u.Korean,_.Korean;f.SouthKorea,u.KoreanSouthKorea,_.Korean;u.Kurdish,_.Kurdish;f.Iraq,u.KurdishIraq,_.Kurdish;f.Turkey,u.KurdishTurkey,_.Kurdish;u.Kyrgyz,_.Kyrgyz;f.Kyrgyzstan,u.KyrgyzKyrgyzstan,_.Kyrgyz;u.Lao,_.Lao;f.Laos,u.LaoLaos,_.Lao;u.Latvian,_.Latvian;f.Latvia,u.LatvianLatvia,_.Latvian;u.Lithuanian,_.Lithuanian;f.Lithuania,u.LithuanianLithuania,_.Lithuanian;u.Luxembourgish,_.Luxembourgish;f.Belgium,u.LuxembourgishBelgium,_.Luxembourgish;f.Luxembourg,u.LuxembourgishLuxembourg,_.Luxembourgish;u.Macedonian,_.Macedonian;f.NorthMacedonia,u.MacedonianNorthMacedonia,_.Macedonian;u.Malay,_.Malay;f.Brunei,u.MalayBrunei,_.Malay;f.Malaysia,u.MalayMalaysia,_.Malay;f.Singapore,u.MalaySingapore,_.Malay;f.India,u.MalayIndia,_.Malay;u.Maltese,_.Maltese;f.Malta,u.MalteseMalta,_.Maltese;u.Maori,_.Maori;f.NewZealand,u.MaoriNewZealand,_.Maori;u.Marathi,_.Marathi;f.India,u.MarathiIndia,_.Marathi;u.Mongolian,_.Mongolian;f.Mongolia,u.MongolianMongolia,_.Mongolian;u.Montenegrin,_.Montenegrin;f.Montenegro,u.MontenegrinMontenegro,_.Montenegrin;u.Nepali,_.Nepali;f.Nepal,u.NepaliNepal,_.Nepali;u.NorthernSotho,_.NorthernSotho;f.SouthAfrica,u.NorthernSothoSouthAfrica,_.NorthernSotho;u.Norwegian,_.Norwegian;f.Norway,u.NorwegianBokmalNorway,_.NorwegianBokmal;f.Norway,u.NorwegianNynorskNorway,_.NorwegianNynorsk;u.Oriya,_.Oriya;f.India,u.OriyaIndia,_.Oriya;u.Pashto,_.Pashto;f.Afghanistan,u.PashtoAfghanistan,_.Pashto;u.Persian,_.Persian;f.Iran,u.PersianIran,_.Persian;u.Polish,_.Polish;f.Poland,u.PolishPoland,_.Polish;u.Portuguese,_.Portuguese;f.Brazil,u.PortugueseBrazil,_.Portuguese;f.Portugal,u.PortuguesePortugal,_.Portuguese;u.Punjabi,_.Punjabi;f.Pakistan,u.PunjabiPakistan,_.Punjabi;f.India,u.PunjabiIndia,_.Punjabi;u.Quechua,_.Quechua;f.Bolivia,u.QuechuaBolivia,_.Quechua;f.Ecuador,u.QuechuaEcuador,_.Quechua;f.Peru,u.QuechuaPeru,_.Quechua;u.Romanian,_.Romanian;f.Romania,u.RomanianRomania,_.Romanian;u.Russian,_.Russian;f.RussianFederation,u.RussianRussia,_.Russian;f.Ukraine,u.RussianUkraine,_.Russian;f.Kazakhstan,u.RussianKazakhstan,_.Russian;f.Kyrgyzstan,u.RussianKyrgyzstan,_.Russian;u.Sanskrit,_.Sanskrit;f.India,u.SanskritIndia,_.Sanskrit;u.Sami,_.Sami;f.Finland,u.SamiFinland,_.Sami;f.Norway,u.SamiNorway,_.Sami;f.Sweden,u.SamiSweden,_.Sami;u.Samoan,_.Samoan;f.Samoa,u.SamoanSamoa,_.Samoan;u.Serbian,_.Serbian;f.BosniaAndHerzegovina,u.SerbianBosniaAndHerzegovina,_.Serbian;f.SerbiaAndMontenegro,u.SerbianSerbiaAndMontenegro,_.Serbian;u.SerbianCyrillic,_.SerbianCyrillic;f.BosniaAndHerzegovina,u.SerbianCyrillicBosniaAndHerzegovina,_.SerbianCyrillic;f.SerbiaAndMontenegro,u.SerbianCyrillicSerbiaAndMontenegro,_.SerbianCyrillic;u.Slovak,_.Slovak;f.Slovakia,u.SlovakSlovakia,_.Slovak;u.Slovenian,_.Slovenian;f.Slovenia,u.SlovenianSlovenia,_.Slovenian;u.Somali,_.Somali;f.Somalia,u.SomaliSomalia,_.Somali;u.Spanish,_.Spanish;f.Argentina,u.SpanishArgentina,_.Spanish;f.Bolivia,u.SpanishBolivia,_.Spanish;f.Chile,u.SpanishChile,_.Spanish;f.Colombia,u.SpanishColombia,_.Spanish;f.CostaRica,u.SpanishCostaRica,_.Spanish;f.Cuba,u.SpanishCuba,_.Spanish;f.DominicanRepublic,u.SpanishDominicanRepublic,_.Spanish;f.Ecuador,u.SpanishEcuador,_.Spanish;f.ElSalvador,u.SpanishElSalvador,_.Spanish;f.EquatorialGuinea,u.SpanishEquatorialGuinea,_.Spanish;f.Guatemala,u.SpanishGuatemala,_.Spanish;f.Honduras,u.SpanishHonduras,_.Spanish;f.Mexico,u.SpanishMexico,_.Spanish;f.Nicaragua,u.SpanishNicaragua,_.Spanish;f.Panama,u.SpanishPanama,_.Spanish;f.Paraguay,u.SpanishParaguay,_.Spanish;f.Peru,u.SpanishPeru,_.Spanish;f.PuertoRico,u.SpanishPuertoRico,_.Spanish;f.Uruguay,u.SpanishUruguay,_.Spanish;f.Venezuela,u.SpanishVenezuela,_.Spanish;f.SouthAfrica,u.SutuSouthAfrica,_.Sutu;u.Swahili,_.Swahili;f.Kenya,u.SwahiliKenya,_.Swahili;u.Swedish,_.Swedish;f.Finland,u.SwedishFinland,_.Swedish;f.Sweden,u.SwedishSweden,_.Swedish;u.Syriac,_.Syriac;f.Syria,u.SyriacSyria,_.Syriac;u.Tajik,_.Tajik;f.Tajikistan,u.TajikTajikistan,_.Tajik;u.Tagalog,_.Tagalog;f.Philippines,u.TagalogPhilippines,_.Tagalog;u.Tamil,_.Tamil;f.India,u.TamilIndia,_.Tamil;u.Telugu,_.Telugu;f.India,u.TeluguIndia,_.Telugu;u.Thai,_.Thai;f.Thailand,u.ThaiThailand,_.Thai;u.Tibetan,_.Tibetan;f.China,u.TibetanChina,_.Tibetan;f.Bhutan,u.TibetanBhutan,_.Tibetan;f.India,u.TibetanIndia,_.Tibetan;u.Tsonga,_.Tsonga;u.Tswana,_.Tswana;f.SouthAfrica,u.TswanaSouthAfrica,_.Tswana;u.Turkish,_.Turkish;f.Turkey,u.TurkishTurkey,_.Turkish;u.Ukrainian,_.Ukrainian;f.Ukraine,u.UkrainianUkraine,_.Ukrainian;u.Urdu,_.Urdu;f.Afghanistan,u.UrduAfghanistan,_.Urdu;f.India,u.UrduIndia,_.Urdu;f.Pakistan,u.UrduPakistan,_.Urdu;u.Uzbek,_.Uzbek;f.Uzbekistan,u.UzbekUzbekistan,_.Uzbek;f.Uzbekistan,u.UzbekCyrillic,_.Uzbek;u.Vietnamese,_.Vietnamese;f.Vietnam,u.VietnameseVietnam,_.Vietnamese;u.Welsh,_.Welsh;f.UnitedKingdom,u.WelshUnitedKingdom,_.Welsh;u.Xhosa,_.Xhosa;f.SouthAfrica,u.XhosaSouthAfrica,_.Xhosa;u.Yiddish,_.Yiddish;u.Yoruba,_.Yoruba;f.Nigeria,u.YorubaNigeria,_.Yoruba;u.Zulu,_.Zulu;f.SouthAfrica,u.ZuluSouthAfrica,_.Zulu;c.AfricaAbidjan,r.UTC_0,l.CoordinatedUniversalTime;c.AfricaAccra,r.UTC_0,l.CoordinatedUniversalTime;c.AfricaAddisAbaba,r.UTC_PLUS_3,l.EastAfricaTime;c.AfricaAlgiers,r.UTC_PLUS_1,l.CentralEuropeanTime;c.AfricaAsmara,r.UTC_PLUS_3,l.EastAfricaTime;c.AfricaBamako,r.UTC_0,l.CoordinatedUniversalTime;c.AfricaBangui,r.UTC_PLUS_1,l.WestAfricaTime;c.AfricaBanjul,r.UTC_0,l.CoordinatedUniversalTime;c.AfricaBissau,r.UTC_0,l.CoordinatedUniversalTime;c.AfricaBlantyre,r.UTC_PLUS_2,l.CentralAfricaTime;c.AfricaBrazzaville,r.UTC_PLUS_1,l.WestAfricaTime;c.AfricaBujumbura,r.UTC_PLUS_2,l.CentralAfricaTime;c.AfricaCairo,r.UTC_PLUS_2,l.EasternEuropeanTime;c.AfricaCasablanca,r.UTC_PLUS_1,l.WesternEuropeanTime;c.AfricaCeuta,r.UTC_PLUS_1,l.CentralEuropeanTime;c.AfricaConakry,r.UTC_0,l.CoordinatedUniversalTime;c.AfricaDakar,r.UTC_0,l.CoordinatedUniversalTime;c.AfricaDarEsSalaam,r.UTC_PLUS_3,l.EastAfricaTime;c.AfricaDjibouti,r.UTC_PLUS_3,l.EastAfricaTime;c.AfricaDouala,r.UTC_PLUS_1,l.WestAfricaTime;c.AfricaElAaiun,r.UTC_PLUS_1,l.WestAfricaTime;c.AfricaFreetown,r.UTC_0,l.CoordinatedUniversalTime;c.AfricaGaborone,r.UTC_PLUS_2,l.CentralAfricaTime;c.AfricaHarare,r.UTC_PLUS_2,l.CentralAfricaTime;c.AfricaJohannesburg,r.UTC_PLUS_2,l.SouthAfricanStandardTime;c.AfricaJuba,r.UTC_PLUS_3,l.EastAfricaTime;c.AfricaKampala,r.UTC_PLUS_3,l.EastAfricaTime;c.AfricaKhartoum,r.UTC_PLUS_2,l.EastAfricaTime;c.AfricaKigali,r.UTC_PLUS_2,l.CentralAfricaTime;c.AfricaKinshasa,r.UTC_PLUS_1,l.WestAfricaTime;c.AfricaLagos,r.UTC_PLUS_1,l.WestAfricaTime;c.AfricaLibreville,r.UTC_PLUS_1,l.WestAfricaTime;c.AfricaLome,r.UTC_0,l.CoordinatedUniversalTime;c.AfricaLuanda,r.UTC_PLUS_1,l.WestAfricaTime;c.AfricaLubumbashi,r.UTC_PLUS_2,l.CentralAfricaTime;c.AfricaLusaka,r.UTC_PLUS_2,l.CentralAfricaTime;c.AfricaMalabo,r.UTC_PLUS_1,l.WestAfricaTime;c.AfricaMaputo,r.UTC_PLUS_2,l.CentralAfricaTime;c.AfricaMaseru,r.UTC_PLUS_2,l.SouthAfricanStandardTime;c.AfricaMbabane,r.UTC_PLUS_2,l.SouthAfricanStandardTime;c.AfricaMogadishu,r.UTC_PLUS_3,l.EastAfricaTime;c.AfricaMonrovia,r.UTC_0,l.CoordinatedUniversalTime;c.AfricaNairobi,r.UTC_PLUS_3,l.EastAfricaTime;c.AfricaNdjamena,r.UTC_PLUS_1,l.WestAfricaTime;c.AfricaNiamey,r.UTC_PLUS_1,l.WestAfricaTime;c.AfricaNouakchott,r.UTC_0,l.GreenwichMeanTime;c.AfricaOuagadougou,r.UTC_0,l.CoordinatedUniversalTime;c.AfricaPortoNovo,r.UTC_PLUS_1,l.WestAfricaTime;c.AfricaSaoTome,r.UTC_0,l.CoordinatedUniversalTime;c.AfricaTripoli,r.UTC_0,l.CoordinatedUniversalTime;c.AfricaTunis,r.UTC_0,l.CoordinatedUniversalTime;c.AfricaWindhoek,r.UTC_PLUS_2,l.WestAfricaTime;c.AmericaAdak,r.UTC_PLUS_10,l.HawaiiAleutianStandardTime;c.AmericaAnchorage,r.UTC_PLUS_9,l.AlaskaStandardTime;c.AmericaAnguilla,r.UTC_0,l.AtlanticStandardTime;c.AmericaAntigua,r.UTC_0,l.AtlanticStandardTime;c.AmericaAraguaina,r.UTC_MINUS_3,l.BrasiliaTime;c.AmericaArgentinaBuenosAires,r.UTC_MINUS_3,l.ArgentinaTime;c.AmericaArgentinaCatamarca,r.UTC_MINUS_3,l.ArgentinaTime;c.AmericaArgentinaCordoba,r.UTC_MINUS_3,l.ArgentinaTime;c.AmericaArgentinaJujuy,r.UTC_MINUS_3,l.ArgentinaTime;c.AmericaArgentinaLaRioja,r.UTC_MINUS_3,l.ArgentinaTime;c.AmericaArgentinaMendoza,r.UTC_MINUS_3,l.ArgentinaTime;c.AmericaArgentinaRioGallegos,r.UTC_MINUS_3,l.ArgentinaTime;c.AmericaArgentinaSalta,r.UTC_MINUS_3,l.ArgentinaTime;c.AmericaArgentinaSanJuan,r.UTC_MINUS_3,l.ArgentinaTime;c.AmericaArgentinaSanLuis,r.UTC_MINUS_3,l.ArgentinaTime;c.AmericaArgentinaTucuman,r.UTC_MINUS_3,l.ArgentinaTime;c.AmericaArgentinaUshuaia,r.UTC_MINUS_3,l.ArgentinaTime;c.AmericaAruba,r.UTC_0,l.AtlanticStandardTime;c.AmericaAsuncion,r.UTC_MINUS_4,l.ParaguayTime;c.AmericaAtikokan,r.UTC_0,l.EasternStandardTime;c.AmericaAtka,r.UTC_MINUS_10,l.HawaiiAleutianStandardTime;c.AmericaBahia,r.UTC_MINUS_3,l.BrasiliaTime;c.AmericaBahiaBanderas,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaBarbados,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaBelem,r.UTC_MINUS_3,l.BrasiliaTime;c.AmericaBelize,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaBlancSablon,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaBoaVista,r.UTC_MINUS_4,l.AmazonTime;c.AmericaBogota,r.UTC_MINUS_5,l.ColombiaTime;c.AmericaBoise,r.UTC_MINUS_7,l.MountainStandardTime;c.AmericaCambridgeBay,r.UTC_MINUS_7,l.MountainStandardTime;c.AmericaCampoGrande,r.UTC_MINUS_4,l.AmazonTime;c.AmericaCancun,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaCaracas,r.UTC_MINUS_4,l.VenezuelaStandardTime;c.AmericaCayenne,r.UTC_MINUS_3,l.FrenchGuianaTime;c.AmericaCayman,r.UTC_0,l.AtlanticStandardTime;c.AmericaChicago,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaChihuahua,r.UTC_MINUS_7,l.MountainStandardTime;c.AmericaCoralHarbour,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaCordoba,r.UTC_MINUS_3,l.ArgentinaTime;c.AmericaCostaRica,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaCreston,r.UTC_MINUS_7,l.MountainStandardTime;c.AmericaCuiaba,r.UTC_MINUS_4,l.AmazonTime;c.AmericaCuracao,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaDanmarkshavn,r.UTC_0,l.GreenwichMeanTime;c.AmericaDawson,r.UTC_MINUS_8,l.PacificStandardTime;c.AmericaDawsonCreek,r.UTC_MINUS_8,l.PacificStandardTime;c.AmericaDenver,r.UTC_MINUS_7,l.MountainStandardTime;c.AmericaDetroit,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaDominica,r.UTC_0,l.AtlanticStandardTime;c.AmericaEdmonton,r.UTC_MINUS_7,l.MountainStandardTime;c.AmericaEirunepe,r.UTC_MINUS_5,l.AcreTime;c.AmericaElSalvador,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaFortaleza,r.UTC_MINUS_3,l.BrasiliaTime;c.AmericaGlaceBay,r.UTC_0,l.AtlanticStandardTime;c.AmericaGodthab,r.UTC_MINUS_3,l.WestGreenlandTime;c.AmericaGooseBay,r.UTC_0,l.AtlanticStandardTime;c.AmericaGrandTurk,r.UTC_0,l.AtlanticStandardTime;c.AmericaGrenada,r.UTC_0,l.AtlanticStandardTime;c.AmericaGuadeloupe,r.UTC_0,l.AtlanticStandardTime;c.AmericaGuatemala,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaGuayaquil,r.UTC_MINUS_5,l.EcuadorTime;c.AmericaGuyana,r.UTC_0,l.AtlanticStandardTime;c.AmericaHalifax,r.UTC_0,l.AtlanticStandardTime;c.AmericaHavana,r.UTC_MINUS_5,l.CubaStandardTime;c.AmericaHermosillo,r.UTC_MINUS_7,l.MountainStandardTime;c.AmericaIndianaIndianapolis,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaIndianaKnox,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaIndianaMarengo,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaIndianaPetersburg,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaIndianaTellCity,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaIndianaVevay,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaIndianaVincennes,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaIndianaWinamac,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaInuvik,r.UTC_MINUS_7,l.MountainStandardTime;c.AmericaIqaluit,r.UTC_0,l.EasternStandardTime;c.AmericaJamaica,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaJuneau,r.UTC_MINUS_9,l.AlaskaStandardTime;c.AmericaKentuckyLouisville,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaKentuckyMonticello,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaKralendijk,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaLaPaz,r.UTC_MINUS_4,l.BoliviaTime;c.AmericaLima,r.UTC_MINUS_5,l.PeruTime;c.AmericaLosAngeles,r.UTC_MINUS_8,l.PacificStandardTime;c.AmericaLouisville,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaLowerPrinces,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaMaceio,r.UTC_MINUS_3,l.BrasiliaTime;c.AmericaManagua,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaManaus,r.UTC_MINUS_4,l.AmazonTime;c.AmericaMarigot,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaMartinique,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaMatamoros,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaMazatlan,r.UTC_MINUS_7,l.MountainStandardTime;c.AmericaMenominee,r.UTC_MINUS_5,l.CentralStandardTime;c.AmericaMerida,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaMetlakatla,r.UTC_MINUS_9,l.AlaskaStandardTime;c.AmericaMexicoCity,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaMiquelon,r.UTC_MINUS_3,l.SaintPierreAndMiquelonStandardTime;c.AmericaMoncton,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaMonterrey,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaMontevideo,r.UTC_MINUS_3,l.UruguayStandardTime;c.AmericaMontreal,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaMontserrat,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaNassau,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaNewYork,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaNipigon,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaNome,r.UTC_MINUS_9,l.AlaskaStandardTime;c.AmericaNoronha,r.UTC_MINUS_2,l.FernandoDeNoronhaTime;c.AmericaNorthDakotaBeulah,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaNorthDakotaCenter,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaNorthDakotaNewSalem,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaOjinaga,r.UTC_MINUS_7,l.MountainStandardTime;c.AmericaPanama,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaPangnirtung,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaParamaribo,r.UTC_MINUS_3,l.SurinameTime;c.AmericaPhoenix,r.UTC_MINUS_7,l.MountainStandardTime;c.AmericaPortAuPrince,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaPortOfSpain,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaPortoVelho,r.UTC_MINUS_4,l.AmazonTime;c.AmericaPuertoRico,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaRainyRiver,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaRankinInlet,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaRecife,r.UTC_MINUS_3,l.BrasiliaTime;c.AmericaRegina,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaResolute,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaRioBranco,r.UTC_MINUS_5,l.AcreTime;c.AmericaSantaIsabel,r.UTC_MINUS_8,l.PacificStandardTime;c.AmericaSantarem,r.UTC_MINUS_3,l.BrasiliaTime;c.AmericaSantiago,r.UTC_MINUS_4,l.ChileStandardTime;c.AmericaSantoDomingo,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaSaoPaulo,r.UTC_MINUS_3,l.BrasiliaTime;c.AmericaScoresbysund,r.UTC_MINUS_1,l.EasternGreenlandTime;c.AmericaShiprock,r.UTC_MINUS_7,l.MountainStandardTime;c.AmericaSitka,r.UTC_MINUS_9,l.AlaskaStandardTime;c.AmericaStBarthelemy,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaStJohns,r.UTC_MINUS_3,l.NewfoundlandStandardTime;c.AmericaStKitts,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaStLucia,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaStThomas,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaStVincent,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaSwiftCurrent,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaTegucigalpa,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaThule,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaThunderBay,r.UTC_MINUS_4,l.EasternStandardTime;c.AmericaTijuana,r.UTC_MINUS_8,l.PacificStandardTime;c.AmericaToronto,r.UTC_MINUS_5,l.EasternStandardTime;c.AmericaTortola,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AmericaVancouver,r.UTC_MINUS_8,l.PacificStandardTime;c.AmericaWhitehorse,r.UTC_MINUS_8,l.PacificStandardTime;c.AmericaWinnipeg,r.UTC_MINUS_6,l.CentralStandardTime;c.AmericaYakutat,r.UTC_MINUS_9,l.AlaskaStandardTime;c.AmericaYellowknife,r.UTC_MINUS_6,l.MountainStandardTime;c.AntarcticaCasey,r.UTC_MINUS_8,l.WesternStandardTime;c.AntarcticaDavis,r.UTC_MINUS_7,l.NewfoundlandStandardTime;c.AntarcticaDumontDUrville,r.UTC_MINUS_10,l.CentralStandardTime;c.AntarcticaMacquarie,r.UTC_MINUS_11,l.CentralStandardTime;c.AntarcticaMawson,r.UTC_MINUS_6,l.CentralStandardTime;c.AntarcticaMcMurdo,r.UTC_MINUS_12,l.NewZealandStandardTime;c.AntarcticaPalmer,r.UTC_MINUS_4,l.ChathamStandardTime;c.AntarcticaRothera,r.UTC_MINUS_3,l.RotheraResearchStationTime;c.AntarcticaSyowa,r.UTC_MINUS_3,l.ShowaStationTime;c.AntarcticaTroll,r.UTC_MINUS_2,l.CentralStandardTime;c.AntarcticaVostok,r.UTC_MINUS_6,l.CentralStandardTime;c.ArcticLongyearbyen,r.UTC_MINUS_1,l.CentralEuropeanTime;c.AsiaAden,r.UTC_PLUS_3,l.ArabiaStandardTime;c.AsiaAlmaty,r.UTC_PLUS_6,l.AlmaAtaTime;c.AsiaAmman,r.UTC_PLUS_2,l.EasternEuropeanTime;c.AsiaAnadyr,r.UTC_PLUS_12,l.NewCaledoniaTime;c.AsiaAqtau,r.UTC_PLUS_5,l.AqtobeTime;c.AsiaAqtobe,r.UTC_PLUS_5,l.AqtobeTime;c.AsiaAshgabat,r.UTC_PLUS_5,l.TurkmenistanTime;c.AsiaBaghdad,r.UTC_PLUS_3,l.ArabiaStandardTime;c.AsiaBahrain,r.UTC_PLUS_3,l.ArabiaStandardTime;c.AsiaBaku,r.UTC_PLUS_4,l.AzerbaijanTime;c.AsiaBangkok,r.UTC_PLUS_7,l.IndochinaTime;c.AsiaBarnaul,r.UTC_PLUS_7,l.KrasnoyarskTime;c.AsiaBeirut,r.UTC_PLUS_2,l.EasternEuropeanTime;c.AsiaBishkek,r.UTC_PLUS_6,l.KyrgyzstanTime;c.AsiaBrunei,r.UTC_PLUS_8,l.BruneiTime;c.AsiaChita,r.UTC_PLUS_9,l.YakutskTime;c.AsiaChoibalsan,r.UTC_PLUS_8,l.ChoibalsanStandardTime;c.AsiaColombo,r.UTC_PLUS_5,l.IndianStandardTime;c.AsiaDamascus,r.UTC_PLUS_2,l.EasternEuropeanTime;c.AsiaDhaka,r.UTC_PLUS_6,l.BangladeshStandardTime;c.AsiaDili,r.UTC_PLUS_9,l.JapanStandardTime;c.AsiaDubai,r.UTC_PLUS_4,l.GulfStandardTime;c.AsiaDushanbe,r.UTC_PLUS_5,l.TajikistanTime;c.AsiaFamagusta,r.UTC_PLUS_2,l.EasternEuropeanTime;c.AsiaGaza,r.UTC_PLUS_2,l.EasternEuropeanTime;c.AsiaHebron,r.UTC_PLUS_2,l.EasternEuropeanTime;c.AsiaHoChiMinh,r.UTC_PLUS_7,l.IndochinaTime;c.AsiaHongKong,r.UTC_PLUS_8,l.HongKongTime;c.AsiaHovd,r.UTC_PLUS_7,l.HovdTime;c.AsiaIrkutsk,r.UTC_PLUS_8,l.IrkutskTime;c.AsiaJakarta,r.UTC_PLUS_7,l.WesternIndonesianTime;c.AsiaJayapura,r.UTC_PLUS_9,l.JapanStandardTime;c.AsiaJerusalem,r.UTC_PLUS_2,l.EasternEuropeanTime;c.AsiaKabul,r.UTC_PLUS_4,l.AfghanistanTime;c.AsiaKamchatka,r.UTC_PLUS_12,l.KamchatkaTime;c.AsiaKarachi,r.UTC_PLUS_5,l.PakistanStandardTime;c.AsiaKathmandu,r.UTC_PLUS_5,l.NepalTime;c.AsiaKhandyga,r.UTC_PLUS_9,l.YakutskTime;c.AsiaKolkata,r.UTC_PLUS_5,l.IndianStandardTime;c.AsiaKrasnoyarsk,r.UTC_PLUS_7,l.KrasnoyarskTime;c.AsiaKualaLumpur,r.UTC_PLUS_8,l.MalaysiaStandardTime;c.AsiaKuching,r.UTC_PLUS_8,l.MalaysiaStandardTime;c.AsiaKuwait,r.UTC_PLUS_3,l.ArabiaStandardTime;c.AsiaMacau,r.UTC_PLUS_8,l.ChinaStandardTime;c.AsiaMagadan,r.UTC_PLUS_11,l.MagadanTime;c.AsiaMakassar,r.UTC_PLUS_8,l.MalaysiaTime;c.AsiaManila,r.UTC_PLUS_8,l.PhilippineTime;c.AsiaMuscat,r.UTC_PLUS_4,l.GulfStandardTime;c.AsiaNovokuznetsk,r.UTC_PLUS_6,l.NovosibirskTime;c.AsiaNovosibirsk,r.UTC_PLUS_6,l.NovosibirskTime;c.AsiaOmsk,r.UTC_PLUS_6,l.OmskTime;c.AsiaOral,r.UTC_PLUS_5,l.OralTime;c.AsiaPhnomPenh,r.UTC_PLUS_7,l.IndochinaTime;c.AsiaPontianak,r.UTC_PLUS_7,l.WesternIndonesianTime;c.AsiaPyongyang,r.UTC_PLUS_9,l.KoreaStandardTime;c.AsiaQatar,r.UTC_PLUS_3,l.ArabiaStandardTime;c.AsiaQyzylorda,r.UTC_PLUS_5,l.WestKazakhstanTime;c.AsiaRangoon,r.UTC_PLUS_6,l.MyanmarStandardTime;c.AsiaRiyadh,r.UTC_PLUS_3,l.ArabiaStandardTime;c.AsiaSakhalin,r.UTC_PLUS_11,l.SakhalinIslandTime;c.AsiaSamarkand,r.UTC_PLUS_5,l.UzbekistanTime;c.AsiaSeoul,r.UTC_PLUS_9,l.KoreaStandardTime;c.AsiaShanghai,r.UTC_PLUS_8,l.ChinaStandardTime;c.AsiaSingapore,r.UTC_PLUS_8,l.SingaporeStandardTime;c.AsiaSrednekolymsk,r.UTC_PLUS_11,l.SrednekolymskTime;c.AsiaTaipei,r.UTC_PLUS_8,l.ChinaStandardTime;c.AsiaTashkent,r.UTC_PLUS_5,l.UzbekistanTime;c.AsiaTbilisi,r.UTC_PLUS_4,l.GeorgiaStandardTime;c.AsiaTehran,r.UTC_PLUS_3,l.IranStandardTime;c.AsiaThimphu,r.UTC_PLUS_6,l.BhutanTime;c.AsiaTokyo,r.UTC_PLUS_9,l.JapanStandardTime;c.AsiaTomsk,r.UTC_PLUS_6,l.KrasnoyarskTime;c.AsiaUlaanbaatar,r.UTC_PLUS_8,l.UlaanbaatarStandardTime;c.AsiaUrumqi,r.UTC_PLUS_8,l.ChinaStandardTime;c.AsiaUstNera,r.UTC_PLUS_10,l.VladivostokTime;c.AsiaVientiane,r.UTC_PLUS_7,l.IndochinaTime;c.AsiaVladivostok,r.UTC_PLUS_10,l.VladivostokTime;c.AsiaYakutsk,r.UTC_PLUS_9,l.YakutskTime;c.AsiaYekaterinburg,r.UTC_PLUS_5,l.YekaterinburgTime;c.AsiaYerevan,r.UTC_PLUS_4,l.ArmeniaTime;c.AtlanticAzores,r.UTC_MINUS_1,l.AzoresStandardTime;c.AtlanticBermuda,r.UTC_MINUS_4,l.AtlanticStandardTime;c.AtlanticCanary,r.UTC_MINUS_1,l.WesternEuropeanTime;c.AtlanticCapeVerde,r.UTC_0,l.CapeVerdeTime;c.AtlanticFaroe,r.UTC_0,l.GreenwichMeanTime;c.AtlanticMadeira,r.UTC_0,l.WesternEuropeanTime;c.AtlanticReykjavik,r.UTC_0,l.GreenwichMeanTime;c.AtlanticSouthGeorgia,r.UTC_0,l.CoordinatedUniversalTime;c.AtlanticStHelena,r.UTC_0,l.GreenwichMeanTime;c.AtlanticStanley,r.UTC_0,l.FalklandIslandsTime;c.AustraliaAdelaide,r.UTC_PLUS_9_30,l.AustralianCentralStandardTime;c.AustraliaBrisbane,r.UTC_PLUS_10,l.AustralianEasternStandardTime;c.AustraliaBrokenHill,r.UTC_PLUS_9_30,l.AustralianCentralStandardTime;c.AustraliaCanberra,r.UTC_PLUS_10,l.AustralianEasternStandardTime;c.AustraliaCurrie,r.UTC_PLUS_10,l.AustralianEasternStandardTime;c.AustraliaDarwin,r.UTC_PLUS_9_30,l.AustralianCentralStandardTime;c.AustraliaEucla,r.UTC_PLUS_8_45,l.AustralianCentralWesternStandardTime;c.AustraliaHobart,r.UTC_PLUS_10,l.AustralianEasternStandardTime;c.AustraliaLindeman,r.UTC_PLUS_10,l.AustralianEasternStandardTime;c.AustraliaLordHowe,r.UTC_PLUS_10_30,l.LordHoweStandardTime;c.AustraliaMelbourne,r.UTC_PLUS_10,l.AustralianEasternStandardTime;c.AustraliaPerth,r.UTC_PLUS_8,l.AustralianWesternStandardTime;c.AustraliaSydney,r.UTC_PLUS_10,l.AustralianEasternStandardTime;c.EuropeAmsterdam,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeAndorra,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeAthens,r.UTC_PLUS_2,l.EasternEuropeanTime;c.EuropeBelgrade,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeBerlin,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeBratislava,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeBrussels,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeBucharest,r.UTC_PLUS_2,l.EasternEuropeanTime;c.EuropeBudapest,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeBusingen,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeChisinau,r.UTC_PLUS_2,l.EasternEuropeanTime;c.EuropeCopenhagen,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeDublin,r.UTC_0,l.GreenwichMeanTime;c.EuropeGibraltar,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeGuernsey,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeHelsinki,r.UTC_PLUS_2,l.EasternEuropeanTime;c.EuropeIsleOfMan,r.UTC_0,l.GreenwichMeanTime;c.EuropeIstanbul,r.UTC_PLUS_3,l.EasternEuropeanTime;c.EuropeJersey,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeKaliningrad,r.UTC_PLUS_2,l.EasternEuropeanTime;c.EuropeKiev,r.UTC_PLUS_2,l.EasternEuropeanTime;c.EuropeLisbon,r.UTC_0,l.GreenwichMeanTime;c.EuropeLjubljana,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeLondon,r.UTC_0,l.GreenwichMeanTime;c.EuropeLuxembourg,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeMadrid,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeMalta,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeMariehamn,r.UTC_PLUS_2,l.EasternEuropeanTime;c.EuropeMinsk,r.UTC_PLUS_3,l.EasternEuropeanTime;c.EuropeMonaco,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeMoscow,r.UTC_PLUS_3,l.EasternEuropeanTime;c.EuropeOslo,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeParis,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropePodgorica,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropePrague,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeRiga,r.UTC_PLUS_2,l.EasternEuropeanTime;c.EuropeRome,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeSamara,r.UTC_PLUS_4,l.EasternEuropeanTime;c.EuropeSanMarino,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeSarajevo,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeSimferopol,r.UTC_PLUS_3,l.EasternEuropeanTime;c.EuropeSkopje,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeSofia,r.UTC_PLUS_2,l.EasternEuropeanTime;c.EuropeStockholm,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeTallinn,r.UTC_PLUS_2,l.EasternEuropeanTime;c.EuropeTirane,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeUzhgorod,r.UTC_PLUS_2,l.EasternEuropeanTime;c.EuropeVaduz,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeVatican,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeVienna,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeVilnius,r.UTC_PLUS_2,l.EasternEuropeanTime;c.EuropeVolgograd,r.UTC_PLUS_4,l.EasternEuropeanTime;c.EuropeWarsaw,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeZagreb,r.UTC_PLUS_1,l.CentralEuropeanTime;c.EuropeZaporozhye,r.UTC_PLUS_2,l.EasternEuropeanTime;c.EuropeZurich,r.UTC_PLUS_1,l.CentralEuropeanTime;c.IndianAntananarivo,r.UTC_PLUS_3,l.EastAfricaTime;c.IndianChagos,r.UTC_PLUS_6,l.IndianOceanTime;c.IndianChristmas,r.UTC_PLUS_7,l.ChristmasIslandTime;c.IndianCocos,r.UTC_PLUS_6,l.CocosIslandsTime;c.IndianComoro,r.UTC_PLUS_3,l.EastAfricaTime;c.IndianKerguelen,r.UTC_PLUS_5,l.FrenchSouthernAndAntarcticTime;c.IndianMahe,r.UTC_PLUS_4,l.SeychellesTime;c.IndianMaldives,r.UTC_PLUS_5,l.MaldivesTime;c.IndianMauritius,r.UTC_PLUS_4,l.MauritiusTime;c.IndianMayotte,r.UTC_PLUS_3,l.EastAfricaTime;c.IndianReunion,r.UTC_PLUS_4,l.ReunionTime;c.PacificApia,r.UTC_PLUS_13,l.SamoaStandardTime;c.PacificAuckland,r.UTC_PLUS_13,l.NewZealandStandardTime;c.PacificChatham,r.UTC_PLUS_13,l.ChathamStandardTime;c.PacificEaster,r.UTC_PLUS_6,l.EasterIslandStandardTime;c.PacificEfate,r.UTC_PLUS_11,l.VanuatuTime;c.PacificEnderbury,r.UTC_PLUS_13,l.TongaTime;c.PacificFakaofo,r.UTC_PLUS_13,l.TongaTime;c.PacificFiji,r.UTC_PLUS_12,l.FijiTime;c.PacificFunafuti,r.UTC_PLUS_12,l.TuvaluTime;c.PacificGalapagos,r.UTC_PLUS_6,l.GalapagosTime;c.PacificGambier,r.UTC_PLUS_9,l.GambierIslandTime;c.PacificGuadalcanal,r.UTC_PLUS_11,l.SolomonIslandsTime;c.PacificGuam,r.UTC_PLUS_10,l.ChamorroStandardTime;c.PacificHonolulu,r.UTC_PLUS_10,l.HawaiiAleutianStandardTime;c.PacificJohnston,r.UTC_PLUS_10,l.HawaiiAleutianStandardTime;c.PacificKiritimati,r.UTC_PLUS_14,l.LineIslandsTime;c.PacificKosrae,r.UTC_PLUS_11,l.KosraeTime;c.PacificKwajalein,r.UTC_PLUS_12,l.MarshallIslandsTime;c.PacificMajuro,r.UTC_PLUS_12,l.MarshallIslandsTime;c.PacificMarquesas,r.UTC_PLUS_9,l.MarquesasIslandsTime;c.PacificMidway,r.UTC_PLUS_11,l.SamoaStandardTime;c.PacificNauru,r.UTC_PLUS_12,l.NauruTime;c.PacificNiue,r.UTC_PLUS_11,l.NiueTime;c.PacificNorfolk,r.UTC_PLUS_11,l.NorfolkIslandTime;c.PacificNoumea,r.UTC_PLUS_11,l.NewCaledoniaTime;c.PacificPagoPago,r.UTC_PLUS_11,l.SamoaStandardTime;c.PacificPalau,r.UTC_PLUS_9,l.PalauTime;c.PacificPitcairn,r.UTC_PLUS_8,l.PitcairnTime;c.PacificPonape,r.UTC_PLUS_11,l.PohnpeiStandardTime;c.PacificPortMoresby,r.UTC_PLUS_10,l.PapuaNewGuineaTime;c.PacificRarotonga,r.UTC_PLUS_10,l.CookIslandTime;c.PacificSaipan,r.UTC_PLUS_10,l.ChamorroStandardTime;c.PacificTahiti,r.UTC_PLUS_10,l.TahitiTime;c.PacificTarawa,r.UTC_PLUS_12,l.GilbertIslandTime;c.PacificTongatapu,r.UTC_PLUS_13,l.TongaTime;c.PacificChuuk,r.UTC_PLUS_10,l.ChuukTime;c.PacificPohnpei,r.UTC_PLUS_11,l.PohnpeiStandardTime;c.PacificYap,r.UTC_PLUS_10,l.ChuukTime;var ce=(a=>(a.Development="Development",a.NonProduction="NonProduction",a.Production="Production",a))(ce||{}),s=(a=>(a.Contains="contains",a.HasCharacterCount="has-character-count",a.HasNumberCount="has-number-count",a.HasLetterCount="has-letter-count",a.HasLowercaseCount="has-lowercase-count",a.HasSpacesCount="has-spaces-count",a.HasSymbolCount="has-symbol-count",a.HasUppercaseCount="has-uppercase-count",a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsAirport="is-airport",a.IsAlpha="is-alpha",a.IsAlphanumeric="is-alphanumeric",a.IsAlgorithmHash="is-algorithm-hash",a.IsAscii="is-ascii",a.IsBase64="is-base-64",a.IsBefore="is-before",a.IsBeforeOrAfter="is-before-or-after",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsBIC="is-bic",a.IsBitcoinAddress="is-bitcoin-address",a.IsBoolean="is-boolean",a.IsColor="is-color",a.IsComplexEnough="is-complex-enough",a.IsCountry="is-country",a.IsCreditCard="is-credit-card",a.IsCurrency="is-currency",a.IsDataURI="is-data-uri",a.IsDate="is-date",a.IsDateRange="is-date-range",a.IsDateTime="is-date-time",a.IsDayOfMonth="is-day-of-month",a.IsDecimal="is-decimal",a.IsDivisibleBy="is-divisible-by",a.IsDomainName="is-domain-name",a.IsEmailAddress="is-email-address",a.IsEthereumAddress="is-ethereum-address",a.IsEAN="is-ean",a.IsEIN="is-ein",a.IsEqual="is-equal",a.IsEvenNumber="is-even-number",a.IsFloat="is-float",a.IsIBAN="is-iban",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsHSLColor="is-hsl-color",a.IsHexColor="is-hex-color",a.IsHexadecimal="is-hexadecimal",a.IsIdentityCardCode="is-identity-card-code",a.IsIMEI="is-imei",a.IsInIPAddressRange="is-in-ip-address-range",a.IsInList="is-in-list",a.IsInTheLast="is-in-the-last",a.IsInteger="is-integer",a.IsIPAddress="is-ip-address",a.IsIPAddressRange="is-ip-address-range",a.IsISBN="is-isbn",a.IsISIN="is-isin",a.IsISMN="is-ismn",a.IsISRC="is-isrc",a.IsISSN="is-issn",a.IsISO4217="is-iso-4217",a.IsISO8601="is-iso-8601",a.IsISO31661Alpha2="is-iso-31661-alpha-2",a.IsISO31661Alpha3="is-iso-31661-alpha-3",a.IsJSON="is-json",a.IsLanguage="is-language",a.IsLatitude="is-latitude",a.IsLongitude="is-longitude",a.IsLengthEqual="is-length-equal",a.IsLengthGreaterThan="is-length-greater-than",a.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",a.IsLengthLessThan="is-length-less-than",a.IsLengthLessThanOrEqual="is-length-less-than-or-equal",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsLicensePlateNumber="is-license-plate-number",a.IsLowercase="is-lowercase",a.IsOctal="is-octal",a.IsMACAddress="is-mac-address",a.IsMD5="is-md5",a.IsMagnetURI="is-magnet-uri",a.IsMarkdown="is-markdown",a.IsMimeType="is-mime-type",a.IsMonth="is-month",a.IsNegativeNumber="is-negative-number",a.IsNotDate="is-not-date",a.IsNotEqual="is-not-equal",a.IsNotInIPAddressRange="is-not-in-ip-address-range",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsNotRegexMatch="is-not-regex-match",a.IsNotToday="is-not-today",a.IsNumber="is-number",a.IsNumeric="is-numeric",a.IsOddNumber="is-odd-number",a.IsPassportNumber="is-passport-number",a.IsPhoneNumber="is-phone-number",a.IsPort="is-port",a.IsPositiveNumber="is-positive-number",a.IsPostalCode="is-postal-code",a.IsProvince="is-province",a.IsRGBColor="is-rgb-color",a.IsRegexMatch="is-regex-match",a.IsRequired="is-required",a.IsSemanticVersion="is-semantic-version",a.IsSlug="is-slug",a.IsSSN="is-ssn",a.IsState="is-state",a.IsStreetAddress="is-street-address",a.IsString="is-string",a.IsStrongPassword="is-strong-password",a.IsTags="is-tags",a.IsTaxIDNumber="is-tax-id-number",a.IsThisMonth="is-this-month",a.IsThisQuarter="is-this-quarter",a.IsThisWeek="is-this-week",a.IsThisWeekend="is-this-weekend",a.IsThisYear="is-this-year",a.IsTime="is-time",a.IsTimeOfDay="is-time-of-day",a.IsTimeRange="is-time-range",a.IsToday="is-today",a.IsURL="is-url",a.IsUUID="is-uuid",a.IsUppercase="is-uppercase",a.IsUsernameAvailable="is-username-available",a.IsValidStreetAddress="is-valid-street-address",a.IsVATIDNumber="is-vat-id-number",a.IsWeekday="is-weekday",a.IsWeekend="is-weekend",a.IsYear="is-year",a))(s||{}),fl=(a=>(a[a.IsHSLColor=s.IsHSLColor]="IsHSLColor",a[a.IsHexColor=s.IsHexColor]="IsHexColor",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsRGBColor=s.IsRGBColor]="IsRGBColor",a[a.IsString=s.IsString]="IsString",a))(fl||{}),dl=(a=>(a[a.IsAlgorithmHash=s.IsAlgorithmHash]="IsAlgorithmHash",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(dl||{}),Il=(a=>(a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsSemanticVersion=s.IsSemanticVersion]="IsSemanticVersion",a[a.IsString=s.IsString]="IsString",a))(Il||{}),_l=(a=>(a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsUUID=s.IsUUID]="IsUUID",a))(_l||{}),gl=(a=>(a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsMD5=s.IsMD5]="IsMD5",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(gl||{}),hl=(a=>(a[a.IsBoolean=s.IsBoolean]="IsBoolean",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a))(hl||{}),Sl=(a=>(a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsDate=s.IsDate]="IsDate",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotDate=s.IsNotDate]="IsNotDate",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotToday=s.IsNotToday]="IsNotToday",a[a.IsThisWeek=s.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=s.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=s.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=s.IsThisYear]="IsThisYear",a[a.IsToday=s.IsToday]="IsToday",a[a.IsWeekend=s.IsWeekend]="IsWeekend",a))(Sl||{}),El=(a=>(a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=s.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsDate=s.IsDate]="IsDate",a[a.IsDateRange=s.IsDateRange]="IsDateRange",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a))(El||{}),pl=(a=>(a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsDate=s.IsDate]="IsDate",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotDate=s.IsNotDate]="IsNotDate",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotToday=s.IsNotToday]="IsNotToday",a[a.IsThisWeek=s.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=s.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=s.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=s.IsThisYear]="IsThisYear",a[a.IsToday=s.IsToday]="IsToday",a[a.IsWeekend=s.IsWeekend]="IsWeekend",a))(pl||{}),Tl=(a=>(a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsDayOfMonth=s.IsDayOfMonth]="IsDayOfMonth",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsToday=s.IsToday]="IsToday",a[a.IsWeekday=s.IsWeekday]="IsWeekday",a[a.IsWeekend=s.IsWeekend]="IsWeekend",a))(Tl||{}),vl=(a=>(a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMonth=s.IsMonth]="IsMonth",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsThisMonth=s.IsThisMonth]="IsThisMonth",a))(vl||{}),bl=(a=>(a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsTime=s.IsTime]="IsTime",a))(bl||{}),Bl=(a=>(a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=s.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsTime=s.IsTime]="IsTime",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsTimeRange=s.IsTimeRange]="IsTimeRange",a))(Bl||{}),Ul=(a=>(a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=s.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsTimeOfDay=s.IsTimeOfDay]="IsTimeOfDay",a[a.IsTimeRange=s.IsTimeRange]="IsTimeRange",a))(Ul||{}),Nl=(a=>(a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsWeekday=s.IsWeekday]="IsWeekday",a[a.IsWeekend=s.IsWeekend]="IsWeekend",a))(Nl||{}),Dl=(a=>(a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsThisYear=s.IsThisYear]="IsThisYear",a[a.IsYear=s.IsYear]="IsYear",a))(Dl||{}),yl=(a=>(a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsHexadecimal=s.IsHexadecimal]="IsHexadecimal",a[a.IsLengthEqual=s.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=s.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=s.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=s.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=s.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(yl||{}),Pl=(a=>(a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsJSON=s.IsJSON]="IsJSON",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a))(Pl||{}),Fl=(a=>(a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsMarkdown=s.IsMarkdown]="IsMarkdown",a[a.IsString=s.IsString]="IsString",a))(Fl||{}),kl=(a=>(a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsCurrency=s.IsCurrency]="IsCurrency",a[a.IsDecimal=s.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=s.IsDivisibleBy]="IsDivisibleBy",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=s.IsFloat]="IsFloat",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsISO8601=s.IsISO8601]="IsISO8601",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNegativeNumber=s.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsPositiveNumber=s.IsPositiveNumber]="IsPositiveNumber",a))(kl||{}),Ml=(a=>(a[a.IsBitcoinAddress=s.IsBitcoinAddress]="IsBitcoinAddress",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a))(Ml||{}),Ll=(a=>(a[a.IsEthereumAddress=s.IsEthereumAddress]="IsEthereumAddress",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a))(Ll||{}),wl=(a=>(a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsJSON=s.IsJSON]="IsJSON",a[a.IsLanguage=s.IsLanguage]="IsLanguage",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a))(wl||{}),Gl=(a=>(a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(Gl||{}),ql=(a=>(a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsCountry=s.IsCountry]="IsCountry",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(ql||{}),Kl=(a=>(a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsFloat=s.IsFloat]="IsFloat",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumeric=s.IsNumeric]="IsNumeric",a))(Kl||{}),xl=(a=>(a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsFloat=s.IsFloat]="IsFloat",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumeric=s.IsNumeric]="IsNumeric",a))(xl||{}),Ol=(a=>(a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsPostalCode=s.IsPostalCode]="IsPostalCode",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a))(Ol||{}),Hl=(a=>(a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsProvince=s.IsProvince]="IsProvince",a[a.IsString=s.IsString]="IsString",a))(Hl||{}),jl=(a=>(a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsState=s.IsState]="IsState",a[a.IsString=s.IsString]="IsString",a))(jl||{}),Wl=(a=>(a[a.IsAlphanumeric=s.IsAlphanumeric]="IsAlphanumeric",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsStreetAddress=s.IsStreetAddress]="IsStreetAddress",a))(Wl||{}),Vl=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a))(Vl||{}),zl=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a))(zl||{}),Rl=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsDataURI=s.IsDataURI]="IsDataURI",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(Rl||{}),Jl=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsDomainName=s.IsDomainName]="IsDomainName",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(Jl||{}),Yl=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEmailAddress=s.IsEmailAddress]="IsEmailAddress",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(Yl||{}),Zl=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsIPAddress=s.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=s.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=s.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(Zl||{}),$l=(a=>(a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsIPAddressRange=s.IsIPAddressRange]="IsIPAddressRange",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=s.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))($l||{}),Ql=(a=>(a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a))(Ql||{}),Xl=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsMACAddress=s.IsMACAddress]="IsMACAddress",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(Xl||{}),Cl=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsMagnetURI=s.IsMagnetURI]="IsMagnetURI",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(Cl||{}),a0=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsMimeType=s.IsMimeType]="IsMimeType",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(a0||{}),e0=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsSlug=s.IsSlug]="IsSlug",a))(e0||{}),u0=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsURL=s.IsURL]="IsURL",a))(u0||{}),i0=(a=>(a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsDecimal=s.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=s.IsDivisibleBy]="IsDivisibleBy",a[a.IsEAN=s.IsEAN]="IsEAN",a[a.IsEIN=s.IsEIN]="IsEIN",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=s.IsFloat]="IsFloat",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInt=s.IsInteger]="IsInt",a[a.IsISBN=s.IsISBN]="IsISBN",a[a.IsISMN=s.IsISMN]="IsISMN",a[a.IsISSN=s.IsISSN]="IsISSN",a[a.IsLatitude=s.IsLatitude]="IsLatitude",a[a.IsLongitude=s.IsLongitude]="IsLongitude",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMACAddress=s.IsMACAddress]="IsMACAddress",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsNegativeNumber=s.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsPassportNumber=s.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=s.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=s.IsPort]="IsPort",a[a.IsPositiveNumber=s.IsPositiveNumber]="IsPositiveNumber",a[a.IsPostalCode=s.IsPostalCode]="IsPostalCode",a[a.IsSemanticVersion=s.IsSemanticVersion]="IsSemanticVersion",a[a.IsSSN=s.IsSSN]="IsSSN",a[a.IsTaxIDNumber=s.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsUUID=s.IsUUID]="IsUUID",a[a.IsVATIDNumber=s.IsVATIDNumber]="IsVATIDNumber",a))(i0||{}),s0=(a=>(a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsFloat=s.IsFloat]="IsFloat",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsNumeric=s.IsNumeric]="IsNumeric",a))(s0||{}),n0=(a=>(a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsNumeric=s.IsNumeric]="IsNumeric",a))(n0||{}),r0=(a=>(a[a.IsCreditCard=s.IsCreditCard]="IsCreditCard",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsLengthEqual=s.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=s.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=s.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=s.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=s.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch",a))(r0||{}),t0=(a=>(a[a.isEmailAddress=s.IsEmailAddress]="isEmailAddress",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsLengthEqual=s.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=s.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=s.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=s.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=s.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch",a))(t0||{}),l0=(a=>(a[a.IsLicensePlateNumber=s.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsString=s.IsString]="IsString",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch",a))(l0||{}),m0=(a=>(a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsPassportNumber=s.IsPassportNumber]="IsPassportNumber",a[a.IsString=s.IsString]="IsString",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch",a))(m0||{}),c0=(a=>(a[a.IsComplexEnough=s.IsComplexEnough]="IsComplexEnough",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsLengthGreaterThan=s.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=s.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=s.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=s.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsStrongPassword=s.IsStrongPassword]="IsStrongPassword",a[a.IsString=s.IsString]="IsString",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch",a))(c0||{}),o0=(a=>(a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsPhoneNumber=s.IsPhoneNumber]="IsPhoneNumber",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch",a))(o0||{}),A0=(a=>(a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsSSN=s.IsSSN]="IsSSN",a[a.IsString=s.IsString]="IsString",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch",a))(A0||{}),f0=(a=>(a[a.IsAirport=s.IsAirport]="IsAirport",a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(f0||{}),d0=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsBIC=s.IsBIC]="IsBIC",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(d0||{}),I0=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEAN=s.IsEAN]="IsEAN",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(I0||{}),_0=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEIN=s.IsEIN]="IsEIN",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(_0||{}),g0=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsIBAN=s.IsIBAN]="IsIBAN",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(g0||{}),h0=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsISBN=s.IsISBN]="IsISBN",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(h0||{}),S0=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsISIN=s.IsISIN]="IsISIN",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(S0||{}),E0=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsISMN=s.IsISMN]="IsISMN",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(E0||{}),p0=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsISSN=s.IsISSN]="IsISSN",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a))(p0||{}),T0=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsTaxIDNumber=s.IsTaxIDNumber]="IsTaxIDNumber",a))(T0||{}),v0=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsVATIDNumber=s.IsVATIDNumber]="IsVATIDNumber",a))(v0||{}),b0=(a=>(a[a.Contains=s.Contains]="Contains",a[a.HasNumberCount=s.HasNumberCount]="HasNumberCount",a[a.HasLowercaseCount=s.HasLowercaseCount]="HasLowercaseCount",a[a.HasLetterCount=s.HasLetterCount]="HasLetterCount",a[a.HasSpacesCount=s.HasSpacesCount]="HasSpacesCount",a[a.HasSymbolCount=s.HasSymbolCount]="HasSymbolCount",a[a.HasUppercaseCount=s.HasUppercaseCount]="HasUppercaseCount",a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=s.IsAlphanumeric]="IsAlphanumeric",a[a.IsAscii=s.IsAscii]="IsAscii",a[a.IsBase64=s.IsBase64]="IsBase64",a[a.IsColor=s.IsColor]="IsColor",a[a.IsComplexEnough=s.IsComplexEnough]="IsComplexEnough",a[a.IsCreditCard=s.IsCreditCard]="IsCreditCard",a[a.IsDataURI=s.IsDataURI]="IsDataURI",a[a.IsDomainName=s.IsDomainName]="IsDomainName",a[a.IsEmailAddress=s.IsEmailAddress]="IsEmailAddress",a[a.IsEthereumAddress=s.IsEthereumAddress]="IsEthereumAddress",a[a.IsEAN=s.IsEAN]="IsEAN",a[a.IsEIN=s.IsEIN]="IsEIN",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsIBAN=s.IsIBAN]="IsIBAN",a[a.IsHSLColor=s.IsHSLColor]="IsHSLColor",a[a.IsHexColor=s.IsHexColor]="IsHexColor",a[a.IsHexadecimal=s.IsHexadecimal]="IsHexadecimal",a[a.IsIdentityCardCode=s.IsIdentityCardCode]="IsIdentityCardCode",a[a.IsIMEI=s.IsIMEI]="IsIMEI",a[a.IsInList=s.IsInList]="IsInList",a[a.IsIPAddress=s.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=s.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsISBN=s.IsISBN]="IsISBN",a[a.IsISIN=s.IsISIN]="IsISIN",a[a.IsISMN=s.IsISMN]="IsISMN",a[a.IsISRC=s.IsISRC]="IsISRC",a[a.IsISSN=s.IsISSN]="IsISSN",a[a.IsLanguage=s.IsLanguage]="IsLanguage",a[a.IsLatitude=s.IsLatitude]="IsLatitude",a[a.IsLongitude=s.IsLongitude]="IsLongitude",a[a.IsLengthEqual=s.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=s.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=s.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=s.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=s.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsLicensePlateNumber=s.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsLowercase=s.IsLowercase]="IsLowercase",a[a.IsOctal=s.IsOctal]="IsOctal",a[a.IsMACAddress=s.IsMACAddress]="IsMACAddress",a[a.IsMD5=s.IsMD5]="IsMD5",a[a.IsMagnetURI=s.IsMagnetURI]="IsMagnetURI",a[a.IsMarkdown=s.IsMarkdown]="IsMarkdown",a[a.IsMimeType=s.IsMimeType]="IsMimeType",a[a.IsMonth=s.IsMonth]="IsMonth",a[a.IsNotInIPAddressRange=s.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsNumeric=s.IsNumeric]="IsNumeric",a[a.IsPassportNumber=s.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=s.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=s.IsPort]="IsPort",a[a.IsPostalCode=s.IsPostalCode]="IsPostalCode",a[a.IsProvince=s.IsProvince]="IsProvince",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch",a[a.IsSemanticVersion=s.IsSemanticVersion]="IsSemanticVersion",a[a.IsSlug=s.IsSlug]="IsSlug",a[a.IsSSN=s.IsSSN]="IsSSN",a[a.IsState=s.IsState]="IsState",a[a.IsStreetAddress=s.IsStreetAddress]="IsStreetAddress",a[a.IsString=s.IsString]="IsString",a[a.IsTaxIDNumber=s.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsURL=s.IsURL]="IsURL",a[a.IsUUID=s.IsUUID]="IsUUID",a[a.IsUppercase=s.IsUppercase]="IsUppercase",a[a.IsVATIDNumber=s.IsVATIDNumber]="IsVATIDNumber",a[a.IsWeekday=s.IsWeekday]="IsWeekday",a[a.IsWeekend=s.IsWeekend]="IsWeekend",a[a.IsYear=s.IsYear]="IsYear",a))(b0||{}),B0=(a=>(a[a.Contains=s.Contains]="Contains",a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=s.IsAlphanumeric]="IsAlphanumeric",a[a.IsInList=s.IsInList]="IsInList",a[a.IsMarkdown=s.IsMarkdown]="IsMarkdown",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNumeric=s.IsNumeric]="IsNumeric",a[a.IsLowercase=s.IsLowercase]="IsLowercase",a[a.IsString=s.IsString]="IsString",a[a.IsUppercase=s.IsUppercase]="IsUppercase",a))(B0||{}),U0={description:"Development environment",id:"dev",name:"Development",type:ce.Development},Hs={description:"Test environment",id:"test",name:"Test",type:ce.NonProduction},N0={description:"Preview environment",id:"preview",name:"Preview",type:ce.NonProduction},D0={description:"Production environment",id:"production",name:"Production",type:ce.Production};function js(){switch("production"){case"dev":case"development":return U0;case"test":return Hs;case"preview":return N0;case"production":return D0}return Hs}var Bu=L(require("path"),1),Ws=require("vite");async function Vs({config:a,environment:d}){try{switch(console.log("config",a),console.log("environment",d),d){case ie.Development:let g=await(0,Ws.createServer)({root:Bu.default.join(Bu.default.resolve())});console.log("server",g),await g.listen(),g.printUrls(),`${R.green("\u2714")}${R.bold(d)}`;break;default:}}catch(g){console.error(R.red(g.message)),process.exit(1)}}var zs=new y({name:"run",description:"Commands for running an application or service",run:async({config:a,flags:d})=>{},type:"project",commands:[new y({name:"dev",description:"Start project in development mode",run:async({config:a,flags:d})=>{process.env.NODE_ENV="development",console.log("config",a);let g=a.run;console.log("options",g);let S=js();switch(console.log("environment",S),a.type){case _a.WebApplication:await Vs({environment:ie.Development});break;default:break}},type:"project"}),new y({name:"preview",description:"Start project in preview mode",run:async({config:a,flags:d})=>{},type:"project"}),new y({name:"qa",description:"Start project in qa mode",run:async({config:a,flags:d})=>{},type:"project"}),new y({name:"production",description:"Start project in production mode",run:async({config:a,flags:d})=>{},type:"project"}),new y({name:"help",description:"Shows help for run commands",run:async()=>{console.info("Available serve commands are: dev, preview, production, and help")},type:"project"})]});var Rs=require("child_process");var Fa={concurrency:void 0,coverage:{directory:"coverage",thresholds:{global:{branches:0,functions:0,lines:0,statements:0}},reporters:[Fe.Lcov,Fe.JSONSummary]},fail:{fast:!0,noTests:!1},tool:Ba.Ava,verbose:!0};var oe=require("@rauschma/stringio");async function Ae({config:a,match:d,watch:g}){try{let S=["--all"],E=["--color"],v=a?.concurrency?["--concurrency",a.concurrency.toString()]:[],B=a?.fail?.fast?["--fail-fast"]:[],U=a?.fail?.noTests??Fa.fail.noTests?[]:["--failWithoutAssertions"],D=d?[`--match='${d.toString()}'`]:[],k=['--nodeArguments="--loader=ts-node/esm"'],z=a?.verbose?["--verbose"]:[],Y=g?["--watch"]:[],J=[...S,...E,...v,...B,...U,...D,...k,...z,...Y],M=await(0,Rs.spawn)("ava",J,{stdio:[process.stdin,process.stdout,process.stderr]});await(0,oe.onExit)(M)}catch{}}var Js=require("c8");var We=require("fs-extra"),Uu=L(require("path"),1);async function fe(a){try{let d=Uu.default.join(process.cwd(),a.coverage?.directory??Fa.coverage.directory);await(0,We.ensureDir)(d),await(0,We.emptyDir)(d);let g=new Js.Report({all:!0,reportsDirectory:d,src:[Uu.default.join(process.cwd(),"src")],tempDirectory:d,reporter:a.coverage?.reporters??Fa.coverage.reporters});return await g.run(),console.info(`${R.green("\u2714")} generated coverage report in ${R.bold(d)}`),g}catch(d){throw console.warn("Error encountered while generating coverage reports"),console.error(d),d}}var Ys=require("jest-cli"),Nu=L(require("path"),1);async function de({config:a,match:d,watch:g}){try{let S=["--colors"],E=a?.concurrency?["--maxConcurrency",a.concurrency?.toString()??"5"]:[],v=["--coverageProvider","v8"],B=a?.fail?.fast?["--bail"]:[],U=a?.fail?.noTests??Fa.fail.noTests?[]:["--passWithNoTests"],D=d?[`--t ${d.toString()}`]:[],k=["--preset","ts-jest"],z=["--rootDir",Nu.default.resolve(process.cwd())],Y=a?.verbose?["--verbose"]:[],J=g?["--watch"]:[],M=[...S,...E,...v,...U,...B,...D,...k,...z,...Y,...J];await(0,Ys.run)(M,Nu.default.resolve())}catch{}}var Zs=new y({name:"test",description:"Commands for running tests",run:async({config:a,flags:d})=>{if(typeof a.test=="object"&&!Array.isArray(a.test)){switch(a.test.tool){case Ba.Jest:await de({config:a.test,match:d.match,watch:d.watch});break;case Ba.Ava:default:await Ae({config:a.test,match:d.match,watch:d.watch})}(a.test.coverage||d.coverage)&&await fe(a.test)}else if(Array.isArray(a.test))for(let g of a.test){switch(g.tool){case Ba.Jest:await de({config:g,match:d.match,watch:d.watch});break;case Ba.Ava:default:await Ae({config:g,match:d.match,watch:d.watch})}(g.coverage||d.coverage)&&await fe(g)}},commands:[new y({name:"ava",description:"Run tests using Ava",run:async({config:a,flags:d})=>{if(typeof a.test=="object"&&!Array.isArray(a.test))await Ae({config:a.test,match:d.match,watch:d.watch});else if(Array.isArray(a.test))for(let g of a.test)await Ae({config:g,match:d.match,watch:d.watch})}}),new y({name:"jest",description:"Runs tests using Jest",run:async({config:a,flags:d})=>{if(typeof a.test=="object"&&!Array.isArray(a.test))await de({config:a.test,match:d.match,watch:d.watch});else if(Array.isArray(a.test))for(let g of a.test)await de({config:g,match:d.match,watch:d.watch})},type:"project"}),new y({name:"coverage",description:"Generates coverage reports",run:async({config:a,flags:d})=>{if(typeof a.test=="object"&&!Array.isArray(a.test))await fe(a.test);else if(Array.isArray(a.test))for(let g of a.test)await fe(g)},type:"project"}),new y({name:"help",description:"Shows help for test commands",run:async()=>{console.info("Available test commands are: ava, jest")},type:"project"})]});var ka=L(require("node:path"),1);async function $s(){try{try{return(await import(ka.default.join(ka.default.resolve(),"./.srclaunch/config.js"))).default}catch{try{return(await import(ka.default.join(ka.default.resolve(),"./.srclaunch/config"))).default}catch{let g=ka.default.join(ka.default.resolve(),".srclaunch","config.json");try{let S=await Ei(g);return await JSON.parse(S.toString())}catch(S){throw new Error(`Could not read config file: ${g}. ${S.message}`)}}}}catch{throw new Error("Please run this command from a SrcLaunch project or workspace directory.")}}var M0={};var Cs=`
Usage
  $ srclaunch <command>

Commands
  build - Build SrcLaunch project if srclaunch.config.json is found in the current directory
  models
    * build - Build models into Sequelize models, Typescript definitions and JSON
  test - Run tests and collect coverage

To view information for a specific command add "help" after the command name, for example:
  $ srclaunch build help
`,Ie=(0,Qs.default)(Cs,{importMeta:M0});async function an(){try{let a=Ie.input,d=Ie.flags,g=await $s();(0,Xs.default)({pkg:Ie.pkg}).notify(),await mu({cli:Ie,command:a,commands:[wi,os,As,fs,ds,ws,Gs,qs,Os,zs,Zs],config:g,flags:d})}catch(a){console.error(a)}}var F0=an();0&&(module.exports={CommandType,cli,helpMessage,main});
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
//# sourceMappingURL=index.cjs.map
