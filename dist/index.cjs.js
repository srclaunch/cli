var Ms=Object.create;var Ee=Object.defineProperty;var Fs=Object.getOwnPropertyDescriptor;var ks=Object.getOwnPropertyNames;var Ls=Object.getPrototypeOf,zs=Object.prototype.hasOwnProperty;var N=(e,o)=>()=>(o||e((o={exports:{}}).exports,o),o.exports),Rs=(e,o)=>{for(var c in o)Ee(e,c,{get:o[c],enumerable:!0})},la=(e,o,c,l)=>{if(o&&typeof o=="object"||typeof o=="function")for(let m of ks(o))!zs.call(e,m)&&m!==c&&Ee(e,m,{get:()=>o[m],enumerable:!(l=Fs(o,m))||l.enumerable});return e};var y=(e,o,c)=>(c=e!=null?Ms(Ls(e)):{},la(o||!e||!e.__esModule?Ee(c,"default",{value:e,enumerable:!0}):c,e)),xs=e=>la(Ee({},"__esModule",{value:!0}),e);var x=N((G3,De)=>{var pn,Cn,En,_n,Sn,In,vn,bn,yn,ye,Ze,Bn,Dn,Un,re,Pn,Nn,Mn,Fn,kn,Ln,zn,Rn,Be;(function(e){var o=typeof global=="object"?global:typeof self=="object"?self:typeof this=="object"?this:{};typeof define=="function"&&define.amd?define("tslib",["exports"],function(l){e(c(o,c(l)))}):typeof De=="object"&&typeof De.exports=="object"?e(c(o,c(De.exports))):e(c(o));function c(l,m){return l!==o&&(typeof Object.create=="function"?Object.defineProperty(l,"__esModule",{value:!0}):l.__esModule=!0),function(g,d){return l[g]=m?m(g,d):d}}})(function(e){var o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(l,m){l.__proto__=m}||function(l,m){for(var g in m)Object.prototype.hasOwnProperty.call(m,g)&&(l[g]=m[g])};pn=function(l,m){if(typeof m!="function"&&m!==null)throw new TypeError("Class extends value "+String(m)+" is not a constructor or null");o(l,m);function g(){this.constructor=l}l.prototype=m===null?Object.create(m):(g.prototype=m.prototype,new g)},Cn=Object.assign||function(l){for(var m,g=1,d=arguments.length;g<d;g++){m=arguments[g];for(var h in m)Object.prototype.hasOwnProperty.call(m,h)&&(l[h]=m[h])}return l},En=function(l,m){var g={};for(var d in l)Object.prototype.hasOwnProperty.call(l,d)&&m.indexOf(d)<0&&(g[d]=l[d]);if(l!=null&&typeof Object.getOwnPropertySymbols=="function")for(var h=0,d=Object.getOwnPropertySymbols(l);h<d.length;h++)m.indexOf(d[h])<0&&Object.prototype.propertyIsEnumerable.call(l,d[h])&&(g[d[h]]=l[d[h]]);return g},_n=function(l,m,g,d){var h=arguments.length,T=h<3?m:d===null?d=Object.getOwnPropertyDescriptor(m,g):d,f;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")T=Reflect.decorate(l,m,g,d);else for(var S=l.length-1;S>=0;S--)(f=l[S])&&(T=(h<3?f(T):h>3?f(m,g,T):f(m,g))||T);return h>3&&T&&Object.defineProperty(m,g,T),T},Sn=function(l,m){return function(g,d){m(g,d,l)}},In=function(l,m){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(l,m)},vn=function(l,m,g,d){function h(T){return T instanceof g?T:new g(function(f){f(T)})}return new(g||(g=Promise))(function(T,f){function S(C){try{p(d.next(C))}catch(_){f(_)}}function v(C){try{p(d.throw(C))}catch(_){f(_)}}function p(C){C.done?T(C.value):h(C.value).then(S,v)}p((d=d.apply(l,m||[])).next())})},bn=function(l,m){var g={label:0,sent:function(){if(T[0]&1)throw T[1];return T[1]},trys:[],ops:[]},d,h,T,f;return f={next:S(0),throw:S(1),return:S(2)},typeof Symbol=="function"&&(f[Symbol.iterator]=function(){return this}),f;function S(p){return function(C){return v([p,C])}}function v(p){if(d)throw new TypeError("Generator is already executing.");for(;g;)try{if(d=1,h&&(T=p[0]&2?h.return:p[0]?h.throw||((T=h.return)&&T.call(h),0):h.next)&&!(T=T.call(h,p[1])).done)return T;switch(h=0,T&&(p=[p[0]&2,T.value]),p[0]){case 0:case 1:T=p;break;case 4:return g.label++,{value:p[1],done:!1};case 5:g.label++,h=p[1],p=[0];continue;case 7:p=g.ops.pop(),g.trys.pop();continue;default:if(T=g.trys,!(T=T.length>0&&T[T.length-1])&&(p[0]===6||p[0]===2)){g=0;continue}if(p[0]===3&&(!T||p[1]>T[0]&&p[1]<T[3])){g.label=p[1];break}if(p[0]===6&&g.label<T[1]){g.label=T[1],T=p;break}if(T&&g.label<T[2]){g.label=T[2],g.ops.push(p);break}T[2]&&g.ops.pop(),g.trys.pop();continue}p=m.call(l,g)}catch(C){p=[6,C],h=0}finally{d=T=0}if(p[0]&5)throw p[1];return{value:p[0]?p[1]:void 0,done:!0}}},yn=function(l,m){for(var g in l)g!=="default"&&!Object.prototype.hasOwnProperty.call(m,g)&&Be(m,l,g)},Be=Object.create?function(l,m,g,d){d===void 0&&(d=g),Object.defineProperty(l,d,{enumerable:!0,get:function(){return m[g]}})}:function(l,m,g,d){d===void 0&&(d=g),l[d]=m[g]},ye=function(l){var m=typeof Symbol=="function"&&Symbol.iterator,g=m&&l[m],d=0;if(g)return g.call(l);if(l&&typeof l.length=="number")return{next:function(){return l&&d>=l.length&&(l=void 0),{value:l&&l[d++],done:!l}}};throw new TypeError(m?"Object is not iterable.":"Symbol.iterator is not defined.")},Ze=function(l,m){var g=typeof Symbol=="function"&&l[Symbol.iterator];if(!g)return l;var d=g.call(l),h,T=[],f;try{for(;(m===void 0||m-- >0)&&!(h=d.next()).done;)T.push(h.value)}catch(S){f={error:S}}finally{try{h&&!h.done&&(g=d.return)&&g.call(d)}finally{if(f)throw f.error}}return T},Bn=function(){for(var l=[],m=0;m<arguments.length;m++)l=l.concat(Ze(arguments[m]));return l},Dn=function(){for(var l=0,m=0,g=arguments.length;m<g;m++)l+=arguments[m].length;for(var d=Array(l),h=0,m=0;m<g;m++)for(var T=arguments[m],f=0,S=T.length;f<S;f++,h++)d[h]=T[f];return d},Un=function(l,m,g){if(g||arguments.length===2)for(var d=0,h=m.length,T;d<h;d++)(T||!(d in m))&&(T||(T=Array.prototype.slice.call(m,0,d)),T[d]=m[d]);return l.concat(T||Array.prototype.slice.call(m))},re=function(l){return this instanceof re?(this.v=l,this):new re(l)},Pn=function(l,m,g){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var d=g.apply(l,m||[]),h,T=[];return h={},f("next"),f("throw"),f("return"),h[Symbol.asyncIterator]=function(){return this},h;function f(b){d[b]&&(h[b]=function(B){return new Promise(function(D,F){T.push([b,B,D,F])>1||S(b,B)})})}function S(b,B){try{v(d[b](B))}catch(D){_(T[0][3],D)}}function v(b){b.value instanceof re?Promise.resolve(b.value.v).then(p,C):_(T[0][2],b)}function p(b){S("next",b)}function C(b){S("throw",b)}function _(b,B){b(B),T.shift(),T.length&&S(T[0][0],T[0][1])}},Nn=function(l){var m,g;return m={},d("next"),d("throw",function(h){throw h}),d("return"),m[Symbol.iterator]=function(){return this},m;function d(h,T){m[h]=l[h]?function(f){return(g=!g)?{value:re(l[h](f)),done:h==="return"}:T?T(f):f}:T}},Mn=function(l){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var m=l[Symbol.asyncIterator],g;return m?m.call(l):(l=typeof ye=="function"?ye(l):l[Symbol.iterator](),g={},d("next"),d("throw"),d("return"),g[Symbol.asyncIterator]=function(){return this},g);function d(T){g[T]=l[T]&&function(f){return new Promise(function(S,v){f=l[T](f),h(S,v,f.done,f.value)})}}function h(T,f,S,v){Promise.resolve(v).then(function(p){T({value:p,done:S})},f)}},Fn=function(l,m){return Object.defineProperty?Object.defineProperty(l,"raw",{value:m}):l.raw=m,l};var c=Object.create?function(l,m){Object.defineProperty(l,"default",{enumerable:!0,value:m})}:function(l,m){l.default=m};kn=function(l){if(l&&l.__esModule)return l;var m={};if(l!=null)for(var g in l)g!=="default"&&Object.prototype.hasOwnProperty.call(l,g)&&Be(m,l,g);return c(m,l),m},Ln=function(l){return l&&l.__esModule?l:{default:l}},zn=function(l,m,g,d){if(g==="a"&&!d)throw new TypeError("Private accessor was defined without a getter");if(typeof m=="function"?l!==m||!d:!m.has(l))throw new TypeError("Cannot read private member from an object whose class did not declare it");return g==="m"?d:g==="a"?d.call(l):d?d.value:m.get(l)},Rn=function(l,m,g,d,h){if(d==="m")throw new TypeError("Private method is not writable");if(d==="a"&&!h)throw new TypeError("Private accessor was defined without a setter");if(typeof m=="function"?l!==m||!h:!m.has(l))throw new TypeError("Cannot write private member to an object whose class did not declare it");return d==="a"?h.call(l,g):h?h.value=g:m.set(l,g),g},e("__extends",pn),e("__assign",Cn),e("__rest",En),e("__decorate",_n),e("__param",Sn),e("__metadata",In),e("__awaiter",vn),e("__generator",bn),e("__exportStar",yn),e("__createBinding",Be),e("__values",ye),e("__read",Ze),e("__spread",Bn),e("__spreadArrays",Dn),e("__spreadArray",Un),e("__await",re),e("__asyncGenerator",Pn),e("__asyncDelegator",Nn),e("__asyncValues",Mn),e("__makeTemplateObject",Fn),e("__importStar",kn),e("__importDefault",Ln),e("__classPrivateFieldGet",zn),e("__classPrivateFieldSet",Rn)})});var xn=N(oe=>{"use strict";Object.defineProperty(oe,"__esModule",{value:!0});oe.lowerCase=oe.localeLowerCase=void 0;var et={tr:{regexp:/\u0130|\u0049|\u0049\u0307/g,map:{\u0130:"i",I:"\u0131",I\u0307:"i"}},az:{regexp:/\u0130/g,map:{\u0130:"i",I:"\u0131",I\u0307:"i"}},lt:{regexp:/\u0049|\u004A|\u012E|\u00CC|\u00CD|\u0128/g,map:{I:"i\u0307",J:"j\u0307",\u012E:"\u012F\u0307",\u00CC:"i\u0307\u0300",\u00CD:"i\u0307\u0301",\u0128:"i\u0307\u0303"}}};function at(e,o){var c=et[o.toLowerCase()];return Je(c?e.replace(c.regexp,function(l){return c.map[l]}):e)}oe.localeLowerCase=at;function Je(e){return e.toLowerCase()}oe.lowerCase=Je});var ne=N(Ue=>{"use strict";Object.defineProperty(Ue,"__esModule",{value:!0});Ue.noCase=void 0;var it=xn(),nt=[/([a-z0-9])([A-Z])/g,/([A-Z])([A-Z][a-z])/g],st=/[^A-Z0-9]+/gi;function ut(e,o){o===void 0&&(o={});for(var c=o.splitRegexp,l=c===void 0?nt:c,m=o.stripRegexp,g=m===void 0?st:m,d=o.transform,h=d===void 0?it.lowerCase:d,T=o.delimiter,f=T===void 0?" ":T,S=wn(wn(e,l,"$1\0$2"),g,"\0"),v=0,p=S.length;S.charAt(v)==="\0";)v++;for(;S.charAt(p-1)==="\0";)p--;return S.slice(v,p).split("\0").map(h).join(f)}Ue.noCase=ut;function wn(e,o,c){return o instanceof RegExp?e.replace(o,c):o.reduce(function(l,m){return l.replace(m,c)},e)}});var Qe=N(J=>{"use strict";Object.defineProperty(J,"__esModule",{value:!0});J.pascalCase=J.pascalCaseTransformMerge=J.pascalCaseTransform=void 0;var tt=x(),rt=ne();function qn(e,o){var c=e.charAt(0),l=e.substr(1).toLowerCase();return o>0&&c>="0"&&c<="9"?"_"+c+l:""+c.toUpperCase()+l}J.pascalCaseTransform=qn;function ot(e){return e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()}J.pascalCaseTransformMerge=ot;function lt(e,o){return o===void 0&&(o={}),rt.noCase(e,tt.__assign({delimiter:"",transform:qn},o))}J.pascalCase=lt});var Kn=N(Q=>{"use strict";Object.defineProperty(Q,"__esModule",{value:!0});Q.camelCase=Q.camelCaseTransformMerge=Q.camelCaseTransform=void 0;var mt=x(),Xe=Qe();function Gn(e,o){return o===0?e.toLowerCase():Xe.pascalCaseTransform(e,o)}Q.camelCaseTransform=Gn;function dt(e,o){return o===0?e.toLowerCase():Xe.pascalCaseTransformMerge(e)}Q.camelCaseTransformMerge=dt;function ct(e,o){return o===void 0&&(o={}),Xe.pascalCase(e,mt.__assign({transform:Gn},o))}Q.camelCase=ct});var ea=N(Pe=>{"use strict";Object.defineProperty(Pe,"__esModule",{value:!0});Pe.upperCaseFirst=void 0;function At(e){return e.charAt(0).toUpperCase()+e.substr(1)}Pe.upperCaseFirst=At});var aa=N(le=>{"use strict";Object.defineProperty(le,"__esModule",{value:!0});le.capitalCase=le.capitalCaseTransform=void 0;var gt=x(),Tt=ne(),ht=ea();function On(e){return ht.upperCaseFirst(e.toLowerCase())}le.capitalCaseTransform=On;function ft(e,o){return o===void 0&&(o={}),Tt.noCase(e,gt.__assign({delimiter:" ",transform:On},o))}le.capitalCase=ft});var Hn=N(me=>{"use strict";Object.defineProperty(me,"__esModule",{value:!0});me.upperCase=me.localeUpperCase=void 0;var pt={tr:{regexp:/[\u0069]/g,map:{i:"\u0130"}},az:{regexp:/[\u0069]/g,map:{i:"\u0130"}},lt:{regexp:/[\u0069\u006A\u012F]\u0307|\u0069\u0307[\u0300\u0301\u0303]/g,map:{i\u0307:"I",j\u0307:"J",\u012F\u0307:"\u012E",i\u0307\u0300:"\xCC",i\u0307\u0301:"\xCD",i\u0307\u0303:"\u0128"}}};function Ct(e,o){var c=pt[o.toLowerCase()];return ia(c?e.replace(c.regexp,function(l){return c.map[l]}):e)}me.localeUpperCase=Ct;function ia(e){return e.toUpperCase()}me.upperCase=ia});var jn=N(Ne=>{"use strict";Object.defineProperty(Ne,"__esModule",{value:!0});Ne.constantCase=void 0;var Et=x(),_t=ne(),St=Hn();function It(e,o){return o===void 0&&(o={}),_t.noCase(e,Et.__assign({delimiter:"_",transform:St.upperCase},o))}Ne.constantCase=It});var Te=N(Me=>{"use strict";Object.defineProperty(Me,"__esModule",{value:!0});Me.dotCase=void 0;var vt=x(),bt=ne();function yt(e,o){return o===void 0&&(o={}),bt.noCase(e,vt.__assign({delimiter:"."},o))}Me.dotCase=yt});var $n=N(Fe=>{"use strict";Object.defineProperty(Fe,"__esModule",{value:!0});Fe.headerCase=void 0;var Bt=x(),Dt=aa();function Ut(e,o){return o===void 0&&(o={}),Dt.capitalCase(e,Bt.__assign({delimiter:"-"},o))}Fe.headerCase=Ut});var Wn=N(ke=>{"use strict";Object.defineProperty(ke,"__esModule",{value:!0});ke.paramCase=void 0;var Pt=x(),Nt=Te();function Mt(e,o){return o===void 0&&(o={}),Nt.dotCase(e,Pt.__assign({delimiter:"-"},o))}ke.paramCase=Mt});var Vn=N(Le=>{"use strict";Object.defineProperty(Le,"__esModule",{value:!0});Le.pathCase=void 0;var Ft=x(),kt=Te();function Lt(e,o){return o===void 0&&(o={}),kt.dotCase(e,Ft.__assign({delimiter:"/"},o))}Le.pathCase=Lt});var Zn=N(de=>{"use strict";Object.defineProperty(de,"__esModule",{value:!0});de.sentenceCase=de.sentenceCaseTransform=void 0;var zt=x(),Rt=ne(),xt=ea();function Yn(e,o){var c=e.toLowerCase();return o===0?xt.upperCaseFirst(c):c}de.sentenceCaseTransform=Yn;function wt(e,o){return o===void 0&&(o={}),Rt.noCase(e,zt.__assign({delimiter:" ",transform:Yn},o))}de.sentenceCase=wt});var Jn=N(ze=>{"use strict";Object.defineProperty(ze,"__esModule",{value:!0});ze.snakeCase=void 0;var qt=x(),Gt=Te();function Kt(e,o){return o===void 0&&(o={}),Gt.dotCase(e,qt.__assign({delimiter:"_"},o))}ze.snakeCase=Kt});var Qn=N(z=>{"use strict";Object.defineProperty(z,"__esModule",{value:!0});var K=x();K.__exportStar(Kn(),z);K.__exportStar(aa(),z);K.__exportStar(jn(),z);K.__exportStar(Te(),z);K.__exportStar($n(),z);K.__exportStar(ne(),z);K.__exportStar(Wn(),z);K.__exportStar(Qe(),z);K.__exportStar(Vn(),z);K.__exportStar(Zn(),z);K.__exportStar(Jn(),z)});var Re=N((na,sa)=>{(function(e,o){typeof require=="function"&&typeof na=="object"&&typeof sa=="object"?sa.exports=o():typeof define=="function"&&define.amd?define(function(){return o()}):e.pluralize=o()})(na,function(){var e=[],o=[],c={},l={},m={};function g(C){return typeof C=="string"?new RegExp("^"+C+"$","i"):C}function d(C,_){return C===_?_:C===C.toLowerCase()?_.toLowerCase():C===C.toUpperCase()?_.toUpperCase():C[0]===C[0].toUpperCase()?_.charAt(0).toUpperCase()+_.substr(1).toLowerCase():_.toLowerCase()}function h(C,_){return C.replace(/\$(\d{1,2})/g,function(b,B){return _[B]||""})}function T(C,_){return C.replace(_[0],function(b,B){var D=h(_[1],arguments);return d(b===""?C[B-1]:b,D)})}function f(C,_,b){if(!C.length||c.hasOwnProperty(C))return _;for(var B=b.length;B--;){var D=b[B];if(D[0].test(_))return T(_,D)}return _}function S(C,_,b){return function(B){var D=B.toLowerCase();return _.hasOwnProperty(D)?d(B,D):C.hasOwnProperty(D)?d(B,C[D]):f(D,B,b)}}function v(C,_,b,B){return function(D){var F=D.toLowerCase();return _.hasOwnProperty(F)?!0:C.hasOwnProperty(F)?!1:f(F,F,b)===F}}function p(C,_,b){var B=_===1?p.singular(C):p.plural(C);return(b?_+" ":"")+B}return p.plural=S(m,l,e),p.isPlural=v(m,l,e),p.singular=S(l,m,o),p.isSingular=v(l,m,o),p.addPluralRule=function(C,_){e.push([g(C),_])},p.addSingularRule=function(C,_){o.push([g(C),_])},p.addUncountableRule=function(C){if(typeof C=="string"){c[C.toLowerCase()]=!0;return}p.addPluralRule(C,"$0"),p.addSingularRule(C,"$0")},p.addIrregularRule=function(C,_){_=_.toLowerCase(),C=C.toLowerCase(),m[C]=_,l[_]=C},[["I","we"],["me","us"],["he","they"],["she","they"],["them","them"],["myself","ourselves"],["yourself","yourselves"],["itself","themselves"],["herself","themselves"],["himself","themselves"],["themself","themselves"],["is","are"],["was","were"],["has","have"],["this","these"],["that","those"],["echo","echoes"],["dingo","dingoes"],["volcano","volcanoes"],["tornado","tornadoes"],["torpedo","torpedoes"],["genus","genera"],["viscus","viscera"],["stigma","stigmata"],["stoma","stomata"],["dogma","dogmata"],["lemma","lemmata"],["schema","schemata"],["anathema","anathemata"],["ox","oxen"],["axe","axes"],["die","dice"],["yes","yeses"],["foot","feet"],["eave","eaves"],["goose","geese"],["tooth","teeth"],["quiz","quizzes"],["human","humans"],["proof","proofs"],["carve","carves"],["valve","valves"],["looey","looies"],["thief","thieves"],["groove","grooves"],["pickaxe","pickaxes"],["passerby","passersby"]].forEach(function(C){return p.addIrregularRule(C[0],C[1])}),[[/s?$/i,"s"],[/[^\u0000-\u007F]$/i,"$0"],[/([^aeiou]ese)$/i,"$1"],[/(ax|test)is$/i,"$1es"],[/(alias|[^aou]us|t[lm]as|gas|ris)$/i,"$1es"],[/(e[mn]u)s?$/i,"$1s"],[/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i,"$1"],[/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i,"$1i"],[/(alumn|alg|vertebr)(?:a|ae)$/i,"$1ae"],[/(seraph|cherub)(?:im)?$/i,"$1im"],[/(her|at|gr)o$/i,"$1oes"],[/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i,"$1a"],[/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i,"$1a"],[/sis$/i,"ses"],[/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i,"$1$2ves"],[/([^aeiouy]|qu)y$/i,"$1ies"],[/([^ch][ieo][ln])ey$/i,"$1ies"],[/(x|ch|ss|sh|zz)$/i,"$1es"],[/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i,"$1ices"],[/\b((?:tit)?m|l)(?:ice|ouse)$/i,"$1ice"],[/(pe)(?:rson|ople)$/i,"$1ople"],[/(child)(?:ren)?$/i,"$1ren"],[/eaux$/i,"$0"],[/m[ae]n$/i,"men"],["thou","you"]].forEach(function(C){return p.addPluralRule(C[0],C[1])}),[[/s$/i,""],[/(ss)$/i,"$1"],[/(wi|kni|(?:after|half|high|low|mid|non|night|[^\w]|^)li)ves$/i,"$1fe"],[/(ar|(?:wo|[ae])l|[eo][ao])ves$/i,"$1f"],[/ies$/i,"y"],[/\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i,"$1ie"],[/\b(mon|smil)ies$/i,"$1ey"],[/\b((?:tit)?m|l)ice$/i,"$1ouse"],[/(seraph|cherub)im$/i,"$1"],[/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i,"$1"],[/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i,"$1sis"],[/(movie|twelve|abuse|e[mn]u)s$/i,"$1"],[/(test)(?:is|es)$/i,"$1is"],[/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i,"$1us"],[/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i,"$1um"],[/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i,"$1on"],[/(alumn|alg|vertebr)ae$/i,"$1a"],[/(cod|mur|sil|vert|ind)ices$/i,"$1ex"],[/(matr|append)ices$/i,"$1ix"],[/(pe)(rson|ople)$/i,"$1rson"],[/(child)ren$/i,"$1"],[/(eau)x?$/i,"$1"],[/men$/i,"man"]].forEach(function(C){return p.addSingularRule(C[0],C[1])}),["adulthood","advice","agenda","aid","aircraft","alcohol","ammo","analytics","anime","athletics","audio","bison","blood","bream","buffalo","butter","carp","cash","chassis","chess","clothing","cod","commerce","cooperation","corps","debris","diabetes","digestion","elk","energy","equipment","excretion","expertise","firmware","flounder","fun","gallows","garbage","graffiti","hardware","headquarters","health","herpes","highjinks","homework","housework","information","jeans","justice","kudos","labour","literature","machinery","mackerel","mail","media","mews","moose","music","mud","manga","news","only","personnel","pike","plankton","pliers","police","pollution","premises","rain","research","rice","salmon","scissors","series","sewage","shambles","shrimp","software","species","staff","swine","tennis","traffic","transportation","trout","tuna","wealth","welfare","whiting","wildebeest","wildlife","you",/pok[eé]mon$/i,/[^aeiou]ese$/i,/deer$/i,/fish$/i,/measles$/i,/o[iu]s$/i,/pox$/i,/sheep$/i].forEach(p.addUncountableRule),p})});var d0={};Rs(d0,{cli:()=>G,helpMessage:()=>bs});module.exports=xs(d0);var Is=y(require("meow"),1),vs=y(require("update-notifier"),1);var ra=y(require("fs-extra"),1),qe=y(require("path"),1);function ma(){G.showHelp()}var ws=Object.defineProperty,qs=(e,o,c)=>o in e?ws(e,o,{enumerable:!0,configurable:!0,writable:!0,value:c}):e[o]=c,t=(e,o,c)=>(qs(e,typeof o!="symbol"?o+"":o,c),c),Gs=class{analytics(e){}critical(e){}debug(e){}async exception(e){console.log(e)}http(e){}async info(e){console.log(e)}warning(e){}constructor(e){}},Ks=Gs,Os=Ks,da;(function(e){e.Comment="comment",e.Create="create",e.Delete="delete",e.Edit="edit",e.Invoice="invoice",e.Message="message",e.PageView="pageView",e.Paid="paid",e.Payment="payment",e.Purchase="purchase",e.Referral="referral",e.Renewal="renewal",e.Signup="signup",e.Subscription="subscription",e.Upgrade="upgrade"})(da||(da={}));var ca;(function(e){e.Business="business",e.Engineering="engineering",e.Exception="exception",e.LogMessage="log-message",e.Marketing="marketing",e.PageLeave="page-leave",e.PageView="page-view",e.Product="product",e.QualityManagement="quality-management",e.UserAccess="user-access",e.UserLogin="user-login",e.UserLogout="user-logout",e.UserSignup="user-signup",e.UserPreferencesChanged="user-preferences-changed",e.WebsiteVisit="website-visit"})(ca||(ca={}));var Aa;(function(e){e.CloseTab="close-tab",e.ExternalLink="external-link",e.NavigateAway="navigate-away",e.Unknown="unknown"})(Aa||(Aa={}));var ga;(function(e){e.Ecs="Ecs"})(ga||(ga={}));var Ta;(function(e){e.Finished="Finished",e.Queued="Queued",e.Running="Running",e.Started="Started"})(Ta||(Ta={}));var ha;(function(e){e.Mobile="mobile",e.TV="tv",e.Watch="watch",e.Web="web"})(ha||(ha={}));var fa;(function(e){e.Development="Development",e.NonProduction="NonProduction",e.Production="Production"})(fa||(fa={}));var pa;(function(e){e.Completed="completed",e.Started="started",e.Uncompleted="uncompleted"})(pa||(pa={}));var Ca;(function(e){e.Build="Build",e.Deployment="Deployment",e.Test="Test"})(Ca||(Ca={}));var Ea;(function(e){e.Canceled="Canceled",e.Completed="Completed",e.Failed="Failed",e.Running="Running",e.Queued="Queued",e.Waiting="Waiting"})(Ea||(Ea={}));var _a;(function(e){e.Canceled="Canceled",e.Completed="Completed",e.Failed="Failed",e.Running="Running",e.Queued="Queued",e.Waiting="Waiting"})(_a||(_a={}));var Sa;(function(e){e.ForgotPassword="forgot_password",e.Index="index",e.Login="login",e.PageNotFound="404",e.Signup="signup",e.VerifyCode="verify_code"})(Sa||(Sa={}));var Ia;(function(e){e.Info="info",e.Warning="warning",e.Error="error",e.Success="success"})(Ia||(Ia={}));var va;(function(e){e.Details="details",e.Dialog="dialog"})(va||(va={}));var ba;(function(e){e.Info="info",e.Warning="warning",e.Error="error",e.Success="success"})(ba||(ba={}));var ya;(function(e){e.AccountBalance="AccountBalance",e.UserAssets="UserAssets",e.UserCreditCardDebt="UserCreditCardDebt",e.UserCreditLimit="UserCreditLimit",e.UserCreditUtilization="UserCreditUtilization",e.UserDebt="UserDebt",e.UserInvestments="UserInvestments",e.UserRetirement="UserRetirement",e.UserSavings="UserSavings"})(ya||(ya={}));var Ba;(function(e){e.DateTime="date_time",e.True="true",e.False="false",e.UniqueId="unique_id"})(Ba||(Ba={}));var Da;(function(e){e.DomainModel="domain_entity",e.GenericModel="generic_entity"})(Da||(Da={}));var Ua;(function(e){e.AirportCode="airport-code",e.BankIDCode="bank-id-code",e.BitcoinAddress="bitcoin-address",e.Boolean="boolean",e.City="city",e.Color="color",e.CountryCode="country-code",e.CreditCard="credit-card",e.CurrencyAmount="currency-amount",e.CurrencyCode="currency-code",e.DataURI="data-uri",e.Date="date",e.DateRange="date-range",e.DateTime="date-time",e.DayOfMonth="day-of-month",e.DomainName="domain-name",e.EmailAddress="email-address",e.EthereumAddress="ethereum-address",e.EAN="european-article-number",e.EIN="employer-identification-number",e.Float="float",e.GeographicCoordinate="geographic-coordinate",e.GeographicCoordinates="geographic-coordinates",e.GitRepositoryURL="git-repository-url",e.HSLColor="hsl-color",e.HexColor="hex-color",e.Hexadecimal="hexadecimal",e.IBAN="international-bank-account-number",e.IMEI="international-mobile-equipment-identifier",e.IPAddress="ip-address",e.IPAddressRange="ip-address-range",e.ISBN="international-standard-book-number",e.ISIN="international-stock-number",e.ISMN="international-standard-music-number",e.ISSN="international-standard-serial-number",e.ISO8601="iso-8601",e.ISO31661Alpha2="iso-31661-alpha-2",e.ISO31661Alpha3="iso-31661-alpha-3",e.ISO4217="iso-4217",e.Image="image",e.Integer="integer",e.JSON="json",e.LanguageCode="language-code",e.LicensePlateNumber="license-plate-number",e.LongText="long-text",e.MD5="md5",e.Markdown="markdown",e.Menu="menu",e.Number="number",e.MACAddress="mac-address",e.MagnetURI="magnet-uri",e.MimeType="mime-type",e.Month="month",e.Password="password",e.PassportNumber="passport-number",e.Percent="percent",e.PhoneNumber="phone-number",e.Port="port",e.PostalCode="postal-code",e.Province="province",e.RFC3339="rfc-3339",e.RGBColor="rgb-color",e.SemanticVersion="semantic-version",e.SSN="social-security-number",e.State="state",e.StreetAddress="street-address",e.String="string",e.Tags="tags",e.TaxIDNumber="tax-id-number",e.Time="time",e.TimeOfDay="time-of-day",e.TimeRange="time-range",e.TimezoneRegion="timezone-region",e.URL="url",e.URLPath="url-path",e.UUID="uuid",e.VATIDNumber="value-added-tax-id-number",e.VerificationCode="verification-code",e.Video="video",e.Weekday="weekday",e.Year="year"})(Ua||(Ua={}));var Pa;(function(e){e.Critical="Critical",e.Error="Error",e.Fatal="Fatal",e.Warning="Warning"})(Pa||(Pa={}));var Na;(function(e){e.Contains="contains",e.HasCharacterCount="has-character-count",e.HasNumberCount="has-number-count",e.HasLetterCount="has-letter-count",e.HasLowercaseCount="has-lowercase-count",e.HasSpacesCount="has-spaces-count",e.HasSymbolCount="has-symbol-count",e.HasUppercaseCount="has-uppercase-count",e.IsAfter="is-after",e.IsAfterOrEqual="is-after-or-equal",e.IsAirport="is-airport",e.IsAlpha="is-alpha",e.IsAlphanumeric="is-alphanumeric",e.IsAlgorithmHash="is-algorithm-hash",e.IsAscii="is-ascii",e.IsBase64="is-base-64",e.IsBefore="is-before",e.IsBeforeOrAfter="is-before-or-after",e.IsBeforeOrEqual="is-before-or-equal",e.IsBetween="is-between",e.IsBIC="is-bic",e.IsBitcoinAddress="is-bitcoin-address",e.IsBoolean="is-boolean",e.IsColor="is-color",e.IsComplexEnough="is-complex-enough",e.IsCountry="is-country",e.IsCreditCard="is-credit-card",e.IsCurrency="is-currency",e.IsDataURI="is-data-uri",e.IsDate="is-date",e.IsDateRange="is-date-range",e.IsDateTime="is-date-time",e.IsDayOfMonth="is-day-of-month",e.IsDecimal="is-decimal",e.IsDivisibleBy="is-divisible-by",e.IsDomainName="is-domain-name",e.IsEmailAddress="is-email-address",e.IsEthereumAddress="is-ethereum-address",e.IsEAN="is-ean",e.IsEIN="is-ein",e.IsEqual="is-equal",e.IsEvenNumber="is-even-number",e.IsFloat="is-float",e.IsIBAN="is-iban",e.IsGreaterThan="greater-than",e.IsGreaterThanOrEqual="greater-than-or-equal",e.IsHSLColor="is-hsl-color",e.IsHexColor="is-hex-color",e.IsHexadecimal="is-hexadecimal",e.IsIdentityCardCode="is-identity-card-code",e.IsIMEI="is-imei",e.IsInIPAddressRange="is-in-ip-address-range",e.IsInList="is-in-list",e.IsInTheLast="is-in-the-last",e.IsInteger="is-integer",e.IsIPAddress="is-ip-address",e.IsIPAddressRange="is-ip-address-range",e.IsISBN="is-isbn",e.IsISIN="is-isin",e.IsISMN="is-ismn",e.IsISRC="is-isrc",e.IsISSN="is-issn",e.IsISO4217="is-iso-4217",e.IsISO8601="is-iso-8601",e.IsISO31661Alpha2="is-iso-31661-alpha-2",e.IsISO31661Alpha3="is-iso-31661-alpha-3",e.IsJSON="is-json",e.IsLanguage="is-language",e.IsLatitude="is-latitude",e.IsLongitude="is-longitude",e.IsLengthEqual="is-length-equal",e.IsLengthGreaterThan="is-length-greater-than",e.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",e.IsLengthLessThan="is-length-less-than",e.IsLengthLessThanOrEqual="is-length-less-than-or-equal",e.IsLessThan="less-than",e.IsLessThanOrEqual="less-than-or-equal",e.IsLicensePlateNumber="is-license-plate-number",e.IsLowercase="is-lowercase",e.IsOctal="is-octal",e.IsMACAddress="is-mac-address",e.IsMD5="is-md5",e.IsMagnetURI="is-magnet-uri",e.IsMarkdown="is-markdown",e.IsMimeType="is-mime-type",e.IsMonth="is-month",e.IsNegativeNumber="is-negative-number",e.IsNotDate="is-not-date",e.IsNotEqual="is-not-equal",e.IsNotInIPAddressRange="is-not-in-ip-address-range",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsNotRegexMatch="is-not-regex-match",e.IsNotToday="is-not-today",e.IsNumber="is-number",e.IsNumeric="is-numeric",e.IsOddNumber="is-odd-number",e.IsPassportNumber="is-passport-number",e.IsPhoneNumber="is-phone-number",e.IsPort="is-port",e.IsPositiveNumber="is-positive-number",e.IsPostalCode="is-postal-code",e.IsProvince="is-province",e.IsRGBColor="is-rgb-color",e.IsRegexMatch="is-regex-match",e.IsRequired="is-required",e.IsSemanticVersion="is-semantic-version",e.IsSlug="is-slug",e.IsSSN="is-ssn",e.IsState="is-state",e.IsStreetAddress="is-street-address",e.IsString="is-string",e.IsStrongPassword="is-strong-password",e.IsTags="is-tags",e.IsTaxIDNumber="is-tax-id-number",e.IsThisMonth="is-this-month",e.IsThisQuarter="is-this-quarter",e.IsThisWeek="is-this-week",e.IsThisWeekend="is-this-weekend",e.IsThisYear="is-this-year",e.IsTime="is-time",e.IsTimeOfDay="is-time-of-day",e.IsTimeRange="is-time-range",e.IsToday="is-today",e.IsURL="is-url",e.IsUUID="is-uuid",e.IsUppercase="is-uppercase",e.IsUsernameAvailable="is-username-available",e.IsValidStreetAddress="is-valid-street-address",e.IsVATIDNumber="is-vat-id-number",e.IsWeekday="is-weekday",e.IsWeekend="is-weekend",e.IsYear="is-year"})(Na||(Na={}));var Ma;(function(e){e.IsAuthenticated="is-authenticated",e.IsNotAuthenticated="is-not-authenticated",e.IsUsernameAvailable="is-username-available",e.PasswordMismatch="password-mismatch"})(Ma||(Ma={}));var Fa;(function(e){e.IsHSLColor="is-hsl-color",e.IsHexColor="is-hex-color",e.IsNotNull="is-not-null",e.IsRGBColor="is-rgb-color",e.IsString="is-string"})(Fa||(Fa={}));var ka;(function(e){e.IsBetween="is-between",e.IsCurrency="is-currency",e.IsDecimal="is-decimal",e.IsDivisibleBy="is-divisible-by",e.IsEvenNumber="is-even-number",e.IsFloat="is-float",e.IsGreaterThan="greater-than",e.IsGreaterThanOrEqual="greater-than-or-equal",e.IsInteger="is-integer",e.IsISO8601="is-iso-8601",e.IsLessThan="less-than",e.IsLessThanOrEqual="less-than-or-equal",e.IsNegativeNumber="is-negative-number",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsNumber="is-number",e.IsOddNumber="is-odd-number",e.IsPositiveNumber="is-positive-number"})(ka||(ka={}));var La;(function(e){e.IsBitcoinAddress="is-bitcoin-address",e.IsEqual="is-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null"})(La||(La={}));var za;(function(e){e.IsEthereumAddress="is-ethereum-address",e.IsEqual="is-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null"})(za||(za={}));var Ra;(function(e){e.IsEqual="is-equal",e.IsJSON="is-json",e.IsLanguage="is-language",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null"})(Ra||(Ra={}));var xa;(function(e){e.IsAlpha="is-alpha",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string"})(xa||(xa={}));var wa;(function(e){e.IsAlpha="is-alpha",e.IsCountry="is-country",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string"})(wa||(wa={}));var qa;(function(e){e.IsEqual="is-equal",e.IsFloat="is-float",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsNumeric="is-numeric"})(qa||(qa={}));var Ga;(function(e){e.IsEqual="is-equal",e.IsFloat="is-float",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsNumeric="is-numeric"})(Ga||(Ga={}));var Ka;(function(e){e.IsEqual="is-equal",e.IsNotEqual="is-not-equal",e.IsPostalCode="is-postal-code",e.IsNotNull="is-not-null"})(Ka||(Ka={}));var Oa;(function(e){e.IsAlpha="is-alpha",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsProvince="is-province",e.IsString="is-string"})(Oa||(Oa={}));var Ha;(function(e){e.IsAlpha="is-alpha",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsState="is-state",e.IsString="is-string"})(Ha||(Ha={}));var ja;(function(e){e.IsAlphanumeric="is-alphanumeric",e.IsEqual="is-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsString="is-string",e.IsStreetAddress="is-street-address"})(ja||(ja={}));var $a;(function(e){e.IsAirport="is-airport",e.IsAlpha="is-alpha",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string"})($a||($a={}));var Wa;(function(e){e.IsAlgorithmHash="is-algorithm-hash",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string"})(Wa||(Wa={}));var Va;(function(e){e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsSemanticVersion="is-semantic-version",e.IsString="is-string"})(Va||(Va={}));var Ya;(function(e){e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string",e.IsUUID="is-uuid"})(Ya||(Ya={}));var Za;(function(e){e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsMD5="is-md5",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string"})(Za||(Za={}));var Ja;(function(e){e.IsBoolean="is-boolean",e.IsEqual="is-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null"})(Ja||(Ja={}));var Qa;(function(e){e.IsAfter="is-after",e.IsAfterOrEqual="is-after-or-equal",e.IsBefore="is-before",e.IsBeforeOrEqual="is-before-or-equal",e.IsBetween="is-between",e.IsDate="is-date",e.IsEqual="is-equal",e.IsNotDate="is-not-date",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsNotToday="is-not-today",e.IsThisWeek="is-this-week",e.IsThisMonth="is-this-month",e.IsThisQuarter="is-this-quarter",e.IsThisYear="is-this-year",e.IsToday="is-today",e.IsWeekend="is-weekend"})(Qa||(Qa={}));var Xa;(function(e){e.IsAfter="is-after",e.IsBefore="is-before",e.IsBeforeOrAfter="is-before-or-after",e.IsBetween="is-between",e.IsDate="is-date",e.IsDateRange="is-date-range",e.IsEqual="is-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null"})(Xa||(Xa={}));var ei;(function(e){e.IsAfter="is-after",e.IsAfterOrEqual="is-after-or-equal",e.IsBefore="is-before",e.IsBeforeOrEqual="is-before-or-equal",e.IsBetween="is-between",e.IsDate="is-date",e.IsEqual="is-equal",e.IsNotDate="is-not-date",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsNotToday="is-not-today",e.IsThisWeek="is-this-week",e.IsThisMonth="is-this-month",e.IsThisQuarter="is-this-quarter",e.IsThisYear="is-this-year",e.IsToday="is-today",e.IsWeekend="is-weekend"})(ei||(ei={}));var ai;(function(e){e.IsAfter="is-after",e.IsAfterOrEqual="is-after-or-equal",e.IsBefore="is-before",e.IsBeforeOrEqual="is-before-or-equal",e.IsBetween="is-between",e.IsDayOfMonth="is-day-of-month",e.IsEvenNumber="is-even-number",e.IsEqual="is-equal",e.IsGreaterThan="greater-than",e.IsGreaterThanOrEqual="greater-than-or-equal",e.IsInteger="is-integer",e.IsLessThan="less-than",e.IsLessThanOrEqual="less-than-or-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsNumber="is-number",e.IsOddNumber="is-odd-number",e.IsToday="is-today",e.IsWeekday="is-weekday",e.IsWeekend="is-weekend"})(ai||(ai={}));var ii;(function(e){e.IsAfter="is-after",e.IsAfterOrEqual="is-after-or-equal",e.IsBefore="is-before",e.IsBeforeOrEqual="is-before-or-equal",e.IsBetween="is-between",e.IsEvenNumber="is-even-number",e.IsEqual="is-equal",e.IsGreaterThan="greater-than",e.IsGreaterThanOrEqual="greater-than-or-equal",e.IsInteger="is-integer",e.IsLessThan="less-than",e.IsLessThanOrEqual="less-than-or-equal",e.IsMonth="is-month",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsNumber="is-number",e.IsOddNumber="is-odd-number",e.IsThisMonth="is-this-month"})(ii||(ii={}));var ni;(function(e){e.IsAfter="is-after",e.IsAfterOrEqual="is-after-or-equal",e.IsBefore="is-before",e.IsBeforeOrEqual="is-before-or-equal",e.IsBetween="is-between",e.IsEqual="is-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsTime="is-time"})(ni||(ni={}));var si;(function(e){e.IsAfter="is-after",e.IsBefore="is-before",e.IsBeforeOrAfter="is-before-or-after",e.IsBetween="is-between",e.IsTime="is-time",e.IsEqual="is-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsTimeRange="is-time-range"})(si||(si={}));var ui;(function(e){e.IsAfter="is-after",e.IsBefore="is-before",e.IsBeforeOrAfter="is-before-or-after",e.IsBetween="is-between",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsTimeOfDay="is-time-of-day",e.IsTimeRange="is-time-range"})(ui||(ui={}));var ti;(function(e){e.IsAfter="is-after",e.IsAfterOrEqual="is-after-or-equal",e.IsBefore="is-before",e.IsBeforeOrEqual="is-before-or-equal",e.IsBetween="is-between",e.IsEvenNumber="is-even-number",e.IsEqual="is-equal",e.IsGreaterThan="greater-than",e.IsGreaterThanOrEqual="greater-than-or-equal",e.IsLessThan="less-than",e.IsLessThanOrEqual="less-than-or-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsNumber="is-number",e.IsOddNumber="is-odd-number",e.IsWeekday="is-weekday",e.IsWeekend="is-weekend"})(ti||(ti={}));var ri;(function(e){e.IsAfter="is-after",e.IsAfterOrEqual="is-after-or-equal",e.IsBefore="is-before",e.IsBeforeOrEqual="is-before-or-equal",e.IsBetween="is-between",e.IsEvenNumber="is-even-number",e.IsEqual="is-equal",e.IsGreaterThan="greater-than",e.IsGreaterThanOrEqual="greater-than-or-equal",e.IsInteger="is-integer",e.IsLessThan="less-than",e.IsLessThanOrEqual="less-than-or-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsNumber="is-number",e.IsOddNumber="is-odd-number",e.IsThisYear="is-this-year",e.IsYear="is-year"})(ri||(ri={}));var oi;(function(e){e.IsEqual="is-equal",e.IsHexadecimal="is-hexadecimal",e.IsLengthEqual="is-length-equal",e.IsLengthGreaterThan="is-length-greater-than",e.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",e.IsLengthLessThan="is-length-less-than",e.IsLengthLessThanOrEqual="is-length-less-than-or-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsString="is-string"})(oi||(oi={}));var li;(function(e){e.IsEqual="is-equal",e.IsJSON="is-json",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null"})(li||(li={}));var mi;(function(e){e.IsEqual="is-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsMarkdown="is-markdown",e.IsString="is-string"})(mi||(mi={}));var di;(function(e){e.Contains="contains",e.IsEqual="is-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null"})(di||(di={}));var ci;(function(e){e.Contains="contains",e.IsEqual="is-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null"})(ci||(ci={}));var Ai;(function(e){e.Contains="contains",e.IsDataURI="is-data-uri",e.IsEqual="is-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsString="is-string"})(Ai||(Ai={}));var gi;(function(e){e.Contains="contains",e.IsDomainName="is-domain-name",e.IsEqual="is-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsString="is-string"})(gi||(gi={}));var Ti;(function(e){e.Contains="contains",e.IsEmailAddress="is-email-address",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string"})(Ti||(Ti={}));var hi;(function(e){e.Contains="contains",e.IsEqual="is-equal",e.IsIPAddress="is-ip-address",e.IsInIPAddressRange="is-in-ip-address-range",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotInIPAddressRange="is-not-in-ip-address-range",e.IsNotNull="is-not-null",e.IsString="is-string"})(hi||(hi={}));var fi;(function(e){e.IsEqual="is-equal",e.IsIPAddressRange="is-ip-address-range",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotInIPAddressRange="is-not-in-ip-address-range",e.IsNotNull="is-not-null",e.IsString="is-string"})(fi||(fi={}));var pi;(function(e){e.IsEqual="is-equal",e.IsGreaterThan="greater-than",e.IsGreaterThanOrEqual="greater-than-or-equal",e.IsInteger="is-integer",e.IsLessThan="less-than",e.IsLessThanOrEqual="less-than-or-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null"})(pi||(pi={}));var Ci;(function(e){e.Contains="contains",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsMACAddress="is-mac-address",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string"})(Ci||(Ci={}));var Ei;(function(e){e.Contains="contains",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsMagnetURI="is-magnet-uri",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string"})(Ei||(Ei={}));var _i;(function(e){e.Contains="contains",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsMimeType="is-mime-type",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string"})(_i||(_i={}));var Si;(function(e){e.Contains="contains",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string",e.IsSlug="is-slug"})(Si||(Si={}));var Ii;(function(e){e.Contains="contains",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string",e.IsURL="is-url"})(Ii||(Ii={}));var vi;(function(e){e.IsAfter="is-after",e.IsAfterOrEqual="is-after-or-equal",e.IsBefore="is-before",e.IsBeforeOrEqual="is-before-or-equal",e.IsBetween="is-between",e.IsDecimal="is-decimal",e.IsDivisibleBy="is-divisible-by",e.IsEAN="is-ean",e.IsEIN="is-ein",e.IsEqual="is-equal",e.IsEvenNumber="is-even-number",e.IsFloat="is-float",e.IsGreaterThan="greater-than",e.IsGreaterThanOrEqual="greater-than-or-equal",e.IsInt="is-integer",e.IsISBN="is-isbn",e.IsISMN="is-ismn",e.IsISSN="is-issn",e.IsLatitude="is-latitude",e.IsLongitude="is-longitude",e.IsLessThan="less-than",e.IsLessThanOrEqual="less-than-or-equal",e.IsMACAddress="is-mac-address",e.IsNumber="is-number",e.IsNegativeNumber="is-negative-number",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsOddNumber="is-odd-number",e.IsPassportNumber="is-passport-number",e.IsPhoneNumber="is-phone-number",e.IsPort="is-port",e.IsPositiveNumber="is-positive-number",e.IsPostalCode="is-postal-code",e.IsSemanticVersion="is-semantic-version",e.IsSSN="is-ssn",e.IsTaxIDNumber="is-tax-id-number",e.IsUUID="is-uuid",e.IsVATIDNumber="is-vat-id-number"})(vi||(vi={}));var bi;(function(e){e.IsEqual="is-equal",e.IsFloat="is-float",e.IsGreaterThan="greater-than",e.IsGreaterThanOrEqual="greater-than-or-equal",e.IsLessThan="less-than",e.IsLessThanOrEqual="less-than-or-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsNumber="is-number",e.IsNumeric="is-numeric"})(bi||(bi={}));var yi;(function(e){e.IsEqual="is-equal",e.IsInteger="is-integer",e.IsGreaterThan="greater-than",e.IsGreaterThanOrEqual="greater-than-or-equal",e.IsLessThan="less-than",e.IsLessThanOrEqual="less-than-or-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsNumber="is-number",e.IsNumeric="is-numeric"})(yi||(yi={}));var Bi;(function(e){e.IsCreditCard="is-credit-card",e.IsEqual="is-equal",e.IsLengthEqual="is-length-equal",e.IsLengthGreaterThan="is-length-greater-than",e.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",e.IsLengthLessThan="is-length-less-than",e.IsLengthLessThanOrEqual="is-length-less-than-or-equal",e.IsNotEqual="is-not-equal",e.IsNotNull="is-not-null",e.IsRegexMatch="is-regex-match",e.IsNotRegexMatch="is-not-regex-match"})(Bi||(Bi={}));var Di;(function(e){e.isEmailAddress="is-email-address",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsLengthEqual="is-length-equal",e.IsLengthGreaterThan="is-length-greater-than",e.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",e.IsLengthLessThan="is-length-less-than",e.IsLengthLessThanOrEqual="is-length-less-than-or-equal",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsRegexMatch="is-regex-match",e.IsNotRegexMatch="is-not-regex-match"})(Di||(Di={}));var Ui;(function(e){e.IsLicensePlateNumber="is-license-plate-number",e.IsNotNull="is-not-null",e.IsNotRegexMatch="is-not-regex-match",e.IsString="is-string",e.IsRegexMatch="is-regex-match"})(Ui||(Ui={}));var Pi;(function(e){e.IsNotNull="is-not-null",e.IsPassportNumber="is-passport-number",e.IsString="is-string",e.IsRegexMatch="is-regex-match"})(Pi||(Pi={}));var Ni;(function(e){e.IsComplexEnough="is-complex-enough",e.IsInList="is-in-list",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsNotRegexMatch="is-not-regex-match",e.IsLengthGreaterThan="is-length-greater-than",e.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",e.IsLengthLessThan="is-length-less-than",e.IsLengthLessThanOrEqual="is-length-less-than-or-equal",e.IsStrongPassword="is-strong-password",e.IsString="is-string",e.IsRegexMatch="is-regex-match"})(Ni||(Ni={}));var Mi;(function(e){e.IsNotNull="is-not-null",e.IsNotRegexMatch="is-not-regex-match",e.IsNumber="is-number",e.IsPhoneNumber="is-phone-number",e.IsRegexMatch="is-regex-match"})(Mi||(Mi={}));var Fi;(function(e){e.IsNotNull="is-not-null",e.IsSSN="is-ssn",e.IsString="is-string",e.IsRegexMatch="is-regex-match"})(Fi||(Fi={}));var ki;(function(e){e.Contains="contains",e.IsBIC="is-bic",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string"})(ki||(ki={}));var Li;(function(e){e.Contains="contains",e.IsEAN="is-ean",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string"})(Li||(Li={}));var zi;(function(e){e.Contains="contains",e.IsEIN="is-ein",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string"})(zi||(zi={}));var Ri;(function(e){e.Contains="contains",e.IsEqual="is-equal",e.IsIBAN="is-iban",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string"})(Ri||(Ri={}));var xi;(function(e){e.Contains="contains",e.IsEqual="is-equal",e.IsISBN="is-isbn",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string"})(xi||(xi={}));var wi;(function(e){e.Contains="contains",e.IsEqual="is-equal",e.IsISIN="is-isin",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string"})(wi||(wi={}));var qi;(function(e){e.Contains="contains",e.IsEqual="is-equal",e.IsISMN="is-ismn",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string"})(qi||(qi={}));var Gi;(function(e){e.Contains="contains",e.IsEqual="is-equal",e.IsISSN="is-issn",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string"})(Gi||(Gi={}));var Ki;(function(e){e.Contains="contains",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string",e.IsTaxIDNumber="is-tax-id-number"})(Ki||(Ki={}));var Oi;(function(e){e.Contains="contains",e.IsEqual="is-equal",e.IsInList="is-in-list",e.IsNotEqual="is-not-equal",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsString="is-string",e.IsVATIDNumber="is-vat-id-number"})(Oi||(Oi={}));var Hi;(function(e){e.Contains="contains",e.HasNumberCount="has-number-count",e.HasLowercaseCount="has-lowercase-count",e.HasLetterCount="has-letter-count",e.HasSpacesCount="has-spaces-count",e.HasSymbolCount="has-symbol-count",e.HasUppercaseCount="has-uppercase-count",e.IsAlpha="is-alpha",e.IsAlphanumeric="is-alphanumeric",e.IsAscii="is-ascii",e.IsBase64="is-base-64",e.IsColor="is-color",e.IsComplexEnough="is-complex-enough",e.IsCreditCard="is-credit-card",e.IsDataURI="is-data-uri",e.IsDomainName="is-domain-name",e.IsEmailAddress="is-email-address",e.IsEthereumAddress="is-ethereum-address",e.IsEAN="is-ean",e.IsEIN="is-ein",e.IsEqual="is-equal",e.IsIBAN="is-iban",e.IsHSLColor="is-hsl-color",e.IsHexColor="is-hex-color",e.IsHexadecimal="is-hexadecimal",e.IsIdentityCardCode="is-identity-card-code",e.IsIMEI="is-imei",e.IsInList="is-in-list",e.IsIPAddress="is-ip-address",e.IsInIPAddressRange="is-in-ip-address-range",e.IsISBN="is-isbn",e.IsISIN="is-isin",e.IsISMN="is-ismn",e.IsISRC="is-isrc",e.IsISSN="is-issn",e.IsLanguage="is-language",e.IsLatitude="is-latitude",e.IsLongitude="is-longitude",e.IsLengthEqual="is-length-equal",e.IsLengthGreaterThan="is-length-greater-than",e.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",e.IsLengthLessThan="is-length-less-than",e.IsLengthLessThanOrEqual="is-length-less-than-or-equal",e.IsLicensePlateNumber="is-license-plate-number",e.IsLowercase="is-lowercase",e.IsOctal="is-octal",e.IsMACAddress="is-mac-address",e.IsMD5="is-md5",e.IsMagnetURI="is-magnet-uri",e.IsMarkdown="is-markdown",e.IsMimeType="is-mime-type",e.IsMonth="is-month",e.IsNotInIPAddressRange="is-not-in-ip-address-range",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsNotRegexMatch="is-not-regex-match",e.IsNumber="is-number",e.IsNumeric="is-numeric",e.IsPassportNumber="is-passport-number",e.IsPhoneNumber="is-phone-number",e.IsPort="is-port",e.IsPostalCode="is-postal-code",e.IsProvince="is-province",e.IsRegexMatch="is-regex-match",e.IsSemanticVersion="is-semantic-version",e.IsSlug="is-slug",e.IsSSN="is-ssn",e.IsState="is-state",e.IsStreetAddress="is-street-address",e.IsString="is-string",e.IsTaxIDNumber="is-tax-id-number",e.IsURL="is-url",e.IsUUID="is-uuid",e.IsUppercase="is-uppercase",e.IsVATIDNumber="is-vat-id-number",e.IsWeekday="is-weekday",e.IsWeekend="is-weekend",e.IsYear="is-year"})(Hi||(Hi={}));var ji;(function(e){e.Contains="contains",e.IsAlpha="is-alpha",e.IsAlphanumeric="is-alphanumeric",e.IsInList="is-in-list",e.IsMarkdown="is-markdown",e.IsNotInList="is-not-in-list",e.IsNumeric="is-numeric",e.IsLowercase="is-lowercase",e.IsString="is-string",e.IsUppercase="is-uppercase"})(ji||(ji={}));var $i;(function(e){e.InvalidCharacters="invalid-characters",e.InvalidPattern="invalid-pattern",e.NotComplexEnough="not-complex-enough",e.NotUnique="not-unique",e.NotValidEmail="not-valid-email",e.TooLong="too-long",e.TooShort="too-short",e.Required="required"})($i||($i={}));var Wi;(function(e){e[e.Allowed=0]="Allowed",e[e.Blocked=1]="Blocked"})(Wi||(Wi={}));var Vi;(function(e){e.Canceled="Canceled",e.Completed="Completed",e.Created="Created",e.Faulted="Faulted",e.Queued="Queued",e.Running="Running",e.Waiting="Waiting"})(Vi||(Vi={}));var Yi;(function(e){e.Archived="ARCHIVED",e.Compromised="COMPROMISED",e.Confirmed="CONFIRMED",e.ForcePasswordChange="FORCE_CHANGE_PASSWORD",e.ResetRequired="RESET_REQUIRED",e.Unconfirmed="UNCONFIRMED",e.Unknown="UNKNOWN"})(Yi||(Yi={}));var Zi;(function(e){e.Code="code",e.Link="link"})(Zi||(Zi={}));var Ji;(function(e){e.Owner="Owner",e.Admin="Admin",e.User="User",e.Visitor="Visitor"})(Ji||(Ji={}));var Qi;(function(e){e.RequiresPaymentMethod="requires_payment_method",e.RequiresConfirmation="requires_confirmation",e.RequiresAction="requires_action",e.Processing="processing",e.RequiresCapture="requires_capture",e.Canceled="canceled",e.Succeeded="succeeded"})(Qi||(Qi={}));var Xi;(function(e){e.Incomplete="incomplete",e.IncompleteExpired="incomplete_expired",e.Trialing="trialing",e.Active="active",e.PastDue="past_due",e.Canceled="canceled",e.Unpaid="unpaid"})(Xi||(Xi={}));var en;(function(e){e.Monthly="monthly",e.Quarterly="quarterly",e.Yearly="yearly",e.Lifetime="lifetime"})(en||(en={}));var an;(function(e){e.Delivered="delivered",e.Read="read",e.Sending="sending",e.Sent="sent"})(an||(an={}));var nn;(function(e){e.Audio="audio",e.File="file",e.Image="image",e.Text="text",e.Video="video"})(nn||(nn={}));var sn;(function(e){e.Audio="audio",e.File="file",e.Image="image",e.Video="video"})(sn||(sn={}));var un;(function(e){e.Angry="angry",e.Laugh="laugh",e.Like="like",e.Love="love",e.Sad="sad",e.Wow="wow",e.Wink="wink",e.Yay="yay"})(un||(un={}));var tn;(function(e){e.Email="email",e.PhoneNumber="phone_number"})(tn||(tn={}));var E;(function(e){e.Analytics="analytics",e.Critical="critical",e.Debug="debug",e.Exception="exception",e.Http="http",e.Info="info",e.Warning="warning"})(E||(E={}));var rn;(function(e){e.Delete="delete",e.Get="get",e.Head="head",e.Patch="patch",e.Post="post",e.Put="put"})(rn||(rn={}));var on;(function(e){e[e.CONTINUE=100]="CONTINUE",e[e.SWITCHING_PROTOCOLS=101]="SWITCHING_PROTOCOLS",e[e.PROCESSING=102]="PROCESSING",e[e.OK=200]="OK",e[e.CREATED=201]="CREATED",e[e.ACCEPTED=202]="ACCEPTED",e[e.NON_AUTHORITATIVE_INFORMATION=203]="NON_AUTHORITATIVE_INFORMATION",e[e.NO_CONTENT=204]="NO_CONTENT",e[e.RESET_CONTENT=205]="RESET_CONTENT",e[e.PARTIAL_CONTENT=206]="PARTIAL_CONTENT",e[e.MULTI_STATUS=207]="MULTI_STATUS",e[e.ALREADY_REPORTED=208]="ALREADY_REPORTED",e[e.IM_USED=226]="IM_USED",e[e.MULTIPLE_CHOICES=300]="MULTIPLE_CHOICES",e[e.MOVED_PERMANENTLY=301]="MOVED_PERMANENTLY",e[e.FOUND=302]="FOUND",e[e.SEE_OTHER=303]="SEE_OTHER",e[e.NOT_MODIFIED=304]="NOT_MODIFIED",e[e.USE_PROXY=305]="USE_PROXY",e[e.SWITCH_PROXY=306]="SWITCH_PROXY",e[e.TEMPORARY_REDIRECT=307]="TEMPORARY_REDIRECT",e[e.PERMANENT_REDIRECT=308]="PERMANENT_REDIRECT",e[e.BAD_REQUEST=400]="BAD_REQUEST",e[e.UNAUTHORIZED=401]="UNAUTHORIZED",e[e.PAYMENT_REQUIRED=402]="PAYMENT_REQUIRED",e[e.FORBIDDEN=403]="FORBIDDEN",e[e.NOT_FOUND=404]="NOT_FOUND",e[e.METHOD_NOT_ALLOWED=405]="METHOD_NOT_ALLOWED",e[e.NOT_ACCEPTABLE=406]="NOT_ACCEPTABLE",e[e.PROXY_AUTHENTICATION_REQUIRED=407]="PROXY_AUTHENTICATION_REQUIRED",e[e.REQUEST_TIMEOUT=408]="REQUEST_TIMEOUT",e[e.CONFLICT=409]="CONFLICT",e[e.GONE=410]="GONE",e[e.LENGTH_REQUIRED=411]="LENGTH_REQUIRED",e[e.PRECONDITION_FAILED=412]="PRECONDITION_FAILED",e[e.PAYLOAD_TOO_LARGE=413]="PAYLOAD_TOO_LARGE",e[e.URI_TOO_LONG=414]="URI_TOO_LONG",e[e.UNSUPPORTED_MEDIA_TYPE=415]="UNSUPPORTED_MEDIA_TYPE",e[e.RANGE_NOT_SATISFIABLE=416]="RANGE_NOT_SATISFIABLE",e[e.EXPECTATION_FAILED=417]="EXPECTATION_FAILED",e[e.I_AM_A_TEAPOT=418]="I_AM_A_TEAPOT",e[e.MISDIRECTED_REQUEST=421]="MISDIRECTED_REQUEST",e[e.UNPROCESSABLE_ENTITY=422]="UNPROCESSABLE_ENTITY",e[e.LOCKED=423]="LOCKED",e[e.FAILED_DEPENDENCY=424]="FAILED_DEPENDENCY",e[e.TOO_EARLY=425]="TOO_EARLY",e[e.UPGRADE_REQUIRED=426]="UPGRADE_REQUIRED",e[e.PRECONDITION_REQUIRED=428]="PRECONDITION_REQUIRED",e[e.TOO_MANY_REQUESTS=429]="TOO_MANY_REQUESTS",e[e.REQUEST_HEADER_FIELDS_TOO_LARGE=431]="REQUEST_HEADER_FIELDS_TOO_LARGE",e[e.UNAVAILABLE_FOR_LEGAL_REASONS=451]="UNAVAILABLE_FOR_LEGAL_REASONS",e[e.INTERNAL_SERVER_ERROR=500]="INTERNAL_SERVER_ERROR",e[e.NOT_IMPLEMENTED=501]="NOT_IMPLEMENTED",e[e.BAD_GATEWAY=502]="BAD_GATEWAY",e[e.SERVICE_UNAVAILABLE=503]="SERVICE_UNAVAILABLE",e[e.GATEWAY_TIMEOUT=504]="GATEWAY_TIMEOUT",e[e.HTTP_VERSION_NOT_SUPPORTED=505]="HTTP_VERSION_NOT_SUPPORTED",e[e.VARIANT_ALSO_NEGOTIATES=506]="VARIANT_ALSO_NEGOTIATES",e[e.INSUFFICIENT_STORAGE=507]="INSUFFICIENT_STORAGE",e[e.LOOP_DETECTED=508]="LOOP_DETECTED",e[e.BANDWIDTH_LIMIT_EXCEEDED=509]="BANDWIDTH_LIMIT_EXCEEDED",e[e.NOT_EXTENDED=510]="NOT_EXTENDED",e[e.NETWORK_AUTHENTICATION_REQUIRED=511]="NETWORK_AUTHENTICATION_REQUIRED"})(on||(on={}));var u;(function(e){e.Afghanistan="AF",e.Albania="AL",e.Algeria="DZ",e.AmericanSamoa="AS",e.Andorra="AD",e.Angola="AO",e.Anguilla="AI",e.Antarctica="AQ",e.AntiguaAndBarbuda="AG",e.Argentina="AR",e.Armenia="AM",e.Aruba="AW",e.Australia="AU",e.Austria="AT",e.Azerbaijan="AZ",e.Bahamas="BS",e.Bahrain="BH",e.Bangladesh="BD",e.Barbados="BB",e.Belarus="BY",e.Belgium="BE",e.Belize="BZ",e.Benin="BJ",e.Bermuda="BM",e.Bhutan="BT",e.Bolivia="BO",e.BosniaAndHerzegovina="BA",e.Botswana="BW",e.BouvetIsland="BV",e.Brazil="BR",e.BritishIndianOceanTerritory="IO",e.Brunei="BN",e.Bulgaria="BG",e.BurkinaFaso="BF",e.Burundi="BI",e.Cambodia="KH",e.Cameroon="CM",e.Canada="CA",e.CapeVerde="CV",e.CaymanIslands="KY",e.CentralAfricanRepublic="CF",e.Chad="TD",e.Chile="CL",e.China="CN",e.ChristmasIsland="CX",e.CocosKeelingIslands="CC",e.Colombia="CO",e.Comoros="KM",e.Congo="CG",e.CongoTheDemocraticRepublicOfThe="CD",e.CookIslands="CK",e.CostaRica="CR",e.CoteDIvoire="CI",e.Croatia="HR",e.Cuba="CU",e.Cyprus="CY",e.CzechRepublic="CZ",e.Denmark="DK",e.Djibouti="DJ",e.Dominica="DM",e.DominicanRepublic="DO",e.Ecuador="EC",e.Egypt="EG",e.ElSalvador="SV",e.EquatorialGuinea="GQ",e.Eritrea="ER",e.Estonia="EE",e.Ethiopia="ET",e.FalklandIslands="FK",e.FaroeIslands="FO",e.Fiji="FJ",e.Finland="FI",e.France="FR",e.FrenchGuiana="GF",e.FrenchPolynesia="PF",e.FrenchSouthernTerritories="TF",e.Gabon="GA",e.Gambia="GM",e.Georgia="GE",e.Germany="DE",e.Ghana="GH",e.Gibraltar="GI",e.Greece="GR",e.Greenland="GL",e.Grenada="GD",e.Guadeloupe="GP",e.Guam="GU",e.Guatemala="GT",e.Guernsey="GG",e.Guinea="GN",e.GuineaBissau="GW",e.Guyana="GY",e.Haiti="HT",e.HeardIslandMcdonaldIslands="HM",e.HolySeeVaticanCityState="VA",e.Honduras="HN",e.HongKong="HK",e.Hungary="HU",e.Iceland="IS",e.India="IN",e.Indonesia="ID",e.Iran="IR",e.Iraq="IQ",e.Ireland="IE",e.IsleOfMan="IM",e.Israel="IL",e.Italy="IT",e.Jamaica="JM",e.Japan="JP",e.Jersey="JE",e.Jordan="JO",e.Kazakhstan="KZ",e.Kenya="KE",e.Kiribati="KI",e.Kuwait="KW",e.Kyrgyzstan="KG",e.Laos="LA",e.Latvia="LV",e.Lebanon="LB",e.Lesotho="LS",e.Liberia="LR",e.Libya="LY",e.Liechtenstein="LI",e.Lithuania="LT",e.Luxembourg="LU",e.Macau="MO",e.Madagascar="MG",e.Malawi="MW",e.Malaysia="MY",e.Maldives="MV",e.Mali="ML",e.Malta="MT",e.MarshallIslands="MH",e.Martinique="MQ",e.Mauritania="MR",e.Mauritius="MU",e.Mayotte="YT",e.Mexico="MX",e.MicronesiaFederatedStatesOf="FM",e.Moldova="MD",e.Monaco="MC",e.Mongolia="MN",e.Montenegro="ME",e.Montserrat="MS",e.Morocco="MA",e.Mozambique="MZ",e.Myanmar="MM",e.Namibia="NA",e.Nauru="NR",e.Nepal="NP",e.Netherlands="NL",e.NetherlandsAntilles="AN",e.NewCaledonia="NC",e.NewZealand="NZ",e.NorthKorea="KP",e.Nicaragua="NI",e.Niger="NE",e.Nigeria="NG",e.Niue="NU",e.NorfolkIsland="NF",e.NorthMacedonia="MK",e.NorthernMarianaIslands="MP",e.Norway="NO",e.Oman="OM",e.Pakistan="PK",e.Palau="PW",e.PalestinianTerritoryOccupied="PS",e.Panama="PA",e.PapuaNewGuinea="PG",e.Paraguay="PY",e.Peru="PE",e.Philippines="PH",e.Pitcairn="PN",e.Poland="PL",e.Portugal="PT",e.PuertoRico="PR",e.Qatar="QA",e.Reunion="RE",e.Romania="RO",e.RussianFederation="RU",e.Rwanda="RW",e.SaintBarthelemy="BL",e.SaintHelena="SH",e.SaintKittsAndNevis="KN",e.SaintLucia="LC",e.SaintMartin="MF",e.SaintPierreAndMiquelon="PM",e.SaintVincentAndTheGrenadines="VC",e.Samoa="WS",e.SanMarino="SM",e.SaoTomeAndPrincipe="ST",e.SaudiArabia="SA",e.Senegal="SN",e.Serbia="RS",e.SerbiaAndMontenegro="CS",e.Seychelles="SC",e.SierraLeone="SL",e.Singapore="SG",e.Slovakia="SK",e.Slovenia="SI",e.SolomonIslands="SB",e.Somalia="SO",e.SouthAfrica="ZA",e.SouthGeorgiaAndTheSouthSandwichIslands="GS",e.SouthKorea="KR",e.Spain="ES",e.SriLanka="LK",e.Sudan="SD",e.Suriname="SR",e.SvalbardAndJanMayen="SJ",e.Swaziland="SZ",e.Sweden="SE",e.Switzerland="CH",e.Syria="SY",e.Taiwan="TW",e.Tajikistan="TJ",e.Tanzania="TZ",e.Thailand="TH",e.TimorLeste="TL",e.Togo="TG",e.Tokelau="TK",e.Tonga="TO",e.TrinidadAndTobago="TT",e.Tunisia="TN",e.Turkey="TR",e.Turkmenistan="TM",e.TurksAndCaicosIslands="TC",e.Tuvalu="TV",e.Uganda="UG",e.Ukraine="UA",e.UnitedArabEmirates="AE",e.UnitedKingdom="GB",e.UnitedStates="US",e.UnitedStatesMinorOutlyingIslands="UM",e.Uruguay="UY",e.Uzbekistan="UZ",e.Vanuatu="VU",e.Venezuela="VE",e.Vietnam="VN",e.VirginIslandsBritish="VG",e.VirginIslandsUS="VI",e.WallisAndFutuna="WF",e.WesternSahara="EH",e.Yemen="YE",e.Zambia="ZM",e.Zimbabwe="ZW"})(u||(u={}));var A;(function(e){e.AfghanistanAfghani="AFN",e.AlbaniaLek="ALL",e.ArmeniaDram="AMD",e.AlgeriaDinar="DZD",e.AmericanSamoaTala="WST",e.AngolaKwanza="AOA",e.ArgentinaPeso="ARS",e.AustraliaDollar="AUD",e.ArubaFlorin="AWG",e.AzerbaijanNewManat="AZN",e.BosniaAndHerzegovinaConvertibleMark="BAM",e.BahrainDinar="BHD",e.BarbadosDollar="BBD",e.BangladeshTaka="BDT",e.BelgiumFranc="BGN",e.BermudaDollar="BMD",e.BruneiDollar="BND",e.BoliviaBoliviano="BOB",e.BrazilReal="BRL",e.BahamasDollar="BSD",e.BhutanNgultrum="BTN",e.BotswanaPula="BWP",e.BelarusRuble="BYN",e.BelizeDollar="BZD",e.BulgariaLev="BGN",e.BurundiFranc="BIF",e.BritishPound="GBP",e.CanadaDollar="CAD",e.CambodiaRiel="KHR",e.ComorosFranc="KMF",e.CaymanIslandsDollar="KYD",e.ChilePeso="CLP",e.ChinaYuan="CNY",e.ColombiaPeso="COP",e.CostaRicaColon="CRC",e.CroatiaKuna="HRK",e.CubaConvertiblePeso="CUC",e.CubaPeso="CUP",e.CapeVerdeEscudo="CVE",e.CyprusPound="CYP",e.CzechRepublicKoruna="CZK",e.DjiboutiFranc="DJF",e.DenmarkKrone="DKK",e.DominicaDollar="XCD",e.DominicanRepublicPeso="DOP",e.EastCaribbeanDollar="XCD",e.EgyptPound="EGP",e.ElSalvadorColon="SVC",e.EquatorialGuineaEkwele="GQE",e.EritreaNakfa="ERN",e.EstoniaKroon="EEK",e.EthiopiaBirr="ETB",e.Euro="EUR",e.FijiDollar="FJD",e.FalklandIslandsPound="FKP",e.GambiaDalasi="GMD",e.GabonFranc="GMD",e.GeorgiaLari="GEL",e.GhanaCedi="GHS",e.GibraltarPound="GIP",e.GuatemalaQuetzal="GTQ",e.GuernseyPound="GGP",e.GuineaBissauPeso="GWP",e.GuyanaDollar="GYD",e.HongKongDollar="HKD",e.HondurasLempira="HNL",e.HaitiGourde="HTG",e.HungaryForint="HUF",e.IndonesiaRupiah="IDR",e.IsleOfManPound="IMP",e.IsraelNewShekel="ILS",e.IndiaRupee="INR",e.IraqDinar="IQD",e.IranRial="IRR",e.IcelandKrona="ISK",e.JamaicaDollar="JMD",e.JapanYen="JPY",e.JerseyPound="JEP",e.JordanDinar="JOD",e.KazakhstanTenge="KZT",e.KenyaShilling="KES",e.KyrgyzstanSom="KGS",e.NorthKoreaWon="KPW",e.SouthKoreaWon="KRW",e.KuwaitDinar="KWD",e.LaosKip="LAK",e.LebanonPound="LBP",e.LiberiaDollar="LRD",e.LesothoLoti="LSL",e.LibyanDinar="LYD",e.LithuaniaLitas="LTL",e.LatviaLats="LVL",e.LibyaDinar="LYD",e.MacauPataca="MOP",e.MaldivesRufiyaa="MVR",e.MalawiKwacha="MWK",e.MaltaLira="MTL",e.MauritiusRupee="MUR",e.MongoliaTughrik="MNT",e.MoroccoDirham="MAD",e.MoldovaLeu="MDL",e.MozambiqueMetical="MZN",e.MadagascarAriary="MGA",e.MacedoniaDenar="MKD",e.MexicoPeso="MXN",e.MalaysiaRinggit="MYR",e.MyanmarKyat="MMK",e.MicronesiaFederatedStatesDollar="USD",e.NicaraguaCordoba="NIO",e.NamibiaDollar="NAD",e.NetherlandsAntillesGuilder="ANG",e.NewCaledoniaFranc="XPF",e.NigeriaNaira="NGN",e.NicaraguaCordobaOro="NIO",e.NigerCFAFranc="XOF",e.NorwayKrone="NOK",e.NepalRupee="NPR",e.NewZealandDollar="NZD",e.OmanRial="OMR",e.PanamaBalboa="PAB",e.PeruNuevoSol="PEN",e.PapuaNewGuineaKina="PGK",e.PhilippinesPeso="PHP",e.PakistanRupee="PKR",e.PeruNuevo="PEN",e.PolandZloty="PLN",e.ParaguayGuarani="PYG",e.QatarRial="QAR",e.RomaniaNewLeu="RON",e.SerbiaDinar="RSD",e.SriLankaRupee="LKR",e.RussiaRuble="RUB",e.RwandaFranc="RWF",e.SaudiArabiaRiyal="SAR",e.SlovakiaKoruna="SKK",e.SloveniaTolar="SIT",e.SolomonIslandsDollar="SBD",e.SeychellesRupee="SCR",e.SudanPound="SDG",e.SwedenKrona="SEK",e.SingaporeDollar="SGD",e.SaintHelenaPound="SHP",e.SierraLeoneLeone="SLL",e.SomaliaShilling="SOS",e.SurinameDollar="SRD",e.SintMaartenPound="SXD",e.SyriaPound="SYP",e.SwazilandLilangeni="SZL",e.SwitzerlandFranc="CHF",e.ThailandBaht="THB",e.TajikistanSomoni="TJS",e.TurkmenistanManat="TMT",e.TunisiaDinar="TND",e.TongaPaanga="TOP",e.TurkeyLira="TRY",e.TrinidadAndTobagoDollar="TTD",e.TaiwanNewDollar="TWD",e.TanzaniaShilling="TZS",e.UnitedArabEmiratesDirham="AED",e.UkraineHryvnia="UAH",e.UgandaShilling="UGX",e.UnitedKingdomPound="GBP",e.UnitedStatesDollar="USD",e.UruguayPeso="UYU",e.UzbekistanSom="UZS",e.VenezuelaBolivar="VEF",e.VietnamDong="VND",e.VanuatuVatu="VUV",e.SamoaTala="WST",e.YemenRial="YER",e.SouthAfricaRand="ZAR",e.ZambiaKwacha="ZMW",e.ZimbabweDollar="ZWL"})(A||(A={}));var f0={AfghanistanAfghani:{code:A.AfghanistanAfghani,countries:[u.Afghanistan],decimal_digits:2,decimal_separator:".",name:"Afghan Afghani",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u060B",symbol_native:"\u060B",symbol_placement:"before",thousands_separator:","},AlbaniaLek:{code:A.AlbaniaLek,countries:[u.Albania],decimal_digits:2,decimal_separator:",",name:"Albanian Lek",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lek",symbol_native:"Lek",symbol_placement:"before",thousands_separator:"."},AlgeriaDinar:{code:A.AlgeriaDinar,countries:[u.Algeria],decimal_digits:2,decimal_separator:".",name:"Algerian Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u062C",symbol_native:"\u062F.\u062C",symbol_placement:"before",thousands_separator:","},ArgentinaPeso:{code:A.ArgentinaPeso,countries:[u.Argentina],decimal_digits:2,decimal_separator:".",name:"Argentine Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ArmeniaDram:{code:A.ArmeniaDram,countries:[u.Armenia],decimal_digits:2,decimal_separator:",",name:"Armenian Dram",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0564\u0580.",symbol_native:"\u0564\u0580.",symbol_placement:"before",thousands_separator:"."},ArubaFlorin:{code:A.ArubaFlorin,countries:[u.Aruba],decimal_digits:2,decimal_separator:".",name:"Aruban Florin",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0192",symbol_native:"\u0192",symbol_placement:"before",thousands_separator:","},AustraliaDollar:{code:A.AustraliaDollar,countries:[u.Australia],decimal_digits:2,decimal_separator:".",name:"Australian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},AzerbaijanManat:{code:A.AzerbaijanNewManat,countries:[u.Azerbaijan],decimal_digits:2,decimal_separator:".",name:"Azerbaijani Manat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u043C\u0430\u043D",symbol_native:"\u043C\u0430\u043D",symbol_placement:"before",thousands_separator:","},BahrainDinar:{code:A.BahrainDinar,countries:[u.Bahrain],decimal_digits:3,decimal_separator:".",name:"Bahraini Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:".\u062F.\u0628",symbol_native:".\u062F.\u0628",symbol_placement:"before",thousands_separator:","},BangladeshTaka:{code:A.BangladeshTaka,countries:[u.Bangladesh],decimal_digits:2,decimal_separator:".",name:"Bangladeshi Taka",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u09F3",symbol_native:"\u09F3",symbol_placement:"before",thousands_separator:","},BarbadosDollar:{code:A.BarbadosDollar,countries:[u.Barbados],decimal_digits:2,decimal_separator:".",name:"Barbadian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BelarusRuble:{code:A.BelarusRuble,countries:[u.Belarus],decimal_digits:2,decimal_separator:".",name:"Belarusian Ruble",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Br",symbol_native:"Br",symbol_placement:"before",thousands_separator:"."},BelizeDollar:{code:A.BelizeDollar,countries:[u.Belize],decimal_digits:2,decimal_separator:".",name:"Belize Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"BZ$",symbol_native:"BZ$",symbol_placement:"before",thousands_separator:","},BermudaDollar:{code:A.BermudaDollar,countries:[u.Bermuda],decimal_digits:2,decimal_separator:".",name:"Bermudian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BoliviaBoliviano:{code:A.BoliviaBoliviano,countries:[u.Bolivia],decimal_digits:2,decimal_separator:".",name:"Bolivian Boliviano",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$b",symbol_native:"$b",symbol_placement:"before",thousands_separator:","},BosniaAndHerzegovinaConvertibleMarka:{code:A.BosniaAndHerzegovinaConvertibleMark,countries:[u.BosniaAndHerzegovina],decimal_digits:2,decimal_separator:",",name:"Bosnia and Herzegovina Convertible Marka",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KM",symbol_native:"KM",symbol_placement:"before",thousands_separator:"."},BotswanaPula:{code:A.BotswanaPula,countries:[u.Botswana],decimal_digits:2,decimal_separator:".",name:"Botswana Pula",negative_sign:"-",positive_sign:"",rounding:0,symbol:"P",symbol_native:"P",symbol_placement:"before",thousands_separator:","},BrazilReal:{code:A.BrazilReal,countries:[u.Brazil],decimal_digits:2,decimal_separator:",",name:"Brazilian Real",negative_sign:"-",positive_sign:"",rounding:0,symbol:"R$",symbol_native:"R$",symbol_placement:"before",thousands_separator:"."},BruneiDollar:{code:A.BruneiDollar,countries:[u.Brunei],decimal_digits:2,decimal_separator:".",name:"Brunei Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BulgariaLev:{code:A.BulgariaLev,countries:[u.Bulgaria],decimal_digits:2,decimal_separator:".",name:"Bulgarian Lev",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u043B\u0432",symbol_native:"\u043B\u0432",symbol_placement:"before",thousands_separator:"."},BurundiFranc:{code:A.BurundiFranc,countries:[u.Burundi],decimal_digits:0,decimal_separator:".",name:"Burundian Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"FBu",symbol_native:"FBu",symbol_placement:"before",thousands_separator:","},CambodiaRiel:{code:A.CambodiaRiel,countries:[u.Cambodia],decimal_digits:2,decimal_separator:",",name:"Cambodian Riel",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u17DB",symbol_native:"\u17DB",symbol_placement:"before",thousands_separator:"."},CanadaDollar:{code:A.CanadaDollar,countries:[u.Canada],decimal_digits:2,decimal_separator:".",name:"Canadian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},CapeVerdeEscudo:{code:A.CapeVerdeEscudo,countries:[u.CapeVerde],decimal_digits:2,decimal_separator:".",name:"Cape Verde Escudo",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Esc",symbol_native:"Esc",symbol_placement:"before",thousands_separator:","},CaymanIslandsDollar:{code:A.CaymanIslandsDollar,countries:[u.CaymanIslands],decimal_digits:2,decimal_separator:".",name:"Cayman Islands Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ChilePeso:{code:A.ChilePeso,countries:[u.Chile],decimal_digits:0,decimal_separator:".",name:"Chilean Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ChinaYuanRenminbi:{code:A.ChinaYuan,countries:[u.China],decimal_digits:2,decimal_separator:".",name:"Chinese Yuan",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA5",symbol_native:"\xA5",symbol_placement:"before",thousands_separator:","},ColombiaPeso:{code:A.ColombiaPeso,countries:[u.Colombia],decimal_digits:2,decimal_separator:".",name:"Colombian Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ComorosFranc:{code:A.ComorosFranc,countries:[u.Comoros],decimal_digits:0,decimal_separator:".",name:"Comoros Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CF",symbol_native:"CF",symbol_placement:"before",thousands_separator:","},CostaRicaColon:{code:A.CostaRicaColon,countries:[u.CostaRica],decimal_digits:2,decimal_separator:".",name:"Costa Rican Colon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A1",symbol_native:"\u20A1",symbol_placement:"before",thousands_separator:","},CroatiaKuna:{code:A.CroatiaKuna,countries:[u.Croatia],decimal_digits:2,decimal_separator:",",name:"Croatian Kuna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kn",symbol_native:"kn",symbol_placement:"before",thousands_separator:"."},CubaConvertiblePeso:{code:A.CubaConvertiblePeso,countries:[u.Cuba],decimal_digits:2,decimal_separator:",",name:"Cuba Convertible Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},CubaPeso:{code:A.CubaPeso,countries:[u.Cuba],decimal_digits:2,decimal_separator:",",name:"Cuba Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},CyprusPound:{code:A.CyprusPound,countries:[u.Cyprus],decimal_digits:2,decimal_separator:",",name:"Cyprus Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},CzechRepublicKoruna:{code:A.CzechRepublicKoruna,countries:[u.CzechRepublic],decimal_digits:2,decimal_separator:",",name:"Czech Republic Koruna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"K\u010D",symbol_native:"K\u010D",symbol_placement:"before",thousands_separator:"."},DenmarkKrone:{code:A.DenmarkKrone,countries:[u.Denmark],decimal_digits:2,decimal_separator:",",name:"Denmark Krone",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},DjiboutiFranc:{code:A.DjiboutiFranc,countries:[u.Djibouti],decimal_digits:0,decimal_separator:".",name:"Djibouti Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Fdj",symbol_native:"Fdj",symbol_placement:"before",thousands_separator:","},DominicanRepublicPeso:{code:A.DominicanRepublicPeso,countries:[u.DominicanRepublic],decimal_digits:2,decimal_separator:",",name:"Dominican Republic Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RD$",symbol_native:"RD$",symbol_placement:"before",thousands_separator:"."},EastCaribbeanDollar:{code:A.EastCaribbeanDollar,countries:[u.AntiguaAndBarbuda,u.Dominica,u.Grenada,u.SaintKittsAndNevis,u.SaintLucia,u.SaintVincentAndTheGrenadines],decimal_digits:2,decimal_separator:".",name:"East Caribbean Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},EgyptPound:{code:A.EgyptPound,countries:[u.Egypt],decimal_digits:2,decimal_separator:".",name:"Egypt Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:","},ElSalvadorColon:{code:A.ElSalvadorColon,countries:[u.ElSalvador],decimal_digits:2,decimal_separator:",",name:"El Salvador Colon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A1",symbol_native:"\u20A1",symbol_placement:"before",thousands_separator:"."},EquatorialGuineaEkwele:{code:A.EquatorialGuineaEkwele,countries:[u.EquatorialGuinea],decimal_digits:0,decimal_separator:".",name:"Equatorial Guinea Ekwele",negative_sign:"-",positive_sign:"",rounding:0,symbol:"GQE",symbol_native:"GQE",symbol_placement:"before",thousands_separator:","},EritreaNakfa:{code:A.EritreaNakfa,countries:[u.Eritrea],decimal_digits:2,decimal_separator:",",name:"Eritrea Nakfa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Nfk",symbol_native:"Nfk",symbol_placement:"before",thousands_separator:"."},EstoniaKroon:{code:A.EstoniaKroon,countries:[u.Estonia],decimal_digits:2,decimal_separator:",",name:"Estonia Kroon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},EthiopiaBirr:{code:A.EthiopiaBirr,countries:[u.Ethiopia],decimal_digits:2,decimal_separator:",",name:"Ethiopia Birr",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Br",symbol_native:"Br",symbol_placement:"before",thousands_separator:"."},Euro:{code:A.Euro,countries:[u.Andorra,u.Austria,u.Belgium,u.Cyprus,u.Estonia,u.Finland,u.France,u.Germany,u.Greece,u.Ireland,u.Italy,u.Latvia,u.Lithuania,u.Luxembourg,u.Malta,u.Monaco,u.Netherlands,u.Portugal,u.Spain,u.Sweden,u.UnitedKingdom],decimal_digits:2,decimal_separator:",",name:"Euro",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AC",symbol_native:"\u20AC",symbol_placement:"before",thousands_separator:"."},FalklandIslandsPound:{code:A.FalklandIslandsPound,countries:[u.FalklandIslands],decimal_digits:2,decimal_separator:",",name:"Equatorial Guinea Ekwele",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},FijiDollar:{code:A.FijiDollar,countries:[u.Fiji],decimal_digits:2,decimal_separator:",",name:"Fiji Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},GambiaDalasi:{code:A.GambiaDalasi,countries:[u.Gambia],decimal_digits:2,decimal_separator:",",name:"Gambia Dalasi",negative_sign:"-",positive_sign:"",rounding:0,symbol:"D",symbol_native:"D",symbol_placement:"before",thousands_separator:"."},GeorgiaLari:{code:A.GeorgiaLari,countries:[u.Georgia],decimal_digits:2,decimal_separator:",",name:"Georgia Lari",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BE",symbol_native:"\u20BE",symbol_placement:"before",thousands_separator:"."},GhanaCedi:{code:A.GhanaCedi,countries:[u.Ghana],decimal_digits:2,decimal_separator:",",name:"Ghana Cedi",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B5",symbol_native:"\u20B5",symbol_placement:"before",thousands_separator:"."},GibraltarPound:{code:A.GibraltarPound,countries:[u.Gibraltar],decimal_digits:2,decimal_separator:",",name:"Gibraltar Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},GuatemalaQuetzal:{code:A.GuatemalaQuetzal,countries:[u.Guatemala],decimal_digits:2,decimal_separator:",",name:"Guatemala Quetzal",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Q",symbol_native:"Q",symbol_placement:"before",thousands_separator:"."},GuernseyPound:{code:A.GuernseyPound,countries:[u.Guernsey],decimal_digits:2,decimal_separator:",",name:"Guernsey Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},GuineaBissauPeso:{code:A.GuineaBissauPeso,countries:[u.GuineaBissau],decimal_digits:2,decimal_separator:",",name:"Guinea-Bissau Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B5",symbol_native:"\u20B5",symbol_placement:"before",thousands_separator:"."},GuyanaDollar:{code:A.GuyanaDollar,countries:[u.Guyana],decimal_digits:2,decimal_separator:",",name:"Guyana Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},HaitiGourde:{code:A.HaitiGourde,countries:[u.Haiti],decimal_digits:2,decimal_separator:",",name:"Haiti Gourde",negative_sign:"-",positive_sign:"",rounding:0,symbol:"G",symbol_native:"G",symbol_placement:"before",thousands_separator:"."},HondurasLempira:{code:A.HondurasLempira,countries:[u.Honduras],decimal_digits:2,decimal_separator:",",name:"Honduras Lempira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"L",symbol_native:"L",symbol_placement:"before",thousands_separator:"."},HongKongDollar:{code:A.HongKongDollar,countries:[u.HongKong],decimal_digits:2,decimal_separator:",",name:"Hong Kong Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},HungaryForint:{code:A.HungaryForint,countries:[u.Hungary],decimal_digits:2,decimal_separator:",",name:"Hungary Forint",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ft",symbol_native:"Ft",symbol_placement:"before",thousands_separator:"."},IcelandKrona:{code:A.IcelandKrona,countries:[u.Iceland],decimal_digits:0,decimal_separator:",",name:"Iceland Krona",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},IndianRupee:{code:A.IndiaRupee,countries:[u.India,u.Bhutan],decimal_digits:2,decimal_separator:",",name:"Indian Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B9",symbol_native:"\u20B9",symbol_placement:"before",thousands_separator:"."},IndonesiaRupiah:{code:A.IndonesiaRupiah,countries:[u.Indonesia],decimal_digits:0,decimal_separator:",",name:"Indonesia Rupiah",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Rp",symbol_native:"Rp",symbol_placement:"before",thousands_separator:"."},IranRial:{code:A.IranRial,countries:[u.Iran],decimal_digits:0,decimal_separator:",",name:"Iran Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},IsleOfManPound:{code:A.IsleOfManPound,countries:[u.IsleOfMan],decimal_digits:2,decimal_separator:",",name:"Isle of Man Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},IsraeliShekel:{code:A.IsraelNewShekel,countries:[u.Israel],decimal_digits:2,decimal_separator:",",name:"Israeli Shekel",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AA",symbol_native:"\u20AA",symbol_placement:"before",thousands_separator:"."},JamaicaDollar:{code:A.JamaicaDollar,countries:[u.Jamaica],decimal_digits:2,decimal_separator:",",name:"Jamaica Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"J$",symbol_native:"J$",symbol_placement:"before",thousands_separator:"."},JapanYen:{code:A.JapanYen,countries:[u.Japan],decimal_digits:0,decimal_separator:",",name:"Japan Yen",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA5",symbol_native:"\uFFE5",symbol_placement:"before",thousands_separator:"."},JerseyPound:{code:A.JerseyPound,countries:[u.Jersey],decimal_digits:2,decimal_separator:",",name:"Jersey Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},JordanDinar:{code:A.JordanDinar,countries:[u.Jordan],decimal_digits:3,decimal_separator:",",name:"Jordan Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"JD",symbol_native:"JD",symbol_placement:"before",thousands_separator:"."},KazakhstanTenge:{code:A.KazakhstanTenge,countries:[u.Kazakhstan],decimal_digits:2,decimal_separator:",",name:"Kazakhstan Tenge",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B8",symbol_native:"\u20B8",symbol_placement:"before",thousands_separator:"."},KenyaShilling:{code:A.KenyaShilling,countries:[u.Kenya],decimal_digits:2,decimal_separator:",",name:"Kenya Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KSh",symbol_native:"KSh",symbol_placement:"before",thousands_separator:"."},KuwaitDinar:{code:A.KuwaitDinar,countries:[u.Kuwait],decimal_digits:3,decimal_separator:",",name:"Kuwait Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KD",symbol_native:"KD",symbol_placement:"before",thousands_separator:"."},KyrgyzstanSom:{code:A.KyrgyzstanSom,countries:[u.Kyrgyzstan],decimal_digits:2,decimal_separator:",",name:"Kyrgyzstan Som",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KGS",symbol_native:"KGS",symbol_placement:"before",thousands_separator:"."},LaosKip:{code:A.LaosKip,countries:[u.Laos],decimal_digits:0,decimal_separator:",",name:"Laos Kip",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AD",symbol_native:"\u20AD",symbol_placement:"before",thousands_separator:"."},LatviaLats:{code:A.LatviaLats,countries:[u.Latvia],decimal_digits:2,decimal_separator:",",name:"Latvia Lat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ls",symbol_native:"Ls",symbol_placement:"before",thousands_separator:"."},LebanonPound:{code:A.LebanonPound,countries:[u.Lebanon],decimal_digits:0,decimal_separator:",",name:"Lebanon Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},LesothoLoti:{code:A.LesothoLoti,countries:[u.Lesotho],decimal_digits:2,decimal_separator:",",name:"Lesotho Loti",negative_sign:"-",positive_sign:"",rounding:0,symbol:"M",symbol_native:"M",symbol_placement:"before",thousands_separator:"."},LiberiaDollar:{code:A.LiberiaDollar,countries:[u.Liberia],decimal_digits:2,decimal_separator:",",name:"Liberia Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},LibyanDinar:{code:A.LibyanDinar,countries:[u.Libya],decimal_digits:3,decimal_separator:",",name:"Libyan Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"LD",symbol_native:"LD",symbol_placement:"before",thousands_separator:"."},LithuaniaLitas:{code:A.LithuaniaLitas,countries:[u.Lithuania],decimal_digits:2,decimal_separator:",",name:"Lithuania Litas",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lt",symbol_native:"Lt",symbol_placement:"before",thousands_separator:"."},MacauPataca:{code:A.MacauPataca,countries:[u.Macau],decimal_digits:2,decimal_separator:",",name:"Macau Pataca",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MOP$",symbol_native:"MOP$",symbol_placement:"before",thousands_separator:"."},MacedoniaDenar:{code:A.MacedoniaDenar,countries:[u.NorthMacedonia],decimal_digits:2,decimal_separator:",",name:"Macedonia Denar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0434\u0435\u043D",symbol_native:"\u0434\u0435\u043D",symbol_placement:"before",thousands_separator:"."},MadagascarAriary:{code:A.MadagascarAriary,countries:[u.Madagascar],decimal_digits:0,decimal_separator:",",name:"Madagascar Ariary",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ar",symbol_native:"Ar",symbol_placement:"before",thousands_separator:"."},MalawiKwacha:{code:A.MalawiKwacha,countries:[u.Malawi],decimal_digits:2,decimal_separator:",",name:"Malawi Kwacha",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MK",symbol_native:"MK",symbol_placement:"before",thousands_separator:"."},MalaysiaRinggit:{code:A.MalaysiaRinggit,countries:[u.Malaysia],decimal_digits:2,decimal_separator:",",name:"Malaysia Ringgit",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RM",symbol_native:"RM",symbol_placement:"before",thousands_separator:"."},MaldivesRufiyaa:{code:A.MaldivesRufiyaa,countries:[u.Maldives],decimal_digits:2,decimal_separator:",",name:"Maldives Rufiyaa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Rf",symbol_native:"Rf",symbol_placement:"before",thousands_separator:"."},MaltaLira:{code:A.MaltaLira,countries:[u.Malta],decimal_digits:2,decimal_separator:",",name:"Malta Lira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lm",symbol_native:"Lm",symbol_placement:"before",thousands_separator:"."},MauritiusRupee:{code:A.MauritiusRupee,countries:[u.Mauritius],decimal_digits:2,decimal_separator:",",name:"Mauritius Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},MexicoPeso:{code:A.MexicoPeso,countries:[u.Mexico],decimal_digits:2,decimal_separator:",",name:"Mexico Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},MoldovaLeu:{code:A.MoldovaLeu,countries:[u.Moldova],decimal_digits:2,decimal_separator:",",name:"Moldova Leu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"L",symbol_native:"L",symbol_placement:"before",thousands_separator:"."},MongoliaTughrik:{code:A.MongoliaTughrik,countries:[u.Mongolia],decimal_digits:2,decimal_separator:",",name:"Mongolia Tughrik",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AE",symbol_native:"\u20AE",symbol_placement:"before",thousands_separator:"."},MoroccoDirham:{code:A.MoroccoDirham,countries:[u.Morocco],decimal_digits:2,decimal_separator:",",name:"Morocco Dirham",negative_sign:"-",positive_sign:"",rounding:0,symbol:"DH",symbol_native:"DH",symbol_placement:"before",thousands_separator:"."},MozambiqueMetical:{code:A.MozambiqueMetical,countries:[u.Mozambique],decimal_digits:2,decimal_separator:",",name:"Mozambique Metical",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MT",symbol_native:"MT",symbol_placement:"before",thousands_separator:"."},MyanmarKyat:{code:A.MyanmarKyat,countries:[u.Myanmar],decimal_digits:0,decimal_separator:",",name:"Myanmar Kyat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"K",symbol_native:"K",symbol_placement:"before",thousands_separator:"."},NamibiaDollar:{code:A.NamibiaDollar,countries:[u.Namibia],decimal_digits:2,decimal_separator:",",name:"Namibia Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},NepalRupee:{code:A.NepalRupee,countries:[u.Nepal],decimal_digits:2,decimal_separator:",",name:"Nepal Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},NetherlandsAntillesGuilder:{code:A.NetherlandsAntillesGuilder,countries:[u.NetherlandsAntilles],decimal_digits:2,decimal_separator:",",name:"Netherlands Antilles Guilder",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0192",symbol_native:"\u0192",symbol_placement:"before",thousands_separator:"."},NewCaledoniaFranc:{code:A.NewCaledoniaFranc,countries:[u.NewCaledonia],decimal_digits:0,decimal_separator:",",name:"New Caledonia Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A3",symbol_native:"\u20A3",symbol_placement:"before",thousands_separator:"."},NewZealandDollar:{code:A.NewZealandDollar,countries:[u.NewZealand],decimal_digits:2,decimal_separator:",",name:"New Zealand Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},NicaraguaCordoba:{code:A.NicaraguaCordoba,countries:[u.Nicaragua],decimal_digits:2,decimal_separator:",",name:"Nicaragua Cordoba",negative_sign:"-",positive_sign:"",rounding:0,symbol:"C$",symbol_native:"C$",symbol_placement:"before",thousands_separator:"."},NigerCFAFranc:{code:A.NigerCFAFranc,countries:[u.Niger],decimal_digits:0,decimal_separator:",",name:"Niger CFA Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CFA",symbol_native:"CFA",symbol_placement:"before",thousands_separator:"."},NigeriaNaira:{code:A.NigeriaNaira,countries:[u.Nigeria],decimal_digits:2,decimal_separator:",",name:"Nigeria Naira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A6",symbol_native:"\u20A6",symbol_placement:"before",thousands_separator:"."},NorthKoreaWon:{code:A.NorthKoreaWon,countries:[u.NorthKorea],decimal_digits:0,decimal_separator:",",name:"North Korea Won",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A9",symbol_native:"\u20A9",symbol_placement:"before",thousands_separator:"."},NorwayKrone:{code:A.NorwayKrone,countries:[u.Norway],decimal_digits:2,decimal_separator:",",name:"Norway Krone",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},OmanRial:{code:A.OmanRial,countries:[u.Oman],decimal_digits:3,decimal_separator:",",name:"Oman Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},PakistanRupee:{code:A.PakistanRupee,countries:[u.Pakistan],decimal_digits:2,decimal_separator:",",name:"Pakistan Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},PanamaBalboa:{code:A.PanamaBalboa,countries:[u.Panama],decimal_digits:2,decimal_separator:",",name:"Panama Balboa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"B/.",symbol_native:"B/.",symbol_placement:"before",thousands_separator:"."},ParaguayGuarani:{code:A.ParaguayGuarani,countries:[u.Paraguay],decimal_digits:0,decimal_separator:",",name:"Paraguay Guarani",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Gs",symbol_native:"Gs",symbol_placement:"before",thousands_separator:"."},PeruvianNuevo:{code:A.PeruNuevo,countries:[u.Peru],decimal_digits:2,decimal_separator:",",name:"Peruvian Nuevo",negative_sign:"-",positive_sign:"",rounding:0,symbol:"S/.",symbol_native:"S/.",symbol_placement:"before",thousands_separator:"."},PhilippinesPeso:{code:A.PhilippinesPeso,countries:[u.Philippines],decimal_digits:2,decimal_separator:",",name:"Philippines Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B1",symbol_native:"\u20B1",symbol_placement:"before",thousands_separator:"."},PolandZloty:{code:A.PolandZloty,countries:[u.Poland],decimal_digits:2,decimal_separator:",",name:"Poland Zloty",negative_sign:"-",positive_sign:"",rounding:0,symbol:"z\u0142",symbol_native:"z\u0142",symbol_placement:"before",thousands_separator:"."},QatarRial:{code:A.QatarRial,countries:[u.Qatar],decimal_digits:2,decimal_separator:",",name:"Qatar Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},RomaniaNewLeu:{code:A.RomaniaNewLeu,countries:[u.Romania],decimal_digits:2,decimal_separator:",",name:"Romania New Leu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"lei",symbol_native:"lei",symbol_placement:"before",thousands_separator:"."},RussiaRuble:{code:A.RussiaRuble,countries:[u.RussianFederation],decimal_digits:2,decimal_separator:",",name:"Russia Ruble",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BD",symbol_native:"\u20BD",symbol_placement:"before",thousands_separator:"."},RwandaFranc:{code:A.RwandaFranc,countries:[u.Rwanda],decimal_digits:0,decimal_separator:",",name:"Rwanda Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RF",symbol_native:"RF",symbol_placement:"before",thousands_separator:"."},SaudiArabiaRiyal:{code:A.SaudiArabiaRiyal,countries:[u.SaudiArabia],decimal_digits:2,decimal_separator:",",name:"Saudi Arabia Riyal",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},SerbiaDinar:{code:A.SerbiaDinar,countries:[u.Serbia],decimal_digits:0,decimal_separator:",",name:"Serbia Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0414\u0438\u043D.",symbol_native:"\u0414\u0438\u043D.",symbol_placement:"before",thousands_separator:"."},SeychellesRupee:{code:A.SeychellesRupee,countries:[u.Seychelles],decimal_digits:2,decimal_separator:",",name:"Seychelles Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},SingaporeDollar:{code:A.SingaporeDollar,countries:[u.Singapore],decimal_digits:2,decimal_separator:",",name:"Singapore Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SlovakiaKoruna:{code:A.SlovakiaKoruna,countries:[u.Slovakia],decimal_digits:2,decimal_separator:",",name:"Slovakia Koruna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Sk",symbol_native:"Sk",symbol_placement:"before",thousands_separator:"."},SloveniaTolar:{code:A.SloveniaTolar,countries:[u.Slovenia],decimal_digits:2,decimal_separator:",",name:"Slovenia Tolar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"SIT",symbol_native:"SIT",symbol_placement:"before",thousands_separator:"."},SolomonIslandsDollar:{code:A.SolomonIslandsDollar,countries:[u.SolomonIslands],decimal_digits:2,decimal_separator:",",name:"Solomon Islands Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SomaliaShilling:{code:A.SomaliaShilling,countries:[u.Somalia],decimal_digits:0,decimal_separator:",",name:"Somalia Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"S",symbol_native:"S",symbol_placement:"before",thousands_separator:"."},SouthAfricaRand:{code:A.SouthAfricaRand,countries:[u.SouthAfrica],decimal_digits:2,decimal_separator:",",name:"South Africa Rand",negative_sign:"-",positive_sign:"",rounding:0,symbol:"R",symbol_native:"R",symbol_placement:"before",thousands_separator:"."},SouthKoreaWon:{code:A.SouthKoreaWon,countries:[u.SouthKorea],decimal_digits:0,decimal_separator:",",name:"South Korea Won",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A9",symbol_native:"\u20A9",symbol_placement:"before",thousands_separator:"."},SriLankaRupee:{code:A.SriLankaRupee,countries:[u.SriLanka],decimal_digits:2,decimal_separator:",",name:"Sri Lanka Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},SudanPound:{code:A.SudanPound,countries:[u.Sudan],decimal_digits:2,decimal_separator:",",name:"Sudan Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},SurinameDollar:{code:A.SurinameDollar,countries:[u.Suriname],decimal_digits:2,decimal_separator:",",name:"Suriname Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SwazilandLilangeni:{code:A.SwazilandLilangeni,countries:[u.Swaziland],decimal_digits:2,decimal_separator:",",name:"Swaziland Lilangeni",negative_sign:"-",positive_sign:"",rounding:0,symbol:"E",symbol_native:"E",symbol_placement:"before",thousands_separator:"."},SwedenKrona:{code:A.SwedenKrona,countries:[u.Sweden],decimal_digits:2,decimal_separator:",",name:"Sweden Krona",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},SwitzerlandFranc:{code:A.SwitzerlandFranc,countries:[u.Switzerland],decimal_digits:2,decimal_separator:",",name:"Switzerland Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CHF",symbol_native:"CHF",symbol_placement:"before",thousands_separator:"."},SyriaPound:{code:A.SyriaPound,countries:[u.Syria],decimal_digits:2,decimal_separator:",",name:"Syria Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},TaiwanNewDollar:{code:A.TaiwanNewDollar,countries:[u.Taiwan],decimal_digits:2,decimal_separator:",",name:"Taiwan New Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"NT$",symbol_native:"NT$",symbol_placement:"before",thousands_separator:"."},TajikistanSomoni:{code:A.TajikistanSomoni,countries:[u.Tajikistan],decimal_digits:2,decimal_separator:",",name:"Tajikistan Somoni",negative_sign:"-",positive_sign:"",rounding:0,symbol:"TJS",symbol_native:"TJS",symbol_placement:"before",thousands_separator:"."},TanzaniaShilling:{code:A.TanzaniaShilling,countries:[u.Tanzania],decimal_digits:2,decimal_separator:",",name:"Tanzania Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"TSh",symbol_native:"TSh",symbol_placement:"before",thousands_separator:"."},ThailandBaht:{code:A.ThailandBaht,countries:[u.Thailand],decimal_digits:2,decimal_separator:",",name:"Thailand Baht",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0E3F",symbol_native:"\u0E3F",symbol_placement:"before",thousands_separator:"."},TunisiaDinar:{code:A.TunisiaDinar,countries:[u.Tunisia],decimal_digits:3,decimal_separator:",",name:"Tunisia Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u062A",symbol_native:"\u062F.\u062A",symbol_placement:"before",thousands_separator:"."},TurkeyLira:{code:A.TurkeyLira,countries:[u.Turkey],decimal_digits:2,decimal_separator:",",name:"Turkey Lira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BA",symbol_native:"\u20BA",symbol_placement:"before",thousands_separator:"."},TurkmenistanManat:{code:A.TurkmenistanManat,countries:[u.Turkmenistan],decimal_digits:2,decimal_separator:",",name:"Turkmenistan Manat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"m",symbol_native:"m",symbol_placement:"before",thousands_separator:"."},UgandaShilling:{code:A.UgandaShilling,countries:[u.Uganda],decimal_digits:0,decimal_separator:",",name:"Uganda Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"USh",symbol_native:"USh",symbol_placement:"before",thousands_separator:"."},UkraineHryvnia:{code:A.UkraineHryvnia,countries:[u.Ukraine],decimal_digits:2,decimal_separator:",",name:"Ukraine Hryvnia",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B4",symbol_native:"\u20B4",symbol_placement:"before",thousands_separator:"."},UnitedArabEmiratesDirham:{code:A.UnitedArabEmiratesDirham,countries:[u.UnitedArabEmirates],decimal_digits:2,decimal_separator:",",name:"United Arab Emirates Dirham",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u0625",symbol_native:"\u062F.\u0625",symbol_placement:"before",thousands_separator:"."},UnitedKingdomPound:{code:A.UnitedKingdomPound,countries:[u.UnitedKingdom],decimal_digits:2,decimal_separator:",",name:"United Kingdom Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},UnitedStatesDollar:{code:A.UnitedStatesDollar,countries:[u.UnitedStates],decimal_digits:2,decimal_separator:",",name:"United States Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},UruguayPeso:{code:A.UruguayPeso,countries:[u.Uruguay],decimal_digits:2,decimal_separator:",",name:"Uruguay Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$U",symbol_native:"$U",symbol_placement:"before",thousands_separator:"."},UzbekistanSom:{code:A.UzbekistanSom,countries:[u.Uzbekistan],decimal_digits:2,decimal_separator:",",name:"Uzbekistan Som",negative_sign:"-",positive_sign:"",rounding:0,symbol:"UZS",symbol_native:"UZS",symbol_placement:"before",thousands_separator:"."},VanuatuVatu:{code:A.VanuatuVatu,countries:[u.Vanuatu],decimal_digits:0,decimal_separator:",",name:"Vanuatu Vatu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"VT",symbol_native:"VT",symbol_placement:"before",thousands_separator:"."},VenezuelaBolivar:{code:A.VenezuelaBolivar,countries:[u.Venezuela],decimal_digits:2,decimal_separator:",",name:"Venezuela Bolivar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Bs. F",symbol_native:"Bs. F",symbol_placement:"before",thousands_separator:"."},VietnamDong:{code:A.VietnamDong,countries:[u.Vietnam],decimal_digits:0,decimal_separator:",",name:"Vietnam Dong",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AB",symbol_native:"\u20AB",symbol_placement:"before",thousands_separator:"."},YemenRial:{code:A.YemenRial,countries:[u.Yemen],decimal_digits:2,decimal_separator:",",name:"Yemen Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},ZambiaKwacha:{code:A.ZambiaKwacha,countries:[u.Zambia],decimal_digits:2,decimal_separator:",",name:"Zambia Kwacha",negative_sign:"-",positive_sign:"",rounding:0,symbol:"ZK",symbol_native:"ZK",symbol_placement:"before",thousands_separator:"."},ZimbabweDollar:{code:A.ZimbabweDollar,countries:[u.Zimbabwe],decimal_digits:2,decimal_separator:",",name:"Zimbabwe Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AB",symbol_native:"\u20AB",symbol_placement:"before",thousands_separator:"."}},ln;(function(e){e.Bitcoin="BTC",e.Ethereum="ETH",e.Litecoin="LTC",e.Ripple="XRP",e.Dash="DASH",e.Zcash="ZEC",e.Dogecoin="DOGE",e.Monero="XMR",e.BitcoinCash="BCH",e.EOS="EOS",e.Binance="BNB",e.Stellar="XLM",e.Cardano="ADA",e.IOTA="IOTA",e.Tezos="XTZ",e.NEO="NEO",e.TRON="TRX",e.EOSClassic="EOSC",e.Ontology="ONT",e.VeChain="VEN",e.QTUM="QTUM",e.Lisk="LSK",e.Waves="WAVES",e.OmiseGO="OMG",e.Zilliqa="ZIL",e.BitcoinGold="BTG",e.Decred="DCR",e.Stratis="STRAT",e.Populous="PPT",e.Augur="REP",e.Golem="GNT",e.Siacoin="SC",e.BasicAttentionToken="BAT",e.ZCoin="XZC",e.StratisHedged="SNT",e.VeChainHedged="VEN",e.PowerLedger="POWR",e.WavesHedged="WAVE",e.ZilliqaHedged="ZRX",e.BitcoinDiamond="BCD",e.DigiByte="DGB",e.DigiByteHedged="DGB",e.Bytecoin="BCN",e.BytecoinHedged="BCN"})(ln||(ln={}));var r;(function(e){e.Afrikaans="af",e.Albanian="sq",e.Amharic="am",e.Arabic="ar",e.Armenian="hy",e.Azerbaijani="az",e.Bashkir="ba",e.Basque="eu",e.Belarusian="be",e.Bengali="bn",e.Berber="ber",e.Bhutani="dz",e.Bihari="bh",e.Bislama="bi",e.Bosnian="bs",e.Breten="br",e.Bulgarian="bg",e.Burmese="my",e.Cantonese="yue",e.Catalan="ca",e.Chinese="zh",e.Chuvash="cv",e.Corsican="co",e.Croatian="hr",e.Czech="cs",e.Danish="da",e.Dari="prs",e.Divehi="dv",e.Dutch="nl",e.English="en",e.Esperanto="eo",e.Estonian="et",e.Faroese="fo",e.Farsi="fa",e.Filipino="fil",e.Finnish="fi",e.French="fr",e.Frisian="fy",e.Galician="gl",e.Georgian="ka",e.German="de",e.Greek="el",e.Greenlandic="kl",e.Gujarati="gu",e.Haitian="ht",e.Hausa="ha",e.Hebrew="he",e.Hindi="hi",e.Hungarian="hu",e.Icelandic="is",e.Igbo="ig",e.Indonesian="id",e.Irish="ga",e.Italian="it",e.Japanese="ja",e.Javanese="jv",e.Kannada="kn",e.Karelian="krl",e.Kazakh="kk",e.Khmer="km",e.Komi="kv",e.Konkani="kok",e.Korean="ko",e.Kurdish="ku",e.Kyrgyz="ky",e.Lao="lo",e.Latin="la",e.Latvian="lv",e.Lithuanian="lt",e.Luxembourgish="lb",e.Ossetian="os",e.Macedonian="mk",e.Malagasy="mg",e.Malay="ms",e.Malayalam="ml",e.Maltese="mt",e.Maori="mi",e.Marathi="mr",e.Mari="mhr",e.Mongolian="mn",e.Montenegrin="me",e.Nepali="ne",e.NorthernSotho="nso",e.Norwegian="no",e.NorwegianBokmal="nb",e.NorwegianNynorsk="nn",e.Oriya="or",e.Pashto="ps",e.Persian="fa",e.Polish="pl",e.Portuguese="pt",e.Punjabi="pa",e.Quechua="qu",e.Romanian="ro",e.Russian="ru",e.Sakha="sah",e.Sami="se",e.Samoan="sm",e.Sanskrit="sa",e.Scots="gd",e.Serbian="sr",e.SerbianCyrillic="sr-Cyrl",e.Sesotho="st",e.Shona="sn",e.Sindhi="sd",e.Sinhala="si",e.Slovak="sk",e.Slovenian="sl",e.Somali="so",e.Spanish="es",e.Sudanese="su",e.Sutu="sx",e.Swahili="sw",e.Swedish="sv",e.Syriac="syr",e.Tagalog="tl",e.Tajik="tg",e.Tamazight="tmh",e.Tamil="ta",e.Tatar="tt",e.Telugu="te",e.Thai="th",e.Tibetan="bo",e.Tsonga="ts",e.Tswana="tn",e.Turkish="tr",e.Turkmen="tk",e.Ukrainian="uk",e.Urdu="ur",e.Uzbek="uz",e.Vietnamese="vi",e.Welsh="cy",e.Xhosa="xh",e.Yiddish="yi",e.Yoruba="yo",e.Zulu="zu"})(r||(r={}));var a;(function(e){e.Afrikaans="af",e.AfrikaansSouthAfrica="af-ZA",e.Albanian="sq",e.AlbanianAlbania="sq-AL",e.Amharic="am",e.AmharicEthiopia="am-ET",e.Arabic="ar",e.ArabicAlgeria="ar-DZ",e.ArabicBahrain="ar-BH",e.ArabicEgypt="ar-EG",e.ArabicIraq="ar-IQ",e.ArabicJordan="ar-JO",e.ArabicKuwait="ar-KW",e.ArabicLebanon="ar-LB",e.ArabicLibya="ar-LY",e.ArabicMorocco="ar-MA",e.ArabicOman="ar-OM",e.ArabicQatar="ar-QA",e.ArabicSaudiArabia="ar-SA",e.ArabicSyria="ar-SY",e.ArabicTunisia="ar-TN",e.ArabicUnitedArabEmirates="ar-AE",e.ArabicYemen="ar-YE",e.Armenian="hy",e.ArmenianArmenia="hy-AM",e.Azerbaijani="az",e.AzerbaijaniAzerbaijan="az-AZ",e.AzerbaijaniCyrillicAzerbaijan="az-Cyrl-AZ",e.Bashkir="ba",e.Basque="eu",e.BasqueSpain="eu-ES",e.Belarusian="be",e.BelarusianBelarus="be-BY",e.Bengali="bn",e.BengaliBangladesh="bn-BD",e.BengaliIndia="bn-IN",e.Berber="ber",e.Bhutani="dz",e.BhutaniBhutan="dz-BT",e.Bosnian="bs",e.BosnianBosniaAndHerzegovina="bs-BA",e.Breton="br",e.Bulgarian="bg",e.BulgarianBosniaAndHerzegovina="bg-BG",e.BulgarianBulgaria="bg-BG",e.Burmese="my",e.BurmeseMyanmar="my-MM",e.Cantonese="yue",e.CantoneseHongKong="yue-HK",e.Catalan="ca",e.CatalanSpain="ca-ES",e.Chechen="ce",e.Cherokee="chr",e.Chinese="zh",e.ChineseSimplified="zh-Hans",e.ChineseSimplifiedChina="zh-Hans-CN",e.ChineseSimplifiedHongKong="zh-Hans-HK",e.ChineseSimplifiedMacau="zh-Hans-MO",e.ChineseSimplifiedSingapore="zh-Hans-SG",e.ChineseTraditional="zh-Hant",e.ChineseTraditionalHongKong="zh-Hant-HK",e.ChineseTraditionalMacau="zh-Hant-MO",e.ChineseTraditionalSingapore="zh-Hant-SG",e.ChineseTraditionalTaiwan="zh-Hant-TW",e.Chuvash="cv",e.CorsicanFrance="co-FR",e.Croatian="hr",e.CroatianBosniaAndHerzegovina="hr-BA",e.CroatianCroatia="hr-HR",e.Czech="cs",e.CzechCzechRepublic="cs-CZ",e.Danish="da",e.DanishDenmark="da-DK",e.Dari="prs",e.DariAfghanistan="prs-AF",e.Divehi="dv",e.DivehiMaldives="dv-MV",e.Dutch="nl",e.DutchBelgium="nl-BE",e.DutchNetherlands="nl-NL",e.English="en",e.EnglishAustralia="en-AU",e.EnglishBelgium="en-BE",e.EnglishBelize="en-BZ",e.EnglishCanada="en-CA",e.EnglishCaribbean="en-029",e.EnglishIreland="en-IE",e.EnglishJamaica="en-JM",e.EnglishNewZealand="en-NZ",e.EnglishPhilippines="en-PH",e.EnglishSingapore="en-SG",e.EnglishSouthAfrica="en-ZA",e.EnglishTrinidadAndTobago="en-TT",e.EnglishUnitedKingdom="en-GB",e.EnglishUnitedStates="en-US",e.EnglishZimbabwe="en-ZW",e.Esperanto="eo",e.Estonian="et",e.EstonianEstonia="et-EE",e.Faroese="fo",e.FaroeseFaroeIslands="fo-FO",e.Farsi="fa",e.FarsiIran="fa-IR",e.Filipino="fil",e.FilipinoPhilippines="fil-PH",e.Finnish="fi",e.FinnishFinland="fi-FI",e.French="fr",e.FrenchBelgium="fr-BE",e.FrenchCanada="fr-CA",e.FrenchFrance="fr-FR",e.FrenchLuxembourg="fr-LU",e.FrenchMonaco="fr-MC",e.FrenchReunion="fr-RE",e.FrenchSwitzerland="fr-CH",e.Frisian="fy",e.FrisianNetherlands="fy-NL",e.Galician="gl",e.GalicianSpain="gl-ES",e.Georgian="ka",e.GeorgianGeorgia="ka-GE",e.German="de",e.GermanAustria="de-AT",e.GermanBelgium="de-BE",e.GermanGermany="de-DE",e.GermanLiechtenstein="de-LI",e.GermanLuxembourg="de-LU",e.GermanSwitzerland="de-CH",e.Greenlandic="kl",e.GreenlandicGreenland="kl-GL",e.Greek="el",e.GreekGreece="el-GR",e.Gujarati="gu",e.GujaratiIndia="gu-IN",e.Haitian="ht",e.Hausa="ha",e.HausaGhana="ha-GH",e.HausaNiger="ha-NE",e.HausaNigeria="ha-NG",e.Hebrew="he",e.HebrewIsrael="he-IL",e.Hindi="hi",e.HindiIndia="hi-IN",e.Hungarian="hu",e.HungarianHungary="hu-HU",e.Icelandic="is",e.IcelandicIceland="is-IS",e.Igbo="ig",e.IgboNigeria="ig-NG",e.Indonesian="id",e.IndonesianIndonesia="id-ID",e.Irish="ga",e.IrishIreland="ga-IE",e.Italian="it",e.ItalianItaly="it-IT",e.ItalianSwitzerland="it-CH",e.Japanese="ja",e.JapaneseJapan="ja-JP",e.Javanese="jv",e.Kannada="kn",e.KannadaIndia="kn-IN",e.Karelian="krl",e.Kazakh="kk",e.KazakhKazakhstan="kk-KZ",e.Khmer="km",e.KhmerCambodia="km-KH",e.KinyarwandaRwanda="rw-RW",e.Komi="kv",e.Konkani="kok",e.KonkaniIndia="kok-IN",e.Korean="ko",e.KoreanSouthKorea="ko-KR",e.Kurdish="ku",e.KurdishIraq="ku-IQ",e.KurdishTurkey="ku-TR",e.Kyrgyz="ky",e.KyrgyzKyrgyzstan="ky-KG",e.Lao="lo",e.LaoLaos="lo-LA",e.Latin="la",e.Latvian="lv",e.LatvianLatvia="lv-LV",e.Lithuanian="lt",e.LithuanianLithuania="lt-LT",e.Luxembourgish="lb",e.LuxembourgishBelgium="lb-LU",e.LuxembourgishLuxembourg="lb-LU",e.Macedonian="mk",e.MacedonianNorthMacedonia="mk-MK",e.Malagasy="mg",e.Malay="ms",e.MalayBrunei="ms-BN",e.MalayIndia="ms-IN",e.MalayMalaysia="ms-MY",e.MalaySingapore="ms-SG",e.Malayalam="ml",e.MalayalamIndia="ml-IN",e.Maltese="mt",e.MalteseMalta="mt-MT",e.Maori="mi",e.MaoriNewZealand="mi-NZ",e.Marathi="mr",e.MarathiIndia="mr-IN",e.Mari="chm",e.Mongolian="mn",e.MongolianMongolia="mn-MN",e.Montenegrin="me",e.MontenegrinMontenegro="me-ME",e.Nepali="ne",e.NepaliNepal="ne-NP",e.NorthernSotho="ns",e.NorthernSothoSouthAfrica="ns-ZA",e.Norwegian="nb",e.NorwegianBokmalNorway="nb-NO",e.NorwegianNynorskNorway="nn-NO",e.Oriya="or",e.OriyaIndia="or-IN",e.Ossetian="os",e.Pashto="ps",e.PashtoAfghanistan="ps-AF",e.Persian="fa",e.PersianIran="fa-IR",e.Polish="pl",e.PolishPoland="pl-PL",e.Portuguese="pt",e.PortugueseBrazil="pt-BR",e.PortuguesePortugal="pt-PT",e.Punjabi="pa",e.PunjabiIndia="pa-IN",e.PunjabiPakistan="pa-PK",e.Quechua="qu",e.QuechuaBolivia="qu-BO",e.QuechuaEcuador="qu-EC",e.QuechuaPeru="qu-PE",e.Romanian="ro",e.RomanianRomania="ro-RO",e.Russian="ru",e.RussianKazakhstan="ru-KZ",e.RussianKyrgyzstan="ru-KG",e.RussianRussia="ru-RU",e.RussianUkraine="ru-UA",e.Sakha="sah",e.Sanskrit="sa",e.SanskritIndia="sa-IN",e.Sami="se",e.SamiNorway="se-NO",e.SamiSweden="se-SE",e.SamiFinland="se-FI",e.Samoan="sm",e.SamoanSamoa="sm-WS",e.Scots="gd",e.Serbian="sr",e.SerbianBosniaAndHerzegovina="sr-BA",e.SerbianSerbiaAndMontenegro="sr-SP",e.SerbianCyrillic="sr-SP-Cyrl",e.SerbianCyrillicBosniaAndHerzegovina="sr-Cyrl-BA",e.SerbianCyrillicSerbiaAndMontenegro="sr-Cyrl-SP",e.Sesotho="st",e.SesothoSouthAfrica="st-ZA",e.Shona="sn",e.ShonaZimbabwe="sn-ZW",e.Sindhi="sd",e.SindhiPakistan="sd-PK",e.Sinhala="si",e.SinhalaSriLanka="si-LK",e.Slovak="sk",e.SlovakSlovakia="sk-SK",e.Slovenian="sl",e.SlovenianSlovenia="sl-SI",e.Somali="so",e.SomaliSomalia="so-SO",e.Spanish="es",e.SpanishArgentina="es-AR",e.SpanishBolivia="es-BO",e.SpanishChile="es-CL",e.SpanishColombia="es-CO",e.SpanishCostaRica="es-CR",e.SpanishCuba="es-CU",e.SpanishDominicanRepublic="es-DO",e.SpanishEcuador="es-EC",e.SpanishEquatorialGuinea="es-GQ",e.SpanishElSalvador="es-SV",e.SpanishGuatemala="es-GT",e.SpanishHonduras="es-HN",e.SpanishMexico="es-MX",e.SpanishNicaragua="es-NI",e.SpanishPanama="es-PA",e.SpanishParaguay="es-PY",e.SpanishPeru="es-PE",e.SpanishPuertoRico="es-PR",e.SpanishSpain="es-ES",e.SpanishUnitedStates="es-US",e.SpanishUruguay="es-UY",e.SpanishVenezuela="es-VE",e.Sudanese="su",e.Sutu="st",e.SutuSouthAfrica="st-ZA",e.Swahili="sw",e.SwahiliKenya="sw-KE",e.Swedish="sv",e.SwedishFinland="sv-FI",e.SwedishSweden="sv-SE",e.Syriac="syr",e.SyriacSyria="syr-SY",e.Tajik="tg",e.TajikTajikistan="tg-TJ",e.Tagalog="tl",e.TagalogPhilippines="tl-PH",e.Tamazight="tmh",e.Tamil="ta",e.TamilIndia="ta-IN",e.Tatar="tt",e.Telugu="te",e.TeluguIndia="te-IN",e.Thai="th",e.ThaiThailand="th-TH",e.Tibetan="bo",e.TibetanBhutan="bo-BT",e.TibetanChina="bo-CN",e.TibetanIndia="bo-IN",e.Tsonga="ts",e.Tswana="tn",e.TswanaSouthAfrica="tn-ZA",e.Turkish="tr",e.TurkishTurkey="tr-TR",e.Turkmen="tk",e.Ukrainian="uk",e.UkrainianUkraine="uk-UA",e.Urdu="ur",e.UrduAfghanistan="ur-AF",e.UrduIndia="ur-IN",e.UrduPakistan="ur-PK",e.Uzbek="uz",e.UzbekCyrillic="uz-Cyrl-UZ",e.UzbekLatin="uz-Latn-UZ",e.UzbekUzbekistan="uz-UZ",e.Vietnamese="vi",e.VietnameseVietnam="vi-VN",e.Welsh="cy",e.WelshUnitedKingdom="cy-GB",e.Xhosa="xh",e.XhosaSouthAfrica="xh-ZA",e.Yiddish="yi",e.Yoruba="yo",e.YorubaNigeria="yo-NG",e.ZhuyinMandarinChina="yue-Hant-CN",e.Zulu="zu",e.ZuluSouthAfrica="zu-ZA"})(a||(a={}));var s;(function(e){e.AfricaAbidjan="Africa/Abidjan",e.AfricaAccra="Africa/Accra",e.AfricaAddisAbaba="Africa/Addis_Ababa",e.AfricaAlgiers="Africa/Algiers",e.AfricaAsmara="Africa/Asmara",e.AfricaBamako="Africa/Bamako",e.AfricaBangui="Africa/Bangui",e.AfricaBanjul="Africa/Banjul",e.AfricaBissau="Africa/Bissau",e.AfricaBlantyre="Africa/Blantyre",e.AfricaBrazzaville="Africa/Brazzaville",e.AfricaBujumbura="Africa/Bujumbura",e.AfricaCairo="Africa/Cairo",e.AfricaCasablanca="Africa/Casablanca",e.AfricaCeuta="Africa/Ceuta",e.AfricaConakry="Africa/Conakry",e.AfricaDakar="Africa/Dakar",e.AfricaDarEsSalaam="Africa/Dar_es_Salaam",e.AfricaDjibouti="Africa/Djibouti",e.AfricaDouala="Africa/Douala",e.AfricaElAaiun="Africa/El_Aaiun",e.AfricaFreetown="Africa/Freetown",e.AfricaGaborone="Africa/Gaborone",e.AfricaHarare="Africa/Harare",e.AfricaJohannesburg="Africa/Johannesburg",e.AfricaJuba="Africa/Juba",e.AfricaKampala="Africa/Kampala",e.AfricaKhartoum="Africa/Khartoum",e.AfricaKigali="Africa/Kigali",e.AfricaKinshasa="Africa/Kinshasa",e.AfricaLagos="Africa/Lagos",e.AfricaLibreville="Africa/Libreville",e.AfricaLome="Africa/Lome",e.AfricaLuanda="Africa/Luanda",e.AfricaLubumbashi="Africa/Lubumbashi",e.AfricaLusaka="Africa/Lusaka",e.AfricaMalabo="Africa/Malabo",e.AfricaMaputo="Africa/Maputo",e.AfricaMaseru="Africa/Maseru",e.AfricaMbabane="Africa/Mbabane",e.AfricaMogadishu="Africa/Mogadishu",e.AfricaMonrovia="Africa/Monrovia",e.AfricaNairobi="Africa/Nairobi",e.AfricaNdjamena="Africa/Ndjamena",e.AfricaNiamey="Africa/Niamey",e.AfricaNouakchott="Africa/Nouakchott",e.AfricaOuagadougou="Africa/Ouagadougou",e.AfricaPortoNovo="Africa/Porto-Novo",e.AfricaSaoTome="Africa/Sao_Tome",e.AfricaTripoli="Africa/Tripoli",e.AfricaTunis="Africa/Tunis",e.AfricaWindhoek="Africa/Windhoek",e.AmericaAdak="America/Adak",e.AmericaAnchorage="America/Anchorage",e.AmericaAnguilla="America/Anguilla",e.AmericaAntigua="America/Antigua",e.AmericaAraguaina="America/Araguaina",e.AmericaArgentinaBuenosAires="America/Argentina/Buenos_Aires",e.AmericaArgentinaCatamarca="America/Argentina/Catamarca",e.AmericaArgentinaCordoba="America/Argentina/Cordoba",e.AmericaArgentinaJujuy="America/Argentina/Jujuy",e.AmericaArgentinaLaRioja="America/Argentina/La_Rioja",e.AmericaArgentinaMendoza="America/Argentina/Mendoza",e.AmericaArgentinaRioGallegos="America/Argentina/Rio_Gallegos",e.AmericaArgentinaSalta="America/Argentina/Salta",e.AmericaArgentinaSanJuan="America/Argentina/San_Juan",e.AmericaArgentinaSanLuis="America/Argentina/San_Luis",e.AmericaArgentinaTucuman="America/Argentina/Tucuman",e.AmericaArgentinaUshuaia="America/Argentina/Ushuaia",e.AmericaAruba="America/Aruba",e.AmericaAsuncion="America/Asuncion",e.AmericaAtikokan="America/Atikokan",e.AmericaAtka="America/Atka",e.AmericaBahia="America/Bahia",e.AmericaBahiaBanderas="America/Bahia_Banderas",e.AmericaBarbados="America/Barbados",e.AmericaBelem="America/Belem",e.AmericaBelize="America/Belize",e.AmericaBlancSablon="America/Blanc-Sablon",e.AmericaBoaVista="America/Boa_Vista",e.AmericaBogota="America/Bogota",e.AmericaBoise="America/Boise",e.AmericaCambridgeBay="America/Cambridge_Bay",e.AmericaCampoGrande="America/Campo_Grande",e.AmericaCancun="America/Cancun",e.AmericaCaracas="America/Caracas",e.AmericaCayenne="America/Cayenne",e.AmericaCayman="America/Cayman",e.AmericaChicago="America/Chicago",e.AmericaChihuahua="America/Chihuahua",e.AmericaCoralHarbour="America/Coral_Harbour",e.AmericaCordoba="America/Cordoba",e.AmericaCostaRica="America/Costa_Rica",e.AmericaCreston="America/Creston",e.AmericaCuiaba="America/Cuiaba",e.AmericaCuracao="America/Curacao",e.AmericaDanmarkshavn="America/Danmarkshavn",e.AmericaDawson="America/Dawson",e.AmericaDawsonCreek="America/Dawson_Creek",e.AmericaDenver="America/Denver",e.AmericaDetroit="America/Detroit",e.AmericaDominica="America/Dominica",e.AmericaEdmonton="America/Edmonton",e.AmericaEirunepe="America/Eirunepe",e.AmericaElSalvador="America/El_Salvador",e.AmericaFortaleza="America/Fortaleza",e.AmericaGlaceBay="America/Glace_Bay",e.AmericaGodthab="America/Godthab",e.AmericaGooseBay="America/Goose_Bay",e.AmericaGrandTurk="America/Grand_Turk",e.AmericaGrenada="America/Grenada",e.AmericaGuadeloupe="America/Guadeloupe",e.AmericaGuatemala="America/Guatemala",e.AmericaGuayaquil="America/Guayaquil",e.AmericaGuyana="America/Guyana",e.AmericaHalifax="America/Halifax",e.AmericaHavana="America/Havana",e.AmericaHermosillo="America/Hermosillo",e.AmericaIndianaIndianapolis="America/Indiana/Indianapolis",e.AmericaIndianaKnox="America/Indiana/Knox",e.AmericaIndianaMarengo="America/Indiana/Marengo",e.AmericaIndianaPetersburg="America/Indiana/Petersburg",e.AmericaIndianaTellCity="America/Indiana/Tell_City",e.AmericaIndianaVevay="America/Indiana/Vevay",e.AmericaIndianaVincennes="America/Indiana/Vincennes",e.AmericaIndianaWinamac="America/Indiana/Winamac",e.AmericaInuvik="America/Inuvik",e.AmericaIqaluit="America/Iqaluit",e.AmericaJamaica="America/Jamaica",e.AmericaJuneau="America/Juneau",e.AmericaKentuckyLouisville="America/Kentucky/Louisville",e.AmericaKentuckyMonticello="America/Kentucky/Monticello",e.AmericaKralendijk="America/Kralendijk",e.AmericaLaPaz="America/La_Paz",e.AmericaLima="America/Lima",e.AmericaLosAngeles="America/Los_Angeles",e.AmericaLouisville="America/Louisville",e.AmericaLowerPrinces="America/Lower_Princes",e.AmericaMaceio="America/Maceio",e.AmericaManagua="America/Managua",e.AmericaManaus="America/Manaus",e.AmericaMarigot="America/Marigot",e.AmericaMartinique="America/Martinique",e.AmericaMatamoros="America/Matamoros",e.AmericaMazatlan="America/Mazatlan",e.AmericaMenominee="America/Menominee",e.AmericaMerida="America/Merida",e.AmericaMetlakatla="America/Metlakatla",e.AmericaMexicoCity="America/Mexico_City",e.AmericaMiquelon="America/Miquelon",e.AmericaMoncton="America/Moncton",e.AmericaMonterrey="America/Monterrey",e.AmericaMontevideo="America/Montevideo",e.AmericaMontserrat="America/Montserrat",e.AmericaMontreal="America/Montreal",e.AmericaNassau="America/Nassau",e.AmericaNewYork="America/New_York",e.AmericaNipigon="America/Nipigon",e.AmericaNome="America/Nome",e.AmericaNoronha="America/Noronha",e.AmericaNorthDakotaBeulah="America/North_Dakota/Beulah",e.AmericaNorthDakotaCenter="America/North_Dakota/Center",e.AmericaNorthDakotaNewSalem="America/North_Dakota/New_Salem",e.AmericaOjinaga="America/Ojinaga",e.AmericaPanama="America/Panama",e.AmericaPangnirtung="America/Pangnirtung",e.AmericaParamaribo="America/Paramaribo",e.AmericaPhoenix="America/Phoenix",e.AmericaPortAuPrince="America/Port-au-Prince",e.AmericaPortOfSpain="America/Port_of_Spain",e.AmericaPortoVelho="America/Porto_Velho",e.AmericaPuertoRico="America/Puerto_Rico",e.AmericaRainyRiver="America/Rainy_River",e.AmericaRankinInlet="America/Rankin_Inlet",e.AmericaRecife="America/Recife",e.AmericaRegina="America/Regina",e.AmericaResolute="America/Resolute",e.AmericaRioBranco="America/Rio_Branco",e.AmericaSantaIsabel="America/Santa_Isabel",e.AmericaSantarem="America/Santarem",e.AmericaSantiago="America/Santiago",e.AmericaSantoDomingo="America/Santo_Domingo",e.AmericaSaoPaulo="America/Sao_Paulo",e.AmericaScoresbysund="America/Scoresbysund",e.AmericaShiprock="America/Shiprock",e.AmericaSitka="America/Sitka",e.AmericaStBarthelemy="America/St_Barthelemy",e.AmericaStJohns="America/St_Johns",e.AmericaStKitts="America/St_Kitts",e.AmericaStLucia="America/St_Lucia",e.AmericaStThomas="America/St_Thomas",e.AmericaStVincent="America/St_Vincent",e.AmericaSwiftCurrent="America/Swift_Current",e.AmericaTegucigalpa="America/Tegucigalpa",e.AmericaThule="America/Thule",e.AmericaThunderBay="America/Thunder_Bay",e.AmericaTijuana="America/Tijuana",e.AmericaToronto="America/Toronto",e.AmericaTortola="America/Tortola",e.AmericaVancouver="America/Vancouver",e.AmericaWhitehorse="America/Whitehorse",e.AmericaWinnipeg="America/Winnipeg",e.AmericaYakutat="America/Yakutat",e.AmericaYellowknife="America/Yellowknife",e.AntarcticaCasey="Antarctica/Casey",e.AntarcticaDavis="Antarctica/Davis",e.AntarcticaDumontDUrville="Antarctica/DumontDUrville",e.AntarcticaMacquarie="Antarctica/Macquarie",e.AntarcticaMawson="Antarctica/Mawson",e.AntarcticaMcMurdo="Antarctica/McMurdo",e.AntarcticaPalmer="Antarctica/Palmer",e.AntarcticaRothera="Antarctica/Rothera",e.AntarcticaSyowa="Antarctica/Syowa",e.AntarcticaTroll="Antarctica/Troll",e.AntarcticaVostok="Antarctica/Vostok",e.ArcticLongyearbyen="Arctic/Longyearbyen",e.AsiaAden="Asia/Aden",e.AsiaAlmaty="Asia/Almaty",e.AsiaAmman="Asia/Amman",e.AsiaAnadyr="Asia/Anadyr",e.AsiaAqtau="Asia/Aqtau",e.AsiaAqtobe="Asia/Aqtobe",e.AsiaAshgabat="Asia/Ashgabat",e.AsiaBaghdad="Asia/Baghdad",e.AsiaBahrain="Asia/Bahrain",e.AsiaBaku="Asia/Baku",e.AsiaBangkok="Asia/Bangkok",e.AsiaBarnaul="Asia/Barnaul",e.AsiaBeirut="Asia/Beirut",e.AsiaBishkek="Asia/Bishkek",e.AsiaBrunei="Asia/Brunei",e.AsiaChita="Asia/Chita",e.AsiaChoibalsan="Asia/Choibalsan",e.AsiaColombo="Asia/Colombo",e.AsiaDamascus="Asia/Damascus",e.AsiaDhaka="Asia/Dhaka",e.AsiaDili="Asia/Dili",e.AsiaDubai="Asia/Dubai",e.AsiaDushanbe="Asia/Dushanbe",e.AsiaFamagusta="Asia/Famagusta",e.AsiaGaza="Asia/Gaza",e.AsiaHebron="Asia/Hebron",e.AsiaHoChiMinh="Asia/Ho_Chi_Minh",e.AsiaHongKong="Asia/Hong_Kong",e.AsiaHovd="Asia/Hovd",e.AsiaIrkutsk="Asia/Irkutsk",e.AsiaJakarta="Asia/Jakarta",e.AsiaJayapura="Asia/Jayapura",e.AsiaJerusalem="Asia/Jerusalem",e.AsiaKabul="Asia/Kabul",e.AsiaKamchatka="Asia/Kamchatka",e.AsiaKarachi="Asia/Karachi",e.AsiaKathmandu="Asia/Kathmandu",e.AsiaKhandyga="Asia/Khandyga",e.AsiaKolkata="Asia/Kolkata",e.AsiaKrasnoyarsk="Asia/Krasnoyarsk",e.AsiaKualaLumpur="Asia/Kuala_Lumpur",e.AsiaKuching="Asia/Kuching",e.AsiaKuwait="Asia/Kuwait",e.AsiaMacau="Asia/Macau",e.AsiaMagadan="Asia/Magadan",e.AsiaMakassar="Asia/Makassar",e.AsiaManila="Asia/Manila",e.AsiaMuscat="Asia/Muscat",e.AsiaNicosia="Asia/Nicosia",e.AsiaNovokuznetsk="Asia/Novokuznetsk",e.AsiaNovosibirsk="Asia/Novosibirsk",e.AsiaOmsk="Asia/Omsk",e.AsiaOral="Asia/Oral",e.AsiaPhnomPenh="Asia/Phnom_Penh",e.AsiaPontianak="Asia/Pontianak",e.AsiaPyongyang="Asia/Pyongyang",e.AsiaQatar="Asia/Qatar",e.AsiaQyzylorda="Asia/Qyzylorda",e.AsiaRangoon="Asia/Rangoon",e.AsiaRiyadh="Asia/Riyadh",e.AsiaSakhalin="Asia/Sakhalin",e.AsiaSamarkand="Asia/Samarkand",e.AsiaSeoul="Asia/Seoul",e.AsiaShanghai="Asia/Shanghai",e.AsiaSingapore="Asia/Singapore",e.AsiaSrednekolymsk="Asia/Srednekolymsk",e.AsiaTaipei="Asia/Taipei",e.AsiaTashkent="Asia/Tashkent",e.AsiaTbilisi="Asia/Tbilisi",e.AsiaTehran="Asia/Tehran",e.AsiaThimphu="Asia/Thimphu",e.AsiaTokyo="Asia/Tokyo",e.AsiaTomsk="Asia/Tomsk",e.AsiaUlaanbaatar="Asia/Ulaanbaatar",e.AsiaUrumqi="Asia/Urumqi",e.AsiaUstNera="Asia/Ust-Nera",e.AsiaVientiane="Asia/Vientiane",e.AsiaVladivostok="Asia/Vladivostok",e.AsiaYakutsk="Asia/Yakutsk",e.AsiaYekaterinburg="Asia/Yekaterinburg",e.AsiaYerevan="Asia/Yerevan",e.AtlanticAzores="Atlantic/Azores",e.AtlanticBermuda="Atlantic/Bermuda",e.AtlanticCanary="Atlantic/Canary",e.AtlanticCapeVerde="Atlantic/Cape_Verde",e.AtlanticFaroe="Atlantic/Faroe",e.AtlanticMadeira="Atlantic/Madeira",e.AtlanticReykjavik="Atlantic/Reykjavik",e.AtlanticSouthGeorgia="Atlantic/South_Georgia",e.AtlanticStHelena="Atlantic/St_Helena",e.AtlanticStanley="Atlantic/Stanley",e.AustraliaAdelaide="Australia/Adelaide",e.AustraliaBrisbane="Australia/Brisbane",e.AustraliaBrokenHill="Australia/Broken_Hill",e.AustraliaCanberra="Australia/Canberra",e.AustraliaCurrie="Australia/Currie",e.AustraliaDarwin="Australia/Darwin",e.AustraliaEucla="Australia/Eucla",e.AustraliaHobart="Australia/Hobart",e.AustraliaLindeman="Australia/Lindeman",e.AustraliaLordHowe="Australia/Lord_Howe",e.AustraliaMelbourne="Australia/Melbourne",e.AustraliaPerth="Australia/Perth",e.AustraliaSydney="Australia/Sydney",e.EuropeAmsterdam="Europe/Amsterdam",e.EuropeAndorra="Europe/Andorra",e.EuropeAthens="Europe/Athens",e.EuropeBelgrade="Europe/Belgrade",e.EuropeBerlin="Europe/Berlin",e.EuropeBratislava="Europe/Bratislava",e.EuropeBrussels="Europe/Brussels",e.EuropeBucharest="Europe/Bucharest",e.EuropeBudapest="Europe/Budapest",e.EuropeBusingen="Europe/Busingen",e.EuropeChisinau="Europe/Chisinau",e.EuropeCopenhagen="Europe/Copenhagen",e.EuropeDublin="Europe/Dublin",e.EuropeGibraltar="Europe/Gibraltar",e.EuropeGuernsey="Europe/Guernsey",e.EuropeHelsinki="Europe/Helsinki",e.EuropeIsleOfMan="Europe/Isle_of_Man",e.EuropeIstanbul="Europe/Istanbul",e.EuropeJersey="Europe/Jersey",e.EuropeKaliningrad="Europe/Kaliningrad",e.EuropeKiev="Europe/Kiev",e.EuropeKirov="Europe/Kirov",e.EuropeLisbon="Europe/Lisbon",e.EuropeLjubljana="Europe/Ljubljana",e.EuropeLondon="Europe/London",e.EuropeLuxembourg="Europe/Luxembourg",e.EuropeMadrid="Europe/Madrid",e.EuropeMalta="Europe/Malta",e.EuropeMariehamn="Europe/Mariehamn",e.EuropeMinsk="Europe/Minsk",e.EuropeMonaco="Europe/Monaco",e.EuropeMoscow="Europe/Moscow",e.EuropeOslo="Europe/Oslo",e.EuropeParis="Europe/Paris",e.EuropePodgorica="Europe/Podgorica",e.EuropePrague="Europe/Prague",e.EuropeRiga="Europe/Riga",e.EuropeRome="Europe/Rome",e.EuropeSamara="Europe/Samara",e.EuropeSanMarino="Europe/San_Marino",e.EuropeSarajevo="Europe/Sarajevo",e.EuropeSimferopol="Europe/Simferopol",e.EuropeSkopje="Europe/Skopje",e.EuropeSofia="Europe/Sofia",e.EuropeStockholm="Europe/Stockholm",e.EuropeTallinn="Europe/Tallinn",e.EuropeTirane="Europe/Tirane",e.EuropeUzhgorod="Europe/Uzhgorod",e.EuropeVaduz="Europe/Vaduz",e.EuropeVatican="Europe/Vatican",e.EuropeVienna="Europe/Vienna",e.EuropeVilnius="Europe/Vilnius",e.EuropeVolgograd="Europe/Volgograd",e.EuropeWarsaw="Europe/Warsaw",e.EuropeZagreb="Europe/Zagreb",e.EuropeZaporozhye="Europe/Zaporozhye",e.EuropeZurich="Europe/Zurich",e.GMT="GMT",e.IndianAntananarivo="Indian/Antananarivo",e.IndianChagos="Indian/Chagos",e.IndianChristmas="Indian/Christmas",e.IndianCocos="Indian/Cocos",e.IndianComoro="Indian/Comoro",e.IndianKerguelen="Indian/Kerguelen",e.IndianMahe="Indian/Mahe",e.IndianMaldives="Indian/Maldives",e.IndianMauritius="Indian/Mauritius",e.IndianMayotte="Indian/Mayotte",e.IndianReunion="Indian/Reunion",e.PacificApia="Pacific/Apia",e.PacificAuckland="Pacific/Auckland",e.PacificBougainville="Pacific/Bougainville",e.PacificChatham="Pacific/Chatham",e.PacificChuuk="Pacific/Chuuk",e.PacificEaster="Pacific/Easter",e.PacificEfate="Pacific/Efate",e.PacificEnderbury="Pacific/Enderbury",e.PacificFakaofo="Pacific/Fakaofo",e.PacificFiji="Pacific/Fiji",e.PacificFunafuti="Pacific/Funafuti",e.PacificGalapagos="Pacific/Galapagos",e.PacificGambier="Pacific/Gambier",e.PacificGuadalcanal="Pacific/Guadalcanal",e.PacificGuam="Pacific/Guam",e.PacificHonolulu="Pacific/Honolulu",e.PacificJohnston="Pacific/Johnston",e.PacificKiritimati="Pacific/Kiritimati",e.PacificKosrae="Pacific/Kosrae",e.PacificKwajalein="Pacific/Kwajalein",e.PacificMajuro="Pacific/Majuro",e.PacificMarquesas="Pacific/Marquesas",e.PacificMidway="Pacific/Midway",e.PacificNauru="Pacific/Nauru",e.PacificNiue="Pacific/Niue",e.PacificNorfolk="Pacific/Norfolk",e.PacificNoumea="Pacific/Noumea",e.PacificPagoPago="Pacific/Pago_Pago",e.PacificPalau="Pacific/Palau",e.PacificPitcairn="Pacific/Pitcairn",e.PacificPohnpei="Pacific/Pohnpei",e.PacificPonape="Pacific/Ponape",e.PacificPortMoresby="Pacific/Port_Moresby",e.PacificRarotonga="Pacific/Rarotonga",e.PacificSaipan="Pacific/Saipan",e.PacificSamoa="Pacific/Samoa",e.PacificTahiti="Pacific/Tahiti",e.PacificTarawa="Pacific/Tarawa",e.PacificTongatapu="Pacific/Tongatapu",e.PacificTruk="Pacific/Truk",e.PacificWake="Pacific/Wake",e.PacificWallis="Pacific/Wallis",e.PacificYap="Pacific/Yap"})(s||(s={}));var i;(function(e){e.UTC_MINUS_12="UTC-12",e.UTC_MINUS_11_30="UTC-11:30",e.UTC_MINUS_11="UTC-11",e.UTC_MINUS_10_30="UTC-10:30",e.UTC_MINUS_10="UTC-10",e.UTC_MINUS_9_30="UTC-9:30",e.UTC_MINUS_9="UTC-09",e.UTC_MINUS_8_45="UTC-8:45",e.UTC_MINUS_8="UTC-08",e.UTC_MINUS_7="UTC-07",e.UTC_MINUS_6_30="UTC-6:30",e.UTC_MINUS_6="UTC-06",e.UTC_MINUS_5_45="UTC-5:45",e.UTC_MINUS_5_30="UTC-5:30",e.UTC_MINUS_5="UTC-05",e.UTC_MINUS_4_30="UTC-4:30",e.UTC_MINUS_4="UTC-04",e.UTC_MINUS_3_30="UTC-3:30",e.UTC_MINUS_3="UTC-03",e.UTC_MINUS_2_30="UTC-2:30",e.UTC_MINUS_2="UTC-02",e.UTC_MINUS_1="UTC-01",e.UTC_0="UTC+00",e.UTC_PLUS_1="UTC+01",e.UTC_PLUS_2="UTC+02",e.UTC_PLUS_3="UTC+03",e.UTC_PLUS_3_30="UTC+3:30",e.UTC_PLUS_4="UTC+04",e.UTC_PLUS_4_30="UTC+4:30",e.UTC_PLUS_5="UTC+05",e.UTC_PLUS_5_30="UTC+5:30",e.UTC_PLUS_5_45="UTC+5:45",e.UTC_PLUS_6="UTC+06",e.UTC_PLUS_6_30="UTC+6:30",e.UTC_PLUS_7="UTC+07",e.UTC_PLUS_8="UTC+08",e.UTC_PLUS_8_45="UTC+8:45",e.UTC_PLUS_9="UTC+09",e.UTC_PLUS_9_30="UTC+9:30",e.UTC_PLUS_10="UTC+10",e.UTC_PLUS_10_30="UTC+10:30",e.UTC_PLUS_11="UTC+11",e.UTC_PLUS_11_30="UTC+11:30",e.UTC_PLUS_12="UTC+12",e.UTC_PLUS_12_45="UTC+12:45",e.UTC_PLUS_13="UTC+13",e.UTC_PLUS_13_45="UTC+13:45",e.UTC_PLUS_14="UTC+14"})(i||(i={}));var n;(function(e){e.AcreTime="ACT",e.AfghanistanTime="AFT",e.AIXCentralEuropeanTime="DFT",e.AlaskaDaylightTime="AKDT",e.AlaskaStandardTime="AKST",e.AlmaAtaTime="ALMT",e.AmazonSummerTime="AMST",e.AmazonTime="AMT",e.AnadyrTime="ANAT",e.AqtobeTime="AQTT",e.ArabiaStandardTime="AST",e.ArgentinaTime="ART",e.ArmeniaTime="AMT",e.ASEANCommonTime="ASEAN",e.AtlanticDaylightTime="ADT",e.AtlanticStandardTime="AST",e.AustralianCentralDaylightSavingTime="ACDT",e.AustralianCentralStandardTime="ACST",e.AustralianCentralWesternStandardTime="ACWST",e.AustralianEasternDaylightSavingTime="AEDT",e.AustralianEasternStandardTime="AEST",e.AustralianEasternTime="AET",e.AustralianWesternStandardTime="AWST",e.AzerbaijanTime="AZT",e.AzoresStandardTime="AZOT",e.AzoresSummerTime="AZOST",e.BakerIslandTime="BIT",e.BangladeshStandardTime="BST",e.BhutanTime="BTT",e.BoliviaTime="BOT",e.BougainvilleStandardTime="BST",e.BrasiliaSummerTime="BRST",e.BrasiliaTime="BRT",e.BritishIndianOceanTime="BIOT",e.BritishSummerTime="BST",e.BruneiTime="BNT",e.CapeVerdeTime="CVT",e.CentralAfricaTime="CAT",e.CentralDaylightTime="CDT",e.CentralEuropeanSummerTime="CEST",e.CentralEuropeanTime="CET",e.CentralIndonesiaTime="WITA",e.CentralStandardTime="CST",e.CentralTime="CT",e.CentralWesternStandardTime="CWST",e.ChamorroStandardTime="CHST",e.ChathamDaylightTime="CHADT",e.ChathamStandardTime="CHAST",e.ChileStandardTime="CLT",e.ChileSummerTime="CLST",e.ChinaStandardTime="CST",e.ChoibalsanStandardTime="CHOT",e.ChoibalsanSummerTime="CHOST",e.ChristmasIslandTime="CXT",e.ChuukTime="CHUT",e.ClipptertonIslandStandardTime="CIST",e.CocosIslandsTime="CCT",e.ColombiaSummerTime="COST",e.ColombiaTime="COT",e.CookIslandTime="CKT",e.CoordinatedUniversalTime="UTC",e.CubaDaylightTime="CDT",e.CubaStandardTime="CST",e.DavisTime="DAVT",e.DumontDUrvilleTime="DDUT",e.EastAfricaTime="EAT",e.EasterIslandStandardTime="EAST",e.EasterIslandSummerTime="EASST",e.EasternCaribbeanTime="ECT",e.EasternDaylightTime="EDT",e.EasternEuropeanSummerTime="EEST",e.EasternEuropeanTime="EET",e.EasternGreenlandSummerTime="EGST",e.EasternGreenlandTime="EGT",e.EasternIndonesianTime="WIT",e.EasternStandardTime="EST",e.EasternTime="ET",e.EcuadorTime="ECT",e.FalklandIslandsSummerTime="FKST",e.FalklandIslandsTime="FKT",e.FernandoDeNoronhaTime="FNT",e.FijiTime="FJT",e.FrenchGuianaTime="GFT",e.FrenchSouthernAndAntarcticTime="TFT",e.FurtherEasternEuropeanTime="FET",e.GalapagosTime="GALT",e.GambierIslandTime="GIT",e.GambierIslandsTime="GAMT",e.GeorgiaStandardTime="GET",e.GilbertIslandTime="GILT",e.GreenwichMeanTime="GMT",e.GulfStandardTime="GST",e.GuyanaTime="GYT",e.HawaiiAleutianDaylightTime="HDT",e.HawaiiAleutianStandardTime="HST",e.HeardAndMcDonaldIslandsTime="HMT",e.HeureAvanceeDEuropeCentraleTime="HAEC",e.HongKongTime="HKT",e.HovdSummerTime="HOVST",e.HovdTime="HOVT",e.IndianOceanTime="IOT",e.IndianStandardTime="IST",e.IndochinaTime="ICT",e.InternationalDayLineWestTime="IDLW",e.IranDaylightTime="IRDT",e.IranStandardTime="IRST",e.IrishStandardTime="IST",e.IrkutskSummerTime="IRKST",e.IrkutskTime="IRKT",e.IsraelDaylightTime="IDT",e.IsraelStandardTime="IST",e.JapanStandardTime="JST",e.KaliningradTime="KALT",e.KamchatkaTime="KAMT",e.KoreaStandardTime="KST",e.KosraeTime="KOST",e.KrasnoyarskSummerTime="KRAST",e.KrasnoyarskTime="KRAT",e.KyrgyzstanTime="KGT",e.LineIslandsTime="LINT",e.KazakhstanStandardTime="KAST",e.LordHoweStandardTime="LHST",e.LordHoweSummerTime="LHST",e.MacquarieIslandStationTime="MIST",e.MagadanTime="MAGT",e.MalaysiaStandardTime="MST",e.MalaysiaTime="MYT",e.MaldivesTime="MVT",e.MarquesasIslandsTime="MART",e.MarshallIslandsTime="MHT",e.MauritiusTime="MUT",e.MawsonStationTime="MAWT",e.MiddleEuropeanSummerTime="MEDT",e.MiddleEuropeanTime="MET",e.MoscowTime="MSK",e.MountainDaylightTime="MDT",e.MountainStandardTime="MST",e.MyanmarStandardTime="MMT",e.NepalTime="NCT",e.NauruTime="NRT",e.NewCaledoniaTime="NCT",e.NewZealandDaylightTime="NZDT",e.NewZealandStandardTime="NZST",e.NewfoundlandDaylightTime="NDT",e.NewfoundlandStandardTime="NST",e.NewfoundlandTime="NT",e.NiueTime="NUT",e.NorfolkIslandTime="NFT",e.NovosibirskTime="NOVT",e.OmskTime="OMST",e.OralTime="ORAT",e.PacificDaylightTime="PDT",e.PacificStandardTime="PST",e.PakistanStandardTime="PKT",e.PalauTime="PWT",e.PapuaNewGuineaTime="PGT",e.ParaguaySummerTime="PYST",e.ParaguayTime="PYT",e.PeruTime="PET",e.PhilippineStandardTime="PHST",e.PhilippineTime="PHT",e.PhoenixIslandTime="PHOT",e.PitcairnTime="PST",e.PohnpeiStandardTime="PONT",e.ReunionTime="RET",e.RotheraResearchStationTime="ROTT",e.SaintPierreAndMiquelonDaylightTime="PMDT",e.SaintPierreAndMiquelonStandardTime="PMST",e.SakhalinIslandTime="SAKT",e.SamaraTime="SAMT",e.SamoaDaylightTime="SDT",e.SamoaStandardTime="SST",e.SeychellesTime="SCT",e.ShowaStationTime="SYOT",e.SingaporeStandardTime="SST",e.SingaporeTime="SGT",e.SolomonIslandsTime="SBT",e.SouthAfricanStandardTime="SAST",e.SouthGeorgiaAndTheSouthSandwichIslandsTime="GST",e.SrednekolymskTime="SRET",e.SriLankaStandardTime="SLST",e.SurinameTime="SRT",e.TahitiTime="TAHT",e.TajikistanTime="TJT",e.ThailandStandardTime="THA",e.TimorLesteTime="TLT",e.TokelauTime="TKT",e.TongaTime="TOT",e.TurkeyTime="TRT",e.TurkmenistanTime="TMT",e.TuvaluTime="TVT",e.UlaanbaatarStandardTime="ULAT",e.UlaanbaatarSummerTime="ULAST",e.UruguayStandardTime="UYT",e.UruguaySummerTime="UYST",e.UzbekistanTime="UZT",e.VanuatuTime="VUT",e.VenezuelaStandardTime="VET",e.VladivostokTime="VLAT",e.VolgogradTime="VOLT",e.VostokStationTime="VOST",e.WakeIslandTime="WAKT",e.WestAfricaSummerTime="WAST",e.WestAfricaTime="WAT",e.WestGreenlandSummerTime="WGST",e.WestGreenlandTime="WGT",e.WestKazakhstanTime="WKT",e.WesternEuropeanSummerTime="WEDT",e.WesternEuropeanTime="WET",e.WesternIndonesianTime="WIT",e.WesternStandardTime="WST",e.YakutskTime="YAKT",e.YekaterinburgTime="YEKT"})(n||(n={}));var p0={dst:{is:!1,uses:!0},id:n.AcreTime,name:"Acre Time",offset:i.UTC_MINUS_5},C0={dst:{is:!1,uses:!0},id:n.AfghanistanTime,name:"Afghanistan Time",offset:i.UTC_PLUS_4_30},E0={dst:{is:!1,uses:!0},id:n.AIXCentralEuropeanTime,name:"AIX Central European Time",offset:i.UTC_PLUS_1},_0={dst:{is:!0,uses:!0},id:n.AlaskaDaylightTime,name:"Alaska Daylight Time",offset:i.UTC_MINUS_8},S0={dst:{is:!1,uses:!0},id:n.AlaskaStandardTime,name:"Alaska Standard Time",offset:i.UTC_MINUS_9},I0={dst:{is:!1,uses:!0},id:n.AlmaAtaTime,name:"Alma-Ata Time",offset:i.UTC_PLUS_6},v0={dst:{is:!1,uses:!0},id:n.AmazonSummerTime,name:"Amazon Summer Time",offset:i.UTC_MINUS_3},b0={dst:{is:!1,uses:!0},id:n.AmazonTime,name:"Amazon Time",offset:i.UTC_MINUS_4},y0={dst:{is:!1,uses:!0},id:n.AnadyrTime,name:"Anadyr Time",offset:i.UTC_PLUS_12},B0={dst:{is:!1,uses:!0},id:n.AqtobeTime,name:"Aqtobe Time",offset:i.UTC_PLUS_5},D0={dst:{is:!1,uses:!0},id:n.ArabiaStandardTime,name:"Arabia Standard Time",offset:i.UTC_PLUS_3},U0={dst:{is:!1,uses:!0},id:n.ArgentinaTime,name:"Argentina Time",offset:i.UTC_MINUS_3},P0={dst:{is:!1,uses:!0},id:n.ArmeniaTime,name:"Armenia Time",offset:i.UTC_PLUS_4},N0={dst:{is:!0,uses:!0},id:n.AtlanticDaylightTime,name:"Atlantic Daylight Time",offset:i.UTC_MINUS_3},M0={dst:{is:!1,uses:!0},id:n.AtlanticStandardTime,name:"Atlantic Standard Time",offset:i.UTC_MINUS_4},F0={dst:{is:!0,uses:!0},id:n.AustralianCentralDaylightSavingTime,name:"Australian Central Daylight Saving Time",offset:i.UTC_PLUS_10_30},k0={dst:{is:!1,uses:!0},id:n.AustralianCentralStandardTime,name:"Australian Central Standard Time",offset:i.UTC_PLUS_9_30},L0={dst:{is:!1,uses:!0},id:n.AustralianCentralWesternStandardTime,name:"Australian Central Western Standard Time",offset:i.UTC_PLUS_8_45},z0={dst:{is:!0,uses:!0},id:n.AustralianEasternDaylightSavingTime,name:"Australian Eastern Daylight Saving Time",offset:i.UTC_PLUS_11},R0={dst:{is:!1,uses:!0},id:n.AustralianEasternStandardTime,name:"Australian Eastern Standard Time",offset:i.UTC_PLUS_10},x0={dst:{is:!1,uses:!0},id:n.AustralianEasternTime,name:"Australian Eastern Time",offset:i.UTC_PLUS_10},w0={dst:{is:!1,uses:!0},id:n.AustralianWesternStandardTime,name:"Australian Western Standard Time",offset:i.UTC_PLUS_8},q0={dst:{is:!1,uses:!0},id:n.AzerbaijanTime,name:"Azerbaijan Time",offset:i.UTC_PLUS_4},G0={dst:{is:!1,uses:!0},id:n.AzoresStandardTime,name:"Azores Standard Time",offset:i.UTC_MINUS_1},K0={dst:{is:!0,uses:!0},id:n.AzoresSummerTime,name:"Azores Summer Time",offset:i.UTC_0},O0={dst:{is:!1,uses:!0},id:n.BakerIslandTime,name:"Baker Island Time",offset:i.UTC_MINUS_12},H0={dst:{is:!1,uses:!0},id:n.BangladeshStandardTime,name:"Bangladesh Standard Time",offset:i.UTC_PLUS_6},j0={dst:{is:!1,uses:!0},id:n.BhutanTime,name:"Bhutan Time",offset:i.UTC_PLUS_6},$0={dst:{is:!1,uses:!0},id:n.BoliviaTime,name:"Bolivia Time",offset:i.UTC_MINUS_4},W0={dst:{is:!1,uses:!0},id:n.BougainvilleStandardTime,name:"Bougainville Standard Time",offset:i.UTC_PLUS_11},V0={dst:{is:!0,uses:!0},id:n.BrasiliaSummerTime,name:"Brasilia Summer Time",offset:i.UTC_MINUS_2},Y0={dst:{is:!1,uses:!0},id:n.BrasiliaTime,name:"Brasilia Time",offset:i.UTC_MINUS_3},Z0={dst:{is:!1,uses:!0},id:n.BritishIndianOceanTime,name:"British Indian Ocean Time",offset:i.UTC_PLUS_6},J0={dst:{is:!0,uses:!0},id:n.BritishSummerTime,name:"British Summer Time",offset:i.UTC_PLUS_1},Q0={dst:{is:!1,uses:!0},id:n.BruneiTime,name:"Brunei Time",offset:i.UTC_PLUS_8},X0={dst:{is:!1,uses:!0},id:n.CapeVerdeTime,name:"Cape Verde Time",offset:i.UTC_MINUS_1},el={dst:{is:!1,uses:!0},id:n.CentralAfricaTime,name:"Central Africa Time",offset:i.UTC_PLUS_2},al={dst:{is:!0,uses:!0},id:n.CentralDaylightTime,name:"Central Daylight Time",offset:i.UTC_MINUS_5},il={dst:{is:!0,uses:!0},id:n.CentralEuropeanSummerTime,name:"Central European Summer Time",offset:i.UTC_PLUS_2},nl={dst:{is:!1,uses:!0},id:n.CentralEuropeanTime,name:"Central European Time",offset:i.UTC_PLUS_1},sl={dst:{is:!1,uses:!0},id:n.CentralIndonesiaTime,name:"Central Indonesia Time",offset:i.UTC_PLUS_8},ul={dst:{is:!1,uses:!0},id:n.CentralStandardTime,name:"Central Standard Time",offset:i.UTC_MINUS_6},tl={dst:{is:!1,uses:!0},id:n.CentralTime,name:"Central Time",offset:i.UTC_MINUS_5},rl={dst:{is:!1,uses:!0},id:n.CentralWesternStandardTime,name:"Central Western Standard Time",offset:i.UTC_PLUS_8_45},ol={dst:{is:!1,uses:!0},id:n.ChamorroStandardTime,name:"Chamorro Standard Time",offset:i.UTC_PLUS_10},ll={dst:{is:!0,uses:!0},id:n.ChathamDaylightTime,name:"Chatham Daylight Time",offset:i.UTC_PLUS_13_45},ml={dst:{is:!1,uses:!0},id:n.ChathamStandardTime,name:"Chatham Standard Time",offset:i.UTC_PLUS_12_45},dl={dst:{is:!1,uses:!0},id:n.ChileStandardTime,name:"Chile Standard Time",offset:i.UTC_MINUS_4},cl={dst:{is:!0,uses:!0},id:n.ChileSummerTime,name:"Chile Summer Time",offset:i.UTC_MINUS_3},Al={dst:{is:!1,uses:!0},id:n.ChinaStandardTime,name:"China Standard Time",offset:i.UTC_PLUS_8},gl={dst:{is:!1,uses:!0},id:n.ChoibalsanStandardTime,name:"Choibalsan Standard Time",offset:i.UTC_PLUS_8},Tl={dst:{is:!0,uses:!0},id:n.ChoibalsanSummerTime,name:"Choibalsan Summer Time",offset:i.UTC_PLUS_9},hl={dst:{is:!1,uses:!0},id:n.ChristmasIslandTime,name:"Christmas Island Time",offset:i.UTC_PLUS_7},fl={dst:{is:!1,uses:!0},id:n.ChuukTime,name:"Chuuk Time",offset:i.UTC_PLUS_10},pl={dst:{is:!1,uses:!0},id:n.ClipptertonIslandStandardTime,name:"Clippterton Island Standard Time",offset:i.UTC_MINUS_8},Cl={dst:{is:!1,uses:!0},id:n.CocosIslandsTime,name:"Cocos Standard Time",offset:i.UTC_PLUS_6_30},El={dst:{is:!0,uses:!0},id:n.ColombiaSummerTime,name:"Colombia Summer Time",offset:i.UTC_MINUS_4},_l={dst:{is:!1,uses:!0},id:n.ColombiaTime,name:"Colombia Time",offset:i.UTC_MINUS_5},Sl={dst:{is:!1,uses:!0},id:n.CookIslandTime,name:"Cook Island Time",offset:i.UTC_MINUS_10},Il={dst:{is:!1,uses:!0},id:n.CoordinatedUniversalTime,name:"Coordinated Universal Time",offset:i.UTC_0},vl={dst:{is:!0,uses:!0},id:n.CubaDaylightTime,name:"Cuba Daylight Time",offset:i.UTC_MINUS_4},bl={dst:{is:!1,uses:!0},id:n.CubaStandardTime,name:"Cuba Standard Time",offset:i.UTC_MINUS_5},yl={dst:{is:!1,uses:!0},id:n.DavisTime,name:"Davis Time",offset:i.UTC_PLUS_7},Bl={dst:{is:!1,uses:!0},id:n.DumontDUrvilleTime,name:"Dumont D'Urville Time",offset:i.UTC_PLUS_10},Dl={dst:{is:!1,uses:!0},id:n.EastAfricaTime,name:"East Africa Time",offset:i.UTC_PLUS_3},Ul={dst:{is:!1,uses:!0},id:n.EasterIslandStandardTime,name:"Easter Island Standard Time",offset:i.UTC_MINUS_6},Pl={dst:{is:!0,uses:!0},id:n.EasterIslandSummerTime,name:"Easter Island Summer Time",offset:i.UTC_MINUS_5},Nl={dst:{is:!1,uses:!0},id:n.EasternCaribbeanTime,name:"Eastern Caribbean Time",offset:i.UTC_MINUS_4},Ml={dst:{is:!0,uses:!0},id:n.EasternDaylightTime,name:"Eastern Daylight Time",offset:i.UTC_MINUS_4},Fl={dst:{is:!0,uses:!0},id:n.EasternEuropeanSummerTime,name:"Eastern European Summer Time",offset:i.UTC_PLUS_3},kl={dst:{is:!1,uses:!0},id:n.EasternEuropeanTime,name:"Eastern European Time",offset:i.UTC_PLUS_2},Ll={dst:{is:!0,uses:!0},id:n.EasternGreenlandSummerTime,name:"Eastern Greenland Summer Time",offset:i.UTC_0},zl={dst:{is:!1,uses:!0},id:n.EasternGreenlandTime,name:"Eastern Greenland Time",offset:i.UTC_MINUS_1},Rl={dst:{is:!1,uses:!0},id:n.EasternIndonesianTime,name:"Eastern Indonesian Time",offset:i.UTC_PLUS_9},xl={dst:{is:!1,uses:!0},id:n.EasternStandardTime,name:"Eastern Standard Time",offset:i.UTC_MINUS_5},wl={dst:{is:!1,uses:!0},id:n.EasternTime,name:"Eastern Time",offset:i.UTC_MINUS_5},ql={dst:{is:!1,uses:!0},id:n.EcuadorTime,name:"Ecuador Time",offset:i.UTC_MINUS_5},Gl={dst:{is:!0,uses:!0},id:n.FalklandIslandsSummerTime,name:"Falkland Islands Summer Time",offset:i.UTC_MINUS_3},Kl={dst:{is:!1,uses:!0},id:n.FalklandIslandsTime,name:"Falkland Islands Time",offset:i.UTC_MINUS_4},Ol={dst:{is:!1,uses:!0},id:n.FernandoDeNoronhaTime,name:"Fernando de Noronha Time",offset:i.UTC_MINUS_2},Hl={dst:{is:!1,uses:!0},id:n.FijiTime,name:"Fiji Time",offset:i.UTC_PLUS_12},jl={dst:{is:!1,uses:!0},id:n.FrenchGuianaTime,name:"French Guiana Time",offset:i.UTC_MINUS_3},$l={dst:{is:!1,uses:!0},id:n.FrenchSouthernAndAntarcticTime,name:"French Southern and Antarctic Time",offset:i.UTC_PLUS_5},Wl={dst:{is:!1,uses:!0},id:n.FurtherEasternEuropeanTime,name:"Further Eastern European Time",offset:i.UTC_PLUS_3},Vl={dst:{is:!1,uses:!0},id:n.GalapagosTime,name:"Galapagos Time",offset:i.UTC_MINUS_6},Yl={dst:{is:!1,uses:!0},id:n.GambierIslandTime,name:"Gambier Island Time",offset:i.UTC_MINUS_9},Zl={dst:{is:!1,uses:!0},id:n.GambierIslandsTime,name:"Gambier Islands Time",offset:i.UTC_MINUS_9},Jl={dst:{is:!1,uses:!0},id:n.GeorgiaStandardTime,name:"Georgia Standard Time",offset:i.UTC_PLUS_4},Ql={dst:{is:!1,uses:!0},id:n.GilbertIslandTime,name:"Gilbert Island Time",offset:i.UTC_PLUS_12},Xl={dst:{is:!1,uses:!0},id:n.GreenwichMeanTime,name:"Greenwich Mean Time",offset:i.UTC_0},em={dst:{is:!1,uses:!0},id:n.GulfStandardTime,name:"Gulf Standard Time",offset:i.UTC_PLUS_4},am={dst:{is:!1,uses:!0},id:n.GuyanaTime,name:"Guyana Time",offset:i.UTC_MINUS_4},im={dst:{is:!0,uses:!0},id:n.HawaiiAleutianDaylightTime,name:"Hawaii-Aleutian Daylight Time",offset:i.UTC_MINUS_9},nm={dst:{is:!1,uses:!0},id:n.HawaiiAleutianStandardTime,name:"Hawaii-Aleutian Standard Time",offset:i.UTC_MINUS_10},sm={dst:{is:!1,uses:!0},id:n.HeardAndMcDonaldIslandsTime,name:"Heard and McDonald Islands Time",offset:i.UTC_PLUS_5},um={dst:{is:!1,uses:!0},id:n.HongKongTime,name:"Hong Kong Time",offset:i.UTC_PLUS_8},tm={dst:{is:!0,uses:!0},id:n.HovdSummerTime,name:"Hovd Summer Time",offset:i.UTC_PLUS_8},rm={dst:{is:!1,uses:!0},id:n.HovdTime,name:"Hovd Time",offset:i.UTC_PLUS_7},om={dst:{is:!1,uses:!0},id:n.IndianOceanTime,name:"Indian Ocean Time",offset:i.UTC_PLUS_3},lm={dst:{is:!1,uses:!0},id:n.IndianStandardTime,name:"Indian Standard Time",offset:i.UTC_PLUS_5_30},mm={dst:{is:!1,uses:!0},id:n.IndochinaTime,name:"Indochina Time",offset:i.UTC_PLUS_7},dm={dst:{is:!1,uses:!0},id:n.InternationalDayLineWestTime,name:"International Day Line West Time",offset:i.UTC_MINUS_12},cm={dst:{is:!0,uses:!0},id:n.IranDaylightTime,name:"Iran Daylight Time",offset:i.UTC_PLUS_4_30},Am={dst:{is:!1,uses:!0},id:n.IranStandardTime,name:"Iran Standard Time",offset:i.UTC_PLUS_3_30},gm={dst:{is:!1,uses:!0},id:n.IrishStandardTime,name:"Irish Standard Time",offset:i.UTC_PLUS_1},Tm={dst:{is:!1,uses:!0},id:n.IrkutskTime,name:"Irkutsk Time",offset:i.UTC_PLUS_8},hm={dst:{is:!0,uses:!0},id:n.IsraelDaylightTime,name:"Israel Daylight Time",offset:i.UTC_PLUS_3},fm={dst:{is:!1,uses:!0},id:n.IsraelStandardTime,name:"Israel Standard Time",offset:i.UTC_PLUS_2},pm={dst:{is:!1,uses:!0},id:n.JapanStandardTime,name:"Japan Standard Time",offset:i.UTC_PLUS_9},Cm={dst:{is:!1,uses:!0},id:n.KaliningradTime,name:"Kaliningrad Time",offset:i.UTC_PLUS_2},Em={dst:{is:!1,uses:!0},id:n.KamchatkaTime,name:"Kamchatka Time",offset:i.UTC_PLUS_12},_m={dst:{is:!1,uses:!0},id:n.KoreaStandardTime,name:"Korea Standard Time",offset:i.UTC_PLUS_9},Sm={dst:{is:!1,uses:!0},id:n.KosraeTime,name:"Kosrae Time",offset:i.UTC_PLUS_11},Im={dst:{is:!1,uses:!0},id:n.KrasnoyarskTime,name:"Krasnoyarsk Time",offset:i.UTC_PLUS_7},vm={dst:{is:!1,uses:!0},id:n.KyrgyzstanTime,name:"Kyrgyzstan Time",offset:i.UTC_PLUS_6},bm={dst:{is:!1,uses:!0},id:n.LineIslandsTime,name:"Line Islands Time",offset:i.UTC_PLUS_14},ym={dst:{is:!1,uses:!0},id:n.LordHoweStandardTime,name:"Lord Howe Standard Time",offset:i.UTC_PLUS_10_30},Bm={dst:{is:!1,uses:!0},id:n.LordHoweSummerTime,name:"Lord Howe Summer Time",offset:i.UTC_PLUS_11},Dm={dst:{is:!1,uses:!0},id:n.MacquarieIslandStationTime,name:"Macquarie Island Station Time",offset:i.UTC_PLUS_11},Um={dst:{is:!1,uses:!0},id:n.MagadanTime,name:"Magadan Time",offset:i.UTC_PLUS_12},Pm={dst:{is:!1,uses:!0},id:n.MalaysiaStandardTime,name:"Malaysia Standard Time",offset:i.UTC_PLUS_8},Nm={dst:{is:!1,uses:!0},id:n.MalaysiaTime,name:"Malaysia Time",offset:i.UTC_PLUS_8},Mm={dst:{is:!1,uses:!0},id:n.MaldivesTime,name:"Maldives Time",offset:i.UTC_PLUS_5},Fm={dst:{is:!1,uses:!0},id:n.MarquesasIslandsTime,name:"Marquesas Islands Time",offset:i.UTC_PLUS_9_30},km={dst:{is:!1,uses:!0},id:n.MarshallIslandsTime,name:"Marshall Islands Time",offset:i.UTC_PLUS_12},Lm={dst:{is:!1,uses:!0},id:n.MauritiusTime,name:"Mauritius Time",offset:i.UTC_PLUS_4},zm={dst:{is:!1,uses:!0},id:n.MawsonStationTime,name:"Mawson Station Time",offset:i.UTC_PLUS_5},Rm={dst:{is:!1,uses:!0},id:n.MiddleEuropeanSummerTime,name:"Middle European Summer Time",offset:i.UTC_PLUS_2},xm={dst:{is:!1,uses:!0},id:n.MiddleEuropeanTime,name:"Middle European Time",offset:i.UTC_PLUS_1},wm={dst:{is:!1,uses:!0},id:n.MoscowTime,name:"Moscow Time",offset:i.UTC_PLUS_3},qm={dst:{is:!1,uses:!0},id:n.MountainDaylightTime,name:"Mountain Daylight Time",offset:i.UTC_MINUS_6},Gm={dst:{is:!1,uses:!0},id:n.MountainStandardTime,name:"Mountain Standard Time",offset:i.UTC_MINUS_7},Km={dst:{is:!1,uses:!0},id:n.MyanmarStandardTime,name:"Myanmar Standard Time",offset:i.UTC_PLUS_6_30},Om={dst:{is:!1,uses:!0},id:n.NepalTime,name:"Nepal Time",offset:i.UTC_PLUS_5_45},Hm={dst:{is:!1,uses:!0},id:n.NauruTime,name:"Nauru Time",offset:i.UTC_PLUS_12},jm={dst:{is:!1,uses:!0},id:n.NewCaledoniaTime,name:"New Caledonia Time",offset:i.UTC_PLUS_11},$m={dst:{is:!1,uses:!0},id:n.NewZealandDaylightTime,name:"New Zealand Daylight Time",offset:i.UTC_PLUS_13},Wm={dst:{is:!1,uses:!0},id:n.NewZealandStandardTime,name:"New Zealand Standard Time",offset:i.UTC_PLUS_12},Vm={dst:{is:!1,uses:!0},id:n.NewfoundlandDaylightTime,name:"Newfoundland Daylight Time",offset:i.UTC_MINUS_2_30},Ym={dst:{is:!1,uses:!0},id:n.NewfoundlandTime,name:"Newfoundland Time",offset:i.UTC_MINUS_3_30},Zm={dst:{is:!1,uses:!0},id:n.NiueTime,name:"Niue Time",offset:i.UTC_MINUS_11},Jm={dst:{is:!1,uses:!0},id:n.NorfolkIslandTime,name:"Norfolk Island Time",offset:i.UTC_PLUS_11},Qm={dst:{is:!1,uses:!0},id:n.NovosibirskTime,name:"Novosibirsk Time",offset:i.UTC_PLUS_7},Xm={dst:{is:!1,uses:!0},id:n.OmskTime,name:"Omsk Time",offset:i.UTC_PLUS_6},ed={dst:{is:!1,uses:!0},id:n.OralTime,name:"Oral Time",offset:i.UTC_PLUS_5},ad={dst:{is:!1,uses:!0},id:n.PacificDaylightTime,name:"Pacific Daylight Time",offset:i.UTC_MINUS_7},id={dst:{is:!1,uses:!0},id:n.PacificStandardTime,name:"Pacific Standard Time",offset:i.UTC_MINUS_8},nd={dst:{is:!1,uses:!0},id:n.PakistanStandardTime,name:"Pakistan Standard Time",offset:i.UTC_PLUS_5},sd={dst:{is:!1,uses:!0},id:n.PalauTime,name:"Palau Time",offset:i.UTC_PLUS_9},ud={dst:{is:!1,uses:!0},id:n.PapuaNewGuineaTime,name:"Papua New Guinea Time",offset:i.UTC_PLUS_10},td={dst:{is:!1,uses:!0},id:n.ParaguaySummerTime,name:"Paraguay Summer Time",offset:i.UTC_MINUS_3},rd={dst:{is:!1,uses:!0},id:n.ParaguayTime,name:"Paraguay Time",offset:i.UTC_MINUS_4},od={dst:{is:!1,uses:!0},id:n.PeruTime,name:"Peru Time",offset:i.UTC_MINUS_5},ld={dst:{is:!1,uses:!0},id:n.PhilippineStandardTime,name:"Philippine Standard Time",offset:i.UTC_PLUS_8},md={dst:{is:!1,uses:!0},id:n.PhilippineTime,name:"Philippine Time",offset:i.UTC_PLUS_8},dd={dst:{is:!1,uses:!0},id:n.PhoenixIslandTime,name:"Phoenix Island Time",offset:i.UTC_PLUS_13},cd={dst:{is:!1,uses:!0},id:n.PitcairnTime,name:"Pitcairn Time",offset:i.UTC_MINUS_8},Ad={dst:{is:!1,uses:!0},id:n.PohnpeiStandardTime,name:"Pohnpei Standard Time",offset:i.UTC_PLUS_11},gd={dst:{is:!1,uses:!0},id:n.ReunionTime,name:"Reunion Time",offset:i.UTC_PLUS_4},Td={dst:{is:!1,uses:!0},id:n.RotheraResearchStationTime,name:"Rothera Research Station Time",offset:i.UTC_MINUS_3},hd={dst:{is:!1,uses:!0},id:n.SaintPierreAndMiquelonDaylightTime,name:"Saint Pierre and Miquelon Daylight Time",offset:i.UTC_MINUS_2},fd={dst:{is:!1,uses:!0},id:n.SaintPierreAndMiquelonStandardTime,name:"Saint Pierre and Miquelon Standard Time",offset:i.UTC_MINUS_3},pd={dst:{is:!1,uses:!0},id:n.SakhalinIslandTime,name:"Sakhalin Island Time",offset:i.UTC_PLUS_11},Cd={dst:{is:!1,uses:!0},id:n.SamaraTime,name:"Samara Time",offset:i.UTC_PLUS_4},Ed={dst:{is:!1,uses:!0},id:n.SamoaDaylightTime,name:"Samoa Daylight Time",offset:i.UTC_MINUS_10},_d={dst:{is:!1,uses:!0},id:n.SamoaStandardTime,name:"Samoa Standard Time",offset:i.UTC_MINUS_11},Sd={dst:{is:!1,uses:!0},id:n.SeychellesTime,name:"Seychelles Time",offset:i.UTC_PLUS_4},Id={dst:{is:!1,uses:!0},id:n.ShowaStationTime,name:"Showa Station Time",offset:i.UTC_PLUS_3},vd={dst:{is:!1,uses:!0},id:n.SingaporeStandardTime,name:"Singapore Standard Time",offset:i.UTC_PLUS_8},bd={dst:{is:!1,uses:!0},id:n.SingaporeTime,name:"Singapore Time",offset:i.UTC_PLUS_8},yd={dst:{is:!1,uses:!0},id:n.SolomonIslandsTime,name:"Solomon Islands Time",offset:i.UTC_PLUS_11},Bd={dst:{is:!1,uses:!0},id:n.SouthAfricanStandardTime,name:"South African Standard Time",offset:i.UTC_PLUS_2},Dd={dst:{is:!1,uses:!0},id:n.SouthGeorgiaAndTheSouthSandwichIslandsTime,name:"South Georgia and the South Sandwich Islands Time",offset:i.UTC_MINUS_2},Ud={dst:{is:!1,uses:!0},id:n.SrednekolymskTime,name:"Srednekolymsk Time",offset:i.UTC_PLUS_11},Pd={dst:{is:!1,uses:!0},id:n.SriLankaStandardTime,name:"Sri Lanka Standard Time",offset:i.UTC_PLUS_5_30},Nd={dst:{is:!1,uses:!0},id:n.SurinameTime,name:"Suriname Time",offset:i.UTC_MINUS_3},Md={dst:{is:!1,uses:!0},id:n.TahitiTime,name:"Tahiti Time",offset:i.UTC_MINUS_10},Fd={dst:{is:!1,uses:!0},id:n.TajikistanTime,name:"Tajikistan Time",offset:i.UTC_PLUS_5},kd={dst:{is:!1,uses:!0},id:n.ThailandStandardTime,name:"Thailand Standard Time",offset:i.UTC_PLUS_7},Ld={dst:{is:!1,uses:!0},id:n.TimorLesteTime,name:"Timor-Leste Time",offset:i.UTC_PLUS_9},zd={dst:{is:!1,uses:!0},id:n.TokelauTime,name:"Tokelau Time",offset:i.UTC_PLUS_13},Rd={dst:{is:!1,uses:!0},id:n.TongaTime,name:"Tonga Time",offset:i.UTC_PLUS_13},xd={dst:{is:!1,uses:!0},id:n.TurkeyTime,name:"Turkey Time",offset:i.UTC_PLUS_3},wd={dst:{is:!1,uses:!0},id:n.TurkmenistanTime,name:"Turkmenistan Time",offset:i.UTC_PLUS_5},qd={dst:{is:!1,uses:!0},id:n.TuvaluTime,name:"Tuvalu Time",offset:i.UTC_PLUS_12},Gd={dst:{is:!1,uses:!0},id:n.UlaanbaatarStandardTime,name:"Ulaanbaatar Standard Time",offset:i.UTC_PLUS_8},Kd={dst:{is:!1,uses:!0},id:n.UlaanbaatarSummerTime,name:"Ulaanbaatar Summer Time",offset:i.UTC_PLUS_9},Od={dst:{is:!1,uses:!0},id:n.UruguayStandardTime,name:"Uruguay Standard Time",offset:i.UTC_MINUS_3},Hd={dst:{is:!1,uses:!0},id:n.UruguaySummerTime,name:"Uruguay Summer Time",offset:i.UTC_MINUS_2},jd={dst:{is:!1,uses:!0},id:n.UzbekistanTime,name:"Uzbekistan Time",offset:i.UTC_PLUS_5},$d={dst:{is:!1,uses:!0},id:n.VanuatuTime,name:"Vanuatu Time",offset:i.UTC_PLUS_11},Wd={dst:{is:!1,uses:!0},id:n.VenezuelaStandardTime,name:"Venezuela Standard Time",offset:i.UTC_MINUS_4},Vd={dst:{is:!1,uses:!0},id:n.VladivostokTime,name:"Vladivostok Time",offset:i.UTC_PLUS_10},Yd={dst:{is:!1,uses:!0},id:n.VolgogradTime,name:"Volgograd Time",offset:i.UTC_PLUS_4},Zd={dst:{is:!1,uses:!0},id:n.VostokStationTime,name:"Vostok Station Time",offset:i.UTC_PLUS_6},Jd={dst:{is:!1,uses:!0},id:n.WakeIslandTime,name:"Wake Island Time",offset:i.UTC_PLUS_12},Qd={dst:{is:!1,uses:!0},id:n.WestAfricaSummerTime,name:"West Africa Summer Time",offset:i.UTC_PLUS_2},Xd={dst:{is:!1,uses:!0},id:n.WestAfricaTime,name:"West Africa Time",offset:i.UTC_PLUS_1},ec={dst:{is:!1,uses:!0},id:n.WestGreenlandSummerTime,name:"West Greenland Summer Time",offset:i.UTC_MINUS_2},ac={dst:{is:!1,uses:!0},id:n.WestGreenlandTime,name:"West Greenland Time",offset:i.UTC_MINUS_3},ic={dst:{is:!1,uses:!0},id:n.WestKazakhstanTime,name:"West Kazakhstan Time",offset:i.UTC_PLUS_5},nc={dst:{is:!1,uses:!0},id:n.WesternEuropeanSummerTime,name:"Western European Summer Time",offset:i.UTC_PLUS_1},sc={dst:{is:!1,uses:!0},id:n.WesternEuropeanTime,name:"Western European Time",offset:i.UTC_0},uc={dst:{is:!1,uses:!0},id:n.WesternIndonesianTime,name:"Western Indonesian Time",offset:i.UTC_PLUS_7},tc={dst:{is:!1,uses:!0},id:n.WesternStandardTime,name:"Western Standard Time",offset:i.UTC_PLUS_8},rc={dst:{is:!1,uses:!0},id:n.YakutskTime,name:"Yakutsk Time",offset:i.UTC_PLUS_9},oc={dst:{is:!1,uses:!0},id:n.YekaterinburgTime,name:"Yekaterinburg Time",offset:i.UTC_PLUS_5},ee;(function(e){e.Africa="Africa",e.Americas="Americas",e.Asia="Asia",e.Europe="Europe",e.Oceania="Oceania",e.Polar="Polar"})(ee||(ee={}));var ae;(function(e){e.CentralAmerica="Central America",e.EasternAsia="Eastern Asia",e.EasternEurope="Eastern Europe",e.EasternAfrica="Eastern Africa",e.MiddleAfrica="Middle Africa",e.MiddleEast="Middle East",e.NorthernAfrica="Northern Africa",e.NorthernAmerica="Northern America",e.NorthernEurope="Northern Europe",e.Polynesia="Polynesia",e.SouthAmerica="South America",e.SouthernAfrica="Southern Africa",e.SouthernAsia="Southern Asia",e.SouthernEurope="Southern Europe",e.WesternAfrica="Western Africa",e.WesternAsia="Western Asia",e.WesternEurope="Western Europe",e.WesternAustralia="Western Australia"})(ae||(ae={}));var lc={Afghanistan:{i18n:{calling_codes:[93],currencies:[A.AfghanistanAfghani],languages:[a.Pashto,a.Dari,a.Turkmen,a.Uzbek],tz:{offsets:[i.UTC_PLUS_4_30],regions:[s.AsiaKabul],timezones:[n.AfghanistanTime]}},id:u.Afghanistan,info:{flag:{emoji:"\u{1F1E6}\u{1F1EB}",emoji_unicode:"U+1F1E6 U+1F1EB",svg:"https://www.countryflags.io/af/flat/64.svg"},tld:[".af"]},iso:{alpha2:u.Afghanistan,alpha3:"AFG",numeric:"004"},name:{alt_spellings:["AF","Af\u0121\u0101nist\u0101n"],demonym:"Afghan",native:{endonym:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},official:"Islamic Republic of Afghanistan",short:"Afghanistan",translations:{[a.Afrikaans]:"Afghanistan",[a.Albanian]:"Shqip\xEBri",[a.Amharic]:"\u12A0\u134D\u130B\u1295",[a.Arabic]:"\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[a.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[a.Azerbaijani]:"Az\u0259rbaycan",[a.Bashkir]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[a.Basque]:"Afganist\xE1n",[a.Belarusian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[a.Bengali]:"\u0986\u09AB\u0997\u09BE\u09A8\u09BF\u09B8\u09CD\u09A4\u09BE\u09A8",[a.Berber]:"\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[a.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F51\u0F7C\u0F53\u0F0B\u0F63\u0F7A\u0F0B\u0F66\u0F90\u0F51\u0F0B\u0F46\u0F0D",[a.Bosnian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[a.Breton]:"Afganistan",[a.Bulgarian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[a.Burmese]:"\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A",[a.Catalan]:"Afganistan",[a.Chinese]:"\u963F\u5BCC\u6C57",[a.Croatian]:"Afganistan",[a.Czech]:"Afganistan",[a.Danish]:"Afghanistan",[a.Dutch]:"Afghanistan",[a.English]:"Afghanistan",[a.Esperanto]:"Afganistan",[a.Estonian]:"Afganistan",[a.Finnish]:"Afghanistan",[a.French]:"Afghanistan",[a.Frisian]:"Afghanistan",[a.Galician]:"Afganist\xE1n",[a.Georgian]:"\u10D0\u10D5\u10E6\u10D0\u10DC\u10D4\u10D7\u10D8",[a.German]:"Afghanistan",[a.Greenlandic]:"Afghanistan",[a.Greek]:"\u0391\u03C6\u03B3\u03B1\u03BD\u03B9\u03C3\u03C4\u03AC\u03BD",[a.Gujarati]:"\u0A85\u0AAB\u0A97\u0ABE\u0AA8\u0ABF\u0AB8\u0ACD\u0AA4\u0ABE\u0AA8",[a.Haitian]:"Afghanistan",[a.Hausa]:"Afghanistan",[a.Hebrew]:"\u05D0\u05E4\u05D2\u05E0\u05D9\u05E1\u05D8\u05DF",[a.Hindi]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[a.Hungarian]:"Afganistan",[a.Icelandic]:"Afghanistan",[a.Igbo]:"Afghanistan",[a.Indonesian]:"Afghanistan",[a.Irish]:"Afghanistan",[a.Italian]:"Afghanistan",[a.Japanese]:"\u30A2\u30D5\u30AC\u30CB\u30B9\u30BF\u30F3",[a.Javanese]:"Afghanistan",[a.Kannada]:"\u0C85\u0CAB\u0C97\u0CBE\u0CA8\u0CBF\u0CB8\u0CCD\u0CA4\u0CBE\u0CA8",[a.Kazakh]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[a.Khmer]:"\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17B7\u1780",[a.Korean]:"\uC544\uD504\uAC00\uB2C8\uC2A4\uD0C4",[a.Kurdish]:"Afghanistan",[a.Kyrgyz]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[a.Lao]:"\u0EAD\u0EB2\u0E9F\u0EB2\u0EA5\u0EBD\u0E99",[a.Latin]:"Afghanistan",[a.Latvian]:"Afghanistan",[a.Lithuanian]:"Afganistanas",[a.Luxembourgish]:"Afghanistan",[a.Macedonian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[a.Malagasy]:"Afghanistan",[a.Malay]:"Afghanistan",[a.Malayalam]:"\u0D05\u0D2B\u0D17\u0D3E\u0D28\u0D3F\u0D38\u0D4D\u0D24\u0D3E\u0D28",[a.Maltese]:"Afghanistan",[a.Maori]:"Afghanistan",[a.Marathi]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[a.Mongolian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[a.Nepali]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[a.Norwegian]:"Afghanistan",[a.Pashto]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[a.Persian]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[a.Polish]:"Afganistan",[a.Portuguese]:"Afghanistan",[a.Punjabi]:"Afghanistan",[a.Romanian]:"Afghanistan",[a.Polish]:"Afganistan",[a.Russian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[a.Samoan]:"Afghanistan",[a.Sanskrit]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[a.Scots]:"Afghanistan",[a.Serbian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[a.Sesotho]:"Afghanistan",[a.Shona]:"Afghanistan",[a.Sindhi]:"Afghanistan",[a.Sinhala]:"\u0D86\u0D9C\u0DCA\u200D\u0DBB\u0DDC\u0D9A\u0DCA\u0D9A\u0DD2\u0DBA\u0DCF\u0DC0",[a.Slovak]:"Afganistan",[a.Slovenian]:"Afganistan",[a.Somali]:"Afghanistan",[a.Spanish]:"Afganist\xE1n",[a.Sudanese]:"Afghanistan",[a.Swahili]:"Afghanistan",[a.Swedish]:"Afghanistan",[a.Tagalog]:"Afghanistan",[a.Tajik]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[a.Tatar]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[a.Tamil]:"\u0B86\u0BAA\u0BCD\u0BAA\u0B95\u0BBE\u0BA9\u0BBF\u0BB8\u0BCD\u0BA4\u0BBE\u0BA9\u0BCD",[a.Telugu]:"\u0C06\u0C2B\u0C4D\u0C18\u0C28\u0C3F\u0C38\u0C4D\u0C24\u0C3E\u0C28\u0C4D",[a.Thai]:"\u0E2D\u0E31\u0E1F\u0E01\u0E32\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19",[a.Tibetan]:"\u0F68\u0F55\u0F0B\u0F42\u0F7A\u0F0B\u0F53\u0F72\u0F66\u0F72\u0F0B\u0F4F\u0F7A\u0F53\u0F66\u0F72\u0F0D",[a.Turkish]:"Afganistan",[a.Ukrainian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[a.Urdu]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[a.Uzbek]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[a.Vietnamese]:"Afghanistan",[a.Welsh]:"Afghanistan",[a.Xhosa]:"Afghanistan",[a.Yiddish]:"Afghanistan",[a.Yoruba]:"Afghanistan",[a.Zulu]:"Afghanistan"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Kabul",total:341e5}},geography:{area:652230,region:ee.Asia,sub_region:ae.SouthernAsia},government:{capital:"Kabul",type:"Islamic Emirate"}}},Albania:{i18n:{calling_codes:[355],currencies:[A.AlbaniaLek],languages:[a.Albanian,a.Greek,a.Turkish],tz:{offsets:[i.UTC_PLUS_1],regions:[s.EuropeBrussels],timezones:[n.CentralEuropeanTime]}},id:u.Albania,info:{flag:{emoji:"\u{1F1E6}\u{1F1F1}",emoji_unicode:"U+1F1E6 U+1F1F1",svg:"https://www.countryflags.io/al/flat/64.svg"},tld:[".al"]},iso:{alpha2:u.Albania,alpha3:"ALB",numeric:"008"},name:{alt_spellings:["AL","Shqip\xEBri","Shqip\xEBria","Shqipnia"],demonym:"Albanian",native:{endonym:"Shqip\xEBri"},official:"Republic of Albania",short:"Albania",translations:{[a.Afrikaans]:"Albania",[a.Albanian]:"Albania",[a.Amharic]:"\u12A0\u120D\u1263\u1295\u12EB",[a.Arabic]:"\u0623\u0644\u0628\u0627\u0646\u064A\u0627",[a.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[a.Azerbaijani]:"Az\u0259rbaycan",[a.Bashkir]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[a.Basque]:"Albania",[a.Belarusian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[a.Bengali]:"\u0986\u09B2\u09AC\u09BE\u09A8\u09BF\u09AF\u09BC\u09BE",[a.Berber]:"\u0623\u0644\u0628\u0627\u0646\u064A\u0627",[a.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B",[a.Bosnian]:"Albanija",[a.Breton]:"Albania",[a.Bulgarian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[a.Burmese]:"\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A",[a.Catalan]:"Alb\xE0nia",[a.Chinese]:"\u963F\u5C14\u5DF4\u5C3C\u4E9A",[a.Croatian]:"Albanija",[a.Czech]:"Alb\xE1nie",[a.Danish]:"Albanien",[a.Dutch]:"Albani\xEB",[a.English]:"Albania",[a.Esperanto]:"Albanio",[a.Estonian]:"Albaania",[a.Finnish]:"Albania",[a.French]:"Albanie",[a.Frisian]:"Albani\xEB",[a.Galician]:"Alb\xE2nia",[a.Georgian]:"\u10D0\u10DA\u10D1\u10D0\u10DC\u10D8\u10D0",[a.German]:"Albanien",[a.Greenlandic]:"Albania",[a.Greek]:"\u0391\u03BB\u03B2\u03B1\u03BD\u03AF\u03B1",[a.Gujarati]:"\u0A85\u0AB2\u0AAC\u0AA8\u0ABF\u0AAF\u0ABE",[a.Haitian]:"Albanais",[a.Hausa]:"Albania",[a.Hebrew]:"\u05D0\u05DC\u05D1\u05E0\u05D9\u05D4",[a.Hindi]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[a.Hungarian]:"Alb\xE1nia",[a.Icelandic]:"Alb\xFAnir",[a.Igbo]:"Albania",[a.Indonesian]:"Albania",[a.Irish]:"Alb\xE1in",[a.Italian]:"Albania",[a.Japanese]:"\u30A2\u30EB\u30D0\u30CB\u30A2",[a.Javanese]:"Albania",[a.Kannada]:"\u0C85\u0CB2\u0CCD\u0CAC\u0CBE\u0CA8\u0CBF\u0CAF\u0CBE",[a.Kazakh]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[a.Khmer]:"\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17C1\u179F\u17CA\u17B8",[a.Korean]:"\uC54C\uBC14\uB2C8\uC544",[a.Kurdish]:"\u0622\u0644\u0628\u0627\u0646\u06CC\u0627",[a.Kyrgyz]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[a.Lao]:"\u0EAD\u0EB2\u0EA5\u0EB2\u0E99\u0EB5",[a.Latin]:"Albania",[a.Latvian]:"Alb\u0101nija",[a.Lithuanian]:"Albanija",[a.Luxembourgish]:"Albani\xEB",[a.Macedonian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430",[a.Malagasy]:"Albania",[a.Malay]:"Albania",[a.Malayalam]:"\u0D05\u0D32\u0D4D\u0D2C\u0D3E\u0D28\u0D3F\u0D2F\u0D3E",[a.Maltese]:"Albania",[a.Maori]:"Albania",[a.Marathi]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[a.Mongolian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[a.Nepali]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[a.Norwegian]:"Albania",[a.Pashto]:"\u0627\u0627\u0644\u0628\u0627\u0646\u06CC",[a.Persian]:"\u0622\u0644\u0628\u0627\u0646\u06CC",[a.Polish]:"Albania",[a.Portuguese]:"Alb\xE2nia",[a.Punjabi]:"\u0A05\u0A32\u0A2C\u0A28\u0A40\u0A06",[a.Romanian]:"Alb\u0103n",[a.Russian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[a.Samoan]:"Albania",[a.Sanskrit]:"Albani",[a.Scots]:"Alb\xE0inia",[a.Serbian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430",[a.Sesotho]:"Albania",[a.Shona]:"Albania",[a.Sindhi]:"Albania",[a.Sinhala]:"\u0D87\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA",[a.Slovak]:"Alb\xE1nsko",[a.Slovenian]:"Albanija",[a.Somali]:"Albania",[a.Spanish]:"Albania",[a.Sudanese]:"Albania",[a.Swahili]:"Albania",[a.Swedish]:"Albanien",[a.Tagalog]:"Albania",[a.Tajik]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[a.Tamil]:"\u0B85\u0BB2\u0BCD\u0BAA\u0BBE\u0BA9\u0BBF\u0BAF\u0BBE",[a.Tatar]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[a.Telugu]:"\u0C05\u0C32\u0C4D\u0C2C\u0C3E\u0C28\u0C3F\u0C2F\u0C3E",[a.Thai]:"\u0E2D\u0E31\u0E25\u0E41\u0E1A\u0E19\u0E34\u0E19\u0E35",[a.Tibetan]:"\u0F68\u0F63\u0F0B\u0F56\u0F72\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F72",[a.Turkish]:"Albaniye",[a.Ukrainian]:"\u0410\u043B\u0431\u0430\u043D\u0456\u044F",[a.Urdu]:"\u0622\u0644\u0628\u0627\u0646\u06CC",[a.Uzbek]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[a.Vietnamese]:"Albanie",[a.Welsh]:"Albania",[a.Xhosa]:"Albania",[a.Yiddish]:"\u05D0\u05DC\u05D1\u05E0\u05D9\u05E9",[a.Yoruba]:"Albania",[a.Zulu]:"Albania"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Tirana",total:2853e3}},geography:{area:28748,region:ee.Europe,sub_region:ae.SouthernEurope},government:{capital:"Tirana",type:"Republic"}}},Algeria:{i18n:{calling_codes:[213],currencies:[A.AlgeriaDinar],languages:[a.Arabic,a.French,a.Berber,a.Tamazight],tz:{offsets:[i.UTC_PLUS_1,i.UTC_PLUS_2],regions:[s.AfricaAlgiers],timezones:[n.CentralEuropeanTime]}},id:u.Algeria,info:{flag:{emoji:"\u{1F1E9}\u{1F1FF}",emoji_unicode:"U+1F1E9 U+1F1FF",svg:"https://www.countryflags.io/dz/flat/64.svg"},tld:[".dz",".\u062C\u0632\u0627\u0626\u0631"]},iso:{alpha2:u.Algeria,alpha3:"DZA",numeric:"012"},name:{alt_spellings:["DZ","Dzayer","Alg\xE9rie"],demonym:"Algerian",native:{endonym:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631"},official:"People's Democratic Republic of Algeria",short:"Algeria",translations:{[a.Afrikaans]:"Algerije",[a.Albanian]:"Algeria",[a.Amharic]:"\u12A0\u120D\u1300\u122D\u1235",[a.Arabic]:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631",[a.Armenian]:"\u0531\u056C\u0563\u0578\u0580\u056B\u0561",[a.Azerbaijani]:"Az\u0259rbaycan",[a.Bashkir]:"\u0410\u043B\u0436\u0438\u0440",[a.Basque]:"Algeria",[a.Belarusian]:"\u0410\u043B\u0436\u0438\u0440",[a.Bengali]:"\u0986\u09B2\u099C\u09C7\u09B0",[a.Berber]:"\u062C\u0632\u0627\u0626\u0631",[a.Bhutani]:"\u0F62\u0FAB\u0F7C\u0F44\u0F0B\u0F41",[a.Bosnian]:"Al\u017Eir",[a.Breton]:"Algeria",[a.Bulgarian]:"\u0410\u043B\u0436\u0438\u0440",[a.Burmese]:"\u1021\u102C\u101B\u1015\u103A",[a.Catalan]:"Alg\xE8ria",[a.Chinese]:"\u963F\u5C14\u53CA\u5229\u4E9A",[a.Croatian]:"Al\u017Eir",[a.Czech]:"Al\u017E\xEDrsko",[a.Danish]:"Algeriet",[a.Dutch]:"Algerije",[a.English]:"Algeria",[a.Esperanto]:"Al\u011Derio",[a.Estonian]:"Al\u017Eira",[a.Finnish]:"Algeria",[a.French]:"Alg\xE9rie",[a.Frisian]:"Algeri\xEB",[a.Galician]:"Alxeria",[a.Georgian]:"\u10D0\u10DA\u10D2\u10D8\u10E3\u10E0\u10D8",[a.German]:"Algerien",[a.Greenlandic]:"Algeria",[a.Greek]:"\u0391\u03BB\u03B3\u03B5\u03C1\u03AF\u03B1",[a.Gujarati]:"\u0A86\u0AB2\u0AC7\u0A97\u0AB0\u0ABF\u0AAF\u0ABE",[a.Haitian]:"Alg\xE9rie",[a.Hausa]:"Algeria",[a.Hebrew]:"\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4",[a.Hindi]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[a.Hungarian]:"Alg\xE1r",[a.Icelandic]:"Alg\xFAra",[a.Igbo]:"Algeria",[a.Indonesian]:"Aljir",[a.Irish]:"Alg\xE9rie",[a.Italian]:"Algeria",[a.Japanese]:"\u30A2\u30EB\u30B8\u30A7\u30EA\u30A2",[a.Javanese]:"Aljir",[a.Kannada]:"\u0C86\u0CB2\u0CCD\u0C97\u0CC7\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD",[a.Kazakh]:"\u0410\u043B\u0436\u0438\u0440",[a.Khmer]:"\u17A2\u17B6\u179B\u17CB\u1794\u17B6\u1793\u17B8",[a.Korean]:"\uC54C\uC81C\uB9AC",[a.Kurdish]:"\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u062C\u0632\u0627\u06CC\u0631",[a.Kyrgyz]:"\u0410\u043B\u0436\u0438\u0440",[a.Lao]:"\u0EAD\u0EB2\u0EA5\u0EB2\u0E88\u0EB5\u0E99",[a.Latin]:"Algeria",[a.Latvian]:"Al\u017E\u012Brija",[a.Lithuanian]:"Al\u017Eyras",[a.Luxembourgish]:"Algeria",[a.Macedonian]:"\u0410\u043B\u0436\u0438\u0440",[a.Malagasy]:"Alg\xE9rie",[a.Malay]:"Aljir",[a.Malayalam]:"\u0D06\u0D32\u0D02\u0D17\u0D47\u0D30\u0D3F\u0D2F\u0D7B",[a.Maltese]:"Alg\xE9rie",[a.Maori]:"Algeria",[a.Marathi]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[a.Mongolian]:"\u0410\u043B\u0436\u0438\u0440",[a.Nepali]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[a.Norwegian]:"Algeria",[a.Pashto]:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631",[a.Persian]:"\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u0639\u0631\u0628",[a.Polish]:"Algieria",[a.Portuguese]:"Alg\xE9ria",[a.Punjabi]:"\u0A06\u0A32\u0A47\u0A17\u0A40\u0A06",[a.Romanian]:"Algeria",[a.Russian]:"\u0410\u043B\u0436\u0438\u0440",[a.Samoan]:"Algeria",[a.Sanskrit]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[a.Scots]:"Algeria",[a.Serbian]:"\u0410\u043B\u0436\u0438\u0440",[a.Sesotho]:"Algeria",[a.Shona]:"Algeria",[a.Sindhi]:"Algeria",[a.Sinhala]:"\u0D86\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA",[a.Slovak]:"Al\u017E\xEDrsko",[a.Slovenian]:"Al\u017Eir",[a.Somali]:"Algeria",[a.Spanish]:"Algeria",[a.Sudanese]:"Aljir",[a.Swahili]:"Aljir",[a.Swedish]:"Algeriet",[a.Tagalog]:"Algeria",[a.Tajik]:"\u0410\u043B\u0436\u0438\u0440",[a.Tamil]:"\u0B86\u0BB2\u0BCD\u0B95\u0BC7\u0BB0\u0BBF\u0BAF\u0BBE",[a.Tatar]:"\u0410\u043B\u0436\u0438\u0440",[a.Telugu]:"\u0C06\u0C32\u0C4D\u0C17\u0C47\u0C30\u0C3F\u0C2F\u0C3E",[a.Thai]:"\u0E2D\u0E32\u0E23\u0E32\u0E01\u0E2D\u0E19",[a.Tibetan]:"\u0F68\u0F63\u0F9F\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F61\u0F72",[a.Turkish]:"Cezayir",[a.Ukrainian]:"\u0410\u043B\u0436\u0438\u0440",[a.Urdu]:"\u0622\u0644\u062C\u06CC\u0631",[a.Uzbek]:"\u0410\u043B\u0436\u0438\u0440",[a.Vietnamese]:"\u1EA2\u0301\u1EA1\u1EA3\u1EAD\u1EB5",[a.Welsh]:"Algeria",[a.Xhosa]:"Algeria",[a.Yiddish]:"\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4",[a.Yoruba]:"Algeria",[a.Zulu]:"Algeria"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Oran",total:371e5}},geography:{area:2381740,region:ee.Africa,sub_region:ae.NorthernAfrica},government:{capital:"Algiers",type:"Republic"}}},AmericanSamoa:{i18n:{calling_codes:[1684],currencies:[A.AmericanSamoaTala],languages:[a.English,a.Samoan],tz:{offsets:[i.UTC_MINUS_11],regions:[s.PacificSamoa],timezones:[n.SamoaStandardTime]}},id:u.AmericanSamoa,info:{flag:{emoji:"\u{1F1E6}\u{1F1F8}",emoji_unicode:"U+1F1E6 U+1F1F8",svg:"https://www.countryflags.io/as/flat/64.svg"},tld:[".as"]},iso:{alpha2:u.AmericanSamoa,alpha3:"ASM",numeric:"016"},name:{alt_spellings:["AS","Amerika S\u0101moa","Amelika S\u0101moa","S\u0101moa Amelika"],demonym:"American Samoan",native:{endonym:"American Samoa"},official:"American Samoa",short:"American Samoa",translations:{[a.Afrikaans]:"Amerikaans Samoa",[a.Albanian]:"Samoa Amerikane",[a.Amharic]:"\u1233\u121E\u12A0\u122D",[a.Arabic]:"\u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629",[a.Armenian]:"\u054D\u0561\u0570\u0561\u0574\u0561\u056C\u056B\u0561",[a.Azerbaijani]:"Samoa Amerikana",[a.Bashkir]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0421\u0430\u043C\u043E\u0430",[a.Basque]:"Samoa Amerikana",[a.Belarusian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430",[a.Bengali]:"\u0986\u09AE\u09C7\u09B0\u09BF\u0995\u09BE\u09A8 \u09B8\u09BE\u09AE\u09CB\u09AF\u09BC\u09BE",[a.Berber]:"\u062C\u0632\u0631 \u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629",[a.Bhutani]:"\u0F68\u0F62\u0F92\u0FB1\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F58\u0F44\u0F66\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F66\u0F90\u0F56\u0F66\u0F0B\u0F62\u0F92\u0FB1\u0F74\u0F51\u0F0B\u0F46\u0F7A\u0F53\u0F0B\u0F54\u0F7C\u0F0D",[a.Bosnian]:"Ameri\u010Dka Samoa",[a.Breton]:"Samoa Amerikan",[a.Bulgarian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[a.Burmese]:"\u1021\u1019\u1039\u1038\u1019\u101B\u102D\u102F\u1018\u102C\u101E\u102C",[a.Catalan]:"Samoa Americana",[a.Chinese]:"\u7F8E\u5C5E\u8428\u6469\u4E9A",[a.Croatian]:"Ameri\u010Dka Samoa",[a.Czech]:"Americk\xE1 Samoa",[a.Danish]:"Amerikansk Samoa",[a.Dutch]:"Amerikaans Samoa",[a.English]:"American Samoa",[a.Esperanto]:"Samoa Amerika",[a.Estonian]:"Ameerika Samoa",[a.Finnish]:"Amerikka Samoa",[a.French]:"American Samoa",[a.Frisian]:"Amerikaans Samoa",[a.Galician]:"Samoa Americana",[a.Georgian]:"\u10D0\u10DB\u10D4\u10E0\u10D8\u10D9\u10D8\u10E1 \u10E1\u10D0\u10DB\u10DD\u10D0",[a.German]:"Amerikanisch-Samoa",[a.Greenlandic]:"Amerikaans Samoa",[a.Greek]:"\u0391\u03BC\u03B5\u03C1\u03B9\u03BA\u03B1\u03BD\u03B9\u03BA\u03AE \u03A3\u03B1\u03BC\u03CC\u03B1",[a.Gujarati]:"\u0A86\u0AAE\u0AC7\u0AB0\u0ABF\u0A95\u0AA8 \u0AB8\u0ABE\u0AAE\u0ACB\u0AAF\u0ABE",[a.Haitian]:"Amerikaans Samoa",[a.Hausa]:"Amerikaans Samoa",[a.Hebrew]:"\u05D0\u05DE\u05E8\u05D9\u05E7\u05E0\u05D9\u05D4 \u05E1\u05DE\u05D5\u05D0\u05D4",[a.Hindi]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[a.Hungarian]:"Amerikai Szamoa",[a.Icelandic]:"Amerikai Szamoa",[a.Igbo]:"Ikina Amerika",[a.Indonesian]:"Samoa Amerika",[a.Irish]:"Samoa Amerikana",[a.Italian]:"Samoa Americane",[a.Japanese]:"\u30A2\u30E1\u30EA\u30AB\u9818\u30B5\u30E2\u30A2",[a.Javanese]:"Samoa Amerika",[a.Kannada]:"\u0C85\u0CAE\u0CC7\u0CB0\u0CBF\u0C95\u0CA8\u0CCD \u0CB8\u0CAE\u0CCB\u0C86",[a.Kazakh]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[a.Khmer]:"\u17A2\u17B6\u1798\u17C9\u17B6\u179A\u17B8\u179F\u17D2\u178F\u1784\u17CB",[a.Korean]:"\uC544\uBA54\uB9AC\uCE74 \uC0AC\uBAA8\uC544",[a.Kurdish]:"Amerikaans Samoa",[a.Kyrgyz]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[a.Lao]:"\u0EAD\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94",[a.Latin]:"Samoa Amerikana",[a.Latvian]:"Amerikas Samoa",[a.Lithuanian]:"Amerikos Samoa",[a.Luxembourgish]:"Amerikaans Samoa",[a.Macedonian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[a.Malagasy]:"Samoa Amerika",[a.Malay]:"Amerika Samo",[a.Malayalam]:"\u0D05\u0D2E\u0D47\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D28\u0D4D\u0D31\u0D4D \u0D38\u0D2E\u0D4B\u0D06",[a.Maltese]:"Samoa Amerika",[a.Maori]:"Samoa Amerika",[a.Marathi]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[a.Mongolian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[a.Nepali]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[a.Norwegian]:"Amerikansk Samoa",[a.Pashto]:"\u0627\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627",[a.Persian]:"\u0622\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627",[a.Polish]:"Samoa Ameryka\u0144skie",[a.Portuguese]:"Samoa Americana",[a.Punjabi]:"\u0A05\u0A2E\u0A30\u0A40\u0A15\u0A40 \u0A38\u0A3E\u0A2E\u0A4B\u0A06",[a.Romanian]:"Samoa americane",[a.Russian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430",[a.Samoan]:"Samoa Amerika",[a.Sanskrit]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[a.Scots]:"Amerikaans Samoa",[a.Serbian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[a.Sesotho]:"Amerikaans Samoa",[a.Shona]:"Amerikaans Samoa",[a.Sindhi]:"Amerikaans Samoa",[a.Sinhala]:"\u0D86\u0DBB\u0DCA\u0DA2\u0DD2\u0DB1\u0DCF\u0DB1\u0DD4 \u0DC3\u0DD0\u0DB8\u0DD0\u0DBD\u0DCA\u0DC0",[a.Slovak]:"Amerikaans Samoa",[a.Slovenian]:"Amerikaans Samoa",[a.Somali]:"Amerikaans Samoa",[a.Spanish]:"Samoa Americana",[a.Sudanese]:"Amerikaans Samoa",[a.Swahili]:"Amerikaans Samoa",[a.Swedish]:"Amerikansk Samoa",[a.Tagalog]:"Amerikaans Samoa",[a.Tajik]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[a.Tamil]:"\u0B85\u0BAE\u0BC6\u0BB0\u0BBF\u0B95\u0BCD \u0B9A\u0BAE\u0BCB\u0BB5\u0BBE",[a.Tatar]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[a.Telugu]:"\u0C05\u0C2E\u0C46\u0C30\u0C3F\u0C15\u0C4D \u0C38\u0C2E\u0C4B\u0C35\u0C3E",[a.Thai]:"\u0E2A\u0E2B\u0E23\u0E32\u0E0A\u0E2D\u0E32\u0E13\u0E32\u0E08\u0E31\u0E01\u0E23\u0E41\u0E2D\u0E1F\u0E23\u0E34\u0E01\u0E32",[a.Tibetan]:"\u0F68\u0F7A\u0F0B\u0F62\u0F72\u0F0B\u0F40\u0F0B\u0F68\u0F7A\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F74\u0F0B\u0F61\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F40",[a.Turkish]:"Amerikan Samoas\u0131",[a.Ukrainian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u044C\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[a.Urdu]:"\u0627\u0645\u0631\u06CC\u06A9\u06CC \u0633\u0645\u0648\u0627",[a.Uzbek]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[a.Vietnamese]:"Amerikaans Samoa",[a.Welsh]:"Amerikaans Samoa",[a.Xhosa]:"Amerikaans Samoa",[a.Yiddish]:"Amerikaans Samoa",[a.Yoruba]:"Amerikaans Samoa",[a.Zulu]:"Amerikaans Samoa"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Pago Pago",total:558e3}},geography:{area:199,region:ee.Oceania,sub_region:ae.Polynesia},government:{capital:"Pago Pago",type:"Nonmetropolitan Territory of the US"}}},Andorra:{i18n:{calling_codes:[376],currencies:[A.Euro],languages:[a.Catalan,a.Spanish],tz:{offsets:[i.UTC_PLUS_1,i.UTC_PLUS_2],regions:[s.EuropeAndorra],timezones:[n.CentralEuropeanTime]}},id:u.Andorra,info:{flag:{emoji:"\u{1F1E6}\u{1F1F4}",emoji_unicode:"U+1F1E6 U+1F1F4",svg:"https://www.countryflags.io/ad/flat/64.svg"},tld:[".ad"]},iso:{alpha2:u.Andorra,alpha3:"AND",numeric:"020"},name:{alt_spellings:["AD","Principality of Andorra","Principat d'Andorra"],demonym:"Andorran",native:{endonym:"Andorra"},official:"Principality of Andorra",short:"Andorra",translations:{[a.Afrikaans]:"Andorra",[a.Albanian]:"Andorra",[a.Amharic]:"\u12A0\u1295\u12F6\u122B",[a.Arabic]:"\u0623\u0646\u062F\u0648\u0631\u0627",[a.Armenian]:"\u0540\u0561\u0576\u0564\u0561\u0580\u0561\u057E\u0561\u0575\u0584",[a.Azerbaijani]:"Andorra",[a.Bashkir]:"\u0410\u043D\u0434\u043E\u0440\u0430",[a.Basque]:"Andorra",[a.Belarusian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[a.Bengali]:"\u0985\u09A8\u09CD\u09A1\u09CB\u09B0\u09BE",[a.Berber]:"\u0623\u0646\u062F\u0648\u0631\u0627",[a.Bhutani]:"\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B",[a.Bosnian]:"Andora",[a.Breton]:"Andorra",[a.Bulgarian]:"\u0410\u043D\u0434\u043E\u0440\u0430",[a.Burmese]:"\u1021\u1014\u1039\u1010\u102C\u101B\u102D\u102F\u1038",[a.Catalan]:"Andorra",[a.Chinese]:"\u5B89\u9053\u5C14",[a.Croatian]:"Andora",[a.Czech]:"Andorra",[a.Danish]:"Andorra",[a.Dutch]:"Andorra",[a.English]:"Andorra",[a.Esperanto]:"Andora",[a.Estonian]:"Andorra",[a.Finnish]:"Andorra",[a.French]:"Andorra",[a.Frisian]:"Andorra",[a.Galician]:"Andorra",[a.Georgian]:"\u12A0\u1295\u12F6\u122B",[a.German]:"Andorra",[a.Greek]:"\u0391\u03BD\u03B4\u03CC\u03C1\u03B1",[a.Hebrew]:"\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4",[a.Hindi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[a.Hungarian]:"Andorra",[a.Icelandic]:"Andorra",[a.Igbo]:"Andorra",[a.Indonesian]:"Andorra",[a.Irish]:"Andorra",[a.Italian]:"Andorra",[a.Japanese]:"\u30A2\u30F3\u30C9\u30E9",[a.Javanese]:"Andorra",[a.Kannada]:"\u0C85\u0C82\u0CA1\u0CCB\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD",[a.Kazakh]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[a.Khmer]:"\u17A2\u1784\u17CB\u178A\u17B6\u179A\u17B6",[a.Korean]:"\uC548\uB3C4\uB77C",[a.Kurdish]:"Andorra",[a.Kyrgyz]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[a.Lao]:"\u0EAD\u0EB1\u0E99\u0EC2\u0E94\u0EA3\u0EB2",[a.Latin]:"Andorra",[a.Latvian]:"Andora",[a.Lithuanian]:"Andora",[a.Luxembourgish]:"Andorra",[a.Macedonian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[a.Malagasy]:"Andorra",[a.Malay]:"Andorra",[a.Malayalam]:"\u0D05\u0D02\u0D21\u0D4B\u0D30\u0D3F\u0D2F\u0D28\u0D4D",[a.Maltese]:"Andorra",[a.Maori]:"Andorra",[a.Marathi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[a.Mongolian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[a.Nepali]:"\u0905\u0902\u0921\u094B\u0930\u093E",[a.Norwegian]:"Andorra",[a.Pashto]:"\u0622\u0646\u062F\u0648\u0631\u0627",[a.Persian]:"\u0622\u0646\u062F\u0648\u0631\u0627",[a.Polish]:"Andora",[a.Portuguese]:"Andorra",[a.Punjabi]:"\u0A05\u0A70\u0A21\u0A4B\u0A30\u0A3E",[a.Romanian]:"Andorra",[a.Russian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[a.Samoan]:"Andorra",[a.Sanskrit]:"\u0905\u0902\u0921\u094B\u0930\u093E",[a.Scots]:"Andorra",[a.Serbian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[a.Sesotho]:"Andorra",[a.Shona]:"Andorra",[a.Sindhi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[a.Sinhala]:"\u0D86\u0DB1\u0DCA\u0DAF\u0DDA",[a.Slovak]:"Andorra",[a.Slovenian]:"Andora",[a.Somali]:"Andorra",[a.Spanish]:"Andorra",[a.Sudanese]:"Andorra",[a.Swahili]:"Andorra",[a.Swedish]:"Andorra",[a.Tagalog]:"Andorra",[a.Tajik]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[a.Tamil]:"\u0B85\u0BA9\u0BCB\u0BB0\u0BCD\u0B9F\u0BBE",[a.Tatar]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[a.Telugu]:"\u0C05\u0C02\u0C21\u0C4B\u0C30\u0C4D\u0C30\u0C3E",[a.Thai]:"\u0E2D\u0E31\u0E19\u0E14\u0E2D\u0E23\u0E4C\u0E23\u0E32",[a.Tibetan]:"\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B",[a.Turkish]:"Andora",[a.Ukrainian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[a.Urdu]:"\u0622\u0646\u062F\u0648\u0631\u0627",[a.Uzbek]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[a.Vietnamese]:"Andorra",[a.Welsh]:"Andorra",[a.Xhosa]:"Andorra",[a.Yiddish]:"\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4",[a.Yoruba]:"Andorra",[a.Zulu]:"Andorra"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Andorra la Vella",total:78e3}},geography:{area:468,region:ee.Europe,sub_region:ae.SouthernEurope},government:{capital:"Andorra la Vella",type:"Constitutional Monarchy"}}},Angola:{i18n:{calling_codes:[244],currencies:[A.AngolaKwanza],languages:[a.Portuguese,a.Spanish,a.French,a.Italian,a.German,a.English],tz:{offsets:[i.UTC_0,i.UTC_PLUS_1,i.UTC_PLUS_2],regions:[s.AfricaLuanda],timezones:[n.WestAfricaTime]}},id:u.Angola,info:{flag:{emoji:"\u{1F1E6}\u{1F1EC}",emoji_unicode:"U+1F1E6 U+1F1EC",svg:"https://www.countryflags.io/ao/flat/64.svg"},tld:[".ao"]},iso:{alpha2:u.Angola,alpha3:"AGO",numeric:"024"},name:{alt_spellings:["AO","Rep\xFAblica de Angola","\u0281\u025Bpublika de an"],demonym:"Angolan",native:{endonym:"Angola"},official:"Republic of Angola",short:"Angola",translations:{[a.Afrikaans]:"Angola",[a.Albanian]:"Ang\xF2la",[a.Amharic]:"\u12A0\u1295\u130E\u120A\u12EB",[a.Arabic]:"\u0623\u0646\u063A\u0648\u0644\u0627",[a.Armenian]:"\u0540\u0561\u0576\u0563\u0561\u056C\u0561\u056F\u0561",[a.Azerbaijani]:"Ang\u0259l",[a.Bashkir]:"\u0410\u043D\u0433\u043E\u043B\u0430",[a.Basque]:"Angola",[a.Belarusian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[a.Bengali]:"\u0985\u0999\u09CD\u0997\u09B2\u09BE",[a.Berber]:"Angola",[a.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42",[a.Bosnian]:"Angola",[a.Breton]:"Angola",[a.Bulgarian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[a.Burmese]:"\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A",[a.Catalan]:"Angola",[a.Chinese]:"\u5B89\u54E5\u62C9",[a.Croatian]:"Angola",[a.Czech]:"Angola",[a.Danish]:"Angola",[a.Dutch]:"Angola",[a.English]:"Angola",[a.Esperanto]:"Angolo",[a.Estonian]:"Angola",[a.Finnish]:"Angola",[a.French]:"Angola",[a.Frisian]:"Angola",[a.Galician]:"Angola",[a.Georgian]:"\u10D0\u10DC\u10D2\u10DD\u10DA\u10D0",[a.German]:"Angola",[a.Greenlandic]:"Angola",[a.Greek]:"\u0391\u03B3\u03BA\u03CC\u03BB\u03B1",[a.Gujarati]:"\u0A85\u0A82\u0A97\u0ACB\u0AB2\u0ABE",[a.Haitian]:"Angola",[a.Hausa]:"Angola",[a.Hebrew]:"\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4",[a.Hindi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[a.Hungarian]:"Angola",[a.Icelandic]:"Angola",[a.Igbo]:"Angola",[a.Indonesian]:"Angola",[a.Irish]:"Angola",[a.Italian]:"Angola",[a.Japanese]:"\u30A2\u30F3\u30B4\u30E9",[a.Javanese]:"Anggol",[a.Kannada]:"\u0C85\u0C82\u0C97\u0CCB\u0CB2\u0CBE",[a.Kazakh]:"\u0410\u043D\u0433\u043E\u043B\u0430",[a.Khmer]:"\u17A2\u1784\u17CB\u1780\u17B6\u179B\u17A2\u1784\u17CB\u1782\u17D2\u179B\u17C1\u179F",[a.Korean]:"\uC559\uACE8\uB77C",[a.Kurdish]:"Angola",[a.Kyrgyz]:"\u0410\u043D\u0433\u043E\u043B\u0430",[a.Lao]:"\u0EAD\u0EB0\u0E99\u0EB2\u0E94\u0EB2",[a.Latin]:"Angola",[a.Latvian]:"Angola",[a.Lithuanian]:"Angola",[a.Luxembourgish]:"Angola",[a.Macedonian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[a.Malagasy]:"Angola",[a.Malay]:"Angola",[a.Malayalam]:"\u0D05\u0D02\u0D17\u0D4B\u0D33\u0D3E",[a.Maltese]:"Angola",[a.Maori]:"Angola",[a.Marathi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[a.Mongolian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[a.Nepali]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[a.Norwegian]:"Angola",[a.Pashto]:"\u0627\u0646\u06AB\u0648\u0644\u0627",[a.Persian]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[a.Polish]:"Angola",[a.Portuguese]:"Angola",[a.Punjabi]:"\u0A05\u0A19\u0A4D\u0A17\u0A4B\u0A32\u0A3E",[a.Romanian]:"Angole",[a.Russian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[a.Samoan]:"Angola",[a.Sanskrit]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[a.Scots]:"Angola",[a.Serbian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[a.Sesotho]:"Angola",[a.Shona]:"Angola",[a.Sindhi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[a.Sinhala]:"\u0D86\u0D9C\u0DBD\u0DD2\u0DBA\u0DCF\u0DC0",[a.Slovak]:"Angola",[a.Slovenian]:"Angola",[a.Somali]:"Angola",[a.Spanish]:"Angola",[a.Sudanese]:"Angola",[a.Swahili]:"Angola",[a.Swedish]:"Angola",[a.Tagalog]:"Angola",[a.Tajik]:"\u0410\u043D\u0433\u043E\u043B\u0430",[a.Tamil]:"\u0B85\u0B99\u0BCD\u0B95\u0BCB\u0BB2\u0BBE",[a.Tatar]:"\u0410\u043D\u0433\u043E\u043B\u0430",[a.Telugu]:"\u0C05\u0C02\u0C17\u0C4B\u0C32\u0C3E",[a.Thai]:"\u0E2D\u0E07\u0E04\u0E4C\u0E01\u0E32\u0E23\u0E2D\u0E32\u0E19\u0E32\u0E21\u0E34\u0E2A\u0E16\u0E32\u0E19",[a.Tibetan]:"\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B",[a.Turkish]:"Angola",[a.Ukrainian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[a.Urdu]:"\u0627\u0646\u06AF\u0648\u0644\u0627",[a.Uzbek]:"Angola",[a.Vietnamese]:"Angola",[a.Xhosa]:"Angola",[a.Welsh]:"Angola",[a.Yiddish]:"\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4",[a.Yoruba]:"Angola",[a.Zulu]:"Angola"}}},Anguilla:{i18n:{calling_codes:[1264],currencies:[A.DominicaDollar,A.EastCaribbeanDollar,A.Euro,A.UnitedStatesDollar,A.BritishPound],languages:[a.English,a.Spanish],tz:{offsets:[i.UTC_MINUS_4],regions:[s.AmericaAnguilla],timezones:[n.AtlanticStandardTime]}},id:u.Anguilla,info:{flag:{emoji:"\u{1F1E6}\u{1F1EC}",emoji_unicode:"U+1F1E6 U+1F1EC",svg:"https://www.countryflags.io/ai/flat/64.svg"},tld:[".ai"]},iso:{alpha2:u.Anguilla,alpha3:"AIA",numeric:"660"},name:{alt_spellings:["AI"],demonym:"Anguillian",native:{endonym:"Anguilla"},official:"Anguilla",short:"Anguilla",translations:{[a.Afrikaans]:"Anguilla",[a.Albanian]:"Anguilla",[a.Amharic]:"\u12A0\u1295\u1309\u120B",[a.Arabic]:"\u0623\u0646\u063A\u0648\u064A\u0644\u0627",[a.Armenian]:"\u0531\u0576\u0563\u056B\u056C\u0561",[a.Azerbaijani]:"Az\u0259rbaycan",[a.Bashkir]:"\u0410\u043D\u0433\u0438\u043B\u0438",[a.Basque]:"Angila",[a.Belarusian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[a.Bengali]:"\u0985\u0999\u09CD\u0997\u09C0\u09B2\u09BE",[a.Berber]:"\u0623\u0646\u063A\u0648\u064A\u0644\u0627",[a.Bhutani]:"\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B",[a.Bosnian]:"Angila",[a.Breton]:"Angila",[a.Bulgarian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[a.Burmese]:"\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A",[a.Catalan]:"Angilla",[a.Chinese]:"\u5B89\u572D\u62C9",[a.Croatian]:"Angila",[a.Czech]:"Anguilla",[a.Danish]:"Anguilla",[a.Dutch]:"Anguilla",[a.English]:"Anguilla",[a.Esperanto]:"Angila",[a.Estonian]:"Anguilla",[a.Finnish]:"Anguilla",[a.French]:"Anguilla",[a.Frisian]:"Angila",[a.Galician]:"Anguilla",[a.Georgian]:"\u10D0\u10DC\u10D2\u10D8\u10DA\u10D0",[a.German]:"Anguilla",[a.Greenlandic]:"Anguilla",[a.Greek]:"\u0391\u03BD\u03B3\u03BA\u03C5\u03BB\u03AC",[a.Gujarati]:"\u0A85\u0A82\u0A97\u0ACD\u0AAF\u0ABE\u0AB2\u0ABE",[a.Haitian]:"Anguilla",[a.Hausa]:"Anguilla",[a.Hebrew]:"\u05D0\u05E0\u05D2\u05D5\u05D9\u05D0\u05DC\u05D4",[a.Hindi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[a.Hungarian]:"Anguilla",[a.Icelandic]:"Anguilla",[a.Igbo]:"Anguilla",[a.Indonesian]:"Anguilla",[a.Irish]:"Anguilla",[a.Italian]:"Anguilla",[a.Japanese]:"\u30A2\u30F3\u30AE\u30E9",[a.Javanese]:"Anguilla",[a.Kannada]:"\u0C85\u0C82\u0C97\u0CCD\u0CB5\u0CC7\u0CB2\u0CBE",[a.Kazakh]:"\u0410\u043D\u0433\u0438\u043B\u0438",[a.Khmer]:"\u17A2\u1784\u17CB\u1780\u17B6\u179A\u17A0\u17D2\u1782\u17B8\u1798",[a.Korean]:"\uC575\uADC8\uB77C",[a.Kurdish]:"Anguilla",[a.Kyrgyz]:"\u0410\u043D\u0433\u0438\u043B\u0438",[a.Lao]:"\u0EAD\u0EB0\u0E99\u0EB0\u0E88\u0EB3",[a.Latin]:"Anguilla",[a.Latvian]:"Anguilla",[a.Lithuanian]:"Anguilla",[a.Luxembourgish]:"Angilla",[a.Macedonian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[a.Malagasy]:"Angila",[a.Malay]:"Anguilla",[a.Malayalam]:"\u0D05\u0D02\u0D17\u0D4D\u0D35\u0D47\u0D32\u0D3E",[a.Maltese]:"Anguilla",[a.Maori]:"Anguilla",[a.Marathi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[a.Mongolian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[a.Nepali]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[a.Norwegian]:"Anguilla",[a.Pashto]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[a.Persian]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[a.Polish]:"Anguilla",[a.Portuguese]:"Anguilla",[a.Punjabi]:"\u0A05\u0A02\u0A17\u0A40\u0A32\u0A3E",[a.Romanian]:"Anguilla",[a.Russian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[a.Samoan]:"Anguilla",[a.Sanskrit]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[a.Scots]:"Anguilla",[a.Serbian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[a.Sesotho]:"Anguilla",[a.Shona]:"Anguilla",[a.Sindhi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[a.Sinhala]:"\u0D86\u0D82\u0D9C\u0DD2\u0DBD\u0DCF\u0DC0",[a.Slovak]:"Anguilla",[a.Slovenian]:"Anguilla",[a.Somali]:"Anguilla",[a.Spanish]:"Anguilla",[a.Sudanese]:"Anguilla",[a.Swahili]:"Anguilla",[a.Swedish]:"Anguilla",[a.Tagalog]:"Anguilla",[a.Tajik]:"\u0410\u043D\u0433\u0438\u043B\u0438",[a.Tamil]:"\u0B85\u0B99\u0BCD\u0B95\u0BC8\u0BB2\u0BBE",[a.Tatar]:"\u0410\u043D\u0433\u0438\u043B\u0438",[a.Telugu]:"\u0C05\u0C02\u0C17\u0C4D\u0C35\u0C47\u0C32\u0C3E",[a.Thai]:"\u0E2D\u0E31\u0E07\u0E01\u0E32\u0E25\u0E32",[a.Tibetan]:"\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B",[a.Turkish]:"Anguilla",[a.Ukrainian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[a.Urdu]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[a.Uzbek]:"\u0410\u043D\u0433\u0438\u043B\u0438",[a.Vietnamese]:"Anguilla",[a.Welsh]:"Anguilla",[a.Xhosa]:"Anguilla",[a.Yiddish]:"Anguilla",[a.Yoruba]:"Anguilla",[a.Zulu]:"Anguilla"}}},Antarctica:{i18n:{calling_codes:[672],currencies:[A.UnitedStatesDollar,A.Euro],languages:[a.English,a.Spanish,a.French,a.Portuguese,a.Italian,a.Dutch,a.German,a.Swedish,a.Norwegian,a.Danish,a.Finnish],tz:{offsets:[i.UTC_PLUS_1,i.UTC_PLUS_2],regions:[s.AntarcticaCasey,s.AntarcticaDavis,s.AntarcticaMcMurdo,s.AntarcticaPalmer,s.AntarcticaRothera],timezones:[n.AtlanticStandardTime,n.CentralTime,n.EasternTime,n.AtlanticStandardTime,n.AzoresStandardTime,n.NewfoundlandStandardTime]}},id:u.Antarctica,info:{flag:{emoji:"\u{1F1E6}\u{1F1F6}",emoji_unicode:"U+1F1E6 U+1F1F6",svg:"https://www.countryflags.io/aq/flat/64.svg"},tld:[".aq"]},iso:{alpha2:u.Antarctica,alpha3:"ATA",numeric:"010"},name:{alt_spellings:["AQ"],demonym:"Antarctican",native:{endonym:"Antarctica"},official:"Antarctica",short:"Antarctica",translations:{[a.Afrikaans]:"Antarctica",[a.Albanian]:"Antarktika",[a.Amharic]:"\u12A0\u1295\u1272\u120D\u12AB\u1293",[a.Arabic]:"\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[a.Armenian]:"\u0540\u0561\u0576\u0561\u0580\u0561\u057F\u056F\u0578",[a.Azerbaijani]:"Az\u0259rbaycan",[a.Bashkir]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[a.Basque]:"Antarktika",[a.Belarusian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[a.Bengali]:"\u0985\u09A8\u09CD\u09A4\u09B0\u09BE\u09B6\u09CD\u09AC\u09C0",[a.Berber]:"\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[a.Bhutani]:"\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B",[a.Bosnian]:"Antarktika",[a.Breton]:"Antarktika",[a.Bulgarian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[a.Burmese]:"\u1021\u1014\u1039\u1010\u102C\u101B\u102E\u1038\u101A\u102C\u1038",[a.Catalan]:"Ant\xE0rtida",[a.Chinese]:"\u5357\u6781\u6D32",[a.Croatian]:"Antarktika",[a.Czech]:"Antarktida",[a.Danish]:"Antarktis",[a.Dutch]:"Antarctica",[a.English]:"Antarctica",[a.Esperanto]:"Antarktika",[a.Estonian]:"Antarktika",[a.Finnish]:"Antarktis",[a.French]:"Antarctica",[a.Frisian]:"Antarktis",[a.Galician]:"Ant\xE1rtida",[a.Georgian]:"\u10D0\u10DC\u10E2\u10D0\u10E0\u10E5\u10E2\u10D8\u10D9\u10D0",[a.German]:"Antarktis",[a.Greenlandic]:"Antarktis",[a.Greek]:"\u0391\u03BD\u03C4\u03B1\u03C1\u03BA\u03C4\u03B9\u03BA\u03AE",[a.Gujarati]:"\u0A85\u0AA8\u0ACD\u0AA4\u0AB0\u0ABE\u0AB6\u0ACD\u0AB5\u0AC0",[a.Haitian]:"Antarctica",[a.Hausa]:"Antarktika",[a.Hebrew]:"\u05D0\u05E0\u05D8\u05E8\u05E7\u05D8\u05D9\u05E7\u05D4",[a.Hindi]:"\u0905\u0928\u094D\u0924\u0930\u0915\u094D\u0937\u0947\u0924\u094D\u0930",[a.Hungarian]:"Antarktika",[a.Icelandic]:"Antarktis",[a.Igbo]:"Antarktika",[a.Indonesian]:"Antarktika",[a.Irish]:"Antarktika",[a.Italian]:"Antartide",[a.Japanese]:"\u5357\u6975",[a.Javanese]:"Antarktika",[a.Kannada]:"\u0C85\u0CA8\u0CCD\u0CA4\u0CB0\u0CBE\u0CB6\u0CCD\u0CB5\u0CBF",[a.Kazakh]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[a.Khmer]:"\u17A2\u1784\u17CB\u179F\u17D2\u1780\u179A\u17A2\u17B6\u1798\u17C9\u17BB\u1799",[a.Korean]:"\uC564\uD2F0\uCE74\uD1A0\uB2C9",[a.Kurdish]:"Antarktika",[a.Kyrgyz]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[a.Lao]:"\u0EAD\u0EB0\u0E99\u0EAD\u0EA5\u0EB2\u0E81\u0EB4\u0EAA\u0EB0",[a.Latin]:"Antarctica",[a.Latvian]:"Antarktika",[a.Lithuanian]:"Antarktis",[a.Luxembourgish]:"Antarktis",[a.Macedonian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[a.Malagasy]:"Antarctica",[a.Malay]:"Antarktika",[a.Malayalam]:"\u0D05\u0D28\u0D4D\u0D24\u0D30\u0D3E\u0D36\u0D4D\u0D35\u0D3F",[a.Maltese]:"Antarktika",[a.Maori]:"Antarktika",[a.Marathi]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[a.Mongolian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[a.Nepali]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[a.Norwegian]:"Antarktis",[a.Pashto]:"\u0627\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[a.Persian]:"\u0622\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627",[a.Polish]:"Antarktyka",[a.Portuguese]:"Ant\xE1rtida",[a.Punjabi]:"\u0A05\u0A28\u0A4D\u0A24\u0A30\u0A3E\u0A36\u0A3F\u0A15\u0A3E",[a.Romanian]:"Antarctica",[a.Russian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[a.Samoan]:"Antarktika",[a.Sanskrit]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[a.Scots]:"Antarktika",[a.Serbian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[a.Sesotho]:"Antarktika",[a.Shona]:"Antarktika",[a.Sindhi]:"Antarktika",[a.Sinhala]:"\u0D86\u0DB1\u0DCA\u0DA7\u0DCA\u0DA7\u0DD2\u0D9A\u0DCF\u0DC0",[a.Slovak]:"Antarktika",[a.Slovenian]:"Antarktika",[a.Somali]:"Antarktika",[a.Spanish]:"Ant\xE1rtida",[a.Sudanese]:"Antarktika",[a.Swahili]:"Antarktika",[a.Swedish]:"Antarktis",[a.Tagalog]:"Antarktika",[a.Tajik]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[a.Tamil]:"\u0B85\u0BA9\u0BCD\u0BA4\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BBF\u0B95\u0BCD",[a.Tatar]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[a.Telugu]:"\u0C05\u0C28\u0C4D\u0C24\u0C30\u0C3E\u0C36\u0C4D\u0C35\u0C3F\u0C15\u0C3E",[a.Thai]:"\u0E20\u0E39\u0E21\u0E34\u0E20\u0E32\u0E04\u0E2D\u0E32\u0E19\u0E31\u0E19\u0E15\u0E34\u0E01\u0E32",[a.Tibetan]:"\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72\u0F0B\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72",[a.Turkish]:"Antarktika",[a.Ukrainian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[a.Urdu]:"\u0627\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627",[a.Uzbek]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[a.Vietnamese]:"\u0110\u1EA5t Antarktik",[a.Welsh]:"Antarktika",[a.Xhosa]:"Antarktika",[a.Yiddish]:"Antarktika",[a.Yoruba]:"Antarktika",[a.Zulu]:"Antarktika"}}},Armenia:{i18n:{calling_codes:[374],currencies:[A.ArmeniaDram],languages:[a.Armenian],tz:{offsets:[i.UTC_PLUS_4],regions:[s.AsiaJakarta],timezones:[n.ArmeniaTime]}},id:u.Armenia,info:{flag:{emoji:"\u{1F1E6}\u{1F1F2}",emoji_unicode:"U+1F1E6 U+1F1F2",svg:"https://www.countryflags.io/am/flat/64.svg"},tld:[".am"]},iso:{alpha2:u.Armenia,alpha3:"ARM",numeric:"051"},name:{alt_spellings:["AM","Hayastan","Republic of Armenia","\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"],demonym:"Armenian",native:{endonym:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"},official:"Republic of Armenia",short:"Armenia",translations:{[a.Afrikaans]:"Armeni\xEB",[a.Albanian]:"Armenia",[a.Amharic]:"\u12A0\u121B\u122D\u129B",[a.Arabic]:"\u0623\u0631\u0645\u064A\u0646\u064A\u0627",[a.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[a.Azerbaijani]:"Az\u0259rbaycan",[a.Bashkir]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[a.Basque]:"Arm\xE9nia",[a.Belarusian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[a.Bengali]:"\u0986\u09B0\u09CD\u09AE\u09C7\u09A8\u09BF",[a.Berber]:"\u0623\u0631\u0645\u064A\u0646\u064A\u0627",[a.Bhutani]:"\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42",[a.Bosnian]:"Armenija",[a.Breton]:"Armeni\xEB",[a.Bulgarian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[a.Burmese]:"\u1021\u102C\u1019\u1010\u102D\u1010\u1039",[a.Catalan]:"Arm\xE8nia",[a.Chinese]:"\u4E9A\u7F8E\u5C3C\u4E9A",[a.Croatian]:"Armenija",[a.Czech]:"Arm\xE9nie",[a.Danish]:"Armenien",[a.Dutch]:"Armeni\xEB",[a.English]:"Armenia",[a.Esperanto]:"Armenia",[a.Estonian]:"Armeenia",[a.Finnish]:"Armenia",[a.French]:"Armenia",[a.Frisian]:"Armeenia",[a.Galician]:"Arm\xE9nia",[a.Georgian]:"\u10D0\u10E0\u10DB\u10DD\u10DC\u10D8",[a.German]:"Armenien",[a.Greenlandic]:"Armenia",[a.Greek]:"\u0391\u03C1\u03BC\u03B5\u03BD\u03AF\u03B1",[a.Gujarati]:"\u0A85\u0AB0\u0ACD\u0AAE\u0AC7\u0AA8\u0ABF",[a.Haitian]:"Armenia",[a.Hausa]:"Armenia",[a.Hebrew]:"\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4",[a.Hindi]:"\u0905\u05E8\u05DE\u05E0\u093F\u092F\u093E",[a.Hungarian]:"\xD6rm\xE9nyorsz\xE1g",[a.Icelandic]:"Armenia",[a.Igbo]:"Armenia",[a.Indonesian]:"Armenia",[a.Irish]:"Armenia",[a.Italian]:"Armenia",[a.Japanese]:"\u30A2\u30EB\u30E1\u30CB\u30A2",[a.Javanese]:"Armenia",[a.Kannada]:"\u0C85\u0CB0\u0CCD\u0CAE\u0CC7\u0CA8\u0CBF",[a.Kazakh]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[a.Khmer]:"\u17A2\u17B6\u1798\u17C9\u17C1\u179A\u17B8",[a.Korean]:"\uC544\uB974\uBA54\uB2C8\uC544",[a.Kurdish]:"Armenia",[a.Kyrgyz]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[a.Lao]:"\u0EAD\u0EB2\u0EAB\u0EBC\u0E99\u0EB2",[a.Latin]:"Armenia",[a.Latvian]:"Armeenia",[a.Lithuanian]:"Arm\u0117nija",[a.Luxembourgish]:"Armenien",[a.Macedonian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430",[a.Malagasy]:"Armenia",[a.Malay]:"Armenia",[a.Malayalam]:"\u0D05\u0D30\u0D4D\u200D\u0D2E\u0D47\u0D28\u0D3F",[a.Maltese]:"Armenia",[a.Maori]:"Armenia",[a.Marathi]:"\u0905\u0930\u094D\u092E\u0947\u0928\u093F",[a.Mongolian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[a.Nepali]:"\u0905\u0930\u094D\u092E\u0947\u0928\u093F",[a.Norwegian]:"Armenia",[a.Pashto]:"\u0622\u0631\u0645\u06CC\u0646\u06CC\u0627",[a.Persian]:"\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646",[a.Polish]:"Armenia",[a.Portuguese]:"Armenia",[a.Punjabi]:"\u0A05\u0A30\u0A2E\u0A40\u0A28\u0A40",[a.Romanian]:"Armenia",[a.Russian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[a.Samoan]:"Armenia",[a.Sanskrit]:"Armenia",[a.Scots]:"Armenia",[a.Serbian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430",[a.Sesotho]:"Armenia",[a.Shona]:"Armenia",[a.Sindhi]:"Armenia",[a.Sinhala]:"\u0D86\u0DBB\u0DCA\u0DB8\u0DD3\u0DB1\u0DD2",[a.Slovak]:"Armenia",[a.Slovenian]:"Armenija",[a.Somali]:"Armenia",[a.Spanish]:"Armenia",[a.Sudanese]:"Armenia",[a.Swahili]:"Armenia",[a.Swedish]:"Armenien",[a.Tagalog]:"Armenia",[a.Tajik]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[a.Tamil]:"\u0B85\u0BB0\u0BCD\u0BAE\u0BC7\u0BA9\u0BBF\u0BAF\u0BA9\u0BCD",[a.Tatar]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[a.Telugu]:"\u0C05\u0C30\u0C4D\u0C2E\u0C47\u0C28\u0C3F",[a.Thai]:"\u0E2D\u0E32\u0E23\u0E4C\u0E40\u0E21\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19",[a.Tibetan]:"\u0F68\u0F62\u0F0B\u0F58\u0F7A\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F74\u0F0D",[a.Turkish]:"Ermenistan",[a.Ukrainian]:"\u0410\u0440\u043C\u0435\u043D\u0456\u044F",[a.Urdu]:"\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646",[a.Uzbek]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[a.Vietnamese]:"Armenia",[a.Welsh]:"Armenia",[a.Xhosa]:"Armenia",[a.Yiddish]:"\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4",[a.Yoruba]:"Armenia",[a.Zulu]:"Armenia"}}},SomeCountry:{i18n:{calling_codes:[],currencies:[],languages:[],tz:{offsets:[],regions:[],timezones:[]}},id:u.AmericanSamoa,info:{flag:{emoji:"",emoji_unicode:"",svg:""},tld:[]},iso:{alpha2:u.AmericanSamoa,alpha3:"",numeric:""},name:{alt_spellings:[],demonym:"",native:{endonym:""},official:"",short:"",translations:{[a.Afrikaans]:"",[a.Albanian]:"",[a.Amharic]:"",[a.Arabic]:"",[a.Armenian]:"",[a.Azerbaijani]:"",[a.Bashkir]:"",[a.Basque]:"",[a.Belarusian]:"",[a.Bengali]:"",[a.Berber]:"",[a.Bhutani]:"",[a.Bosnian]:"",[a.Breton]:"",[a.Bulgarian]:"",[a.Burmese]:"",[a.Catalan]:"",[a.Chinese]:"",[a.Croatian]:"",[a.Czech]:"",[a.Danish]:"",[a.Dutch]:"",[a.English]:"",[a.Esperanto]:"",[a.Estonian]:"",[a.Finnish]:"",[a.French]:"",[a.Frisian]:"",[a.Galician]:"",[a.Georgian]:"",[a.German]:"",[a.Greenlandic]:"",[a.Greek]:"",[a.Gujarati]:"",[a.Haitian]:"",[a.Hausa]:"",[a.Hebrew]:"",[a.Hindi]:"",[a.Hungarian]:"",[a.Icelandic]:"",[a.Igbo]:"",[a.Indonesian]:"",[a.Irish]:"",[a.Italian]:"",[a.Japanese]:"",[a.Javanese]:"",[a.Kannada]:"",[a.Kazakh]:"",[a.Khmer]:"",[a.Korean]:"",[a.Kurdish]:"",[a.Kyrgyz]:"",[a.Lao]:"",[a.Latin]:"",[a.Latvian]:"",[a.Lithuanian]:"",[a.Luxembourgish]:"",[a.Macedonian]:"",[a.Malagasy]:"",[a.Malay]:"",[a.Malayalam]:"",[a.Maltese]:"",[a.Maori]:"",[a.Marathi]:"",[a.Mongolian]:"",[a.Nepali]:"",[a.Norwegian]:"",[a.Pashto]:"",[a.Persian]:"",[a.Polish]:"",[a.Portuguese]:"",[a.Punjabi]:"",[a.Romanian]:"",[a.Russian]:"",[a.Samoan]:"",[a.Sanskrit]:"",[a.Scots]:"",[a.Serbian]:"",[a.Sesotho]:"",[a.Shona]:"",[a.Sindhi]:"",[a.Sinhala]:"",[a.Slovak]:"",[a.Slovenian]:"",[a.Somali]:"",[a.Spanish]:"",[a.Sudanese]:"",[a.Swahili]:"",[a.Swedish]:"",[a.Tagalog]:"",[a.Tajik]:"",[a.Tamil]:"",[a.Tatar]:"",[a.Telugu]:"",[a.Thai]:"",[a.Tibetan]:"",[a.Turkish]:"",[a.Ukrainian]:"",[a.Urdu]:"",[a.Uzbek]:"",[a.Vietnamese]:"",[a.Welsh]:"",[a.Xhosa]:"",[a.Yiddish]:"",[a.Yoruba]:"",[a.Zulu]:""}}}},mc={id:a.Afrikaans,language:{code:r.Afrikaans,name:"Afrikaans",native:"Afrikaans"},name:"Afrikaans",native_name:"Afrikaans",rtl:!1},dc={country:{code:u.SouthAfrica,name:"South Africa",native:"South Africa"},id:a.AfrikaansSouthAfrica,language:{code:r.Afrikaans,name:"Afrikaans",native:"Afrikaans"},name:"Afrikaans (South Africa)",native_name:"Afrikaans (Suid-Afrika)",rtl:!1},cc={id:a.Albanian,language:{code:r.Albanian,name:"Albanian",native:"Shqip"},name:"Albanian",native_name:"Shqip",rtl:!1},Ac={country:{code:u.Albania,name:"Albania",native:"Shqip\xEBria"},id:a.AlbanianAlbania,language:{code:r.Albanian,name:"Albanian",native:"Shqip"},name:"Albanian (Albania)",native_name:"Shqip (Shqip\xEBria)",rtl:!1},gc={id:a.Amharic,language:{code:r.Amharic,name:"Amharic",native:"\u12A0\u121B\u122D\u129B"},name:"Amharic",native_name:"\u12A0\u121B\u122D\u129B",rtl:!1},Tc={country:{code:u.Ethiopia,name:"Ethiopia",native:"\u12A2\u1275\u12EE\u1335\u12EB"},id:a.AmharicEthiopia,language:{code:r.Amharic,name:"Amharic",native:"\u12A0\u121B\u122D\u129B"},name:"Amharic (Ethiopia)",native_name:"\u12A0\u121B\u122D\u129B (\u12A2\u1275\u12EE\u1335\u12EB)",rtl:!1},hc={id:a.Arabic,language:{code:r.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629",rtl:!0},fc={country:{code:u.Algeria,name:"Algeria",native:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631"},id:a.ArabicAlgeria,language:{code:r.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Algeria)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u062C\u0632\u0627\u0626\u0631)",rtl:!0},pc={country:{code:u.Bahrain,name:"Bahrain",native:"\u0627\u0644\u0628\u062D\u0631\u064A\u0646"},id:a.ArabicBahrain,language:{code:r.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Bahrain)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0628\u062D\u0631\u064A\u0646)",rtl:!0},Cc={country:{code:u.Egypt,name:"Egypt",native:"\u0645\u0635\u0631"},id:a.ArabicEgypt,language:{code:r.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Egypt)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0645\u0635\u0631)",rtl:!0},Ec={country:{code:u.Iraq,name:"Iraq",native:"\u0627\u0644\u0639\u0631\u0627\u0642"},id:a.ArabicIraq,language:{code:r.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Iraq)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0639\u0631\u0627\u0642)",rtl:!0},_c={country:{code:u.Jordan,name:"Jordan",native:"\u0627\u0644\u0623\u0631\u062F\u0646"},id:a.ArabicJordan,language:{code:r.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Jordan)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0623\u0631\u062F\u0646)",rtl:!0},Sc={country:{code:u.Kuwait,name:"Kuwait",native:"\u0627\u0644\u0643\u0648\u064A\u062A"},id:a.ArabicKuwait,language:{code:r.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Kuwait)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0643\u0648\u064A\u062A)",rtl:!0},Ic={country:{code:u.Lebanon,name:"Lebanon",native:"\u0644\u0628\u0646\u0627\u0646"},id:a.ArabicLebanon,language:{code:r.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Lebanon)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u0628\u0646\u0627\u0646)",rtl:!0},vc={country:{code:u.Libya,name:"Libya",native:"\u0644\u064A\u0628\u064A\u0627"},id:a.ArabicLibya,language:{code:r.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Libya)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u064A\u0628\u064A\u0627)",rtl:!0},bc={country:{code:u.Morocco,name:"Morocco",native:"\u0627\u0644\u0645\u063A\u0631\u0628"},id:a.ArabicMorocco,language:{code:r.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Morocco)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u063A\u0631\u0628)",rtl:!0},yc={country:{code:u.Oman,name:"Oman",native:"\u0639\u0645\u0627\u0646"},id:a.ArabicOman,language:{code:r.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Oman)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0639\u0645\u0627\u0646)",rtl:!0},Bc={country:{code:u.Qatar,name:"Qatar",native:"\u0642\u0637\u0631"},id:a.ArabicQatar,language:{code:r.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Qatar)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0642\u0637\u0631)",rtl:!0},Dc={country:{code:u.SaudiArabia,name:"Saudi Arabia",native:"\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629"},id:a.ArabicSaudiArabia,language:{code:r.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Saudi Arabia)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629)",rtl:!0},Uc={country:{code:u.Tunisia,name:"Tunisia",native:"\u062A\u0648\u0646\u0633"},id:a.ArabicTunisia,language:{code:r.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Tunisia)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u062A\u0648\u0646\u0633)",rtl:!0},Pc={country:{code:u.UnitedArabEmirates,name:"United Arab Emirates",native:"\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629"},id:a.ArabicUnitedArabEmirates,language:{code:r.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (United Arab Emirates)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629)",rtl:!0},Nc={country:{code:u.Yemen,name:"Yemen",native:"\u0627\u0644\u064A\u0645\u0646"},id:a.ArabicYemen,language:{code:r.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Yemen)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u064A\u0645\u0646)",rtl:!0},Mc={id:a.Armenian,language:{code:r.Armenian,name:"Armenian",native:"\u0540\u0561\u0575\u0565\u0580\u0565\u0576"},name:"Armenian",native_name:"\u0540\u0561\u0575\u0565\u0580\u0565\u0576",rtl:!1},Fc={country:{code:u.Armenia,name:"Armenia",native:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"},id:a.ArmenianArmenia,language:{code:r.Armenian,name:"Armenian",native:"\u0570\u0561\u0575\u0565\u0580\u0565\u0576"},name:"Armenian (Armenia)",native_name:"\u0570\u0561\u0575\u0565\u0580\u0565\u0576 (\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576)",rtl:!1},kc={id:a.Azerbaijani,language:{code:r.Azerbaijani,name:"Azeribaijani",native:"Az\u0259rbaycan"},name:"Azeri",native_name:"Az\u0259rbaycan",rtl:!1},Lc={country:{code:u.Azerbaijan,name:"Azerbaijan",native:"Az\u0259rbaycan"},id:a.AzerbaijaniAzerbaijan,language:{code:r.Azerbaijani,name:"Azerbaijani",native:"Az\u0259rbaycan"},name:"Azeri (Azerbaijan)",native_name:"Az\u0259rbaycan (Az\u0259rbaycan)",rtl:!1},zc={id:a.Basque,language:{code:r.Basque,name:"Basque",native:"Euskara"},name:"Basque",native_name:"Euskara",rtl:!1},Rc={country:{code:u.Spain,name:"Spain",native:"Espa\xF1a"},id:a.BasqueSpain,language:{code:r.Basque,name:"Basque",native:"Euskara"},name:"Basque (Spain)",native_name:"Euskara (Espa\xF1a)",rtl:!1},xc={id:a.Belarusian,language:{code:r.Belarusian,name:"Belarusian",native:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F"},name:"Belarusian",native_name:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F",rtl:!1},wc={country:{code:u.Belarus,name:"Belarus",native:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C"},id:a.BelarusianBelarus,language:{code:r.Belarusian,name:"Belarusian",native:"\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F"},name:"Belarusian (Belarus)",native_name:"\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F (\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C)",rtl:!1},qc={id:a.Bengali,language:{code:r.Bengali,name:"Bengali",native:"\u09AC\u09BE\u0982\u09B2\u09BE"},name:"Bengali",native_name:"\u09AC\u09BE\u0982\u09B2\u09BE",rtl:!1},Gc={country:{code:u.Bangladesh,name:"Bangladesh",native:"\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6"},id:a.BengaliBangladesh,language:{code:r.Bengali,name:"Bengali",native:"\u09AC\u09BE\u0982\u09B2\u09BE"},name:"Bengali (Bangladesh)",native_name:"\u09AC\u09BE\u0982\u09B2\u09BE (\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6)",rtl:!1},Kc={id:a.Bhutani,language:{code:r.Bhutani,name:"Bhutani",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Bhutani",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42",rtl:!1},Oc={country:{code:u.Bhutan,name:"Bhutan",native:"\u0F60\u0F56\u0FB2\u0F74\u0F42"},id:a.BhutaniBhutan,language:{code:r.Bhutani,name:"Bhutani",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Bhutani (Bhutan)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42)",rtl:!1},Hc={id:a.Bulgarian,language:{code:r.Bulgarian,name:"Bulgarian",native:"\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438"},name:"Bulgarian",native_name:"\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438",rtl:!1},jc={country:{code:u.Bulgaria,name:"Bulgaria",native:"\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F"},id:a.BulgarianBulgaria,language:{code:r.Bulgarian,name:"Bulgarian",native:"\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438"},name:"Bulgarian (Bulgaria)",native_name:"\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438 (\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F)",rtl:!1},$c={id:a.Burmese,language:{code:r.Burmese,name:"Burmese",native:"\u1017\u1019\u102C\u1005\u102C"},name:"Burmese",native_name:"\u1017\u1019\u102C\u1005\u102C",rtl:!1},Wc={country:{code:u.Myanmar,name:"Myanmar",native:"\u1019\u103C\u1014\u103A\u1019\u102C"},id:a.BurmeseMyanmar,language:{code:r.Burmese,name:"Burmese",native:"\u1017\u1019\u102C\u1005\u102C"},name:"Burmese (Myanmar)",native_name:"\u1017\u1019\u102C\u1005\u102C (\u1019\u103C\u1014\u103A\u1019\u102C)",rtl:!1},Vc={id:a.Cantonese,language:{code:r.Cantonese,name:"Cantonese",native:"\u5EE3\u6771\u8A71"},name:"Cantonese",native_name:"\u5EE3\u6771\u8A71",rtl:!1},Yc={country:{code:u.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:a.CantoneseHongKong,language:{code:r.Cantonese,name:"Cantonese",native:"\u5EE3\u6771\u8A71"},name:"Cantonese (Hong Kong)",native_name:"\u5EE3\u6771\u8A71 (\u9999\u6E2F)",rtl:!1},Zc={id:a.Catalan,language:{code:r.Catalan,name:"Catalan",native:"Catal\xE0"},name:"Catalan",native_name:"Catal\xE0",rtl:!1},Jc={country:{code:u.Spain,name:"Spain",native:"Espa\xF1a"},id:a.CatalanSpain,language:{code:r.Catalan,name:"Catalan",native:"Catal\xE0"},name:"Catalan (Spain)",native_name:"Catal\xE0 (Espanya)",rtl:!1},Qc={id:a.ChineseSimplified,language:{code:r.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified)",native_name:"\u4E2D\u6587",rtl:!1},Xc={country:{code:u.China,name:"China",native:"\u4E2D\u56FD"},id:a.ChineseSimplifiedChina,language:{code:r.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/China)",native_name:"\u4E2D\u6587 (\u4E2D\u56FD)",rtl:!1},eA={country:{code:u.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:a.ChineseSimplifiedHongKong,language:{code:r.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Hong Kong)",native_name:"\u4E2D\u6587 (\u9999\u6E2F)",rtl:!1},aA={country:{code:u.Macau,name:"Macau",native:"\u6FB3\u9580"},id:a.ChineseSimplifiedMacau,language:{code:r.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Macau)",native_name:"\u4E2D\u6587 (\u6FB3\u9580)",rtl:!1},iA={country:{code:u.Singapore,name:"Singapore",native:"\u65B0\u52A0\u5761"},id:a.ChineseSimplifiedSingapore,language:{code:r.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Singapore)",native_name:"\u4E2D\u6587 (\u65B0\u52A0\u5761)",rtl:!1},nA={id:a.ChineseTraditional,language:{code:r.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Traditional)",native_name:"\u4E2D\u6587",rtl:!1},sA={country:{code:u.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:a.ChineseTraditionalHongKong,language:{code:r.Chinese,name:"Chinese (Traditional/Hong Kong)",native:"\u4E2D\u6587"},name:"Chinese (Hong Kong)",native_name:"\u4E2D\u6587 (\u9999\u6E2F)",rtl:!1},uA={country:{code:u.Macau,name:"Macau",native:"\u6FB3\u9580"},id:a.ChineseTraditionalMacau,language:{code:r.Chinese,name:"Chinese (Traditional/Macau)",native:"\u4E2D\u6587"},name:"Chinese (Macau)",native_name:"\u4E2D\u6587 (\u6FB3\u9580)",rtl:!1},tA={country:{code:u.Singapore,name:"Singapore",native:"\u65B0\u52A0\u5761"},id:a.ChineseTraditionalSingapore,language:{code:r.Chinese,name:"Chinese (Traditional/Singapore)",native:"\u4E2D\u6587"},name:"Chinese (Singapore)",native_name:"\u4E2D\u6587 (\u65B0\u52A0\u5761)",rtl:!1},rA={id:a.Croatian,language:{code:r.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian",native_name:"Hrvatski",rtl:!1},oA={country:{code:u.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"Bosna i Hercegovina"},id:a.CroatianBosniaAndHerzegovina,language:{code:r.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian (Bosnia and Herzegovina)",native_name:"Hrvatski (Bosna i Hercegovina)",rtl:!1},lA={country:{code:u.Croatia,name:"Croatia",native:"Hrvatska"},id:a.CroatianCroatia,language:{code:r.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian (Croatia)",native_name:"Hrvatski (Hrvatska)",rtl:!1},mA={id:a.Czech,language:{code:r.Czech,name:"Czech",native:"\u010Ce\u0161tina"},name:"Czech",native_name:"\u010Ce\u0161tina",rtl:!1},dA={country:{code:u.CzechRepublic,name:"Czech Republic",native:"\u010Cesk\xE1 republika"},id:a.CzechCzechRepublic,language:{code:r.Czech,name:"Czech",native:"\u010Ce\u0161tina"},name:"Czech (Czech Republic)",native_name:"\u010Ce\u0161tina (\u010Cesk\xE1 republika)",rtl:!1},cA={id:a.Danish,language:{code:r.Danish,name:"Danish",native:"Dansk"},name:"Danish",native_name:"Dansk",rtl:!1},AA={country:{code:u.Denmark,name:"Denmark",native:"Danmark"},id:a.DanishDenmark,language:{code:r.Danish,name:"Danish",native:"Dansk"},name:"Danish (Denmark)",native_name:"Dansk (Danmark)",rtl:!1},gA={id:a.Divehi,language:{code:r.Divehi,name:"Divehi",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0"},name:"Divehi",native_name:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0",rtl:!0},TA={country:{code:u.Maldives,name:"Maldives",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC"},id:a.DivehiMaldives,language:{code:r.Divehi,name:"Divehi",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0"},name:"Divehi (Maldives)",native_name:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0 (\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC)",rtl:!0},hA={id:a.Dutch,language:{code:r.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch",native_name:"Nederlands",rtl:!1},fA={country:{code:u.Belgium,name:"Belgium",native:"Belgi\xEB"},id:a.DutchBelgium,language:{code:r.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch (Belgium)",native_name:"Nederlands (Belgi\xEB)",rtl:!1},pA={country:{code:u.Netherlands,name:"Netherlands",native:"Nederland"},id:a.DutchNetherlands,language:{code:r.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch (Netherlands)",native_name:"Nederlands (Nederland)",rtl:!1},CA={id:a.English,language:{code:r.English,name:"English",native:"English"},name:"English",native_name:"English",rtl:!1},EA={country:{code:u.Australia,name:"Australia",native:"Australia"},id:a.EnglishAustralia,language:{code:r.English,name:"English",native:"English"},name:"English (Australia)",native_name:"English (Australia)",rtl:!1},_A={country:{code:u.Belgium,name:"Belgium",native:"Belgi\xEB"},id:a.EnglishBelgium,language:{code:r.English,name:"English",native:"English"},name:"English (Belgium)",native_name:"English (Belgi\xEB)",rtl:!1},SA={country:{code:u.Canada,name:"Canada",native:"Canada"},id:a.EnglishCanada,language:{code:r.English,name:"English",native:"English"},name:"English (Canada)",native_name:"English (Canada)",rtl:!1},IA={country:{code:u.Ireland,name:"Ireland",native:"\xC9ire"},id:a.EnglishIreland,language:{code:r.English,name:"English",native:"English"},name:"English (Ireland)",native_name:"English (\xC9ire)",rtl:!1},vA={country:{code:u.Jamaica,name:"Jamaica",native:"Jamaica"},id:a.EnglishJamaica,language:{code:r.English,name:"English",native:"English"},name:"English (Jamaica)",native_name:"English (Jamaica)",rtl:!1},bA={country:{code:u.NewZealand,name:"New Zealand",native:"New Zealand"},id:a.EnglishNewZealand,language:{code:r.English,name:"English",native:"English"},name:"English (New Zealand)",native_name:"English (New Zealand)",rtl:!1},yA={country:{code:u.Philippines,name:"Philippines",native:"Philippines"},id:a.EnglishPhilippines,language:{code:r.English,name:"English",native:"English"},name:"English (Philippines)",native_name:"English (Philippines)",rtl:!1},BA={country:{code:u.Singapore,name:"Singapore",native:"Singapore"},id:a.EnglishSingapore,language:{code:r.English,name:"English",native:"English"},name:"English (Singapore)",native_name:"English (Singapore)",rtl:!1},DA={country:{code:u.SouthAfrica,name:"South Africa",native:"South Africa"},id:a.EnglishSouthAfrica,language:{code:r.English,name:"English",native:"English"},name:"English (South Africa)",native_name:"English (South Africa)",rtl:!1},UA={country:{code:u.TrinidadAndTobago,name:"Trinidad and Tobago",native:"Trinidad and Tobago"},id:a.EnglishTrinidadAndTobago,language:{code:r.English,name:"English",native:"English"},name:"English (Trinidad and Tobago)",native_name:"English (Trinidad and Tobago)",rtl:!1},PA={country:{code:u.UnitedKingdom,name:"United Kingdom",native:"United Kingdom"},id:a.EnglishUnitedKingdom,language:{code:r.English,name:"English",native:"English"},name:"English (United Kingdom)",native_name:"English (United Kingdom)",rtl:!1},NA={country:{code:u.UnitedStates,name:"United States",native:"United States"},id:a.EnglishUnitedStates,language:{code:r.English,name:"English",native:"English"},name:"English (United States)",native_name:"English (United States)",rtl:!1},MA={country:{code:u.Zimbabwe,name:"Zimbabwe",native:"Zimbabwe"},id:a.EnglishZimbabwe,language:{code:r.English,name:"English",native:"English"},name:"English (Zimbabwe)",native_name:"English (Zimbabwe)",rtl:!1},FA={id:a.Esperanto,language:{code:r.Esperanto,name:"Esperanto",native:"Esperanto"},name:"Esperanto",native_name:"Esperanto",rtl:!1},kA={id:a.Estonian,language:{code:r.Estonian,name:"Estonian",native:"Eesti"},name:"Estonian",native_name:"Eesti",rtl:!1},LA={country:{code:u.Estonia,name:"Estonia",native:"Eesti"},id:a.EstonianEstonia,language:{code:r.Estonian,name:"Estonian",native:"Eesti"},name:"Estonian (Estonia)",native_name:"Eesti (Eesti)",rtl:!1},zA={id:a.Faroese,language:{code:r.Faroese,name:"Faroese",native:"F\xF8royskt"},name:"Faroese",native_name:"F\xF8royskt",rtl:!1},RA={country:{code:u.FaroeIslands,name:"Faroe Islands",native:"F\xF8royar"},id:a.FaroeseFaroeIslands,language:{code:r.Faroese,name:"Faroese",native:"F\xF8royskt"},name:"Faroese (Faroe Islands)",native_name:"F\xF8royskt (F\xF8royar)",rtl:!1},xA={id:a.Farsi,language:{code:r.Farsi,name:"Farsi",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Farsi",native_name:"\u0641\u0627\u0631\u0633\u06CC",rtl:!0},wA={country:{code:u.Iran,name:"Iran",native:"\u0627\u06CC\u0631\u0627\u0646"},id:a.FarsiIran,language:{code:r.Farsi,name:"Farsi",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Farsi (Iran)",native_name:"\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)",rtl:!0},qA={id:a.Filipino,language:{code:r.Filipino,name:"Filipino",native:"Filipino"},name:"Filipino",native_name:"Filipino",rtl:!1},GA={country:{code:u.Philippines,name:"Philippines",native:"Pilipinas"},id:a.FilipinoPhilippines,language:{code:r.Filipino,name:"Filipino",native:"Filipino"},name:"Filipino (Philippines)",native_name:"Filipino (Pilipinas)",rtl:!1},KA={id:a.Finnish,language:{code:r.Finnish,name:"Finnish",native:"Suomi"},name:"Finnish",native_name:"Suomi",rtl:!1},OA={country:{code:u.Finland,name:"Finland",native:"Suomi"},id:a.FinnishFinland,language:{code:r.Finnish,name:"Finnish",native:"Suomi"},name:"Finnish (Finland)",native_name:"Suomi (Suomi)",rtl:!1},HA={id:a.French,language:{code:r.French,name:"French",native:"Fran\xE7ais"},name:"French",native_name:"Fran\xE7ais",rtl:!1},jA={country:{code:u.Belgium,name:"Belgium",native:"Belgique"},id:a.FrenchBelgium,language:{code:r.French,name:"French",native:"Fran\xE7ais"},name:"French (Belgium)",native_name:"Fran\xE7ais (Belgique)",rtl:!1},$A={country:{code:u.Canada,name:"Canada",native:"Canada"},id:a.FrenchCanada,language:{code:r.French,name:"French",native:"Fran\xE7ais"},name:"French (Canada)",native_name:"Fran\xE7ais (Canada)",rtl:!1},WA={country:{code:u.France,name:"France",native:"France"},id:a.FrenchFrance,language:{code:r.French,name:"French",native:"Fran\xE7ais"},name:"French (France)",native_name:"Fran\xE7ais (France)",rtl:!1},VA={country:{code:u.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:a.FrenchLuxembourg,language:{code:r.French,name:"French",native:"Fran\xE7ais"},name:"French (Luxembourg)",native_name:"Fran\xE7ais (Luxembourg)",rtl:!1},YA={country:{code:u.Monaco,name:"Monaco",native:"Monaco"},id:a.FrenchMonaco,language:{code:r.French,name:"French",native:"Fran\xE7ais"},name:"French (Monaco)",native_name:"Fran\xE7ais (Monaco)",rtl:!1},ZA={country:{code:u.Reunion,name:"Reunion",native:"La R\xE9union"},id:a.FrenchReunion,language:{code:r.French,name:"French",native:"Fran\xE7ais"},name:"French (Reunion)",native_name:"Fran\xE7ais (La R\xE9union)",rtl:!1},JA={country:{code:u.Switzerland,name:"Switzerland",native:"Suisse"},id:a.FrenchSwitzerland,language:{code:r.French,name:"French",native:"Fran\xE7ais"},name:"French (Switzerland)",native_name:"Fran\xE7ais (Suisse)",rtl:!1},QA={id:a.Frisian,language:{code:r.Frisian,name:"Frisian",native:"Frysk"},name:"Frisian",native_name:"Frysk",rtl:!1},XA={country:{code:u.Netherlands,name:"Netherlands",native:"Nederland"},id:a.FrisianNetherlands,language:{code:r.Frisian,name:"Frisian",native:"Frysk"},name:"Frisian (Netherlands)",native_name:"Frysk (Nederland)",rtl:!1},eg={id:a.Galician,language:{code:r.Galician,name:"Galician",native:"Galego"},name:"Galician",native_name:"Galego",rtl:!1},ag={country:{code:u.Spain,name:"Spain",native:"Espa\xF1a"},id:a.GalicianSpain,language:{code:r.Galician,name:"Galician",native:"Galego"},name:"Galician (Spain)",native_name:"Galego (Espa\xF1a)",rtl:!1},ig={id:a.Georgian,language:{code:r.Georgian,name:"Georgian",native:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8"},name:"Georgian",native_name:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8",rtl:!1},ng={country:{code:u.Georgia,name:"Georgia",native:"\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD"},id:a.GeorgianGeorgia,language:{code:r.Georgian,name:"Georgian",native:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8"},name:"Georgian (Georgia)",native_name:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8 (\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD)",rtl:!1},sg={id:a.German,language:{code:r.German,name:"German",native:"Deutsch"},name:"German",native_name:"Deutsch",rtl:!1},ug={country:{code:u.Austria,name:"Austria",native:"\xD6sterreich"},id:a.GermanAustria,language:{code:r.German,name:"German",native:"Deutsch"},name:"German (Austria)",native_name:"Deutsch (\xD6sterreich)",rtl:!1},tg={country:{code:u.Belgium,name:"Belgium",native:"Belgi\xEB"},id:a.GermanBelgium,language:{code:r.German,name:"German",native:"Deutsch"},name:"German (Belgium)",native_name:"Deutsch (Belgi\xEB)",rtl:!1},rg={country:{code:u.Switzerland,name:"Switzerland",native:"Suisse"},id:a.GermanSwitzerland,language:{code:r.German,name:"German",native:"Deutsch"},name:"German (Switzerland)",native_name:"Deutsch (Suisse)",rtl:!1},og={country:{code:u.Liechtenstein,name:"Liechtenstein",native:"Liechtenstein"},id:a.GermanLiechtenstein,language:{code:r.German,name:"German",native:"Deutsch"},name:"German (Liechtenstein)",native_name:"Deutsch (Liechtenstein)",rtl:!1},lg={country:{code:u.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:a.GermanLuxembourg,language:{code:r.German,name:"German",native:"Deutsch"},name:"German (Luxembourg)",native_name:"Deutsch (Luxembourg)",rtl:!1},mg={id:a.Greek,language:{code:r.Greek,name:"Greek",native:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC"},name:"Greek",native_name:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC",rtl:!1},dg={country:{code:u.Greece,name:"Greece",native:"\u0395\u03BB\u03BB\u03AC\u03B4\u03B1"},id:a.GreekGreece,language:{code:r.Greek,name:"Greek",native:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC"},name:"Greek (Greece)",native_name:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC (\u0395\u03BB\u03BB\u03AC\u03B4\u03B1)",rtl:!1},cg={id:a.Greenlandic,language:{code:r.Greenlandic,name:"Greenlandic",native:"Kalaallisut"},name:"Greenlandic",native_name:"Kalaallisut",rtl:!1},Ag={country:{code:u.Greenland,name:"Greenland",native:"Kalaallit Nunaat"},id:a.GreenlandicGreenland,language:{code:r.Greenlandic,name:"Greenlandic",native:"Kalaallisut"},name:"Greenlandic (Greenland)",native_name:"Kalaallisut (Kalaallit Nunaat)",rtl:!1},gg={id:a.Gujarati,language:{code:r.Gujarati,name:"Gujarati",native:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0"},name:"Gujarati",native_name:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0",rtl:!1},Tg={country:{code:u.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:a.GujaratiIndia,language:{code:r.Gujarati,name:"Gujarati",native:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0"},name:"Gujarati (India)",native_name:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0 (\u092D\u093E\u0930\u0924)",rtl:!1},hg={id:a.Hausa,language:{code:r.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E",rtl:!1},fg={country:{code:u.Ghana,name:"Ghana",native:"Ghana"},id:a.HausaGhana,language:{code:r.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Ghana)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Ghana)",rtl:!1},pg={country:{code:u.Niger,name:"Niger",native:"Niger"},id:a.HausaNiger,language:{code:r.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Niger)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Niger)",rtl:!1},Cg={country:{code:u.Nigeria,name:"Nigeria",native:"Nigeria"},id:a.HausaNigeria,language:{code:r.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Nigeria)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Nigeria)",rtl:!1},Eg={id:a.Hebrew,language:{code:r.Hebrew,name:"Hebrew",native:"\u05E2\u05D1\u05E8\u05D9\u05EA"},name:"Hebrew",native_name:"\u05E2\u05D1\u05E8\u05D9\u05EA",rtl:!0},_g={country:{code:u.Israel,name:"Hebrew",native:""},id:a.HebrewIsrael,language:{code:r.Hebrew,name:"Hebrew",native:""},name:"Hebrew (Israel)",native_name:"",rtl:!0},Sg={id:a.Hindi,language:{code:r.Hindi,name:"Hindi",native:"\u0939\u093F\u0928\u094D\u0926\u0940"},name:"Hindi",native_name:"\u0939\u093F\u0928\u094D\u0926\u0940",rtl:!1},Ig={country:{code:u.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:a.HindiIndia,language:{code:r.Hindi,name:"Hindi",native:"\u092D\u093E\u0930\u0924\u0940\u092F"},name:"Hindi (India)",native_name:"\u092D\u093E\u0930\u0924\u0940\u092F",rtl:!1},vg={id:a.Hungarian,language:{code:r.Hungarian,name:"Hungarian",native:"Magyar"},name:"Hungarian",native_name:"Magyar",rtl:!1},bg={country:{code:u.Hungary,name:"Hungary",native:"Magyarorsz\xE1g"},id:a.HungarianHungary,language:{code:r.Hungarian,name:"Hungarian",native:"Magyar"},name:"Hungarian (Hungary)",native_name:"Magyar (Magyarorsz\xE1g)",rtl:!1},yg={id:a.Icelandic,language:{code:r.Icelandic,name:"Icelandic",native:"\xCDslenska"},name:"Icelandic",native_name:"\xCDslenska",rtl:!1},Bg={country:{code:u.Iceland,name:"Iceland",native:"\xCDsland"},id:a.IcelandicIceland,language:{code:r.Icelandic,name:"Icelandic",native:"\xCDslenska"},name:"Icelandic (Iceland)",native_name:"\xCDslenska (\xCDsland)",rtl:!1},Dg={id:a.Igbo,language:{code:r.Igbo,name:"Igbo",native:"Igbo"},name:"Igbo",native_name:"Igbo",rtl:!1},Ug={id:a.Indonesian,language:{code:r.Indonesian,name:"Indonesian",native:"Bahasa Indonesia"},name:"Indonesian",native_name:"Bahasa Indonesia",rtl:!1},Pg={country:{code:u.Indonesia,name:"Indonesia",native:"Indonesia"},id:a.IndonesianIndonesia,language:{code:r.Indonesian,name:"Indonesian",native:"Bahasa Indonesia"},name:"Indonesian (Indonesia)",native_name:"Bahasa Indonesia (Indonesia)",rtl:!1},Ng={id:a.Irish,language:{code:r.Irish,name:"Irish",native:"Gaeilge"},name:"Irish",native_name:"Gaeilge",rtl:!1},Mg={country:{code:u.Ireland,name:"Ireland",native:"\xC9ire"},id:a.IrishIreland,language:{code:r.Irish,name:"Irish",native:"Gaeilge"},name:"Irish (Ireland)",native_name:"Gaeilge (\xC9ire)",rtl:!1},Fg={id:a.Italian,language:{code:r.Italian,name:"Italian",native:"Italiano"},name:"Italian",native_name:"Italiano",rtl:!1},kg={country:{code:u.Italy,name:"Italy",native:"Italia"},id:a.ItalianItaly,language:{code:r.Italian,name:"Italian",native:"Italiano"},name:"Italian (Italy)",native_name:"Italiano (Italia)",rtl:!1},Lg={country:{code:u.Switzerland,name:"Switzerland",native:"Schweiz"},id:a.ItalianSwitzerland,language:{code:r.Italian,name:"Italian",native:"Italiano"},name:"Italian (Switzerland)",native_name:"Italiano (Svizzera)",rtl:!1},zg={id:a.Japanese,language:{code:r.Japanese,name:"Japanese",native:"\u65E5\u672C\u8A9E"},name:"Japanese",native_name:"\u65E5\u672C\u8A9E",rtl:!1},Rg={country:{code:u.Japan,name:"Japan",native:"\u65E5\u672C"},id:a.JapaneseJapan,language:{code:r.Japanese,name:"Japanese",native:"\u65E5\u672C\u8A9E"},name:"Japanese (Japan)",native_name:"\u65E5\u672C\u8A9E (\u65E5\u672C)",rtl:!1},xg={id:a.Kannada,language:{code:r.Kannada,name:"Kannada",native:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1"},name:"Kannada",native_name:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1",rtl:!1},wg={country:{code:u.India,name:"India",native:"\u0CAD\u0CBE\u0CB0\u0CA4"},id:a.KannadaIndia,language:{code:r.Kannada,name:"Kannada",native:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1"},name:"Kannada (India)",native_name:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1 (\u0CAD\u0CBE\u0CB0\u0CA4)",rtl:!1},qg={id:a.Kazakh,language:{code:r.Kazakh,name:"Kazakh",native:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456"},name:"Kazakh",native_name:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456",rtl:!1},Gg={country:{code:u.Kazakhstan,name:"Kazakhstan",native:"\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D"},id:a.KazakhKazakhstan,language:{code:r.Kazakh,name:"Kazakh",native:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456"},name:"Kazakh (Kazakhstan)",native_name:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)",rtl:!1},Kg={id:a.Khmer,language:{code:r.Khmer,name:"Khmer",native:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A"},name:"Khmer",native_name:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A",rtl:!1},Og={country:{code:u.Cambodia,name:"Cambodia",native:"\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6"},id:a.KhmerCambodia,language:{code:r.Khmer,name:"Khmer",native:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A"},name:"Khmer (Cambodia)",native_name:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A (\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6)",rtl:!1},Hg={id:a.Konkani,language:{code:r.Konkani,name:"Konkani",native:"\u0915\u094B\u0902\u0915\u0923\u0940"},name:"Konkani",native_name:"\u0915\u094B\u0902\u0915\u0923\u0940",rtl:!1},jg={country:{code:u.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:a.KonkaniIndia,language:{code:r.Konkani,name:"Konkani",native:"\u0915\u094B\u0902\u0915\u0923\u0940"},name:"Konkani (India)",native_name:"\u0915\u094B\u0902\u0915\u0923\u0940 (\u092D\u093E\u0930\u0924)",rtl:!1},$g={id:a.Korean,language:{code:r.Korean,name:"Korean",native:"\uD55C\uAD6D\uC5B4"},name:"Korean",native_name:"\uD55C\uAD6D\uC5B4",rtl:!1},Wg={country:{code:u.SouthKorea,name:"South Korea",native:"\uB300\uD55C\uBBFC\uAD6D"},id:a.KoreanSouthKorea,language:{code:r.Korean,name:"Korean",native:"\uD55C\uAD6D\uC5B4"},name:"Korean (South Korea)",native_name:"\uD55C\uAD6D\uC5B4 (\uB300\uD55C\uBBFC\uAD6D)",rtl:!1},Vg={id:a.Kurdish,language:{code:r.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish",native_name:"Kurd\xEE",rtl:!1},Yg={country:{code:u.Iraq,name:"Iraq",native:"\u0627\u0644\u0639\u0631\u0627\u0642"},id:a.KurdishIraq,language:{code:r.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish (Iraq)",native_name:"Kurd\xEE (\u0627\u0644\u0639\u0631\u0627\u0642)",rtl:!1},Zg={country:{code:u.Turkey,name:"Turkey",native:"T\xFCrkiye"},id:a.KurdishTurkey,language:{code:r.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish (Turkey)",native_name:"Kurd\xEE (T\xFCrkiye)",rtl:!1},Jg={id:a.Kyrgyz,language:{code:r.Kyrgyz,name:"Kyrgyz",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},name:"Kyrgyz",native_name:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430",rtl:!1},Qg={country:{code:u.Kyrgyzstan,name:"Kyrgyzstan",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D"},id:a.KyrgyzKyrgyzstan,language:{code:r.Kyrgyz,name:"Kyrgyz",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},name:"Kyrgyz (Kyrgyzstan)",native_name:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430 (\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D)",rtl:!1},Xg={id:a.Lao,language:{code:r.Lao,name:"Lao",native:"\u0EA5\u0EB2\u0EA7"},name:"Lao",native_name:"\u0EA5\u0EB2\u0EA7",rtl:!1},e4={country:{code:u.Laos,name:"Laos",native:"\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95"},id:a.LaoLaos,language:{code:r.Lao,name:"Lao",native:"\u0EA5\u0EB2\u0EA7"},name:"Lao (Laos)",native_name:"\u0EA5\u0EB2\u0EA7 (\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95)",rtl:!1},a4={id:a.Latvian,language:{code:r.Latvian,name:"Latvian",native:"Latvie\u0161u"},name:"Latvian",native_name:"Latvie\u0161u",rtl:!1},i4={country:{code:u.Latvia,name:"Latvia",native:"Latvija"},id:a.LatvianLatvia,language:{code:r.Latvian,name:"Latvian",native:"Latvie\u0161u"},name:"Latvian (Latvia)",native_name:"Latvie\u0161u (Latvija)",rtl:!1},n4={id:a.Lithuanian,language:{code:r.Lithuanian,name:"Lithuanian",native:"Lietuvi\u0173"},name:"Lithuanian",native_name:"Lietuvi\u0173",rtl:!1},s4={country:{code:u.Lithuania,name:"Lithuania",native:"Lietuva"},id:a.LithuanianLithuania,language:{code:r.Lithuanian,name:"Lithuanian",native:"Lietuvi\u0173"},name:"Lithuanian (Lithuania)",native_name:"Lietuvi\u0173 (Lietuva)",rtl:!1},u4={id:a.Luxembourgish,language:{code:r.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish",native_name:"L\xEBtzebuergesch",rtl:!1},t4={country:{code:u.Belgium,name:"Belgium",native:"Belgi\xEB"},id:a.LuxembourgishBelgium,language:{code:r.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish (Belgium)",native_name:"L\xEBtzebuergesch (Belgi\xEB)",rtl:!1},r4={country:{code:u.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:a.LuxembourgishLuxembourg,language:{code:r.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish (Luxembourg)",native_name:"L\xEBtzebuergesch (Luxembourg)",rtl:!1},o4={id:a.Macedonian,language:{code:r.Macedonian,name:"Macedonian",native:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438"},name:"Macedonian",native_name:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438",rtl:!1},l4={country:{code:u.NorthMacedonia,name:"Macedonia",native:"\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430"},id:a.MacedonianNorthMacedonia,language:{code:r.Macedonian,name:"Macedonian",native:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438"},name:"Macedonian (North Macedonia)",native_name:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438 (\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430)",rtl:!1},m4={id:a.Malay,language:{code:r.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay",native_name:"Bahasa Melayu",rtl:!1},d4={country:{code:u.Brunei,name:"Brunei",native:"Negara Brunei Darussalam"},id:a.MalayBrunei,language:{code:r.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Brunei)",native_name:"Bahasa Melayu (Negara Brunei Darussalam)",rtl:!1},c4={country:{code:u.Malaysia,name:"Malaysia",native:"Malaysia"},id:a.MalayMalaysia,language:{code:r.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Malaysia)",native_name:"Bahasa Melayu (Malaysia)",rtl:!1},A4={country:{code:u.Singapore,name:"Singapore",native:"Singapore"},id:a.MalaySingapore,language:{code:r.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Singapore)",native_name:"Bahasa Melayu (Singapore)",rtl:!1},g4={country:{code:u.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:a.MalayIndia,language:{code:r.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (India)",native_name:"Bahasa Melayu (\u092D\u093E\u0930\u0924)",rtl:!1},T4={id:a.Maltese,language:{code:r.Maltese,name:"Maltese",native:"Malti"},name:"Maltese",native_name:"Malti",rtl:!1},h4={country:{code:u.Malta,name:"Malta",native:"Malta"},id:a.MalteseMalta,language:{code:r.Maltese,name:"Maltese",native:"Malti"},name:"Maltese (Malta)",native_name:"Malti (Malta)",rtl:!1},f4={id:a.Maori,language:{code:r.Maori,name:"Maori",native:"M\u0101ori"},name:"Maori",native_name:"M\u0101ori",rtl:!1},p4={country:{code:u.NewZealand,name:"New Zealand",native:"New Zealand"},id:a.MaoriNewZealand,language:{code:r.Maori,name:"Maori",native:"M\u0101ori"},name:"Maori (New Zealand)",native_name:"M\u0101ori (New Zealand)",rtl:!1},C4={id:a.Marathi,language:{code:r.Marathi,name:"Marathi",native:"\u092E\u0930\u093E\u0920\u0940"},name:"Marathi",native_name:"\u092E\u0930\u093E\u0920\u0940",rtl:!1},E4={country:{code:u.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:a.MarathiIndia,language:{code:r.Marathi,name:"Marathi",native:"\u092E\u0930\u093E\u0920\u0940"},name:"Marathi (India)",native_name:"\u092E\u0930\u093E\u0920\u0940 (\u092D\u093E\u0930\u0924)",rtl:!1},_4={id:a.Mongolian,language:{code:r.Mongolian,name:"Mongolian",native:"\u041C\u043E\u043D\u0433\u043E\u043B"},name:"Mongolian",native_name:"\u041C\u043E\u043D\u0433\u043E\u043B",rtl:!1},S4={country:{code:u.Mongolia,name:"Mongolia",native:"\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441"},id:a.MongolianMongolia,language:{code:r.Mongolian,name:"Mongolian",native:"\u041C\u043E\u043D\u0433\u043E\u043B"},name:"Mongolian (Mongolia)",native_name:"\u041C\u043E\u043D\u0433\u043E\u043B (\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441)",rtl:!1},I4={id:a.Montenegrin,language:{code:r.Montenegrin,name:"Montenegrin",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},name:"Montenegrin",native_name:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A",rtl:!1},v4={country:{code:u.Montenegro,name:"Montenegro",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},id:a.MontenegrinMontenegro,language:{code:r.Montenegrin,name:"Montenegrin",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},name:"Montenegrin (Montenegro)",native_name:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A (\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A)",rtl:!1},b4={id:a.Nepali,language:{code:r.Nepali,name:"Nepali",native:"\u0928\u0947\u092A\u093E\u0932\u0940"},name:"Nepali",native_name:"\u0928\u0947\u092A\u093E\u0932\u0940",rtl:!1},y4={country:{code:u.Nepal,name:"Nepal",native:"\u0928\u0947\u092A\u093E\u0932"},id:a.NepaliNepal,language:{code:r.Nepali,name:"Nepali",native:"\u0928\u0947\u092A\u093E\u0932\u0940"},name:"Nepali (Nepal)",native_name:"\u0928\u0947\u092A\u093E\u0932\u0940 (\u0928\u0947\u092A\u093E\u0932)",rtl:!1},B4={id:a.NorthernSotho,language:{code:r.NorthernSotho,name:"Northern Sotho",native:"Sesotho sa Leboa"},name:"Northern Sotho",native_name:"Sesotho sa Leboa",rtl:!1},D4={country:{code:u.SouthAfrica,name:"South Africa",native:"South Africa"},id:a.NorthernSothoSouthAfrica,language:{code:r.NorthernSotho,name:"Northern Sotho",native:"Sesotho sa Leboa"},name:"Northern Sotho (South Africa)",native_name:"Sesotho sa Leboa (South Africa)",rtl:!1},U4={id:a.Norwegian,language:{code:r.Norwegian,name:"Norwegian",native:"Norsk"},name:"Norwegian",native_name:"Norsk",rtl:!1},P4={country:{code:u.Norway,name:"Norway",native:"Norge"},id:a.NorwegianBokmalNorway,language:{code:r.NorwegianBokmal,name:"Norwegian",native:"Norsk"},name:"Norwegian (Bokmal)",native_name:"Norsk (Bokm\xE5l)",rtl:!1},N4={country:{code:u.Norway,name:"Norway",native:"Norge"},id:a.NorwegianNynorskNorway,language:{code:r.NorwegianNynorsk,name:"Norwegian",native:"Norsk"},name:"Norwegian (Nynorsk)",native_name:"Norsk (Nynorsk)",rtl:!1},M4={id:a.Oriya,language:{code:r.Oriya,name:"Oriya",native:"\u0B13\u0B21\u0B3C\u0B3F\u0B06"},name:"Oriya",native_name:"\u0B13\u0B21\u0B3C\u0B3F\u0B06",rtl:!1},F4={country:{code:u.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:a.OriyaIndia,language:{code:r.Oriya,name:"Oriya",native:"\u0B13\u0B21\u0B3C\u0B3F\u0B06"},name:"Oriya (India)",native_name:"\u0B13\u0B21\u0B3C\u0B3F\u0B06 (\u0B2D\u0B3E\u0B30\u0B24)",rtl:!1},k4={id:a.Pashto,language:{code:r.Pashto,name:"Pashto",native:"\u067E\u069A\u062A\u0648"},name:"Pashto",native_name:"\u067E\u069A\u062A\u0648",rtl:!0},L4={country:{code:u.Afghanistan,name:"Afghanistan",native:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},id:a.PashtoAfghanistan,language:{code:r.Pashto,name:"Pashto",native:"\u067E\u069A\u062A\u0648"},name:"Pashto (Afghanistan)",native_name:"\u067E\u069A\u062A\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)",rtl:!0},z4={id:a.Persian,language:{code:r.Persian,name:"Persian",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Persian",native_name:"\u0641\u0627\u0631\u0633\u06CC",rtl:!0},R4={country:{code:u.Iran,name:"Iran",native:"\u0627\u06CC\u0631\u0627\u0646"},id:a.PersianIran,language:{code:r.Persian,name:"Persian",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Persian (Iran)",native_name:"\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)",rtl:!0},x4={id:a.Polish,language:{code:r.Polish,name:"Polish",native:"Polski"},name:"Polish",native_name:"Polski",rtl:!1},w4={country:{code:u.Poland,name:"Poland",native:"Polska"},id:a.PolishPoland,language:{code:r.Polish,name:"Polish",native:"Polski"},name:"Polish (Poland)",native_name:"Polski (Polska)",rtl:!1},q4={id:a.Portuguese,language:{code:r.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese",native_name:"Portugu\xEAs",rtl:!1},G4={country:{code:u.Brazil,name:"Brazil",native:"Brasil"},id:a.PortugueseBrazil,language:{code:r.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese (Brazil)",native_name:"Portugu\xEAs (Brasil)",rtl:!1},K4={country:{code:u.Portugal,name:"Portugal",native:"Portugal"},id:a.PortuguesePortugal,language:{code:r.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese (Portugal)",native_name:"Portugu\xEAs (Portugal)",rtl:!1},O4={id:a.Punjabi,language:{code:r.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40",rtl:!0},H4={country:{code:u.Pakistan,name:"Pakistan",native:"\u067E\u0627\u06A9\u0633\u062A\u0627\u0646"},id:a.PunjabiPakistan,language:{code:r.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi (Pakistan)",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)",rtl:!0},j4={country:{code:u.India,name:"India",native:"\u0A2D\u0A3E\u0A30\u0A24"},id:a.PunjabiIndia,language:{code:r.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi (India)",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u0A2D\u0A3E\u0A30\u0A24)",rtl:!0},$4={id:a.Quechua,language:{code:r.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua",native_name:"Runa Simi",rtl:!1},W4={country:{code:u.Bolivia,name:"Bolivia",native:"Bolivia"},id:a.QuechuaBolivia,language:{code:r.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Bolivia)",native_name:"Runa Simi (Bolivia)",rtl:!1},V4={country:{code:u.Ecuador,name:"Ecuador",native:"Ecuador"},id:a.QuechuaEcuador,language:{code:r.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Ecuador)",native_name:"Runa Simi (Ecuador)",rtl:!1},Y4={country:{code:u.Peru,name:"Peru",native:"Per\xFA"},id:a.QuechuaPeru,language:{code:r.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Peru)",native_name:"Runa Simi (Per\xFA)",rtl:!1},Z4={id:a.Romanian,language:{code:r.Romanian,name:"Romanian",native:"Rom\xE2n\u0103"},name:"Romanian",native_name:"Rom\xE2n\u0103",rtl:!1},J4={country:{code:u.Romania,name:"Romania",native:"Rom\xE2nia"},id:a.RomanianRomania,language:{code:r.Romanian,name:"Romanian",native:"Rom\xE2n\u0103"},name:"Romanian (Romania)",native_name:"Rom\xE2n\u0103 (Rom\xE2nia)",rtl:!1},Q4={id:a.Russian,language:{code:r.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439",rtl:!1},X4={country:{code:u.RussianFederation,name:"Russian Federation",native:"\u0420\u043E\u0441\u0441\u0438\u044F"},id:a.RussianRussia,language:{code:r.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Russia)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0420\u043E\u0441\u0441\u0438\u044F)",rtl:!1},eT={country:{code:u.Ukraine,name:"Ukraine",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0430"},id:a.RussianUkraine,language:{code:r.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Ukraine)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)",rtl:!1},aT={country:{code:u.Kazakhstan,name:"Kazakhstan",native:"\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D"},id:a.RussianKazakhstan,language:{code:r.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Kazakhstan)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)",rtl:!1},iT={country:{code:u.Kyrgyzstan,name:"Kyrgyzstan",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},id:a.RussianKyrgyzstan,language:{code:r.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Kyrgyzstan)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430)",rtl:!1},nT={id:a.Sanskrit,language:{code:r.Sanskrit,name:"Sanskrit",native:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D"},name:"Sanskrit",native_name:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D",rtl:!1},sT={country:{code:u.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:a.SanskritIndia,language:{code:r.Sanskrit,name:"Sanskrit",native:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D"},name:"Sanskrit (India)",native_name:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D (\u092D\u093E\u0930\u0924)",rtl:!1},uT={id:a.Sami,language:{code:r.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami",native_name:"S\xE1megiella",rtl:!1},tT={country:{code:u.Finland,name:"Finland",native:"Suomi"},id:a.SamiFinland,language:{code:r.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Finland)",native_name:"S\xE1megiella (Suomi)",rtl:!1},rT={country:{code:u.Norway,name:"Norway",native:"Norge"},id:a.SamiNorway,language:{code:r.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Norway)",native_name:"S\xE1megiella (Norge)",rtl:!1},oT={country:{code:u.Sweden,name:"Sweden",native:"Sverige"},id:a.SamiSweden,language:{code:r.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Sweden)",native_name:"S\xE1megiella (Sverige)",rtl:!1},lT={id:a.Samoan,language:{code:r.Samoan,name:"Samoan",native:"Gagana fa\u2019a S\u0101moa"},name:"Samoan",native_name:"Gagana fa\u2019a S\u0101moa",rtl:!1},mT={country:{code:u.Samoa,name:"Samoa",native:"Samoa"},id:a.SamoanSamoa,language:{code:r.Samoan,name:"Samoan",native:"Gagana fa\u2019a S\u0101moa"},name:"Samoan (Samoa)",native_name:"Gagana fa\u2019a S\u0101moa (Samoa)",rtl:!1},dT={id:a.Serbian,language:{code:r.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin)",native_name:"Srpski (Latinica)",rtl:!1},cT={country:{code:u.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"Bosna i Hercegovina"},id:a.SerbianBosniaAndHerzegovina,language:{code:r.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin) (Bosnia and Herzegovina)",native_name:"Srpski (Latinica) (Bosna i Hercegovina)",rtl:!1},AT={country:{code:u.SerbiaAndMontenegro,name:"Serbia and Montenegro",native:"Srbija i Crna Gora"},id:a.SerbianSerbiaAndMontenegro,language:{code:r.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin) (Serbia and Montenegro)",native_name:"Srpski (Latinica) (Srbija i Crna Gora)",rtl:!1},gT={id:a.SerbianCyrillic,language:{code:r.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430)",rtl:!1},TT={country:{code:u.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"\u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430"},id:a.SerbianCyrillicBosniaAndHerzegovina,language:{code:r.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic, Bosnia and Herzegovina)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430)",rtl:!1},hT={country:{code:u.SerbiaAndMontenegro,name:"Serbia and Montenegro",native:"\u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430"},id:a.SerbianCyrillicSerbiaAndMontenegro,language:{code:r.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic, Serbia and Montenegro)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430)",rtl:!1},fT={id:a.Slovak,language:{code:r.Slovak,name:"Slovak",native:"Sloven\u010Dina"},name:"Slovak",native_name:"Sloven\u010Dina",rtl:!1},pT={country:{code:u.Slovakia,name:"Slovakia",native:"Slovensko"},id:a.SlovakSlovakia,language:{code:r.Slovak,name:"Slovak",native:"Sloven\u010Dina"},name:"Slovak (Slovakia)",native_name:"Sloven\u010Dina (Slovensko)",rtl:!1},CT={id:a.Slovenian,language:{code:r.Slovenian,name:"Slovenian",native:"Sloven\u0161\u010Dina"},name:"Slovenian",native_name:"Sloven\u0161\u010Dina",rtl:!1},ET={country:{code:u.Slovenia,name:"Slovenia",native:"Slovenija"},id:a.SlovenianSlovenia,language:{code:r.Slovenian,name:"Slovenian",native:"Sloven\u0161\u010Dina"},name:"Slovenian (Slovenia)",native_name:"Sloven\u0161\u010Dina (Slovenija)",rtl:!1},_T={id:a.Somali,language:{code:r.Somali,name:"Somali",native:"Soomaaliga"},name:"Somali",native_name:"Soomaaliga",rtl:!0},ST={country:{code:u.Somalia,name:"Somalia",native:"Soomaaliya"},id:a.SomaliSomalia,language:{code:r.Somali,name:"Somali",native:"Soomaaliga"},name:"Somali (Somalia)",native_name:"Soomaaliga (Soomaaliya)",rtl:!0},IT={id:a.Spanish,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish",native_name:"Espa\xF1ol",rtl:!1},vT={country:{code:u.Argentina,name:"Argentina",native:"Argentina"},id:a.SpanishArgentina,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Argentina)",native_name:"Espa\xF1ol (Argentina)",rtl:!1},bT={country:{code:u.Bolivia,name:"Bolivia",native:"Bolivia"},id:a.SpanishBolivia,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Bolivia)",native_name:"Espa\xF1ol (Bolivia)",rtl:!1},yT={country:{code:u.Chile,name:"Chile",native:"Chile"},id:a.SpanishChile,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Chile)",native_name:"Espa\xF1ol (Chile)",rtl:!1},BT={country:{code:u.Colombia,name:"Colombia",native:"Colombia"},id:a.SpanishColombia,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Colombia)",native_name:"Espa\xF1ol (Colombia)",rtl:!1},DT={country:{code:u.CostaRica,name:"Costa Rica",native:"Costa Rica"},id:a.SpanishCostaRica,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Costa Rica)",native_name:"Espa\xF1ol (Costa Rica)",rtl:!1},UT={country:{code:u.Cuba,name:"Cuba",native:"Cuba"},id:a.SpanishCuba,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Cuba)",native_name:"Espa\xF1ol (Cuba)",rtl:!1},PT={country:{code:u.DominicanRepublic,name:"Dominican Republic",native:"Rep\xFAblica Dominicana"},id:a.SpanishDominicanRepublic,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Dominican Republic)",native_name:"Espa\xF1ol (Rep\xFAblica Dominicana)",rtl:!1},NT={country:{code:u.Ecuador,name:"Ecuador",native:"Ecuador"},id:a.SpanishEcuador,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Ecuador)",native_name:"Espa\xF1ol (Ecuador)",rtl:!1},MT={country:{code:u.ElSalvador,name:"El Salvador",native:"El Salvador"},id:a.SpanishElSalvador,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (El Salvador)",native_name:"Espa\xF1ol (El Salvador)",rtl:!1},FT={country:{code:u.EquatorialGuinea,name:"Equatorial Guinea",native:"Guinea Ecuatorial"},id:a.SpanishEquatorialGuinea,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Equatorial Guinea)",native_name:"Espa\xF1ol (Guinea Ecuatorial)",rtl:!1},kT={country:{code:u.Guatemala,name:"Guatemala",native:"Guatemala"},id:a.SpanishGuatemala,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Guatemala)",native_name:"Espa\xF1ol (Guatemala)",rtl:!1},LT={country:{code:u.Honduras,name:"Honduras",native:"Honduras"},id:a.SpanishHonduras,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Honduras)",native_name:"Espa\xF1ol (Honduras)",rtl:!1},zT={country:{code:u.Mexico,name:"Mexico",native:"M\xE9xico"},id:a.SpanishMexico,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Mexico)",native_name:"Espa\xF1ol (M\xE9xico)",rtl:!1},RT={country:{code:u.Nicaragua,name:"Nicaragua",native:"Nicaragua"},id:a.SpanishNicaragua,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Nicaragua)",native_name:"Espa\xF1ol (Nicaragua)",rtl:!1},xT={country:{code:u.Panama,name:"Panama",native:"Panam\xE1"},id:a.SpanishPanama,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Panama)",native_name:"Espa\xF1ol (Panam\xE1)",rtl:!1},wT={country:{code:u.Paraguay,name:"Paraguay",native:"Paraguay"},id:a.SpanishParaguay,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Paraguay)",native_name:"Espa\xF1ol (Paraguay)",rtl:!1},qT={country:{code:u.Peru,name:"Peru",native:"Per\xFA"},id:a.SpanishPeru,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Peru)",native_name:"Espa\xF1ol (Per\xFA)",rtl:!1},GT={country:{code:u.PuertoRico,name:"Puerto Rico",native:"Puerto Rico"},id:a.SpanishPuertoRico,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Puerto Rico)",native_name:"Espa\xF1ol (Puerto Rico)",rtl:!1},KT={country:{code:u.Uruguay,name:"Uruguay",native:"Uruguay"},id:a.SpanishUruguay,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Uruguay)",native_name:"Espa\xF1ol (Uruguay)",rtl:!1},OT={country:{code:u.Venezuela,name:"Venezuela",native:"Venezuela"},id:a.SpanishVenezuela,language:{code:r.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Venezuela)",native_name:"Espa\xF1ol (Venezuela)",rtl:!1},HT={country:{code:u.SouthAfrica,name:"South Africa",native:"South Africa"},id:a.SutuSouthAfrica,language:{code:r.Sutu,name:"Sutu",native:"Sesotho"},name:"Sutu (South Africa)",native_name:"Sesotho (Afrika Borwa)",rtl:!1},jT={id:a.Swahili,language:{code:r.Swahili,name:"Swahili",native:"Kiswahili"},name:"Swahili",native_name:"Kiswahili",rtl:!1},$T={country:{code:u.Kenya,name:"Kenya",native:"Kenya"},id:a.SwahiliKenya,language:{code:r.Swahili,name:"Swahili",native:"Kiswahili"},name:"Swahili (Kenya)",native_name:"Kiswahili (Kenya)",rtl:!1},WT={id:a.Swedish,language:{code:r.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish",native_name:"Svenska",rtl:!1},VT={country:{code:u.Finland,name:"Finland",native:"Suomi"},id:a.SwedishFinland,language:{code:r.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish (Finland)",native_name:"Svenska (Finland)",rtl:!1},YT={country:{code:u.Sweden,name:"Sweden",native:"Sverige"},id:a.SwedishSweden,language:{code:r.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish (Sweden)",native_name:"Svenska (Sverige)",rtl:!1},ZT={id:a.Syriac,language:{code:r.Syriac,name:"Syriac",native:"\u0723\u0718\u072A\u071D\u071D\u0710"},name:"Syriac",native_name:"\u0723\u0718\u072A\u071D\u071D\u0710",rtl:!0},JT={country:{code:u.Syria,name:"Syria",native:"\u0633\u0648\u0631\u064A\u0627"},id:a.SyriacSyria,language:{code:r.Syriac,name:"Syriac",native:"\u0723\u0718\u072A\u071D\u071D\u0710"},name:"Syriac (Syria)",native_name:"\u0723\u0718\u072A\u071D\u071D\u0710 (\u0633\u0648\u0631\u064A\u0627)",rtl:!0},QT={id:a.Tajik,language:{code:r.Tajik,name:"Tajik",native:"\u0422\u043E\u04B7\u0438\u043A\u04E3"},name:"Tajik",native_name:"\u0422\u043E\u04B7\u0438\u043A\u04E3",rtl:!1},XT={country:{code:u.Tajikistan,name:"Tajikistan",native:"\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D"},id:a.TajikTajikistan,language:{code:r.Tajik,name:"Tajik",native:"\u0422\u043E\u04B7\u0438\u043A\u04E3"},name:"Tajik (Tajikistan)",native_name:"\u0422\u043E\u04B7\u0438\u043A\u04E3 (\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D)",rtl:!1},eh={id:a.Tagalog,language:{code:r.Tagalog,name:"Tagalog",native:"Tagalog"},name:"Tagalog",native_name:"Tagalog",rtl:!1},ah={country:{code:u.Philippines,name:"Philippines",native:"Pilipinas"},id:a.TagalogPhilippines,language:{code:r.Tagalog,name:"Tagalog",native:"Tagalog"},name:"Tagalog (Philippines)",native_name:"Tagalog (Pilipinas)",rtl:!1},ih={id:a.Tamil,language:{code:r.Tamil,name:"Tamil",native:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD"},name:"Tamil",native_name:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD",rtl:!1},nh={country:{code:u.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:a.TamilIndia,language:{code:r.Tamil,name:"Tamil",native:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD"},name:"Tamil (India)",native_name:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)",rtl:!1},sh={id:a.Telugu,language:{code:r.Telugu,name:"Telugu",native:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41"},name:"Telugu",native_name:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41",rtl:!1},uh={country:{code:u.India,name:"India",native:"\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02"},id:a.TeluguIndia,language:{code:r.Telugu,name:"Telugu",native:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41"},name:"Telugu (India)",native_name:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41 (\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02)",rtl:!1},th={id:a.Thai,language:{code:r.Thai,name:"Thai",native:"\u0E44\u0E17\u0E22"},name:"Thai",native_name:"\u0E44\u0E17\u0E22",rtl:!1},rh={country:{code:u.Thailand,name:"Thailand",native:"\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22"},id:a.ThaiThailand,language:{code:r.Thai,name:"Thai",native:"\u0E44\u0E17\u0E22"},name:"Thai (Thailand)",native_name:"\u0E44\u0E17\u0E22 (\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22)",rtl:!1},oh={id:a.Tibetan,language:{code:r.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42",rtl:!1},lh={country:{code:u.China,name:"China",native:"\u4E2D\u56FD"},id:a.TibetanChina,language:{code:r.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (China)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42)",rtl:!1},mh={country:{code:u.Bhutan,name:"Bhutan",native:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D"},id:a.TibetanBhutan,language:{code:r.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (Bhutan)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D)",rtl:!1},dh={country:{code:u.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:a.TibetanIndia,language:{code:r.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (India)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)",rtl:!1},ch={id:a.Tsonga,language:{code:r.Tsonga,name:"Tsonga",native:"Xitsonga"},name:"Tsonga",native_name:"Xitsonga",rtl:!1},Ah={id:a.Tswana,language:{code:r.Tswana,name:"Tswana",native:"Setswana"},name:"Tswana",native_name:"Setswana",rtl:!1},gh={country:{code:u.SouthAfrica,name:"South Africa",native:"South Africa"},id:a.TswanaSouthAfrica,language:{code:r.Tswana,name:"Tswana",native:"Setswana"},name:"Tswana (South Africa)",native_name:"Setswana (South Africa)",rtl:!1},Th={id:a.Turkish,language:{code:r.Turkish,name:"Turkish",native:"T\xFCrk\xE7e"},name:"Turkish",native_name:"T\xFCrk\xE7e",rtl:!1},hh={country:{code:u.Turkey,name:"Turkey",native:"T\xFCrkiye"},id:a.TurkishTurkey,language:{code:r.Turkish,name:"Turkish",native:"T\xFCrk\xE7e"},name:"Turkish (Turkey)",native_name:"T\xFCrk\xE7e (T\xFCrkiye)",rtl:!1},fh={id:a.Ukrainian,language:{code:r.Ukrainian,name:"Ukrainian",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430"},name:"Ukrainian",native_name:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430",rtl:!1},ph={country:{code:u.Ukraine,name:"Ukraine",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0430"},id:a.UkrainianUkraine,language:{code:r.Ukrainian,name:"Ukrainian",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430"},name:"Ukrainian (Ukraine)",native_name:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)",rtl:!1},Ch={id:a.Urdu,language:{code:r.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu",native_name:"\u0627\u0631\u062F\u0648",rtl:!0},Eh={country:{code:u.Afghanistan,name:"Afghanistan",native:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},id:a.UrduAfghanistan,language:{code:r.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (Afghanistan)",native_name:"\u0627\u0631\u062F\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)",rtl:!0},_h={country:{code:u.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:a.UrduIndia,language:{code:r.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (India)",native_name:"\u0627\u0631\u062F\u0648 (\u092D\u093E\u0930\u0924)",rtl:!0},Sh={country:{code:u.Pakistan,name:"Pakistan",native:"\u067E\u0627\u06A9\u0633\u062A\u0627\u0646"},id:a.UrduPakistan,language:{code:r.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (Pakistan)",native_name:"\u0627\u0631\u062F\u0648 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)",rtl:!0},Ih={id:a.Uzbek,language:{code:r.Uzbek,name:"Uzbek",native:"O\u02BBzbekcha"},name:"Uzbek",native_name:"O\u02BBzbekcha",rtl:!1},vh={country:{code:u.Uzbekistan,name:"Uzbekistan",native:"O\u02BBzbekiston"},id:a.UzbekUzbekistan,language:{code:r.Uzbek,name:"Uzbek",native:"O\u02BBzbekcha"},name:"Uzbek (Latin, Uzbekistan)",native_name:"O\u02BBzbekcha (O\u02BBzbekiston)",rtl:!1},bh={country:{code:u.Uzbekistan,name:"Uzbekistan",native:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D"},id:a.UzbekCyrillic,language:{code:r.Uzbek,name:"Uzbek",native:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D"},name:"Uzbek (Cyrillic)",native_name:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D (\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D)",rtl:!1},yh={id:a.Vietnamese,language:{code:r.Vietnamese,name:"Vietnamese",native:"Ti\u1EBFng Vi\u1EC7t"},name:"Vietnamese",native_name:"Ti\u1EBFng Vi\u1EC7t",rtl:!1},Bh={country:{code:u.Vietnam,name:"Vietnam",native:"Vi\u1EC7t Nam"},id:a.VietnameseVietnam,language:{code:r.Vietnamese,name:"Vietnamese",native:"Ti\u1EBFng Vi\u1EC7t"},name:"Vietnamese (Vietnam)",native_name:"Ti\u1EBFng Vi\u1EC7t (Vi\u1EC7t Nam)",rtl:!1},Dh={id:a.Welsh,language:{code:r.Welsh,name:"Welsh",native:"Cymraeg"},name:"Welsh",native_name:"Cymraeg",rtl:!1},Uh={country:{code:u.UnitedKingdom,name:"United Kingdom",native:"United Kingdom"},id:a.WelshUnitedKingdom,language:{code:r.Welsh,name:"Welsh",native:"Cymraeg"},name:"Welsh (United Kingdom)",native_name:"Cymraeg (United Kingdom)",rtl:!1},Ph={id:a.Xhosa,language:{code:r.Xhosa,name:"Xhosa",native:"isiXhosa"},name:"Xhosa",native_name:"isiXhosa",rtl:!1},Nh={country:{code:u.SouthAfrica,name:"South Africa",native:"South Africa"},id:a.XhosaSouthAfrica,language:{code:r.Xhosa,name:"Xhosa",native:"isiXhosa"},name:"Xhosa (South Africa)",native_name:"isiXhosa (South Africa)",rtl:!1},Mh={id:a.Yiddish,language:{code:r.Yiddish,name:"Yiddish",native:"\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9"},name:"Yiddish",native_name:"\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9",rtl:!1},Fh={id:a.Yoruba,language:{code:r.Yoruba,name:"Yoruba",native:"Yor\xF9b\xE1"},name:"Yoruba",native_name:"Yor\xF9b\xE1",rtl:!1},kh={country:{code:u.Nigeria,name:"Nigeria",native:"Nigeria"},id:a.YorubaNigeria,language:{code:r.Yoruba,name:"Yoruba",native:"Yor\xF9b\xE1"},name:"Yoruba (Nigeria)",native_name:"Yor\xF9b\xE1 (Nigeria)",rtl:!1},Lh={id:a.Zulu,language:{code:r.Zulu,name:"Zulu",native:"isiZulu"},name:"Zulu",native_name:"isiZulu",rtl:!1},zh={country:{code:u.SouthAfrica,name:"South Africa",native:"South Africa"},id:a.ZuluSouthAfrica,language:{code:r.Zulu,name:"Zulu",native:"isiZulu"},name:"Zulu (South Africa)",native_name:"isiZulu (South Africa)",rtl:!1},Rh={id:s.AfricaAbidjan,name:"Africa/Abidjan",offset:i.UTC_0,timezone:n.CoordinatedUniversalTime},xh={id:s.AfricaAccra,name:"Africa/Accra",offset:i.UTC_0,timezone:n.CoordinatedUniversalTime},wh={id:s.AfricaAddisAbaba,name:"Africa/Addis_Ababa",offset:i.UTC_PLUS_3,timezone:n.EastAfricaTime},qh={id:s.AfricaAlgiers,name:"Africa/Algiers",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},Gh={id:s.AfricaAsmara,name:"Africa/Asmara",offset:i.UTC_PLUS_3,timezone:n.EastAfricaTime},Kh={id:s.AfricaBamako,name:"Africa/Bamako",offset:i.UTC_0,timezone:n.CoordinatedUniversalTime},Oh={id:s.AfricaBangui,name:"Africa/Bangui",offset:i.UTC_PLUS_1,timezone:n.WestAfricaTime},Hh={id:s.AfricaBanjul,name:"Africa/Banjul",offset:i.UTC_0,timezone:n.CoordinatedUniversalTime},jh={id:s.AfricaBissau,name:"Africa/Bissau",offset:i.UTC_0,timezone:n.CoordinatedUniversalTime},$h={id:s.AfricaBlantyre,name:"Africa/Blantyre",offset:i.UTC_PLUS_2,timezone:n.CentralAfricaTime},Wh={id:s.AfricaBrazzaville,name:"Africa/Brazzaville",offset:i.UTC_PLUS_1,timezone:n.WestAfricaTime},Vh={id:s.AfricaBujumbura,name:"Africa/Bujumbura",offset:i.UTC_PLUS_2,timezone:n.CentralAfricaTime},Yh={id:s.AfricaCairo,name:"Africa/Cairo",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},Zh={id:s.AfricaCasablanca,name:"Africa/Casablanca",offset:i.UTC_PLUS_1,timezone:n.WesternEuropeanTime},Jh={id:s.AfricaCeuta,name:"Africa/Ceuta",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},Qh={id:s.AfricaConakry,name:"Africa/Conakry",offset:i.UTC_0,timezone:n.CoordinatedUniversalTime},Xh={id:s.AfricaDakar,name:"Africa/Dakar",offset:i.UTC_0,timezone:n.CoordinatedUniversalTime},ef={id:s.AfricaDarEsSalaam,name:"Africa/Dar_es_Salaam",offset:i.UTC_PLUS_3,timezone:n.EastAfricaTime},af={id:s.AfricaDjibouti,name:"Africa/Djibouti",offset:i.UTC_PLUS_3,timezone:n.EastAfricaTime},nf={id:s.AfricaDouala,name:"Africa/Douala",offset:i.UTC_PLUS_1,timezone:n.WestAfricaTime},sf={id:s.AfricaElAaiun,name:"Africa/El_Aaiun",offset:i.UTC_PLUS_1,timezone:n.WestAfricaTime},uf={id:s.AfricaFreetown,name:"Africa/Freetown",offset:i.UTC_0,timezone:n.CoordinatedUniversalTime},tf={id:s.AfricaGaborone,name:"Africa/Gaborone",offset:i.UTC_PLUS_2,timezone:n.CentralAfricaTime},rf={id:s.AfricaHarare,name:"Africa/Harare",offset:i.UTC_PLUS_2,timezone:n.CentralAfricaTime},of={id:s.AfricaJohannesburg,name:"Africa/Johannesburg",offset:i.UTC_PLUS_2,timezone:n.SouthAfricanStandardTime},lf={id:s.AfricaJuba,name:"Africa/Juba",offset:i.UTC_PLUS_3,timezone:n.EastAfricaTime},mf={id:s.AfricaKampala,name:"Africa/Kampala",offset:i.UTC_PLUS_3,timezone:n.EastAfricaTime},df={id:s.AfricaKhartoum,name:"Africa/Khartoum",offset:i.UTC_PLUS_2,timezone:n.EastAfricaTime},cf={id:s.AfricaKigali,name:"Africa/Kigali",offset:i.UTC_PLUS_2,timezone:n.CentralAfricaTime},Af={id:s.AfricaKinshasa,name:"Africa/Kinshasa",offset:i.UTC_PLUS_1,timezone:n.WestAfricaTime},gf={id:s.AfricaLagos,name:"Africa/Lagos",offset:i.UTC_PLUS_1,timezone:n.WestAfricaTime},Tf={id:s.AfricaLibreville,name:"Africa/Libreville",offset:i.UTC_PLUS_1,timezone:n.WestAfricaTime},hf={id:s.AfricaLome,name:"Africa/Lome",offset:i.UTC_0,timezone:n.CoordinatedUniversalTime},ff={id:s.AfricaLuanda,name:"Africa/Luanda",offset:i.UTC_PLUS_1,timezone:n.WestAfricaTime},pf={id:s.AfricaLubumbashi,name:"Africa/Lubumbashi",offset:i.UTC_PLUS_2,timezone:n.CentralAfricaTime},Cf={id:s.AfricaLusaka,name:"Africa/Lusaka",offset:i.UTC_PLUS_2,timezone:n.CentralAfricaTime},Ef={id:s.AfricaMalabo,name:"Africa/Malabo",offset:i.UTC_PLUS_1,timezone:n.WestAfricaTime},_f={id:s.AfricaMaputo,name:"Africa/Maputo",offset:i.UTC_PLUS_2,timezone:n.CentralAfricaTime},Sf={id:s.AfricaMaseru,name:"Africa/Maseru",offset:i.UTC_PLUS_2,timezone:n.SouthAfricanStandardTime},If={id:s.AfricaMbabane,name:"Africa/Mbabane",offset:i.UTC_PLUS_2,timezone:n.SouthAfricanStandardTime},vf={id:s.AfricaMogadishu,name:"Africa/Mogadishu",offset:i.UTC_PLUS_3,timezone:n.EastAfricaTime},bf={id:s.AfricaMonrovia,name:"Africa/Monrovia",offset:i.UTC_0,timezone:n.CoordinatedUniversalTime},yf={id:s.AfricaNairobi,name:"Africa/Nairobi",offset:i.UTC_PLUS_3,timezone:n.EastAfricaTime},Bf={id:s.AfricaNdjamena,name:"Africa/Ndjamena",offset:i.UTC_PLUS_1,timezone:n.WestAfricaTime},Df={id:s.AfricaNiamey,name:"Africa/Niamey",offset:i.UTC_PLUS_1,timezone:n.WestAfricaTime},Uf={id:s.AfricaNouakchott,name:"Africa/Nouakchott",offset:i.UTC_0,timezone:n.GreenwichMeanTime},Pf={id:s.AfricaOuagadougou,name:"Africa/Ouagadougou",offset:i.UTC_0,timezone:n.CoordinatedUniversalTime},Nf={id:s.AfricaPortoNovo,name:"Africa/Porto-Novo",offset:i.UTC_PLUS_1,timezone:n.WestAfricaTime},Mf={id:s.AfricaSaoTome,name:"Africa/SaoTome",offset:i.UTC_0,timezone:n.CoordinatedUniversalTime},Ff={id:s.AfricaTripoli,name:"Africa/Tripoli",offset:i.UTC_0,timezone:n.CoordinatedUniversalTime},kf={id:s.AfricaTunis,name:"Africa/Tunis",offset:i.UTC_0,timezone:n.CoordinatedUniversalTime},Lf={id:s.AfricaWindhoek,name:"Africa/Windhoek",offset:i.UTC_PLUS_2,timezone:n.WestAfricaTime},zf={id:s.AmericaAdak,name:"America/Adak",offset:i.UTC_PLUS_10,timezone:n.HawaiiAleutianStandardTime},Rf={id:s.AmericaAnchorage,name:"America/Anchorage",offset:i.UTC_PLUS_9,timezone:n.AlaskaStandardTime},xf={id:s.AmericaAnguilla,name:"America/Anguilla",offset:i.UTC_0,timezone:n.AtlanticStandardTime},wf={id:s.AmericaAntigua,name:"America/Antigua",offset:i.UTC_0,timezone:n.AtlanticStandardTime},qf={id:s.AmericaAraguaina,name:"America/Araguaina",offset:i.UTC_MINUS_3,timezone:n.BrasiliaTime},Gf={id:s.AmericaArgentinaBuenosAires,name:"America/Argentina/Buenos_Aires",offset:i.UTC_MINUS_3,timezone:n.ArgentinaTime},Kf={id:s.AmericaArgentinaCatamarca,name:"America/Argentina/Catamarca",offset:i.UTC_MINUS_3,timezone:n.ArgentinaTime},Of={id:s.AmericaArgentinaCordoba,name:"America/Argentina/Cordoba",offset:i.UTC_MINUS_3,timezone:n.ArgentinaTime},Hf={id:s.AmericaArgentinaJujuy,name:"America/Argentina/Jujuy",offset:i.UTC_MINUS_3,timezone:n.ArgentinaTime},jf={id:s.AmericaArgentinaLaRioja,name:"America/Argentina/La_Rioja",offset:i.UTC_MINUS_3,timezone:n.ArgentinaTime},$f={id:s.AmericaArgentinaMendoza,name:"America/Argentina/Mendoza",offset:i.UTC_MINUS_3,timezone:n.ArgentinaTime},Wf={id:s.AmericaArgentinaRioGallegos,name:"America/Argentina/Rio_Gallegos",offset:i.UTC_MINUS_3,timezone:n.ArgentinaTime},Vf={id:s.AmericaArgentinaSalta,name:"America/Argentina/Salta",offset:i.UTC_MINUS_3,timezone:n.ArgentinaTime},Yf={id:s.AmericaArgentinaSanJuan,name:"America/Argentina/San_Juan",offset:i.UTC_MINUS_3,timezone:n.ArgentinaTime},Zf={id:s.AmericaArgentinaSanLuis,name:"America/Argentina/San_Luis",offset:i.UTC_MINUS_3,timezone:n.ArgentinaTime},Jf={id:s.AmericaArgentinaTucuman,name:"America/Argentina/Tucuman",offset:i.UTC_MINUS_3,timezone:n.ArgentinaTime},Qf={id:s.AmericaArgentinaUshuaia,name:"America/Argentina/Ushuaia",offset:i.UTC_MINUS_3,timezone:n.ArgentinaTime},Xf={id:s.AmericaAruba,name:"America/Aruba",offset:i.UTC_0,timezone:n.AtlanticStandardTime},ep={id:s.AmericaAsuncion,name:"America/Asuncion",offset:i.UTC_MINUS_4,timezone:n.ParaguayTime},ap={id:s.AmericaAtikokan,name:"America/Atikokan",offset:i.UTC_0,timezone:n.EasternStandardTime},ip={id:s.AmericaAtka,name:"America/Atka",offset:i.UTC_MINUS_10,timezone:n.HawaiiAleutianStandardTime},np={id:s.AmericaBahia,name:"America/Bahia",offset:i.UTC_MINUS_3,timezone:n.BrasiliaTime},sp={id:s.AmericaBahiaBanderas,name:"America/Bahia_Banderas",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},up={id:s.AmericaBarbados,name:"America/Barbados",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},tp={id:s.AmericaBelem,name:"America/Belem",offset:i.UTC_MINUS_3,timezone:n.BrasiliaTime},rp={id:s.AmericaBelize,name:"America/Belize",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},op={id:s.AmericaBlancSablon,name:"America/Blanc-Sablon",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},lp={id:s.AmericaBoaVista,name:"America/Boa_Vista",offset:i.UTC_MINUS_4,timezone:n.AmazonTime},mp={id:s.AmericaBogota,name:"America/Bogota",offset:i.UTC_MINUS_5,timezone:n.ColombiaTime},dp={id:s.AmericaBoise,name:"America/Boise",offset:i.UTC_MINUS_7,timezone:n.MountainStandardTime},cp={id:s.AmericaCambridgeBay,name:"America/Cambridge_Bay",offset:i.UTC_MINUS_7,timezone:n.MountainStandardTime},Ap={id:s.AmericaCampoGrande,name:"America/Campo_Grande",offset:i.UTC_MINUS_4,timezone:n.AmazonTime},gp={id:s.AmericaCancun,name:"America/Cancun",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},Tp={id:s.AmericaCaracas,name:"America/Caracas",offset:i.UTC_MINUS_4,timezone:n.VenezuelaStandardTime},hp={id:s.AmericaCayenne,name:"America/Cayenne",offset:i.UTC_MINUS_3,timezone:n.FrenchGuianaTime},fp={id:s.AmericaCayman,name:"America/Cayman",offset:i.UTC_0,timezone:n.AtlanticStandardTime},pp={id:s.AmericaChicago,name:"America/Chicago",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},Cp={id:s.AmericaChihuahua,name:"America/Chihuahua",offset:i.UTC_MINUS_7,timezone:n.MountainStandardTime},Ep={id:s.AmericaCoralHarbour,name:"America/Coral_Harbour",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},_p={id:s.AmericaCordoba,name:"America/Cordoba",offset:i.UTC_MINUS_3,timezone:n.ArgentinaTime},Sp={id:s.AmericaCostaRica,name:"America/Costa_Rica",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},Ip={id:s.AmericaCreston,name:"America/Creston",offset:i.UTC_MINUS_7,timezone:n.MountainStandardTime},vp={id:s.AmericaCuiaba,name:"America/Cuiaba",offset:i.UTC_MINUS_4,timezone:n.AmazonTime},bp={id:s.AmericaCuracao,name:"America/Curacao",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},yp={id:s.AmericaDanmarkshavn,name:"America/Danmarkshavn",offset:i.UTC_0,timezone:n.GreenwichMeanTime},Bp={id:s.AmericaDawson,name:"America/Dawson",offset:i.UTC_MINUS_8,timezone:n.PacificStandardTime},Dp={id:s.AmericaDawsonCreek,name:"America/Dawson_Creek",offset:i.UTC_MINUS_8,timezone:n.PacificStandardTime},Up={id:s.AmericaDenver,name:"America/Denver",offset:i.UTC_MINUS_7,timezone:n.MountainStandardTime},Pp={id:s.AmericaDetroit,name:"America/Detroit",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},Np={id:s.AmericaDominica,name:"America/Dominica",offset:i.UTC_0,timezone:n.AtlanticStandardTime},Mp={id:s.AmericaEdmonton,name:"America/Edmonton",offset:i.UTC_MINUS_7,timezone:n.MountainStandardTime},Fp={id:s.AmericaEirunepe,name:"America/Eirunepe",offset:i.UTC_MINUS_5,timezone:n.AcreTime},kp={id:s.AmericaElSalvador,name:"America/El_Salvador",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},Lp={id:s.AmericaFortaleza,name:"America/Fortaleza",offset:i.UTC_MINUS_3,timezone:n.BrasiliaTime},zp={id:s.AmericaGlaceBay,name:"America/Glace_Bay",offset:i.UTC_0,timezone:n.AtlanticStandardTime},Rp={id:s.AmericaGodthab,name:"America/Godthab",offset:i.UTC_MINUS_3,timezone:n.WestGreenlandTime},xp={id:s.AmericaGooseBay,name:"America/Goose_Bay",offset:i.UTC_0,timezone:n.AtlanticStandardTime},wp={id:s.AmericaGrandTurk,name:"America/Grand_Turk",offset:i.UTC_0,timezone:n.AtlanticStandardTime},qp={id:s.AmericaGrenada,name:"America/Grenada",offset:i.UTC_0,timezone:n.AtlanticStandardTime},Gp={id:s.AmericaGuadeloupe,name:"America/Guadeloupe",offset:i.UTC_0,timezone:n.AtlanticStandardTime},Kp={id:s.AmericaGuatemala,name:"America/Guatemala",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},Op={id:s.AmericaGuayaquil,name:"America/Guayaquil",offset:i.UTC_MINUS_5,timezone:n.EcuadorTime},Hp={id:s.AmericaGuyana,name:"America/Guyana",offset:i.UTC_0,timezone:n.AtlanticStandardTime},jp={id:s.AmericaHalifax,name:"America/Halifax",offset:i.UTC_0,timezone:n.AtlanticStandardTime},$p={id:s.AmericaHavana,name:"America/Havana",offset:i.UTC_MINUS_5,timezone:n.CubaStandardTime},Wp={id:s.AmericaHermosillo,name:"America/Hermosillo",offset:i.UTC_MINUS_7,timezone:n.MountainStandardTime},Vp={id:s.AmericaIndianaIndianapolis,name:"America/Indiana/Indianapolis",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},Yp={id:s.AmericaIndianaKnox,name:"America/Indiana/Knox",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},Zp={id:s.AmericaIndianaMarengo,name:"America/Indiana/Marengo",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},Jp={id:s.AmericaIndianaPetersburg,name:"America/Indiana/Petersburg",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},Qp={id:s.AmericaIndianaTellCity,name:"America/Indiana/Tell_City",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},Xp={id:s.AmericaIndianaVevay,name:"America/Indiana/Vevay",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},eC={id:s.AmericaIndianaVincennes,name:"America/Indiana/Vincennes",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},aC={id:s.AmericaIndianaWinamac,name:"America/Indiana/Winamac",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},iC={id:s.AmericaInuvik,name:"America/Inuvik",offset:i.UTC_MINUS_7,timezone:n.MountainStandardTime},nC={id:s.AmericaIqaluit,name:"America/Iqaluit",offset:i.UTC_0,timezone:n.EasternStandardTime},sC={id:s.AmericaJamaica,name:"America/Jamaica",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},uC={id:s.AmericaJuneau,name:"America/Juneau",offset:i.UTC_MINUS_9,timezone:n.AlaskaStandardTime},tC={id:s.AmericaKentuckyLouisville,name:"America/Kentucky/Louisville",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},rC={id:s.AmericaKentuckyMonticello,name:"America/Kentucky/Monticello",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},oC={id:s.AmericaKralendijk,name:"America/Kralendijk",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},lC={id:s.AmericaLaPaz,name:"America/La_Paz",offset:i.UTC_MINUS_4,timezone:n.BoliviaTime},mC={id:s.AmericaLima,name:"America/Lima",offset:i.UTC_MINUS_5,timezone:n.PeruTime},dC={id:s.AmericaLosAngeles,name:"America/Los_Angeles",offset:i.UTC_MINUS_8,timezone:n.PacificStandardTime},cC={id:s.AmericaLouisville,name:"America/Louisville",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},AC={id:s.AmericaLowerPrinces,name:"America/Lower_Princes",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},gC={id:s.AmericaMaceio,name:"America/Maceio",offset:i.UTC_MINUS_3,timezone:n.BrasiliaTime},TC={id:s.AmericaManagua,name:"America/Managua",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},hC={id:s.AmericaManaus,name:"America/Manaus",offset:i.UTC_MINUS_4,timezone:n.AmazonTime},fC={id:s.AmericaMarigot,name:"America/Marigot",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},pC={id:s.AmericaMartinique,name:"America/Martinique",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},CC={id:s.AmericaMatamoros,name:"America/Matamoros",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},EC={id:s.AmericaMazatlan,name:"America/Mazatlan",offset:i.UTC_MINUS_7,timezone:n.MountainStandardTime},_C={id:s.AmericaMenominee,name:"America/Menominee",offset:i.UTC_MINUS_5,timezone:n.CentralStandardTime},SC={id:s.AmericaMerida,name:"America/Merida",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},IC={id:s.AmericaMetlakatla,name:"America/Metlakatla",offset:i.UTC_MINUS_9,timezone:n.AlaskaStandardTime},vC={id:s.AmericaMexicoCity,name:"America/Mexico_City",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},bC={id:s.AmericaMiquelon,name:"America/Miquelon",offset:i.UTC_MINUS_3,timezone:n.SaintPierreAndMiquelonStandardTime},yC={id:s.AmericaMoncton,name:"America/Moncton",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},BC={id:s.AmericaMonterrey,name:"America/Monterrey",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},DC={id:s.AmericaMontevideo,name:"America/Montevideo",offset:i.UTC_MINUS_3,timezone:n.UruguayStandardTime},UC={id:s.AmericaMontreal,name:"America/Montreal",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},PC={id:s.AmericaMontserrat,name:"America/Montserrat",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},NC={id:s.AmericaNassau,name:"America/Nassau",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},MC={id:s.AmericaNewYork,name:"America/New_York",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},FC={id:s.AmericaNipigon,name:"America/Nipigon",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},kC={id:s.AmericaNome,name:"America/Nome",offset:i.UTC_MINUS_9,timezone:n.AlaskaStandardTime},LC={id:s.AmericaNoronha,name:"America/Noronha",offset:i.UTC_MINUS_2,timezone:n.FernandoDeNoronhaTime},zC={id:s.AmericaNorthDakotaBeulah,name:"America/North_Dakota/Beulah",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},RC={id:s.AmericaNorthDakotaCenter,name:"America/North_Dakota/Center",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},xC={id:s.AmericaNorthDakotaNewSalem,name:"America/North_Dakota/New_Salem",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},wC={id:s.AmericaOjinaga,name:"America/Ojinaga",offset:i.UTC_MINUS_7,timezone:n.MountainStandardTime},qC={id:s.AmericaPanama,name:"America/Panama",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},GC={id:s.AmericaPangnirtung,name:"America/Pangnirtung",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},KC={id:s.AmericaParamaribo,name:"America/Paramaribo",offset:i.UTC_MINUS_3,timezone:n.SurinameTime},OC={id:s.AmericaPhoenix,name:"America/Phoenix",offset:i.UTC_MINUS_7,timezone:n.MountainStandardTime},HC={id:s.AmericaPortAuPrince,name:"America/Port-au-Prince",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},jC={id:s.AmericaPortOfSpain,name:"America/Port_of_Spain",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},$C={id:s.AmericaPortoVelho,name:"America/Porto_Velho",offset:i.UTC_MINUS_4,timezone:n.AmazonTime},WC={id:s.AmericaPuertoRico,name:"America/Puerto_Rico",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},VC={id:s.AmericaRainyRiver,name:"America/Rainy_River",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},YC={id:s.AmericaRankinInlet,name:"America/Rankin_Inlet",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},ZC={id:s.AmericaRecife,name:"America/Recife",offset:i.UTC_MINUS_3,timezone:n.BrasiliaTime},JC={id:s.AmericaRegina,name:"America/Regina",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},QC={id:s.AmericaResolute,name:"America/Resolute",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},XC={id:s.AmericaRioBranco,name:"America/Rio_Branco",offset:i.UTC_MINUS_5,timezone:n.AcreTime},eE={id:s.AmericaSantaIsabel,name:"America/Santa_Isabel",offset:i.UTC_MINUS_8,timezone:n.PacificStandardTime},aE={id:s.AmericaSantarem,name:"America/Santarem",offset:i.UTC_MINUS_3,timezone:n.BrasiliaTime},iE={id:s.AmericaSantiago,name:"America/Santiago",offset:i.UTC_MINUS_4,timezone:n.ChileStandardTime},nE={id:s.AmericaSantoDomingo,name:"America/Santo_Domingo",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},sE={id:s.AmericaSaoPaulo,name:"America/Sao_Paulo",offset:i.UTC_MINUS_3,timezone:n.BrasiliaTime},uE={id:s.AmericaScoresbysund,name:"America/Scoresbysund",offset:i.UTC_MINUS_1,timezone:n.EasternGreenlandTime},tE={id:s.AmericaShiprock,name:"America/Shiprock",offset:i.UTC_MINUS_7,timezone:n.MountainStandardTime},rE={id:s.AmericaSitka,name:"America/Sitka",offset:i.UTC_MINUS_9,timezone:n.AlaskaStandardTime},oE={id:s.AmericaStBarthelemy,name:"America/St_Barthelemy",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},lE={id:s.AmericaStJohns,name:"America/St_Johns",offset:i.UTC_MINUS_3,timezone:n.NewfoundlandStandardTime},mE={id:s.AmericaStKitts,name:"America/St_Kitts",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},dE={id:s.AmericaStLucia,name:"America/St_Lucia",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},cE={id:s.AmericaStThomas,name:"America/St_Thomas",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},AE={id:s.AmericaStVincent,name:"America/St_Vincent",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},gE={id:s.AmericaSwiftCurrent,name:"America/Swift_Current",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},TE={id:s.AmericaTegucigalpa,name:"America/Tegucigalpa",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},hE={id:s.AmericaThule,name:"America/Thule",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},fE={id:s.AmericaThunderBay,name:"America/Thunder_Bay",offset:i.UTC_MINUS_4,timezone:n.EasternStandardTime},pE={id:s.AmericaTijuana,name:"America/Tijuana",offset:i.UTC_MINUS_8,timezone:n.PacificStandardTime},CE={id:s.AmericaToronto,name:"America/Toronto",offset:i.UTC_MINUS_5,timezone:n.EasternStandardTime},EE={id:s.AmericaTortola,name:"America/Tortola",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},_E={id:s.AmericaVancouver,name:"America/Vancouver",offset:i.UTC_MINUS_8,timezone:n.PacificStandardTime},SE={id:s.AmericaWhitehorse,name:"America/Whitehorse",offset:i.UTC_MINUS_8,timezone:n.PacificStandardTime},IE={id:s.AmericaWinnipeg,name:"America/Winnipeg",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},vE={id:s.AmericaYakutat,name:"America/Yakutat",offset:i.UTC_MINUS_9,timezone:n.AlaskaStandardTime},bE={id:s.AmericaYellowknife,name:"America/Yellowknife",offset:i.UTC_MINUS_6,timezone:n.MountainStandardTime},yE={id:s.AntarcticaCasey,name:"Antarctica/Casey",offset:i.UTC_MINUS_8,timezone:n.WesternStandardTime},BE={id:s.AntarcticaDavis,name:"Antarctica/Davis",offset:i.UTC_MINUS_7,timezone:n.NewfoundlandStandardTime},DE={id:s.AntarcticaDumontDUrville,name:"Antarctica/DumontDUrville",offset:i.UTC_MINUS_10,timezone:n.CentralStandardTime},UE={id:s.AntarcticaMacquarie,name:"Antarctica/Macquarie",offset:i.UTC_MINUS_11,timezone:n.CentralStandardTime},PE={id:s.AntarcticaMawson,name:"Antarctica/Mawson",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},NE={id:s.AntarcticaMcMurdo,name:"Antarctica/McMurdo",offset:i.UTC_MINUS_12,timezone:n.NewZealandStandardTime},ME={id:s.AntarcticaPalmer,name:"Antarctica/Palmer",offset:i.UTC_MINUS_4,timezone:n.ChathamStandardTime},FE={id:s.AntarcticaRothera,name:"Antarctica/Rothera",offset:i.UTC_MINUS_3,timezone:n.RotheraResearchStationTime},kE={id:s.AntarcticaSyowa,name:"Antarctica/Syowa",offset:i.UTC_MINUS_3,timezone:n.ShowaStationTime},LE={id:s.AntarcticaTroll,name:"Antarctica/Troll",offset:i.UTC_MINUS_2,timezone:n.CentralStandardTime},zE={id:s.AntarcticaVostok,name:"Antarctica/Vostok",offset:i.UTC_MINUS_6,timezone:n.CentralStandardTime},RE={id:s.ArcticLongyearbyen,name:"Arctic/Longyearbyen",offset:i.UTC_MINUS_1,timezone:n.CentralEuropeanTime},xE={id:s.AsiaAden,name:"Asia/Aden",offset:i.UTC_PLUS_3,timezone:n.ArabiaStandardTime},wE={id:s.AsiaAlmaty,name:"Asia/Almaty",offset:i.UTC_PLUS_6,timezone:n.AlmaAtaTime},qE={id:s.AsiaAmman,name:"Asia/Amman",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},GE={id:s.AsiaAnadyr,name:"Asia/Anadyr",offset:i.UTC_PLUS_12,timezone:n.NewCaledoniaTime},KE={id:s.AsiaAqtau,name:"Asia/Aqtau",offset:i.UTC_PLUS_5,timezone:n.AqtobeTime},OE={id:s.AsiaAqtobe,name:"Asia/Aqtobe",offset:i.UTC_PLUS_5,timezone:n.AqtobeTime},HE={id:s.AsiaAshgabat,name:"Asia/Ashgabat",offset:i.UTC_PLUS_5,timezone:n.TurkmenistanTime},jE={id:s.AsiaBaghdad,name:"Asia/Baghdad",offset:i.UTC_PLUS_3,timezone:n.ArabiaStandardTime},$E={id:s.AsiaBahrain,name:"Asia/Bahrain",offset:i.UTC_PLUS_3,timezone:n.ArabiaStandardTime},WE={id:s.AsiaBaku,name:"Asia/Baku",offset:i.UTC_PLUS_4,timezone:n.AzerbaijanTime},VE={id:s.AsiaBangkok,name:"Asia/Bangkok",offset:i.UTC_PLUS_7,timezone:n.IndochinaTime},YE={id:s.AsiaBarnaul,name:"Asia/Barnaul",offset:i.UTC_PLUS_7,timezone:n.KrasnoyarskTime},ZE={id:s.AsiaBeirut,name:"Asia/Beirut",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},JE={id:s.AsiaBishkek,name:"Asia/Bishkek",offset:i.UTC_PLUS_6,timezone:n.KyrgyzstanTime},QE={id:s.AsiaBrunei,name:"Asia/Brunei",offset:i.UTC_PLUS_8,timezone:n.BruneiTime},XE={id:s.AsiaChita,name:"Asia/Chita",offset:i.UTC_PLUS_9,timezone:n.YakutskTime},e_={id:s.AsiaChoibalsan,name:"Asia/Choibalsan",offset:i.UTC_PLUS_8,timezone:n.ChoibalsanStandardTime},a_={id:s.AsiaColombo,name:"Asia/Colombo",offset:i.UTC_PLUS_5,timezone:n.IndianStandardTime},i_={id:s.AsiaDamascus,name:"Asia/Damascus",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},n_={id:s.AsiaDhaka,name:"Asia/Dhaka",offset:i.UTC_PLUS_6,timezone:n.BangladeshStandardTime},s_={id:s.AsiaDili,name:"Asia/Dili",offset:i.UTC_PLUS_9,timezone:n.JapanStandardTime},u_={id:s.AsiaDubai,name:"Asia/Dubai",offset:i.UTC_PLUS_4,timezone:n.GulfStandardTime},t_={id:s.AsiaDushanbe,name:"Asia/Dushanbe",offset:i.UTC_PLUS_5,timezone:n.TajikistanTime},r_={id:s.AsiaFamagusta,name:"Asia/Famagusta",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},o_={id:s.AsiaGaza,name:"Asia/Gaza",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},l_={id:s.AsiaHebron,name:"Asia/Hebron",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},m_={id:s.AsiaHoChiMinh,name:"Asia/Ho_Chi_Minh",offset:i.UTC_PLUS_7,timezone:n.IndochinaTime},d_={id:s.AsiaHongKong,name:"Asia/Hong_Kong",offset:i.UTC_PLUS_8,timezone:n.HongKongTime},c_={id:s.AsiaHovd,name:"Asia/Hovd",offset:i.UTC_PLUS_7,timezone:n.HovdTime},A_={id:s.AsiaIrkutsk,name:"Asia/Irkutsk",offset:i.UTC_PLUS_8,timezone:n.IrkutskTime},g_={id:s.AsiaJakarta,name:"Asia/Jakarta",offset:i.UTC_PLUS_7,timezone:n.WesternIndonesianTime},T_={id:s.AsiaJayapura,name:"Asia/Jayapura",offset:i.UTC_PLUS_9,timezone:n.JapanStandardTime},h_={id:s.AsiaJerusalem,name:"Asia/Jerusalem",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},f_={id:s.AsiaKabul,name:"Asia/Kabul",offset:i.UTC_PLUS_4,timezone:n.AfghanistanTime},p_={id:s.AsiaKamchatka,name:"Asia/Kamchatka",offset:i.UTC_PLUS_12,timezone:n.KamchatkaTime},C_={id:s.AsiaKarachi,name:"Asia/Karachi",offset:i.UTC_PLUS_5,timezone:n.PakistanStandardTime},E_={id:s.AsiaKathmandu,name:"Asia/Kathmandu",offset:i.UTC_PLUS_5,timezone:n.NepalTime},__={id:s.AsiaKhandyga,name:"Asia/Khandyga",offset:i.UTC_PLUS_9,timezone:n.YakutskTime},S_={id:s.AsiaKolkata,name:"Asia/Kolkata",offset:i.UTC_PLUS_5,timezone:n.IndianStandardTime},I_={id:s.AsiaKrasnoyarsk,name:"Asia/Krasnoyarsk",offset:i.UTC_PLUS_7,timezone:n.KrasnoyarskTime},v_={id:s.AsiaKualaLumpur,name:"Asia/Kuala_Lumpur",offset:i.UTC_PLUS_8,timezone:n.MalaysiaStandardTime},b_={id:s.AsiaKuching,name:"Asia/Kuching",offset:i.UTC_PLUS_8,timezone:n.MalaysiaStandardTime},y_={id:s.AsiaKuwait,name:"Asia/Kuwait",offset:i.UTC_PLUS_3,timezone:n.ArabiaStandardTime},B_={id:s.AsiaMacau,name:"Asia/Macau",offset:i.UTC_PLUS_8,timezone:n.ChinaStandardTime},D_={id:s.AsiaMagadan,name:"Asia/Magadan",offset:i.UTC_PLUS_11,timezone:n.MagadanTime},U_={id:s.AsiaMakassar,name:"Asia/Makassar",offset:i.UTC_PLUS_8,timezone:n.MalaysiaTime},P_={id:s.AsiaManila,name:"Asia/Manila",offset:i.UTC_PLUS_8,timezone:n.PhilippineTime},N_={id:s.AsiaMuscat,name:"Asia/Muscat",offset:i.UTC_PLUS_4,timezone:n.GulfStandardTime},M_={id:s.AsiaNovokuznetsk,name:"Asia/Novokuznetsk",offset:i.UTC_PLUS_6,timezone:n.NovosibirskTime},F_={id:s.AsiaNovosibirsk,name:"Asia/Novosibirsk",offset:i.UTC_PLUS_6,timezone:n.NovosibirskTime},k_={id:s.AsiaOmsk,name:"Asia/Omsk",offset:i.UTC_PLUS_6,timezone:n.OmskTime},L_={id:s.AsiaOral,name:"Asia/Oral",offset:i.UTC_PLUS_5,timezone:n.OralTime},z_={id:s.AsiaPhnomPenh,name:"Asia/Phnom_Penh",offset:i.UTC_PLUS_7,timezone:n.IndochinaTime},R_={id:s.AsiaPontianak,name:"Asia/Pontianak",offset:i.UTC_PLUS_7,timezone:n.WesternIndonesianTime},x_={id:s.AsiaPyongyang,name:"Asia/Pyongyang",offset:i.UTC_PLUS_9,timezone:n.KoreaStandardTime},w_={id:s.AsiaQatar,name:"Asia/Qatar",offset:i.UTC_PLUS_3,timezone:n.ArabiaStandardTime},q_={id:s.AsiaQyzylorda,name:"Asia/Qyzylorda",offset:i.UTC_PLUS_5,timezone:n.WestKazakhstanTime},G_={id:s.AsiaRangoon,name:"Asia/Rangoon",offset:i.UTC_PLUS_6,timezone:n.MyanmarStandardTime},K_={id:s.AsiaRiyadh,name:"Asia/Riyadh",offset:i.UTC_PLUS_3,timezone:n.ArabiaStandardTime},O_={id:s.AsiaSakhalin,name:"Asia/Sakhalin",offset:i.UTC_PLUS_11,timezone:n.SakhalinIslandTime},H_={id:s.AsiaSamarkand,name:"Asia/Samarkand",offset:i.UTC_PLUS_5,timezone:n.UzbekistanTime},j_={id:s.AsiaSeoul,name:"Asia/Seoul",offset:i.UTC_PLUS_9,timezone:n.KoreaStandardTime},$_={id:s.AsiaShanghai,name:"Asia/Shanghai",offset:i.UTC_PLUS_8,timezone:n.ChinaStandardTime},W_={id:s.AsiaSingapore,name:"Asia/Singapore",offset:i.UTC_PLUS_8,timezone:n.SingaporeStandardTime},V_={id:s.AsiaSrednekolymsk,name:"Asia/Srednekolymsk",offset:i.UTC_PLUS_11,timezone:n.SrednekolymskTime},Y_={id:s.AsiaTaipei,name:"Asia/Taipei",offset:i.UTC_PLUS_8,timezone:n.ChinaStandardTime},Z_={id:s.AsiaTashkent,name:"Asia/Tashkent",offset:i.UTC_PLUS_5,timezone:n.UzbekistanTime},J_={id:s.AsiaTbilisi,name:"Asia/Tbilisi",offset:i.UTC_PLUS_4,timezone:n.GeorgiaStandardTime},Q_={id:s.AsiaTehran,name:"Asia/Tehran",offset:i.UTC_PLUS_3,timezone:n.IranStandardTime},X_={id:s.AsiaThimphu,name:"Asia/Thimphu",offset:i.UTC_PLUS_6,timezone:n.BhutanTime},eS={id:s.AsiaTokyo,name:"Asia/Tokyo",offset:i.UTC_PLUS_9,timezone:n.JapanStandardTime},aS={id:s.AsiaTomsk,name:"Asia/Tomsk",offset:i.UTC_PLUS_6,timezone:n.KrasnoyarskTime},iS={id:s.AsiaUlaanbaatar,name:"Asia/Ulaanbaatar",offset:i.UTC_PLUS_8,timezone:n.UlaanbaatarStandardTime},nS={id:s.AsiaUrumqi,name:"Asia/Urumqi",offset:i.UTC_PLUS_8,timezone:n.ChinaStandardTime},sS={id:s.AsiaUstNera,name:"Asia/Ust-Nera",offset:i.UTC_PLUS_10,timezone:n.VladivostokTime},uS={id:s.AsiaVientiane,name:"Asia/Vientiane",offset:i.UTC_PLUS_7,timezone:n.IndochinaTime},tS={id:s.AsiaVladivostok,name:"Asia/Vladivostok",offset:i.UTC_PLUS_10,timezone:n.VladivostokTime},rS={id:s.AsiaYakutsk,name:"Asia/Yakutsk",offset:i.UTC_PLUS_9,timezone:n.YakutskTime},oS={id:s.AsiaYekaterinburg,name:"Asia/Yekaterinburg",offset:i.UTC_PLUS_5,timezone:n.YekaterinburgTime},lS={id:s.AsiaYerevan,name:"Asia/Yerevan",offset:i.UTC_PLUS_4,timezone:n.ArmeniaTime},mS={id:s.AtlanticAzores,name:"Atlantic/Azores",offset:i.UTC_MINUS_1,timezone:n.AzoresStandardTime},dS={id:s.AtlanticBermuda,name:"Atlantic/Bermuda",offset:i.UTC_MINUS_4,timezone:n.AtlanticStandardTime},cS={id:s.AtlanticCanary,name:"Atlantic/Canary",offset:i.UTC_MINUS_1,timezone:n.WesternEuropeanTime},AS={id:s.AtlanticCapeVerde,name:"Atlantic/Cape_Verde",offset:i.UTC_0,timezone:n.CapeVerdeTime},gS={id:s.AtlanticFaroe,name:"Atlantic/Faroe",offset:i.UTC_0,timezone:n.GreenwichMeanTime},TS={id:s.AtlanticMadeira,name:"Atlantic/Madeira",offset:i.UTC_0,timezone:n.WesternEuropeanTime},hS={id:s.AtlanticReykjavik,name:"Atlantic/Reykjavik",offset:i.UTC_0,timezone:n.GreenwichMeanTime},fS={id:s.AtlanticSouthGeorgia,name:"Atlantic/South_Georgia",offset:i.UTC_0,timezone:n.CoordinatedUniversalTime},pS={id:s.AtlanticStHelena,name:"Atlantic/St_Helena",offset:i.UTC_0,timezone:n.GreenwichMeanTime},CS={id:s.AtlanticStanley,name:"Atlantic/Stanley",offset:i.UTC_0,timezone:n.FalklandIslandsTime},ES={id:s.AustraliaAdelaide,name:"Australia/Adelaide",offset:i.UTC_PLUS_9_30,timezone:n.AustralianCentralStandardTime},_S={id:s.AustraliaBrisbane,name:"Australia/Brisbane",offset:i.UTC_PLUS_10,timezone:n.AustralianEasternStandardTime},SS={id:s.AustraliaBrokenHill,name:"Australia/Broken_Hill",offset:i.UTC_PLUS_9_30,timezone:n.AustralianCentralStandardTime},IS={id:s.AustraliaCanberra,name:"Australia/Canberra",offset:i.UTC_PLUS_10,timezone:n.AustralianEasternStandardTime},vS={id:s.AustraliaCurrie,name:"Australia/Currie",offset:i.UTC_PLUS_10,timezone:n.AustralianEasternStandardTime},bS={id:s.AustraliaDarwin,name:"Australia/Darwin",offset:i.UTC_PLUS_9_30,timezone:n.AustralianCentralStandardTime},yS={id:s.AustraliaEucla,name:"Australia/Eucla",offset:i.UTC_PLUS_8_45,timezone:n.AustralianCentralWesternStandardTime},BS={id:s.AustraliaHobart,name:"Australia/Hobart",offset:i.UTC_PLUS_10,timezone:n.AustralianEasternStandardTime},DS={id:s.AustraliaLindeman,name:"Australia/Lindeman",offset:i.UTC_PLUS_10,timezone:n.AustralianEasternStandardTime},US={id:s.AustraliaLordHowe,name:"Australia/Lord_Howe",offset:i.UTC_PLUS_10_30,timezone:n.LordHoweStandardTime},PS={id:s.AustraliaMelbourne,name:"Australia/Melbourne",offset:i.UTC_PLUS_10,timezone:n.AustralianEasternStandardTime},NS={id:s.AustraliaPerth,name:"Australia/Perth",offset:i.UTC_PLUS_8,timezone:n.AustralianWesternStandardTime},MS={id:s.AustraliaSydney,name:"Australia/Sydney",offset:i.UTC_PLUS_10,timezone:n.AustralianEasternStandardTime},FS={id:s.EuropeAmsterdam,name:"Europe/Amsterdam",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},kS={id:s.EuropeAndorra,name:"Europe/Andorra",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},LS={id:s.EuropeAthens,name:"Europe/Athens",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},zS={id:s.EuropeBelgrade,name:"Europe/Belgrade",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},RS={id:s.EuropeBerlin,name:"Europe/Berlin",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},xS={id:s.EuropeBratislava,name:"Europe/Bratislava",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},wS={id:s.EuropeBrussels,name:"Europe/Brussels",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},qS={id:s.EuropeBucharest,name:"Europe/Bucharest",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},GS={id:s.EuropeBudapest,name:"Europe/Budapest",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},KS={id:s.EuropeBusingen,name:"Europe/Busingen",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},OS={id:s.EuropeChisinau,name:"Europe/Chisinau",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},HS={id:s.EuropeCopenhagen,name:"Europe/Copenhagen",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},jS={id:s.EuropeDublin,name:"Europe/Dublin",offset:i.UTC_0,timezone:n.GreenwichMeanTime},$S={id:s.EuropeGibraltar,name:"Europe/Gibraltar",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},WS={id:s.EuropeGuernsey,name:"Europe/Guernsey",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},VS={id:s.EuropeHelsinki,name:"Europe/Helsinki",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},YS={id:s.EuropeIsleOfMan,name:"Europe/Isle_of_Man",offset:i.UTC_0,timezone:n.GreenwichMeanTime},ZS={id:s.EuropeIstanbul,name:"Europe/Istanbul",offset:i.UTC_PLUS_3,timezone:n.EasternEuropeanTime},JS={id:s.EuropeJersey,name:"Europe/Jersey",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},QS={id:s.EuropeKaliningrad,name:"Europe/Kaliningrad",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},XS={id:s.EuropeKiev,name:"Europe/Kiev",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},e1={id:s.EuropeLisbon,name:"Europe/Lisbon",offset:i.UTC_0,timezone:n.GreenwichMeanTime},a1={id:s.EuropeLjubljana,name:"Europe/Ljubljana",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},i1={id:s.EuropeLondon,name:"Europe/London",offset:i.UTC_0,timezone:n.GreenwichMeanTime},n1={id:s.EuropeLuxembourg,name:"Europe/Luxembourg",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},s1={id:s.EuropeMadrid,name:"Europe/Madrid",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},u1={id:s.EuropeMalta,name:"Europe/Malta",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},t1={id:s.EuropeMariehamn,name:"Europe/Mariehamn",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},r1={id:s.EuropeMinsk,name:"Europe/Minsk",offset:i.UTC_PLUS_3,timezone:n.EasternEuropeanTime},o1={id:s.EuropeMonaco,name:"Europe/Monaco",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},l1={id:s.EuropeMoscow,name:"Europe/Moscow",offset:i.UTC_PLUS_3,timezone:n.EasternEuropeanTime},m1={id:s.EuropeOslo,name:"Europe/Oslo",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},d1={id:s.EuropeParis,name:"Europe/Paris",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},c1={id:s.EuropePodgorica,name:"Europe/Podgorica",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},A1={id:s.EuropePrague,name:"Europe/Prague",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},g1={id:s.EuropeRiga,name:"Europe/Riga",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},T1={id:s.EuropeRome,name:"Europe/Rome",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},h1={id:s.EuropeSamara,name:"Europe/Samara",offset:i.UTC_PLUS_4,timezone:n.EasternEuropeanTime},f1={id:s.EuropeSanMarino,name:"Europe/San_Marino",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},p1={id:s.EuropeSarajevo,name:"Europe/Sarajevo",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},C1={id:s.EuropeSimferopol,name:"Europe/Simferopol",offset:i.UTC_PLUS_3,timezone:n.EasternEuropeanTime},E1={id:s.EuropeSkopje,name:"Europe/Skopje",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},_1={id:s.EuropeSofia,name:"Europe/Sofia",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},S1={id:s.EuropeStockholm,name:"Europe/Stockholm",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},I1={id:s.EuropeTallinn,name:"Europe/Tallinn",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},v1={id:s.EuropeTirane,name:"Europe/Tirane",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},b1={id:s.EuropeUzhgorod,name:"Europe/Uzhgorod",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},y1={id:s.EuropeVaduz,name:"Europe/Vaduz",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},B1={id:s.EuropeVatican,name:"Europe/Vatican",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},D1={id:s.EuropeVienna,name:"Europe/Vienna",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},U1={id:s.EuropeVilnius,name:"Europe/Vilnius",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},P1={id:s.EuropeVolgograd,name:"Europe/Volgograd",offset:i.UTC_PLUS_4,timezone:n.EasternEuropeanTime},N1={id:s.EuropeWarsaw,name:"Europe/Warsaw",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},M1={id:s.EuropeZagreb,name:"Europe/Zagreb",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},F1={id:s.EuropeZaporozhye,name:"Europe/Zaporozhye",offset:i.UTC_PLUS_2,timezone:n.EasternEuropeanTime},k1={id:s.EuropeZurich,name:"Europe/Zurich",offset:i.UTC_PLUS_1,timezone:n.CentralEuropeanTime},L1={id:s.IndianAntananarivo,name:"Indian/Antananarivo",offset:i.UTC_PLUS_3,timezone:n.EastAfricaTime},z1={id:s.IndianChagos,name:"Indian/Chagos",offset:i.UTC_PLUS_6,timezone:n.IndianOceanTime},R1={id:s.IndianChristmas,name:"Indian/Christmas",offset:i.UTC_PLUS_7,timezone:n.ChristmasIslandTime},x1={id:s.IndianCocos,name:"Indian/Cocos",offset:i.UTC_PLUS_6,timezone:n.CocosIslandsTime},w1={id:s.IndianComoro,name:"Indian/Comoro",offset:i.UTC_PLUS_3,timezone:n.EastAfricaTime},q1={id:s.IndianKerguelen,name:"Indian/Kerguelen",offset:i.UTC_PLUS_5,timezone:n.FrenchSouthernAndAntarcticTime},G1={id:s.IndianMahe,name:"Indian/Mahe",offset:i.UTC_PLUS_4,timezone:n.SeychellesTime},K1={id:s.IndianMaldives,name:"Indian/Maldives",offset:i.UTC_PLUS_5,timezone:n.MaldivesTime},O1={id:s.IndianMauritius,name:"Indian/Mauritius",offset:i.UTC_PLUS_4,timezone:n.MauritiusTime},H1={id:s.IndianMayotte,name:"Indian/Mayotte",offset:i.UTC_PLUS_3,timezone:n.EastAfricaTime},j1={id:s.IndianReunion,name:"Indian/Reunion",offset:i.UTC_PLUS_4,timezone:n.ReunionTime},$1={id:s.PacificApia,name:"Pacific/Apia",offset:i.UTC_PLUS_13,timezone:n.SamoaStandardTime},W1={id:s.PacificAuckland,name:"Pacific/Auckland",offset:i.UTC_PLUS_13,timezone:n.NewZealandStandardTime},V1={id:s.PacificChatham,name:"Pacific/Chatham",offset:i.UTC_PLUS_13,timezone:n.ChathamStandardTime},Y1={id:s.PacificEaster,name:"Pacific/Easter",offset:i.UTC_PLUS_6,timezone:n.EasterIslandStandardTime},Z1={id:s.PacificEfate,name:"Pacific/Efate",offset:i.UTC_PLUS_11,timezone:n.VanuatuTime},J1={id:s.PacificEnderbury,name:"Pacific/Enderbury",offset:i.UTC_PLUS_13,timezone:n.TongaTime},Q1={id:s.PacificFakaofo,name:"Pacific/Fakaofo",offset:i.UTC_PLUS_13,timezone:n.TongaTime},X1={id:s.PacificFiji,name:"Pacific/Fiji",offset:i.UTC_PLUS_12,timezone:n.FijiTime},e3={id:s.PacificFunafuti,name:"Pacific/Funafuti",offset:i.UTC_PLUS_12,timezone:n.TuvaluTime},a3={id:s.PacificGalapagos,name:"Pacific/Galapagos",offset:i.UTC_PLUS_6,timezone:n.GalapagosTime},i3={id:s.PacificGambier,name:"Pacific/Gambier",offset:i.UTC_PLUS_9,timezone:n.GambierIslandTime},n3={id:s.PacificGuadalcanal,name:"Pacific/Guadalcanal",offset:i.UTC_PLUS_11,timezone:n.SolomonIslandsTime},s3={id:s.PacificGuam,name:"Pacific/Guam",offset:i.UTC_PLUS_10,timezone:n.ChamorroStandardTime},u3={id:s.PacificHonolulu,name:"Pacific/Honolulu",offset:i.UTC_PLUS_10,timezone:n.HawaiiAleutianStandardTime},t3={id:s.PacificJohnston,name:"Pacific/Johnston",offset:i.UTC_PLUS_10,timezone:n.HawaiiAleutianStandardTime},r3={id:s.PacificKiritimati,name:"Pacific/Kiritimati",offset:i.UTC_PLUS_14,timezone:n.LineIslandsTime},o3={id:s.PacificKosrae,name:"Pacific/Kosrae",offset:i.UTC_PLUS_11,timezone:n.KosraeTime},l3={id:s.PacificKwajalein,name:"Pacific/Kwajalein",offset:i.UTC_PLUS_12,timezone:n.MarshallIslandsTime},m3={id:s.PacificMajuro,name:"Pacific/Majuro",offset:i.UTC_PLUS_12,timezone:n.MarshallIslandsTime},d3={id:s.PacificMarquesas,name:"Pacific/Marquesas",offset:i.UTC_PLUS_9,timezone:n.MarquesasIslandsTime},c3={id:s.PacificMidway,name:"Pacific/Midway",offset:i.UTC_PLUS_11,timezone:n.SamoaStandardTime},A3={id:s.PacificNauru,name:"Pacific/Nauru",offset:i.UTC_PLUS_12,timezone:n.NauruTime},g3={id:s.PacificNiue,name:"Pacific/Niue",offset:i.UTC_PLUS_11,timezone:n.NiueTime},T3={id:s.PacificNorfolk,name:"Pacific/Norfolk",offset:i.UTC_PLUS_11,timezone:n.NorfolkIslandTime},h3={id:s.PacificNoumea,name:"Pacific/Noumea",offset:i.UTC_PLUS_11,timezone:n.NewCaledoniaTime},f3={id:s.PacificPagoPago,name:"Pacific/Pago_Pago",offset:i.UTC_PLUS_11,timezone:n.SamoaStandardTime},p3={id:s.PacificPalau,name:"Pacific/Palau",offset:i.UTC_PLUS_9,timezone:n.PalauTime},C3={id:s.PacificPitcairn,name:"Pacific/Pitcairn",offset:i.UTC_PLUS_8,timezone:n.PitcairnTime},E3={id:s.PacificPonape,name:"Pacific/Ponape",offset:i.UTC_PLUS_11,timezone:n.PohnpeiStandardTime},_3={id:s.PacificPortMoresby,name:"Pacific/Port_Moresby",offset:i.UTC_PLUS_10,timezone:n.PapuaNewGuineaTime},S3={id:s.PacificRarotonga,name:"Pacific/Rarotonga",offset:i.UTC_PLUS_10,timezone:n.CookIslandTime},I3={id:s.PacificSaipan,name:"Pacific/Saipan",offset:i.UTC_PLUS_10,timezone:n.ChamorroStandardTime},v3={id:s.PacificTahiti,name:"Pacific/Tahiti",offset:i.UTC_PLUS_10,timezone:n.TahitiTime},b3={id:s.PacificTarawa,name:"Pacific/Tarawa",offset:i.UTC_PLUS_12,timezone:n.GilbertIslandTime},y3={id:s.PacificTongatapu,name:"Pacific/Tongatapu",offset:i.UTC_PLUS_13,timezone:n.TongaTime},B3={id:s.PacificChuuk,name:"Pacific/Chuuk",offset:i.UTC_PLUS_10,timezone:n.ChuukTime},D3={id:s.PacificPohnpei,name:"Pacific/Pohnpei",offset:i.UTC_PLUS_11,timezone:n.PohnpeiStandardTime},U3={id:s.PacificYap,name:"Pacific/Yap",offset:i.UTC_PLUS_10,timezone:n.ChuukTime},Hs=(e=21)=>{let o="",c=crypto.getRandomValues(new Uint8Array(e));for(;e--;){let l=c[e]&63;l<36?o+=l.toString(36):l<62?o+=(l-26).toString(36).toUpperCase():l<63?o+="_":o+="-"}return o},js=[{property:"name",enumerable:!1},{property:"message",enumerable:!1},{property:"stack",enumerable:!1},{property:"code",enumerable:!0}],Ge=Symbol(".toJSON was called"),$s=e=>{e[Ge]=!0;let o=e.toJSON();return delete e[Ge],o},cn=({from:e,seen:o,to_:c,forceEnumerable:l,maxDepth:m,depth:g})=>{let d=c||(Array.isArray(e)?[]:{});if(o.push(e),g>=m)return d;if(typeof e.toJSON=="function"&&e[Ge]!==!0)return $s(e);for(let[h,T]of Object.entries(e)){if(typeof Buffer=="function"&&Buffer.isBuffer(T)){d[h]="[object Buffer]";continue}if(typeof T=="object"&&typeof T.pipe=="function"){d[h]="[object Stream]";continue}if(typeof T!="function"){if(!T||typeof T!="object"){d[h]=T;continue}if(!o.includes(e[h])){g++,d[h]=cn({from:e[h],seen:[...o],forceEnumerable:l,maxDepth:m,depth:g});continue}d[h]="[Circular]"}}for(let{property:h,enumerable:T}of js)typeof e[h]=="string"&&Object.defineProperty(d,h,{value:e[h],enumerable:l?!0:T,configurable:!0,writable:!0});return d};function Ws(e,o={}){let{maxDepth:c=Number.POSITIVE_INFINITY}=o;return typeof e=="object"&&e!==null?cn({from:e,seen:[],forceEnumerable:!0,maxDepth:c,depth:0}):typeof e=="function"?`[Function: ${e.name||"anonymous"}]`:e}var Vs=(e=>(e[e.Warning=999]="Warning",e[e.Exception=1e3]="Exception",e[e.UnmanagedException=1001]="UnmanagedException",e[e.CaughtException=1002]="CaughtException",e[e.UncaughtException=1003]="UncaughtException",e[e.UnhandledPromiseRejectionException=1004]="UnhandledPromiseRejectionException",e[e.AuthenticationException=2e3]="AuthenticationException",e[e.AuthenticationExpiredAccessTokenException=2001]="AuthenticationExpiredAccessTokenException",e[e.AuthenticationInvalidAccessTokenException=2002]="AuthenticationInvalidAccessTokenException",e[e.AuthenticationMissingAccessTokenException=2003]="AuthenticationMissingAccessTokenException",e[e.AuthenticationExpiredRefreshTokenException=2004]="AuthenticationExpiredRefreshTokenException",e[e.AuthenticationInvalidRefreshTokenException=2005]="AuthenticationInvalidRefreshTokenException",e[e.AuthenticationMissingRefreshTokenException=2006]="AuthenticationMissingRefreshTokenException",e[e.AuthenticationMissingDeviceKeyException=2007]="AuthenticationMissingDeviceKeyException",e[e.AuthenticationUnAuthorizedAccessException=2008]="AuthenticationUnAuthorizedAccessException",e[e.AuthenticationCodeMismatchException=2009]="AuthenticationCodeMismatchException",e[e.AuthenticationExpiredCodeException=2010]="AuthenticationExpiredCodeException",e[e.AuthenticationLoginException=2011]="AuthenticationLoginException",e[e.AuthenticationLoginInvalidCredentialsException=2012]="AuthenticationLoginInvalidCredentialsException",e[e.AuthenticationLoginTooManyFailedAttemptsException=2013]="AuthenticationLoginTooManyFailedAttemptsException",e[e.AuthenticationLimitExceededException=2014]="AuthenticationLimitExceededException",e[e.AuthenticationUnauthorizedAccessException=2015]="AuthenticationUnauthorizedAccessException",e[e.AuthenticationTooManyRequestsException=2016]="AuthenticationTooManyRequestsException",e[e.AuthenticationUserNotFoundException=2017]="AuthenticationUserNotFoundException",e[e.AuthenticationSignupException=2018]="AuthenticationSignupException",e[e.AuthenticationUsernameAvailabilityCheckException=2019]="AuthenticationUsernameAvailabilityCheckException",e[e.AuthenticationUsernameExistsException=2020]="AuthenticationUsernameExistsException",e[e.AuthenticationAliasExistException=2021]="AuthenticationAliasExistException",e[e.AuthenticationCodeDeliveryFailureException=2022]="AuthenticationCodeDeliveryFailureException",e[e.AuthenticationMFAMethodNotFoundException=2023]="AuthenticationMFAMethodNotFoundException",e[e.AuthenticationNotAuthorizedException=2024]="AuthenticationNotAuthorizedException",e[e.AuthenticationPasswordResetRequiredException=2025]="AuthenticationPasswordResetRequiredException",e[e.AuthenticationUserNotConfirmedException=2026]="AuthenticationUserNotConfirmedException",e[e.DatabaseException=3e3]="DatabaseException",e[e.SequelizeNotInitializedException=3001]="SequelizeNotInitializedException",e[e.ProcessException=4e3]="ProcessException",e[e.ProcessWarningException=4001]="ProcessWarningException",e[e.KillProcessException=4002]="KillProcessException",e[e.FatalException=4003]="FatalException",e[e.ProcessSigTermException=4004]="ProcessSigTermException",e[e.ProcessSigIntException=4005]="ProcessSigIntException",e[e.MissingEnvironmentVariable=4006]="MissingEnvironmentVariable",e[e.NetworkException=5e3]="NetworkException",e[e.HttpException=5001]="HttpException",e[e.HttpRequestException=5002]="HttpRequestException",e[e.HttpRequestResourceNotFoundException=5003]="HttpRequestResourceNotFoundException",e[e.HttpResponseException=5004]="HttpResponseException",e[e.ServiceProviderException=6e3]="ServiceProviderException",e[e.AWSException=6001]="AWSException",e[e.AWSMissingAccessKeyException=6002]="AWSMissingAccessKeyException",e[e.AWSMissingSecretKeyException=6003]="AWSMissingSecretKeyException",e[e.CognitoException=6004]="CognitoException",e[e.CognitoInternalErrorException=6005]="CognitoInternalErrorException",e[e.CognitoInvalidEmailRoleAccessPolicyException=6006]="CognitoInvalidEmailRoleAccessPolicyException",e[e.CognitoInvalidLambdaResponseException=6007]="CognitoInvalidLambdaResponseException",e[e.CognitoUserLambdaValidationException=6008]="CognitoUserLambdaValidationException",e[e.CognitoInvalidParameterException=6009]="CognitoInvalidParameterException",e[e.CognitoInvalidSmsRoleAccessPolicyException=6010]="CognitoInvalidSmsRoleAccessPolicyException",e[e.CognitoInvalidSmsRoleTrustRelationshipException=6011]="CognitoInvalidSmsRoleTrustRelationshipException",e[e.CognitoInvalidUserPoolConfigurationException=6012]="CognitoInvalidUserPoolConfigurationException",e[e.CognitoResourceNotFoundException=6013]="CognitoResourceNotFoundException",e[e.CognitoMissingUserPoolClientIdException=6014]="CognitoMissingUserPoolClientIdException",e[e.CognitoMissingUserPoolIdException=6015]="CognitoMissingUserPoolIdException",e[e.CognitoUnexpectedLambdaException=6016]="CognitoUnexpectedLambdaException",e[e.StripeException=6017]="StripeException",e[e.StripeMissingSecretKeyException=6018]="StripeMissingSecretKeyException",e[e.StripeSubscriptionCreationFailedException=6019]="StripeSubscriptionCreationFailedException",e[e.StripePaymentMethodRequiredException=6020]="StripePaymentMethodRequiredException",e[e.UserException=7e3]="UserException",e[e.NullUserException=7001]="NullUserException",e[e.UserStateConflictException=7002]="UserStateConflictException",e[e.NullAccountException=7003]="NullAccountException",e[e.ValidationException=8e3]="ValidationException",e[e.InvalidTypeException=8001]="InvalidTypeException",e[e.MissingArgumentException=8002]="MissingArgumentException",e[e.MissingPropertyException=8003]="MissingPropertyException",e[e.InvalidArgumentException=8004]="InvalidArgumentException",e[e.InvalidPropertyException=8005]="InvalidPropertyException",e[e.MissingRequestBodyPropertyException=8006]="MissingRequestBodyPropertyException",e[e.MissingRequestUrlParameterException=8007]="MissingRequestUrlParameterException",e[e.MissingCookieException=8008]="MissingCookieException",e))(Vs||{}),U=class extends Error{constructor(e,o){super(e);t(this,"cause"),t(this,"code",1e3),t(this,"context"),t(this,"created"),t(this,"data"),t(this,"description"),t(this,"model"),t(this,"form"),t(this,"friendlyMessage","An unknown error has occurred. :("),t(this,"id"),t(this,"logLevel",E.Exception),t(this,"origin"),t(this,"pii"),t(this,"request"),t(this,"response"),t(this,"scope"),t(this,"remediation"),t(this,"tags"),t(this,"task"),t(this,"user"),t(this,"__proto__");let c=new.target.prototype;if(this.__proto__=c,Error.captureStackTrace&&Error.captureStackTrace(o?.cause??this,U),this.id=Hs(),this.name=this.constructor.name,this.created=new Date().toString(),this.description=o?.description??this.description,this.remediation=o?.remediation??this.remediation,this.scope=o?.scope??this.scope,o){let{cause:l,context:m,data:g,model:d,form:h,origin:T,pii:f,request:S,response:v,tags:p,task:C,user:_}=o;this.cause=l,this.context=m,this.data=g,this.model=d,this.form=h,this.origin=T,this.pii=f,this.request=S,this.response=v,this.task=C,this.tags=p,this.user=_}}toJSON(){return Ws(this)}},P3=new Os;var Ys=(e=>(e.Simple="simple",e.ExponentialBackoff="exponential",e.CircuitBreaker="circuit_breaker",e))(Ys||{});var Zs=class extends U{constructor(){super(...arguments);t(this,"code",1001),t(this,"description",`An "Error" object that isn't managed by AppLab`),t(this,"friendlyMessage","An unknown error has occurred."),t(this,"remediation",{response:{code:500},retry:{limit:3}})}},Js=class extends U{constructor(){super(...arguments);t(this,"code",1002),t(this,"description","An exception was caught within a try block."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:{limit:3}})}},Qs=class extends U{constructor(){super(...arguments);t(this,"code",1003),t(this,"description","An uncaught exception bubbled up and was caught automatically."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:{limit:3}})}},Xs=class extends U{constructor(){super(...arguments);t(this,"code",1004),t(this,"description","An unhandled promise rejection was caught automatically."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:{limit:3}})}},ie=class extends U{constructor(){super(...arguments);t(this,"code",4e3),t(this,"description","A exception was caught in a process."),t(this,"logLevel",E.Exception)}},eu=class extends ie{constructor(){super(...arguments);t(this,"code",4001),t(this,"description","A warning was caught in a process."),t(this,"logLevel",E.Warning)}},au=class extends ie{constructor(){super(...arguments);t(this,"code",4002),t(this,"description",'Exception thrown to kill a Node.js "gracefully".'),t(this,"logLevel",E.Critical)}},iu=class extends ie{constructor(){super(...arguments);t(this,"code",4004),t(this,"description","Process received SIGTERM termination code."),t(this,"logLevel",E.Critical)}},nu=class extends ie{constructor(){super(...arguments);t(this,"code",4005),t(this,"description","Process received SIGINT termination code."),t(this,"logLevel",E.Critical)}},su=class extends ie{constructor(){super(...arguments);t(this,"code",4003),t(this,"description","An fatal exception occurred which has crashed the server."),t(this,"logLevel",E.Critical)}},uu=class extends ie{constructor(){super(...arguments);t(this,"code",4006),t(this,"description","An environment variable is not set or unavailable."),t(this,"logLevel",E.Critical)}};var P=class extends U{constructor(){super(...arguments);t(this,"code",2e3),t(this,"description","Generic or unknown exceptions associated with user authentication."),t(this,"friendlyMessage","An unknown error occurred."),t(this,"logLevel",E.Warning),t(this,"remediation",{response:{code:401},retry:{limit:3,strategy:"circuit_breaker"}})}},tu=class extends P{constructor(){super(...arguments);t(this,"code",2015),t(this,"description","User lacks permissions to access the requested resource."),t(this,"logLevel",E.Warning),t(this,"remediation",{response:{code:403},retry:!1})}},ru=class extends P{constructor(){super(...arguments);t(this,"code",2014),t(this,"description","This exception is thrown when a user exceeds the limit for a requested AWS resource"),t(this,"friendlyMessage","You are trying to access this resource too often."),t(this,"logLevel",E.Warning),t(this,"remediation",{response:{code:429},retry:!1})}},ou=class extends P{constructor(){super(...arguments);t(this,"code",2024),t(this,"description","The Auth user does not have permission to perform this action."),t(this,"friendlyMessage","You need to be logged in or have proper permissions to access this resource."),t(this,"logLevel",E.Warning),t(this,"remediation",{response:{code:403},retry:!1})}},lu=class extends P{constructor(){super(...arguments);t(this,"code",2016),t(this,"description","This exception is thrown when the user has made too many requests for a given operation."),t(this,"friendlyMessage","You are trying to access this resource too often."),t(this,"logLevel",E.Warning),t(this,"remediation",{response:{code:429},retry:!1})}},mu=class extends P{constructor(){super(...arguments);t(this,"code",2017),t(this,"description","This exception is thrown when the Auth service cannot find a user with the provided username."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:!1})}},du=class extends P{constructor(){super(...arguments);t(this,"code",2025),t(this,"description","This exception is thrown when a password reset is required."),t(this,"friendlyMessage","A password reset is required in order to login."),t(this,"logLevel",E.Warning),t(this,"remediation",{response:{code:403},retry:!1})}},cu=class extends P{constructor(){super(...arguments);t(this,"code",2011),t(this,"description","An exception occurred while logging a user in."),t(this,"friendlyMessage","An unknown error occurred."),t(this,"logLevel",E.Critical),t(this,"remediation",{response:{code:500},retry:!0})}},Au=class extends P{constructor(){super(...arguments);t(this,"code",2012),t(this,"description","Incorrect username or password provided."),t(this,"friendlyMessage","Incorrect username or password."),t(this,"logLevel",E.Info),t(this,"remediation",{response:{code:401},retry:!1})}},gu=class extends P{constructor(){super(...arguments);t(this,"code",2013),t(this,"description","This exception is thrown when the user has provided an incorrect username or password too many times."),t(this,"friendlyMessage","You've provided an incorrect username or password too many times."),t(this,"logLevel",E.Warning),t(this,"remediation",{response:{code:429},retry:!1})}},Tu=class extends P{constructor(){super(...arguments);t(this,"code",2023),t(this,"description","This exception is thrown when the Auth service cannot find a multi-factor authentication (MFA) method."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:403},retry:{limit:3,strategy:"simple"}})}},hu=class extends P{constructor(){super(...arguments);t(this,"code",2018),t(this,"description","An exception occurred while signing up a user."),t(this,"friendlyMessage","An error occurred while signing up."),t(this,"logLevel",E.Critical),t(this,"remediation",{response:{code:500},retry:!0})}},Ke=class extends P{constructor(){super(...arguments);t(this,"code",2019),t(this,"description","An exception occurred while checking if a username is available."),t(this,"friendlyMessage","An error occurred while checking if a username is available."),t(this,"logLevel",E.Critical),t(this,"remediation",{response:{code:500},retry:!0})}},fu=class extends Ke{constructor(){super(...arguments);t(this,"code",2020),t(this,"description","User with email or phone number already exists."),t(this,"friendlyMessage","A user with that email already exists."),t(this,"logLevel",E.Warning),t(this,"remediation",{response:{code:400},retry:!1})}},pu=class extends Ke{constructor(){super(...arguments);t(this,"code",2021),t(this,"description","This exception is thrown when a user tries to confirm the account with an email or phone number that has already been supplied as an alias from a different account. This exception tells user that an account with this email or phone already exists"),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:400},retry:!1})}};var Cu=class extends P{constructor(){super(...arguments);t(this,"code",2004),t(this,"description","The refresh token associated with a session has expired."),t(this,"logLevel",E.Warning),t(this,"remediation",{response:{code:401},retry:!1})}},Eu=class extends P{constructor(){super(...arguments);t(this,"code",2005),t(this,"description","The refresh token associated with a session is invalid."),t(this,"logLevel",E.Warning),t(this,"remediation",{response:{code:401},retry:!1})}},mn=class extends P{constructor(){super(...arguments);t(this,"code",2006),t(this,"description","The refresh token associated with a session is missing."),t(this,"logLevel",E.Warning),t(this,"remediation",{response:{code:401},retry:!1})}},_u=class extends P{constructor(){super(...arguments);t(this,"code",2022),t(this,"description","This exception is thrown when a verification code fails to deliver successfully."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:{limit:3,strategy:"simple"}})}},Su=class extends P{constructor(){super(...arguments);t(this,"code",2009),t(this,"description","The verification code provided is incorrect"),t(this,"logLevel",E.Warning),t(this,"remediation",{response:{code:400},retry:!1})}},Iu=class extends P{constructor(){super(...arguments);t(this,"code",2010),t(this,"description","The verification code provided has expired"),t(this,"logLevel",E.Warning),t(this,"remediation",{response:{code:403},retry:!1})}},vu=class extends P{constructor(){super(...arguments);t(this,"code",2026),t(this,"description","This exception is thrown when a user who is not confirmed attempts to login."),t(this,"friendlyMessage","You haven't verified your email address or telephone number yet"),t(this,"logLevel",E.Warning),t(this,"remediation",{response:{code:403},retry:!1})}},An=class extends U{constructor(){super(...arguments);t(this,"code",3e3),t(this,"description","Generic or unknown database exceptions."),t(this,"logLevel",E.Exception)}},bu=class extends An{constructor(){super(...arguments);t(this,"code",3001),t(this,"description","Generic or unknown database exceptions."),t(this,"logLevel",E.Exception)}},gn=class extends U{constructor(){super(...arguments);t(this,"code",5e3),t(this,"description","A network related issue has occurred."),t(this,"logLevel",E.Exception)}},Oe=class extends gn{constructor(){super(...arguments);t(this,"code",5001),t(this,"description","A generic or unknown exception occurred related to an HTTP request."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:{limit:3,strategy:"circuit_breaker"}})}},Ae=class extends Oe{constructor(){super(...arguments);t(this,"code",5002),t(this,"description","Base class for generic or unknown exceptions occuring during an HTTP request."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:{limit:3,strategy:"circuit_breaker"}})}},yu=class extends Ae{constructor(){super(...arguments);t(this,"code",5003),t(this,"description","The requested HTTP resource could not be found."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:404},retry:{limit:3,strategy:"circuit_breaker"}})}},Bu=class extends Ae{constructor(){super(...arguments);t(this,"code",8006),t(this,"description","HTTP request body is missing a required property."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:400},retry:!1})}},Du=class extends Ae{constructor(){super(...arguments);t(this,"code",8007),t(this,"description","HTTP request URL is missing a required parameter."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:400},retry:!1})}},Uu=class extends Ae{constructor(){super(...arguments);t(this,"code",8008),t(this,"description","A required cookie is missing."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:!1})}},Pu=class extends Oe{constructor(){super(...arguments);t(this,"code",5002),t(this,"description","Generic or unknown exceptions related to HTTP responses."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:!1})}},He=class extends U{constructor(){super(...arguments);t(this,"code",6e3),t(this,"description","An error originating from a third-party or service provider occurred."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:{limit:3,strategy:"simple"}})}},je=class extends He{constructor(){super(...arguments);t(this,"code",6001),t(this,"description","An exception originating from the AWS integration occurred."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:{limit:3,strategy:"simple"}})}},dn=class extends je{constructor(){super(...arguments);t(this,"code",6018),t(this,"description","Missing AWS access key token."),t(this,"logLevel",E.Critical),t(this,"remediation",{response:{code:500},retry:!1})}},L=class extends je{constructor(){super(...arguments);t(this,"code",6001),t(this,"description","An exception originating from the AWS Cognito integration occurred."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:{limit:3,strategy:"simple"}})}},Nu=class extends L{constructor(){super(...arguments);t(this,"code",6005),t(this,"description","An internal error occurred originating from AWS Cognito."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:{limit:3,strategy:"simple"}})}},Mu=class extends L{constructor(){super(...arguments);t(this,"code",6012),t(this,"description","This exception is thrown when the user pool configuration is invalid."),t(this,"logLevel",E.Critical),t(this,"remediation",{response:{code:500},retry:!1})}},Fu=class extends L{constructor(){super(...arguments);t(this,"code",6006),t(this,"description","There is an access policy exception for the role provided for email configuration."),t(this,"logLevel",E.Critical),t(this,"remediation",{response:{code:500},retry:!1})}},ku=class extends L{constructor(){super(...arguments);t(this,"code",6010),t(this,"description","This exception is returned when the role provided for SMS configuration does not have permission to publish using Amazon SNS."),t(this,"logLevel",E.Critical),t(this,"remediation",{response:{code:500},retry:!1})}},Lu=class extends L{constructor(){super(...arguments);t(this,"code",6011),t(this,"description","This exception is thrown when the trust relationship is invalid for the role provided for SMS configuration. This can happen if you do not trust -idp.amazonaws.com or the external ID provided in the role does not match what is provided in the SMS configuration for the user pool."),t(this,"logLevel",E.Critical),t(this,"remediation",{response:{code:500},retry:!1})}},zu=class extends L{constructor(){super(...arguments);t(this,"code",6014),t(this,"description","Cognito user pool client ID configuration is missing."),t(this,"logLevel",E.Critical)}},Ru=class extends L{constructor(){super(...arguments);t(this,"code",6015),t(this,"description","Cognito user pool ID configuration is missing."),t(this,"logLevel",E.Critical)}},xu=class extends L{constructor(){super(...arguments);t(this,"code",6016),t(this,"description","This exception is thrown when the Auth service encounters an unexpected exception with the AWS Lambda service."),t(this,"logLevel",E.Critical),t(this,"remediation",{response:{code:500},retry:{limit:3,strategy:"simple"}})}},wu=class extends L{constructor(){super(...arguments);t(this,"code",6009),t(this,"description","This exception is thrown when the Cognito service encounters an invalid parameter."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:{limit:3,strategy:"simple"}})}},qu=class extends L{constructor(){super(...arguments);t(this,"code",6007),t(this,"description","This exception is thrown when the Amazon service encounters an invalid AWS Lambda response."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:{limit:3,strategy:"simple"}})}},Gu=class extends L{constructor(){super(...arguments);t(this,"code",6013),t(this,"description","This exception is thrown when the Cognito service cannot find the requested resource."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:{limit:3,strategy:"simple"}})}},Ku=class extends L{constructor(){super(...arguments);t(this,"code",6008),t(this,"description","This exception is thrown when the Cognito service encounters a user validation exception with the AWS Lambda service."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:{limit:3,strategy:"simple"}})}},_e=class extends He{constructor(){super(...arguments);t(this,"code",6017),t(this,"description","An exception occurred relating to Stripe."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:{limit:3,strategy:"simple"}})}},Ou=class extends _e{constructor(){super(...arguments);t(this,"code",6018),t(this,"description","The Stripe secret key token is missing."),t(this,"logLevel",E.Critical),t(this,"remediation",{response:{code:500},retry:!1})}},Hu=class extends _e{constructor(){super(...arguments);t(this,"code",6019),t(this,"description","Stripe subscription creation failed."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:{limit:3,strategy:"simple"}})}},ju=class extends _e{constructor(){super(...arguments);t(this,"code",6020),t(this,"description","An updated payment method is required."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:500},retry:{limit:3,strategy:"simple"}})}},$e=class extends U{constructor(){super(...arguments);t(this,"code",7e3),t(this,"description","Generic or unknown exceptions related to a user."),t(this,"logLevel",E.Exception)}},$u=class extends $e{constructor(){super(...arguments);t(this,"code",7001),t(this,"description","An operation was performed on behalf a user that cannot be found in the database."),t(this,"logLevel",E.Critical)}},Wu=class extends $e{constructor(){super(...arguments);t(this,"code",7002),t(this,"description","Exception used for user state that exists in one system or another and isn't being actively managed, or synced between all systems, or at least differences accounted for."),t(this,"logLevel",E.Critical)}},Vu=class extends U{constructor(){super(...arguments);t(this,"code",8e3),t(this,"description","Generic or otherwise unknown input validation exception."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:400},retry:!1})}},Yu=class extends U{constructor(){super(...arguments);t(this,"code",8001),t(this,"description","Instance type is invalid."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:400},retry:!1})}},Zu=class extends U{constructor(){super(...arguments);t(this,"code",8002),t(this,"description","A required argument is missing."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:400},retry:!1})}},Ju=class extends U{constructor(){super(...arguments);t(this,"code",8003),t(this,"description","A required property is missing."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:400},retry:!1})}},Qu=class extends U{constructor(){super(...arguments);t(this,"code",8004),t(this,"description","An argument is invalid."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:400},retry:!1})}},Xu=class extends U{constructor(){super(...arguments);t(this,"code",8005),t(this,"description","An object property is invalid."),t(this,"logLevel",E.Exception),t(this,"remediation",{response:{code:400},retry:!1})}},N3={[1e3]:U,[1001]:Zs,[1002]:Js,[1003]:Qs,[1004]:Xs,[2e3]:P,[2004]:Cu,[2005]:Eu,[2011]:cu,[2012]:Au,[2013]:gu,[2007]:mn,[2006]:mn,[2015]:tu,[2009]:Su,[2010]:Iu,[2014]:ru,[2024]:ou,[2016]:lu,[2017]:mu,[2018]:hu,[2019]:Ke,[2021]:pu,[2020]:fu,[2022]:_u,[2023]:Tu,[2025]:du,[2026]:vu,[3e3]:An,[3001]:bu,[6e3]:He,[6001]:je,[6002]:dn,[6003]:dn,[6004]:L,[6005]:Nu,[6006]:Fu,[6010]:ku,[6011]:Lu,[6016]:xu,[6012]:Mu,[6007]:qu,[6009]:wu,[6015]:Ru,[6014]:zu,[6013]:Gu,[6008]:Ku,[6017]:_e,[6019]:Hu,[6018]:Ou,[6020]:ju,[5e3]:gn,[5001]:Oe,[5002]:Ae,[5003]:yu,[5004]:Pu,[8006]:Bu,[8007]:Du,[8008]:Uu,[8e3]:Vu,[8004]:Qu,[8005]:Xu,[8001]:Yu,[8002]:Zu,[8003]:Ju,[4e3]:ie,[4001]:eu,[4004]:iu,[4005]:nu,[4003]:su,[4006]:uu,[4002]:au,[7e3]:$e,[7001]:$u,[7002]:Wu};var ta=y(require("fs-extra"),1),V=y(require("path"),1);var ge=y(require("path"),1),Ye=y(require("fs-extra"),1);var Tn=require("esbuild"),Y=y(require("typescript"),1),We=y(require("fs-extra"),1),j=y(require("path"),1);async function Ve({buildDir:e="dist",buildFile:o="index.js",buildPath:c="",buildTypes:l=!1,bundle:m=!0,bundleCSS:g=!0,codeSplitting:d=!0,color:h=!0,define:T={},excludeLibs:f=[],format:S="esm",inputScripts:v=["src/index.ts"],minify:p=!0,platform:C="browser",showWarnings:_=!1,sourceMap:b=!0,target:B="es6",treeShaking:D=!0}){try{console.info(`Compiling and bundling JS to ${S.toLocaleUpperCase()} format...`);let F={bundle:m,color:h,define:T,entryPoints:v.map(q=>c?`${c?`${c}/`:""}${q}`:`${q}`),external:f,format:S,minify:p,outdir:d?`${c?`${c}/`:""}${e}`:v.length>1?`${c?`${c}/`:""}${e}`:void 0,outfile:d?void 0:v.length===1?`${c?`${c}/`:""}${e}/${o}`:void 0,platform:C,sourcemap:b,splitting:d,target:B,treeShaking:D},ue=await(0,Tn.build)(F);if(ue.warnings&&_&&ue.warnings.forEach(q=>{console.warn(q.text)}),ue.errors&&ue.errors.forEach(q=>{console.error(q.text)}),l){console.info("Compiling types... ");let q=await JSON.parse(We.default.readFileSync(j.default.join(j.default.resolve(),c,"tsconfig.json"),"utf8")),{options:ys}=Y.default.parseJsonConfigFileContent(q,Y.default.sys,j.default.join(j.default.resolve(),c)),Bs=(await We.default.readdir(j.default.join(j.default.resolve(),c,"src"))).filter(H=>H.endsWith(".ts")).map(H=>j.default.join(j.default.resolve(),c,"src",H)),oa=Y.default.createProgram(Bs,ys),Ds=oa.emit();Y.default.getPreEmitDiagnostics(oa).concat(Ds.diagnostics).forEach(H=>{if(H.file){let{line:Us,character:Ps}=Y.default.getLineAndCharacterOfPosition(H.file,H.start),Ns=Y.default.flattenDiagnosticMessageText(H.messageText,`
`);console.info(`${H.file.fileName} (${Us+1},${Ps+1}): ${Ns}`)}else console.info(Y.default.flattenDiagnosticMessageText(H.messageText,`
`))})}}catch(F){console.error(F)}}async function Se(e){if(Array.isArray(e)){let o=[];for(let c of e)o.includes(c.buildDir)||(c.emptyBuildDir&&await Ye.default.emptyDir(ge.default.join(ge.default.resolve(),c.buildDir??"dist")),o=[...o,c.buildDir]),await Ve(c)}else e.emptyBuildDir&&await Ye.default.emptyDir(ge.default.join(ge.default.resolve(),e.buildDir??"dist")),await Ve(e)}var hn=y(require("fs-extra"),1),Ie=y(require("path"),1);async function ve(){try{let e=".applab",o=Ie.default.join(Ie.default.resolve(),e,"dependencies/models");await hn.default.emptyDir(Ie.default.join(o,"src"))}catch(e){console.error(e)}}var te=y(require("fs-extra"),1),Z=y(require("path"),1);function be(e,o="applab"){try{let c="",l="",m="export default {",g=`.${o==="applab"||o==="sequelize"?"ts":"json"}`;for(let d of e){let h=d.split(g)[0];o==="json"?l+=`import ${h} from './${h}.json';
`:o==="sequelize"?(l+=`import ${h}Init, { ${h} } from './${h}';
`,m+=`${h}: ${h}Init,`):l+=`import { ${h} } from './${h}.js';
`,c+=`  ${h},
`}return o==="sequelize"&&(m+="};"),`${l}
export {
${c}};
${o==="sequelize"?m:""}
`}catch(c){console.error(c)}}async function fn({path:e}){try{let o=Z.default.join(Z.default.resolve(),"models"),c=".applab",l=Z.default.join(Z.default.resolve(),c,`${e}/src`),m=await te.default.readdir(o);for(let T of m){let f=await te.default.readFile(Z.default.join(o,T),"utf8");if(!f.includes("fields: {"))throw new Error(`${T} is missing the fields property.`);let v=`
    created_date: {
      label: 'Created Date',
      required: false,
      type: Primitives.DateTime,
    },
    updated_date: {
      label: 'Updated Date',
      required: false,
      type: Primitives.DateTime,
    },
  `,p=f.indexOf("relationships:")+15,C=f.indexOf("}",p)+1,_=f.slice(p,C);if(_){let B=_.indexOf("belongsTo:")+10,D=_.indexOf("]",B)+1,F=_.slice(B,D);if(F){let ue=JSON.parse(F.replace(/'/g,'"'));for(let q of ue)v+=`
        ${q}Id: {
          label: '${q}',
          required: false,
          type: Primitives.UUID
        },
        `}}let b=f.replace("fields: {",`fields: {
        ${v}`);await te.default.writeFile(Z.default.join(l,T),b,"utf8")}let d=(await te.default.readdir(l)).filter(T=>T.slice(-3)===".ts"&&T.split(".ts")[0]!=="index"),h=be(d,"applab");await te.default.writeFile(Z.default.join(l,"index.ts"),h,"utf8")}catch(o){throw console.error(o),o}}var Xn=y(Qn(),1),se=y(require("fs-extra"),1),O=y(require("path"),1),he=y(Re(),1);function Ot({environments:e,models:o}){let c=`import { HttpClient } from '@srclaunch/http-client';
import { Environment } from '@srclaunch/types';
import { getEnvironment } from '@srclaunch/web-environment';
`;for(let l of o)c+=`import ${l.toLowerCase()}Endpoints from './${l}Endpoints';
`;return`${c}

const environment: Environment = getEnvironment();

const hosts = {
  dev: '${e.dev.protocol}://${e.dev.host}${e.dev.port!==80?`:${e.dev.port.toString()}`:""}',
  test: '${e.test.protocol}://${e.test.host}${e.test.port!==80?`:${e.test.port.toString()}`:""}',
  preview: '${e.preview.protocol}://${e.preview.host}${e.preview.port!==80?`:${e.preview.port.toString()}`:""}',
  production: '${e.production.protocol}://${e.production.host}${e.production.port!==80?`:${e.production.port.toString()}`:""}',
}

export const httpClient = HttpClient({
  basePath: 'core-api',
  // @ts-ignore
  host: hosts[environment.id],
  headers: {
    Accept: 'application/json',
    'Content-Type': 'application/json',
    // headers: { 'X-Requested-With': 'XMLHttpRequest' },
  },
  options: {
    retries: 2,
    retryCondition: err => !err.response,
    retryDelay: 5000,
  },
  preAuthResourceIncludes: '/auth',
  responseType: 'json',
  withCredentials: true,
});

export default {
  ${o.map(l=>`...${l}Endpoints
`)}
};`}function Ht({modelName:e,typesProjectName:o}){let c=e.toLowerCase(),l=(0,he.default)(e.toLowerCase()),m=(0,he.default)(e),g=(0,Xn.paramCase)((0,he.default)(e));return`import { Condition, HttpResponse } from '@srclaunch/types';
  import { stringify } from 'query-string';
  import { httpClient } from './index';
  import { ${e} } from '${o}';

  function getFormData(props: object) {
    try {
      const formData = new FormData();
      const keys =  Object.keys(props);
     
      for (const key of keys) {
        // @ts-ignore
        const value = props[key];
        if (Array.isArray(value) && value.length > 0) {
          for (let i = 0; i < value.length; i++) {
            const item = value[i];
            console.log('item', item);
            
            if ('size' in item) {
              if (item) formData.append(\`\${key}[\${i}]\`, item);
            } else {
              if (item) formData.append(\`\${key}[\${i}]\`, JSON.stringify(item));
            }
          }
        } else {
          if (value) formData.append(key, value);
        }
      }
    
      return formData;
    } catch (err: any) {
      console.error(err);
    }
 }

  export default {
    create${e}: (props: ${e}): Promise<HttpResponse<${e}> | void> => {
      const formData = getFormData(props);
      return httpClient.post('/${g}', formData, {
        headers: {
          'Content-Type': 'multipart/form-data',
        },
      });
    },
    create${m}: ({
      ...props
    }: ${e}[]): Promise<HttpResponse<${e}> | void> =>
      httpClient.post('/${g}', props),
    delete${e}: (id: ${e}['id']): Promise<HttpResponse<void> | void> =>
      httpClient.delete(\`/${g}/\${id}\`),
    delete${m}: (ids: ${e}['id'][]): Promise<HttpResponse<void> | void> =>
      httpClient.delete(\`/${g}/\${ids.join(',')}\`),
    get${e}: (id: ${e}['id']): Promise<HttpResponse<${e}> | void> =>
      httpClient.get(\`/${g}/\${id}\`),
    get${m}: ({
      conditions,
      filters,
      limit,
      offset
    }: {
      conditions?: Condition[],
      filters?: Record<string, string>,
      limit?: number;
      offset?: number
    }): Promise<HttpResponse<${e}> | void> => 
      httpClient.get(\`/${g}?\${filters ? stringify(filters) : ''}limit=\${limit}&offset=\${offset}\`),
    update${e}: (
      id: ${e}['id'],
      props: ${e},
    ): Promise<HttpResponse<${e}> | void> => {
      const formData = getFormData(props);
      return httpClient.put(\`/${g}/\${id}\`, formData, {
        headers: {
          'Content-Type': 'multipart/form-data',
        },
      });
    },
    update${m}: (
      {
        ...props
      }: ${e}[],
    ): Promise<HttpResponse<${e}> | void> =>
      httpClient.put(\`/${g}\`, props),
  };  
  `}async function es({httpClientProjectName:e,modelsPath:o,path:c,typesProjectName:l}){try{let m=O.default.join(O.default.resolve(),"./.applab/config.json"),g=await JSON.parse(await(await se.default.readFile(m)).toString()),d=".applab",h=O.default.join(O.default.resolve(),d,`${o}/src`),T=O.default.join(O.default.resolve(),d,`${c}/src`),f=O.default.join(O.default.resolve(),d,`${c}/dist`);await se.default.emptyDir(T),await se.default.emptyDir(f);let S=await se.default.readdir(h);for(let p of S)if(p!=="index.ts"){let C=`${p.toLowerCase().replace(".ts","")}Endpoints.ts`,_=Ht({httpClientProjectName:e,modelName:p.replace(".ts",""),typesProjectName:l});await se.default.writeFile(O.default.join(T,C),_,"utf8")}let v=Ot({environments:g["core-api"].environments,models:S.filter(p=>p!=="index.ts").map(p=>(0,he.default)(p.toLowerCase()).replace(".ts",""))});await se.default.writeFile(O.default.join(T,"index.ts"),v,"utf8")}catch(m){throw console.error(m),m}}var ce=y(require("fs-extra"),1),$=y(require("path"),1),k=y(Re(),1);function jt(e){let o=e.map(l=>{let m=(0,k.default)(l[0]?.toLowerCase()+l.slice(1));return`import ${m} from './${m}.js';`}).join(`
`),c=e.map(l=>{let m=(0,k.default)(l[0]?.toLowerCase()+l.slice(1));return`export { 
        create${l}, 
        create${(0,k.default)(l)}, 
        delete${l}, 
        delete${(0,k.default)(l)}, 
        get${l}, 
        get${(0,k.default)(l)}, 
        update${l},
        update${(0,k.default)(l)},
        ${l}Selectors, 
      } from './${m}.js';`}).join(`
`);return`${o}
export default {
  ${e.map(l=>(0,k.default)(l[0]?.toLowerCase()+l.slice(1))).join(`,
  `)},
};

${c}
`}function $t({httpClientProjectName:e,modelName:o,typesProjectName:c}){let l=o.toLowerCase(),m=(0,k.default)(o.toLowerCase()),g=(0,k.default)(o?.[0]?.toLowerCase()+o.slice(1)),d=(0,k.default)(o),h=o?.[0]?.toLowerCase()+o.slice(1),T=(0,k.default)(o[0]?.toLowerCase()+o.slice(1));return`import { ${o} } from '${c}';
  import * as httpClient from '${e}';
  
import { createEntityAdapter, createSlice, PayloadAction } from '@reduxjs/toolkit';
import { Exception, ExceptionObject } from '@srclaunch/exceptions';
import { AppDispatch, AppThunk, RootState } from '@srclaunch/web-application-state';
import { Condition, ISO8601String } from '@srclaunch/types';

const adapter = createEntityAdapter<${o}>();

export const ${o}Selectors = adapter.getSelectors<RootState>(
  (state: RootState) => state.${g},
);

type ${o}State = {
  action: {
    create${o}: {
      error?: ExceptionObject;
      inProgress: boolean;
      lastUpdated?: ISO8601String;
    },
    create${d}: {
      error?: ExceptionObject;
      inProgress: boolean;
      lastUpdated?: ISO8601String;
    },
    delete${o}: {
      error?: ExceptionObject;
      inProgress: boolean;
      lastUpdated?: ISO8601String;
    },
    delete${d}: {
      error?: ExceptionObject;
      inProgress: boolean;
      lastUpdated?: ISO8601String;
    },
    get${o}: {
      error?: ExceptionObject;
      inProgress: boolean;
      lastUpdated?: ISO8601String;
    },
    get${d}: {
      error?: ExceptionObject;
      inProgress: boolean;
      lastUpdated?: ISO8601String;
    },
    update${o}: {
      error?: ExceptionObject;
      inProgress: boolean;
      lastUpdated?: ISO8601String;
    },
    update${d}: {
      error?: ExceptionObject;
      inProgress: boolean;
      lastUpdated?: ISO8601String;
    },
  },
  inProgress?: boolean;
  lastUpdated?: ISO8601String;
};

const initialState = {
  action: {
    create${o}: {
      inProgress: false,
    },
    create${d}: {
      inProgress: false,
    },
    delete${o}: {
      inProgress: false,
    },
    delete${d}: {
      inProgress: false,
    },
    get${o}: {
      inProgress: false,
    },
    get${d}: {
      inProgress: false,
    },
    update${o}: {
      inProgress: false,
    },
    update${d}: {
      inProgress: false,
    },
  },
  inProgress: false,
}

const slice = createSlice({
  initialState: adapter.getInitialState<${o}State>(initialState),
  name: '${g}',
  reducers: {
    add${o}: (state, action) => {
      adapter.upsertOne(state, action.payload);

      state.lastUpdated = new Date().toISOString();
    },
    add${d}: (state, action) => {
      adapter.upsertMany(state, action.payload);

      state.lastUpdated = new Date().toISOString();
    },

    remove${o}: (state, action) => {
      adapter.removeOne(state, action.payload);

      state.lastUpdated = new Date().toISOString();
    },
    remove${d}: (state, action) => {
      adapter.removeMany(state, action.payload);

      state.lastUpdated = new Date().toISOString();
    },

    update${o}: (state, action) => {
      console.log('action.payload', action.payload);
      adapter.updateOne(state, action);

      state.lastUpdated = new Date().toISOString();
    },
    update${d}: (state, action) => {
      adapter.updateMany(state, action.payload);

      state.lastUpdated = new Date().toISOString();
    },
    setActionError: (state, action: PayloadAction<{
      type: |
        'create${o}' | 'create${d}' |
        'delete${o}' | 'delete${d}' |
        'get${o}' | 'get${d}' |
        'update${o}' | 'update${d}';
      error: ExceptionObject;
    }>) => {
      const { type, error } = action.payload;

      state.action[type].error = error;
      state.lastUpdated = new Date().toISOString();
    },
    setActionInProgress: (state, action: PayloadAction<{
      type: |
        'create${o}' | 'create${d}' |
        'delete${o}' | 'delete${d}' |
        'get${o}' | 'get${d}' |
        'update${o}' | 'update${d}';
      inProgress: boolean;
    }>) => {
      const { type, inProgress } = action.payload;

      state.inProgress = inProgress;
      state.action[type].inProgress = inProgress;
      state.lastUpdated = new Date().toISOString();
    },
  },
});

export const create${o} = (${h}: ${o}): AppThunk =>
  async (dispatch: AppDispatch, getState: () => RootState) => {
    try {
      dispatch(slice.actions.setActionInProgress({
        type: 'create${o}',
        inProgress: true,
      }));
  
      const response = await httpClient.default.create${o}(${h});
  
      dispatch(slice.actions.add${o}(response?.body));
  
      dispatch(slice.actions.setActionInProgress({
        type: 'create${o}',
        inProgress: false,
      }));
    } catch (err: any) {
      const exception = new Exception('Error creating ${o}', { cause: err });
      
      dispatch(slice.actions.setActionError({
        type: 'create${o}',
        error: exception.toJSON(),
      }));

      dispatch(slice.actions.setActionInProgress({
        type: 'create${o}',
        inProgress: false,
      }));
    }
  };

export const create${d} = (${T}: ${o}[]): AppThunk =>
  async (dispatch: AppDispatch, getState: () => RootState) => {
    try {
      dispatch(slice.actions.setActionInProgress({
        type: 'create${d}',
        inProgress: true,
      }));

      const response = await httpClient.default.create${d}(${T});
      
      dispatch(slice.actions.add${d}(response?.body));

      dispatch(slice.actions.setActionInProgress({
        type: 'create${d}',
        inProgress: false,
      }));
    } catch (err: any) {
      const exception = new Exception('Error creating ${d}', { cause: err });

      dispatch(slice.actions.setActionError({
        type: 'create${d}',
        error: exception.toJSON(),
      }));

      dispatch(slice.actions.setActionInProgress({
        type: 'create${d}',
        inProgress: false,
      }));
    }
  };

export const delete${o} = (${h}: ${o}['id']): AppThunk =>
  async (dispatch: AppDispatch, getState: () => RootState) => {
    try {
      dispatch(slice.actions.setActionInProgress({
        type: 'delete${o}',
        inProgress: true,
      }));
  
      const response = await httpClient.default.delete${o}(${h});
      
      dispatch(slice.actions.remove${o}(${h}));
  
      dispatch(slice.actions.setActionInProgress({
        type: 'delete${o}',
        inProgress: false,
      }));
    } catch (err: any) {
      const exception = new Exception('Error deleting ${o}', { cause: err });

      dispatch(slice.actions.setActionError({
        type: 'delete${o}',
        error: exception.toJSON(),
      }));

      dispatch(slice.actions.setActionInProgress({
        type: 'delete${o}',
        inProgress: false,
      }));
    }
  };

export const delete${d} = (${T}: ${o}['id'][]): AppThunk =>
  async (dispatch: AppDispatch, getState: () => RootState) => {
    try {
      dispatch(slice.actions.setActionInProgress({
        type: 'delete${d}',
        inProgress: true,
      }));
  
      const response = await httpClient.default.delete${d}(${T});
  
      dispatch(slice.actions.remove${d}(response?.body));
  
      dispatch(slice.actions.setActionInProgress({
        type: 'delete${d}',
        inProgress: false,
      }));
    } catch (err: any) {
      const exception = new Exception('Error deleting ${d}', { cause: err });

      dispatch(slice.actions.setActionError({
        type: 'delete${d}',
        error: exception.toJSON(),
      }));

      dispatch(slice.actions.setActionInProgress({
        type: 'delete${d}',
        inProgress: false,
      }));
    }
  };

export const get${o} = (${h}: ${o}['id']): AppThunk => 
  async (dispatch: AppDispatch, getState: () => RootState) => {
    try {
      dispatch(slice.actions.setActionInProgress({
        type: 'get${o}',
        inProgress: true,
      }));
  
      const response = await httpClient.default.get${o}(${h});
  
      if (response?.body) {
        dispatch(slice.actions.add${o}(response?.body));
      }
  
      dispatch(slice.actions.setActionInProgress({
        type: 'get${o}',
        inProgress: false,
      }));
    } catch (err: any) {
      const exception = new Exception('Error getting ${o}', { cause: err });

      dispatch(slice.actions.setActionError({
        type: 'get${o}',
        error: exception.toJSON(),
      }));

      dispatch(slice.actions.setActionInProgress({
        type: 'get${o}',
        inProgress: false,
      }));
    }
  };

export const get${d} = ({
  conditions = [],
  filters = {},
  limit = 100,
  offset = 0
}: { 
  conditions?: Condition[],
  filters?: Record<string, string>,
  limit?: number;
  offset?: number
}): AppThunk =>  async (dispatch: AppDispatch, getState: () => RootState) => {
  try {
    dispatch(slice.actions.setActionInProgress({
      type: 'get${d}',
      inProgress: true,
    }));

    const response = await httpClient.default.get${d}({
      conditions,
      filters,
      limit,
      offset
    });

    dispatch(slice.actions.add${d}(response?.body));

    dispatch(slice.actions.setActionInProgress({
      type: 'get${d}',
      inProgress: false,
    }));
  } catch (err: any) {
    const exception = new Exception('Error getting ${d}', { cause: err });

    dispatch(slice.actions.setActionError({
      type: 'get${d}',
      error: exception.toJSON(),
    }));

    dispatch(slice.actions.setActionInProgress({
      type: 'get${d}',
      inProgress: false,
    }));
  }
};


export const update${o} = (${h}: ${o}): AppThunk =>
  async (dispatch: AppDispatch, getState: () => RootState) => {
    try {
      dispatch(slice.actions.setActionInProgress({
        type: 'update${o}',
        inProgress: true,
      }));
  
      const response = await httpClient.default.update${o}(${h}.id, ${h});
  
      if (response?.body) {
        dispatch(slice.actions.update${o}({ id: ${h}.id, changes: response.body }));
    
        dispatch(slice.actions.setActionInProgress({
          type: 'update${o}',
          inProgress: false,
        }));
      }
    } catch (err: any) {
      const exception = new Exception('Error updating ${o}', { cause: err });

      dispatch(slice.actions.setActionError({
        type: 'update${o}',
        error: exception.toJSON(),
      }));
  
      dispatch(slice.actions.setActionInProgress({
        type: 'update${o}',
        inProgress: false,
      }));
    }
  };
  

export const update${d} = (${T}: ${o}[]): AppThunk =>
  async (dispatch: AppDispatch, getState: () => RootState) => {
    try {
      dispatch(slice.actions.setActionInProgress({
        type: 'update${d}',
        inProgress: true,
      }));
  
      const response = await httpClient.default.update${d}(${T});
      
      dispatch(slice.actions.update${d}(response?.body));
  
      dispatch(slice.actions.setActionInProgress({
        type: 'update${d}',
        inProgress: false,
      }));
    } catch (err: any) {
      const exception = new Exception('Error updating ${d}', { cause: err });

      dispatch(slice.actions.setActionError({
        type: 'update${d}',
        error: exception.toJSON(),
      }));
  
      dispatch(slice.actions.setActionInProgress({
        type: 'update${d}',
        inProgress: false,
      }));
    }
  };


export default slice.reducer;
  `}async function as({httpClientProjectName:e,projectPath:o,typesProjectName:c}){try{let l=".applab",m=$.default.join($.default.resolve(),l,"dependencies/models/src"),g=$.default.join($.default.resolve(),l,`${o}/src`),d=$.default.join($.default.resolve(),l,`${o}/dist`);await ce.default.emptyDir(g),await ce.default.emptyDir(d);let h=await ce.default.readdir(m);for(let f of h)if(f!=="index.ts"){let S=(0,k.default)(f[0]?.toLowerCase()+f.slice(1).replace(".ts","")),v=$t({httpClientProjectName:e,modelName:f.replace(".ts",""),typesProjectName:c});await ce.default.writeFile($.default.join(g,`${S}.ts`),v,"utf8")}let T=jt(h.filter(f=>f!=="index.ts").map(f=>(0,k.default)(f).replace(".ts","")));await ce.default.writeFile($.default.join(g,"index.ts"),T,"utf8")}catch(l){throw console.error(l),l}}var Wt=(e=>(e.Comment="comment",e.Create="create",e.Delete="delete",e.Edit="edit",e.Invoice="invoice",e.Message="message",e.PageView="pageView",e.Paid="paid",e.Payment="payment",e.Purchase="purchase",e.Referral="referral",e.Renewal="renewal",e.Signup="signup",e.Subscription="subscription",e.Upgrade="upgrade",e))(Wt||{}),Vt=(e=>(e.Business="business",e.Engineering="engineering",e.Exception="exception",e.LogMessage="log-message",e.Marketing="marketing",e.PageLeave="page-leave",e.PageView="page-view",e.Product="product",e.QualityManagement="quality-management",e.UserAccess="user-access",e.UserLogin="user-login",e.UserLogout="user-logout",e.UserSignup="user-signup",e.UserPreferencesChanged="user-preferences-changed",e.WebsiteVisit="website-visit",e))(Vt||{}),Yt=(e=>(e.CloseTab="close-tab",e.ExternalLink="external-link",e.NavigateAway="navigate-away",e.Unknown="unknown",e))(Yt||{}),Zt=(e=>(e.Ecs="Ecs",e))(Zt||{}),Jt=(e=>(e.Finished="Finished",e.Queued="Queued",e.Running="Running",e.Started="Started",e))(Jt||{}),Qt=(e=>(e.Mobile="mobile",e.TV="tv",e.Watch="watch",e.Web="web",e))(Qt||{}),Xt=(e=>(e.Development="Development",e.NonProduction="NonProduction",e.Production="Production",e))(Xt||{}),er=(e=>(e.Completed="completed",e.Started="started",e.Uncompleted="uncompleted",e))(er||{}),ar=(e=>(e.Build="Build",e.Deployment="Deployment",e.Test="Test",e))(ar||{}),ir=(e=>(e.Canceled="Canceled",e.Completed="Completed",e.Failed="Failed",e.Running="Running",e.Queued="Queued",e.Waiting="Waiting",e))(ir||{}),nr=(e=>(e.Canceled="Canceled",e.Completed="Completed",e.Failed="Failed",e.Running="Running",e.Queued="Queued",e.Waiting="Waiting",e))(nr||{}),sr=(e=>(e.ForgotPassword="forgot_password",e.Index="index",e.Login="login",e.PageNotFound="404",e.Signup="signup",e.VerifyCode="verify_code",e))(sr||{}),ur=(e=>(e.Info="info",e.Warning="warning",e.Error="error",e.Success="success",e))(ur||{}),tr=(e=>(e.Details="details",e.Dialog="dialog",e))(tr||{}),rr=(e=>(e.Info="info",e.Warning="warning",e.Error="error",e.Success="success",e))(rr||{}),or=(e=>(e.AccountBalance="AccountBalance",e.UserAssets="UserAssets",e.UserCreditCardDebt="UserCreditCardDebt",e.UserCreditLimit="UserCreditLimit",e.UserCreditUtilization="UserCreditUtilization",e.UserDebt="UserDebt",e.UserInvestments="UserInvestments",e.UserRetirement="UserRetirement",e.UserSavings="UserSavings",e))(or||{}),lr=(e=>(e.DateTime="date_time",e.True="true",e.False="false",e.UniqueId="unique_id",e))(lr||{}),mr=(e=>(e.DomainModel="domain_entity",e.GenericModel="generic_entity",e))(mr||{}),I=(e=>(e.AirportCode="airport-code",e.BankIDCode="bank-id-code",e.BitcoinAddress="bitcoin-address",e.Boolean="boolean",e.City="city",e.Color="color",e.CountryCode="country-code",e.CreditCard="credit-card",e.CurrencyAmount="currency-amount",e.CurrencyCode="currency-code",e.DataURI="data-uri",e.Date="date",e.DateRange="date-range",e.DateTime="date-time",e.DayOfMonth="day-of-month",e.DomainName="domain-name",e.EmailAddress="email-address",e.EthereumAddress="ethereum-address",e.EAN="european-article-number",e.EIN="employer-identification-number",e.Float="float",e.GeographicCoordinate="geographic-coordinate",e.GeographicCoordinates="geographic-coordinates",e.GitRepositoryURL="git-repository-url",e.HSLColor="hsl-color",e.HexColor="hex-color",e.Hexadecimal="hexadecimal",e.IBAN="international-bank-account-number",e.IMEI="international-mobile-equipment-identifier",e.IPAddress="ip-address",e.IPAddressRange="ip-address-range",e.ISBN="international-standard-book-number",e.ISIN="international-stock-number",e.ISMN="international-standard-music-number",e.ISSN="international-standard-serial-number",e.ISO8601="iso-8601",e.ISO31661Alpha2="iso-31661-alpha-2",e.ISO31661Alpha3="iso-31661-alpha-3",e.ISO4217="iso-4217",e.Image="image",e.Integer="integer",e.JSON="json",e.LanguageCode="language-code",e.LicensePlateNumber="license-plate-number",e.LongText="long-text",e.MD5="md5",e.Markdown="markdown",e.Menu="menu",e.Number="number",e.MACAddress="mac-address",e.MagnetURI="magnet-uri",e.MimeType="mime-type",e.Month="month",e.Password="password",e.PassportNumber="passport-number",e.Percent="percent",e.PhoneNumber="phone-number",e.Port="port",e.PostalCode="postal-code",e.Province="province",e.RFC3339="rfc-3339",e.RGBColor="rgb-color",e.SemanticVersion="semantic-version",e.SSN="social-security-number",e.State="state",e.StreetAddress="street-address",e.String="string",e.Tags="tags",e.TaxIDNumber="tax-id-number",e.Time="time",e.TimeOfDay="time-of-day",e.TimeRange="time-range",e.TimezoneRegion="timezone-region",e.URL="url",e.URLPath="url-path",e.UUID="uuid",e.VATIDNumber="value-added-tax-id-number",e.VerificationCode="verification-code",e.Video="video",e.Weekday="weekday",e.Year="year",e))(I||{}),dr=(e=>(e.Critical="Critical",e.Error="Error",e.Fatal="Fatal",e.Warning="Warning",e))(dr||{}),cr=(e=>(e.Contains="contains",e.HasCharacterCount="has-character-count",e.HasNumberCount="has-number-count",e.HasLetterCount="has-letter-count",e.HasLowercaseCount="has-lowercase-count",e.HasSpacesCount="has-spaces-count",e.HasSymbolCount="has-symbol-count",e.HasUppercaseCount="has-uppercase-count",e.IsAfter="is-after",e.IsAfterOrEqual="is-after-or-equal",e.IsAirport="is-airport",e.IsAlpha="is-alpha",e.IsAlphanumeric="is-alphanumeric",e.IsAlgorithmHash="is-algorithm-hash",e.IsAscii="is-ascii",e.IsBase64="is-base-64",e.IsBefore="is-before",e.IsBeforeOrAfter="is-before-or-after",e.IsBeforeOrEqual="is-before-or-equal",e.IsBetween="is-between",e.IsBIC="is-bic",e.IsBitcoinAddress="is-bitcoin-address",e.IsBoolean="is-boolean",e.IsColor="is-color",e.IsComplexEnough="is-complex-enough",e.IsCountry="is-country",e.IsCreditCard="is-credit-card",e.IsCurrency="is-currency",e.IsDataURI="is-data-uri",e.IsDate="is-date",e.IsDateRange="is-date-range",e.IsDateTime="is-date-time",e.IsDayOfMonth="is-day-of-month",e.IsDecimal="is-decimal",e.IsDivisibleBy="is-divisible-by",e.IsDomainName="is-domain-name",e.IsEmailAddress="is-email-address",e.IsEthereumAddress="is-ethereum-address",e.IsEAN="is-ean",e.IsEIN="is-ein",e.IsEqual="is-equal",e.IsEvenNumber="is-even-number",e.IsFloat="is-float",e.IsIBAN="is-iban",e.IsGreaterThan="greater-than",e.IsGreaterThanOrEqual="greater-than-or-equal",e.IsHSLColor="is-hsl-color",e.IsHexColor="is-hex-color",e.IsHexadecimal="is-hexadecimal",e.IsIdentityCardCode="is-identity-card-code",e.IsIMEI="is-imei",e.IsInIPAddressRange="is-in-ip-address-range",e.IsInList="is-in-list",e.IsInTheLast="is-in-the-last",e.IsInteger="is-integer",e.IsIPAddress="is-ip-address",e.IsIPAddressRange="is-ip-address-range",e.IsISBN="is-isbn",e.IsISIN="is-isin",e.IsISMN="is-ismn",e.IsISRC="is-isrc",e.IsISSN="is-issn",e.IsISO4217="is-iso-4217",e.IsISO8601="is-iso-8601",e.IsISO31661Alpha2="is-iso-31661-alpha-2",e.IsISO31661Alpha3="is-iso-31661-alpha-3",e.IsJSON="is-json",e.IsLanguage="is-language",e.IsLatitude="is-latitude",e.IsLongitude="is-longitude",e.IsLengthEqual="is-length-equal",e.IsLengthGreaterThan="is-length-greater-than",e.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",e.IsLengthLessThan="is-length-less-than",e.IsLengthLessThanOrEqual="is-length-less-than-or-equal",e.IsLessThan="less-than",e.IsLessThanOrEqual="less-than-or-equal",e.IsLicensePlateNumber="is-license-plate-number",e.IsLowercase="is-lowercase",e.IsOctal="is-octal",e.IsMACAddress="is-mac-address",e.IsMD5="is-md5",e.IsMagnetURI="is-magnet-uri",e.IsMarkdown="is-markdown",e.IsMimeType="is-mime-type",e.IsMonth="is-month",e.IsNegativeNumber="is-negative-number",e.IsNotDate="is-not-date",e.IsNotEqual="is-not-equal",e.IsNotInIPAddressRange="is-not-in-ip-address-range",e.IsNotInList="is-not-in-list",e.IsNotNull="is-not-null",e.IsNotRegexMatch="is-not-regex-match",e.IsNotToday="is-not-today",e.IsNumber="is-number",e.IsNumeric="is-numeric",e.IsOddNumber="is-odd-number",e.IsPassportNumber="is-passport-number",e.IsPhoneNumber="is-phone-number",e.IsPort="is-port",e.IsPositiveNumber="is-positive-number",e.IsPostalCode="is-postal-code",e.IsProvince="is-province",e.IsRGBColor="is-rgb-color",e.IsRegexMatch="is-regex-match",e.IsRequired="is-required",e.IsSemanticVersion="is-semantic-version",e.IsSlug="is-slug",e.IsSSN="is-ssn",e.IsState="is-state",e.IsStreetAddress="is-street-address",e.IsString="is-string",e.IsStrongPassword="is-strong-password",e.IsTags="is-tags",e.IsTaxIDNumber="is-tax-id-number",e.IsThisMonth="is-this-month",e.IsThisQuarter="is-this-quarter",e.IsThisWeek="is-this-week",e.IsThisWeekend="is-this-weekend",e.IsThisYear="is-this-year",e.IsTime="is-time",e.IsTimeOfDay="is-time-of-day",e.IsTimeRange="is-time-range",e.IsToday="is-today",e.IsURL="is-url",e.IsUUID="is-uuid",e.IsUppercase="is-uppercase",e.IsUsernameAvailable="is-username-available",e.IsValidStreetAddress="is-valid-street-address",e.IsVATIDNumber="is-vat-id-number",e.IsWeekday="is-weekday",e.IsWeekend="is-weekend",e.IsYear="is-year",e))(cr||{}),Ar=(e=>(e.IsAuthenticated="is-authenticated",e.IsNotAuthenticated="is-not-authenticated",e.IsUsernameAvailable="is-username-available",e.PasswordMismatch="password-mismatch",e))(Ar||{}),gr=(e=>(e[e.IsHSLColor="is-hsl-color"]="IsHSLColor",e[e.IsHexColor="is-hex-color"]="IsHexColor",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsRGBColor="is-rgb-color"]="IsRGBColor",e[e.IsString="is-string"]="IsString",e))(gr||{}),Tr=(e=>(e[e.IsBetween="is-between"]="IsBetween",e[e.IsCurrency="is-currency"]="IsCurrency",e[e.IsDecimal="is-decimal"]="IsDecimal",e[e.IsDivisibleBy="is-divisible-by"]="IsDivisibleBy",e[e.IsEvenNumber="is-even-number"]="IsEvenNumber",e[e.IsFloat="is-float"]="IsFloat",e[e.IsGreaterThan="greater-than"]="IsGreaterThan",e[e.IsGreaterThanOrEqual="greater-than-or-equal"]="IsGreaterThanOrEqual",e[e.IsInteger="is-integer"]="IsInteger",e[e.IsISO8601="is-iso-8601"]="IsISO8601",e[e.IsLessThan="less-than"]="IsLessThan",e[e.IsLessThanOrEqual="less-than-or-equal"]="IsLessThanOrEqual",e[e.IsNegativeNumber="is-negative-number"]="IsNegativeNumber",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsNumber="is-number"]="IsNumber",e[e.IsOddNumber="is-odd-number"]="IsOddNumber",e[e.IsPositiveNumber="is-positive-number"]="IsPositiveNumber",e))(Tr||{}),hr=(e=>(e[e.IsBitcoinAddress="is-bitcoin-address"]="IsBitcoinAddress",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e))(hr||{}),fr=(e=>(e[e.IsEthereumAddress="is-ethereum-address"]="IsEthereumAddress",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e))(fr||{}),pr=(e=>(e[e.IsEqual="is-equal"]="IsEqual",e[e.IsJSON="is-json"]="IsJSON",e[e.IsLanguage="is-language"]="IsLanguage",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e))(pr||{}),Cr=(e=>(e[e.IsAlpha="is-alpha"]="IsAlpha",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(Cr||{}),Er=(e=>(e[e.IsAlpha="is-alpha"]="IsAlpha",e[e.IsCountry="is-country"]="IsCountry",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(Er||{}),_r=(e=>(e[e.IsEqual="is-equal"]="IsEqual",e[e.IsFloat="is-float"]="IsFloat",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsNumeric="is-numeric"]="IsNumeric",e))(_r||{}),Sr=(e=>(e[e.IsEqual="is-equal"]="IsEqual",e[e.IsFloat="is-float"]="IsFloat",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsNumeric="is-numeric"]="IsNumeric",e))(Sr||{}),Ir=(e=>(e[e.IsEqual="is-equal"]="IsEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsPostalCode="is-postal-code"]="IsPostalCode",e[e.IsNotNull="is-not-null"]="IsNotNull",e))(Ir||{}),vr=(e=>(e[e.IsAlpha="is-alpha"]="IsAlpha",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsProvince="is-province"]="IsProvince",e[e.IsString="is-string"]="IsString",e))(vr||{}),br=(e=>(e[e.IsAlpha="is-alpha"]="IsAlpha",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsState="is-state"]="IsState",e[e.IsString="is-string"]="IsString",e))(br||{}),yr=(e=>(e[e.IsAlphanumeric="is-alphanumeric"]="IsAlphanumeric",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e[e.IsStreetAddress="is-street-address"]="IsStreetAddress",e))(yr||{}),Br=(e=>(e[e.IsAirport="is-airport"]="IsAirport",e[e.IsAlpha="is-alpha"]="IsAlpha",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(Br||{}),Dr=(e=>(e[e.IsAlgorithmHash="is-algorithm-hash"]="IsAlgorithmHash",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(Dr||{}),Ur=(e=>(e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsSemanticVersion="is-semantic-version"]="IsSemanticVersion",e[e.IsString="is-string"]="IsString",e))(Ur||{}),Pr=(e=>(e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e[e.IsUUID="is-uuid"]="IsUUID",e))(Pr||{}),Nr=(e=>(e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsMD5="is-md5"]="IsMD5",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(Nr||{}),Mr=(e=>(e[e.IsBoolean="is-boolean"]="IsBoolean",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e))(Mr||{}),Fr=(e=>(e[e.IsAfter="is-after"]="IsAfter",e[e.IsAfterOrEqual="is-after-or-equal"]="IsAfterOrEqual",e[e.IsBefore="is-before"]="IsBefore",e[e.IsBeforeOrEqual="is-before-or-equal"]="IsBeforeOrEqual",e[e.IsBetween="is-between"]="IsBetween",e[e.IsDate="is-date"]="IsDate",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsNotDate="is-not-date"]="IsNotDate",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsNotToday="is-not-today"]="IsNotToday",e[e.IsThisWeek="is-this-week"]="IsThisWeek",e[e.IsThisMonth="is-this-month"]="IsThisMonth",e[e.IsThisQuarter="is-this-quarter"]="IsThisQuarter",e[e.IsThisYear="is-this-year"]="IsThisYear",e[e.IsToday="is-today"]="IsToday",e[e.IsWeekend="is-weekend"]="IsWeekend",e))(Fr||{}),kr=(e=>(e[e.IsAfter="is-after"]="IsAfter",e[e.IsBefore="is-before"]="IsBefore",e[e.IsBeforeOrAfter="is-before-or-after"]="IsBeforeOrAfter",e[e.IsBetween="is-between"]="IsBetween",e[e.IsDate="is-date"]="IsDate",e[e.IsDateRange="is-date-range"]="IsDateRange",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e))(kr||{}),Lr=(e=>(e[e.IsAfter="is-after"]="IsAfter",e[e.IsAfterOrEqual="is-after-or-equal"]="IsAfterOrEqual",e[e.IsBefore="is-before"]="IsBefore",e[e.IsBeforeOrEqual="is-before-or-equal"]="IsBeforeOrEqual",e[e.IsBetween="is-between"]="IsBetween",e[e.IsDate="is-date"]="IsDate",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsNotDate="is-not-date"]="IsNotDate",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsNotToday="is-not-today"]="IsNotToday",e[e.IsThisWeek="is-this-week"]="IsThisWeek",e[e.IsThisMonth="is-this-month"]="IsThisMonth",e[e.IsThisQuarter="is-this-quarter"]="IsThisQuarter",e[e.IsThisYear="is-this-year"]="IsThisYear",e[e.IsToday="is-today"]="IsToday",e[e.IsWeekend="is-weekend"]="IsWeekend",e))(Lr||{}),zr=(e=>(e[e.IsAfter="is-after"]="IsAfter",e[e.IsAfterOrEqual="is-after-or-equal"]="IsAfterOrEqual",e[e.IsBefore="is-before"]="IsBefore",e[e.IsBeforeOrEqual="is-before-or-equal"]="IsBeforeOrEqual",e[e.IsBetween="is-between"]="IsBetween",e[e.IsDayOfMonth="is-day-of-month"]="IsDayOfMonth",e[e.IsEvenNumber="is-even-number"]="IsEvenNumber",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsGreaterThan="greater-than"]="IsGreaterThan",e[e.IsGreaterThanOrEqual="greater-than-or-equal"]="IsGreaterThanOrEqual",e[e.IsInteger="is-integer"]="IsInteger",e[e.IsLessThan="less-than"]="IsLessThan",e[e.IsLessThanOrEqual="less-than-or-equal"]="IsLessThanOrEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsNumber="is-number"]="IsNumber",e[e.IsOddNumber="is-odd-number"]="IsOddNumber",e[e.IsToday="is-today"]="IsToday",e[e.IsWeekday="is-weekday"]="IsWeekday",e[e.IsWeekend="is-weekend"]="IsWeekend",e))(zr||{}),Rr=(e=>(e[e.IsAfter="is-after"]="IsAfter",e[e.IsAfterOrEqual="is-after-or-equal"]="IsAfterOrEqual",e[e.IsBefore="is-before"]="IsBefore",e[e.IsBeforeOrEqual="is-before-or-equal"]="IsBeforeOrEqual",e[e.IsBetween="is-between"]="IsBetween",e[e.IsEvenNumber="is-even-number"]="IsEvenNumber",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsGreaterThan="greater-than"]="IsGreaterThan",e[e.IsGreaterThanOrEqual="greater-than-or-equal"]="IsGreaterThanOrEqual",e[e.IsInteger="is-integer"]="IsInteger",e[e.IsLessThan="less-than"]="IsLessThan",e[e.IsLessThanOrEqual="less-than-or-equal"]="IsLessThanOrEqual",e[e.IsMonth="is-month"]="IsMonth",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsNumber="is-number"]="IsNumber",e[e.IsOddNumber="is-odd-number"]="IsOddNumber",e[e.IsThisMonth="is-this-month"]="IsThisMonth",e))(Rr||{}),xr=(e=>(e[e.IsAfter="is-after"]="IsAfter",e[e.IsAfterOrEqual="is-after-or-equal"]="IsAfterOrEqual",e[e.IsBefore="is-before"]="IsBefore",e[e.IsBeforeOrEqual="is-before-or-equal"]="IsBeforeOrEqual",e[e.IsBetween="is-between"]="IsBetween",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsTime="is-time"]="IsTime",e))(xr||{}),wr=(e=>(e[e.IsAfter="is-after"]="IsAfter",e[e.IsBefore="is-before"]="IsBefore",e[e.IsBeforeOrAfter="is-before-or-after"]="IsBeforeOrAfter",e[e.IsBetween="is-between"]="IsBetween",e[e.IsTime="is-time"]="IsTime",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsTimeRange="is-time-range"]="IsTimeRange",e))(wr||{}),qr=(e=>(e[e.IsAfter="is-after"]="IsAfter",e[e.IsBefore="is-before"]="IsBefore",e[e.IsBeforeOrAfter="is-before-or-after"]="IsBeforeOrAfter",e[e.IsBetween="is-between"]="IsBetween",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsTimeOfDay="is-time-of-day"]="IsTimeOfDay",e[e.IsTimeRange="is-time-range"]="IsTimeRange",e))(qr||{}),Gr=(e=>(e[e.IsAfter="is-after"]="IsAfter",e[e.IsAfterOrEqual="is-after-or-equal"]="IsAfterOrEqual",e[e.IsBefore="is-before"]="IsBefore",e[e.IsBeforeOrEqual="is-before-or-equal"]="IsBeforeOrEqual",e[e.IsBetween="is-between"]="IsBetween",e[e.IsEvenNumber="is-even-number"]="IsEvenNumber",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsGreaterThan="greater-than"]="IsGreaterThan",e[e.IsGreaterThanOrEqual="greater-than-or-equal"]="IsGreaterThanOrEqual",e[e.IsLessThan="less-than"]="IsLessThan",e[e.IsLessThanOrEqual="less-than-or-equal"]="IsLessThanOrEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsNumber="is-number"]="IsNumber",e[e.IsOddNumber="is-odd-number"]="IsOddNumber",e[e.IsWeekday="is-weekday"]="IsWeekday",e[e.IsWeekend="is-weekend"]="IsWeekend",e))(Gr||{}),Kr=(e=>(e[e.IsAfter="is-after"]="IsAfter",e[e.IsAfterOrEqual="is-after-or-equal"]="IsAfterOrEqual",e[e.IsBefore="is-before"]="IsBefore",e[e.IsBeforeOrEqual="is-before-or-equal"]="IsBeforeOrEqual",e[e.IsBetween="is-between"]="IsBetween",e[e.IsEvenNumber="is-even-number"]="IsEvenNumber",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsGreaterThan="greater-than"]="IsGreaterThan",e[e.IsGreaterThanOrEqual="greater-than-or-equal"]="IsGreaterThanOrEqual",e[e.IsInteger="is-integer"]="IsInteger",e[e.IsLessThan="less-than"]="IsLessThan",e[e.IsLessThanOrEqual="less-than-or-equal"]="IsLessThanOrEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsNumber="is-number"]="IsNumber",e[e.IsOddNumber="is-odd-number"]="IsOddNumber",e[e.IsThisYear="is-this-year"]="IsThisYear",e[e.IsYear="is-year"]="IsYear",e))(Kr||{}),Or=(e=>(e[e.IsEqual="is-equal"]="IsEqual",e[e.IsHexadecimal="is-hexadecimal"]="IsHexadecimal",e[e.IsLengthEqual="is-length-equal"]="IsLengthEqual",e[e.IsLengthGreaterThan="is-length-greater-than"]="IsLengthGreaterThan",e[e.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal"]="IsLengthGreaterThanOrEqual",e[e.IsLengthLessThan="is-length-less-than"]="IsLengthLessThan",e[e.IsLengthLessThanOrEqual="is-length-less-than-or-equal"]="IsLengthLessThanOrEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(Or||{}),Hr=(e=>(e[e.IsEqual="is-equal"]="IsEqual",e[e.IsJSON="is-json"]="IsJSON",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e))(Hr||{}),jr=(e=>(e[e.IsEqual="is-equal"]="IsEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsMarkdown="is-markdown"]="IsMarkdown",e[e.IsString="is-string"]="IsString",e))(jr||{}),$r=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e))($r||{}),Wr=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e))(Wr||{}),Vr=(e=>(e[e.Contains="contains"]="Contains",e[e.IsDataURI="is-data-uri"]="IsDataURI",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(Vr||{}),Yr=(e=>(e[e.Contains="contains"]="Contains",e[e.IsDomainName="is-domain-name"]="IsDomainName",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(Yr||{}),Zr=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEmailAddress="is-email-address"]="IsEmailAddress",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(Zr||{}),Jr=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsIPAddress="is-ip-address"]="IsIPAddress",e[e.IsInIPAddressRange="is-in-ip-address-range"]="IsInIPAddressRange",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotInIPAddressRange="is-not-in-ip-address-range"]="IsNotInIPAddressRange",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(Jr||{}),Qr=(e=>(e[e.IsEqual="is-equal"]="IsEqual",e[e.IsIPAddressRange="is-ip-address-range"]="IsIPAddressRange",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotInIPAddressRange="is-not-in-ip-address-range"]="IsNotInIPAddressRange",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(Qr||{}),Xr=(e=>(e[e.IsEqual="is-equal"]="IsEqual",e[e.IsGreaterThan="greater-than"]="IsGreaterThan",e[e.IsGreaterThanOrEqual="greater-than-or-equal"]="IsGreaterThanOrEqual",e[e.IsInteger="is-integer"]="IsInteger",e[e.IsLessThan="less-than"]="IsLessThan",e[e.IsLessThanOrEqual="less-than-or-equal"]="IsLessThanOrEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e))(Xr||{}),eo=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsMACAddress="is-mac-address"]="IsMACAddress",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(eo||{}),ao=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsMagnetURI="is-magnet-uri"]="IsMagnetURI",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(ao||{}),io=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsMimeType="is-mime-type"]="IsMimeType",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(io||{}),no=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e[e.IsSlug="is-slug"]="IsSlug",e))(no||{}),so=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e[e.IsURL="is-url"]="IsURL",e))(so||{}),uo=(e=>(e[e.IsAfter="is-after"]="IsAfter",e[e.IsAfterOrEqual="is-after-or-equal"]="IsAfterOrEqual",e[e.IsBefore="is-before"]="IsBefore",e[e.IsBeforeOrEqual="is-before-or-equal"]="IsBeforeOrEqual",e[e.IsBetween="is-between"]="IsBetween",e[e.IsDecimal="is-decimal"]="IsDecimal",e[e.IsDivisibleBy="is-divisible-by"]="IsDivisibleBy",e[e.IsEAN="is-ean"]="IsEAN",e[e.IsEIN="is-ein"]="IsEIN",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsEvenNumber="is-even-number"]="IsEvenNumber",e[e.IsFloat="is-float"]="IsFloat",e[e.IsGreaterThan="greater-than"]="IsGreaterThan",e[e.IsGreaterThanOrEqual="greater-than-or-equal"]="IsGreaterThanOrEqual",e[e.IsInt="is-integer"]="IsInt",e[e.IsISBN="is-isbn"]="IsISBN",e[e.IsISMN="is-ismn"]="IsISMN",e[e.IsISSN="is-issn"]="IsISSN",e[e.IsLatitude="is-latitude"]="IsLatitude",e[e.IsLongitude="is-longitude"]="IsLongitude",e[e.IsLessThan="less-than"]="IsLessThan",e[e.IsLessThanOrEqual="less-than-or-equal"]="IsLessThanOrEqual",e[e.IsMACAddress="is-mac-address"]="IsMACAddress",e[e.IsNumber="is-number"]="IsNumber",e[e.IsNegativeNumber="is-negative-number"]="IsNegativeNumber",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsOddNumber="is-odd-number"]="IsOddNumber",e[e.IsPassportNumber="is-passport-number"]="IsPassportNumber",e[e.IsPhoneNumber="is-phone-number"]="IsPhoneNumber",e[e.IsPort="is-port"]="IsPort",e[e.IsPositiveNumber="is-positive-number"]="IsPositiveNumber",e[e.IsPostalCode="is-postal-code"]="IsPostalCode",e[e.IsSemanticVersion="is-semantic-version"]="IsSemanticVersion",e[e.IsSSN="is-ssn"]="IsSSN",e[e.IsTaxIDNumber="is-tax-id-number"]="IsTaxIDNumber",e[e.IsUUID="is-uuid"]="IsUUID",e[e.IsVATIDNumber="is-vat-id-number"]="IsVATIDNumber",e))(uo||{}),to=(e=>(e[e.IsEqual="is-equal"]="IsEqual",e[e.IsFloat="is-float"]="IsFloat",e[e.IsGreaterThan="greater-than"]="IsGreaterThan",e[e.IsGreaterThanOrEqual="greater-than-or-equal"]="IsGreaterThanOrEqual",e[e.IsLessThan="less-than"]="IsLessThan",e[e.IsLessThanOrEqual="less-than-or-equal"]="IsLessThanOrEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsNumber="is-number"]="IsNumber",e[e.IsNumeric="is-numeric"]="IsNumeric",e))(to||{}),ro=(e=>(e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInteger="is-integer"]="IsInteger",e[e.IsGreaterThan="greater-than"]="IsGreaterThan",e[e.IsGreaterThanOrEqual="greater-than-or-equal"]="IsGreaterThanOrEqual",e[e.IsLessThan="less-than"]="IsLessThan",e[e.IsLessThanOrEqual="less-than-or-equal"]="IsLessThanOrEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsNumber="is-number"]="IsNumber",e[e.IsNumeric="is-numeric"]="IsNumeric",e))(ro||{}),oo=(e=>(e[e.IsCreditCard="is-credit-card"]="IsCreditCard",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsLengthEqual="is-length-equal"]="IsLengthEqual",e[e.IsLengthGreaterThan="is-length-greater-than"]="IsLengthGreaterThan",e[e.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal"]="IsLengthGreaterThanOrEqual",e[e.IsLengthLessThan="is-length-less-than"]="IsLengthLessThan",e[e.IsLengthLessThanOrEqual="is-length-less-than-or-equal"]="IsLengthLessThanOrEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsRegexMatch="is-regex-match"]="IsRegexMatch",e[e.IsNotRegexMatch="is-not-regex-match"]="IsNotRegexMatch",e))(oo||{}),lo=(e=>(e[e.isEmailAddress="is-email-address"]="isEmailAddress",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsLengthEqual="is-length-equal"]="IsLengthEqual",e[e.IsLengthGreaterThan="is-length-greater-than"]="IsLengthGreaterThan",e[e.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal"]="IsLengthGreaterThanOrEqual",e[e.IsLengthLessThan="is-length-less-than"]="IsLengthLessThan",e[e.IsLengthLessThanOrEqual="is-length-less-than-or-equal"]="IsLengthLessThanOrEqual",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsRegexMatch="is-regex-match"]="IsRegexMatch",e[e.IsNotRegexMatch="is-not-regex-match"]="IsNotRegexMatch",e))(lo||{}),mo=(e=>(e[e.IsLicensePlateNumber="is-license-plate-number"]="IsLicensePlateNumber",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsNotRegexMatch="is-not-regex-match"]="IsNotRegexMatch",e[e.IsString="is-string"]="IsString",e[e.IsRegexMatch="is-regex-match"]="IsRegexMatch",e))(mo||{}),co=(e=>(e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsPassportNumber="is-passport-number"]="IsPassportNumber",e[e.IsString="is-string"]="IsString",e[e.IsRegexMatch="is-regex-match"]="IsRegexMatch",e))(co||{}),Ao=(e=>(e[e.IsComplexEnough="is-complex-enough"]="IsComplexEnough",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsNotRegexMatch="is-not-regex-match"]="IsNotRegexMatch",e[e.IsLengthGreaterThan="is-length-greater-than"]="IsLengthGreaterThan",e[e.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal"]="IsLengthGreaterThanOrEqual",e[e.IsLengthLessThan="is-length-less-than"]="IsLengthLessThan",e[e.IsLengthLessThanOrEqual="is-length-less-than-or-equal"]="IsLengthLessThanOrEqual",e[e.IsStrongPassword="is-strong-password"]="IsStrongPassword",e[e.IsString="is-string"]="IsString",e[e.IsRegexMatch="is-regex-match"]="IsRegexMatch",e))(Ao||{}),go=(e=>(e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsNotRegexMatch="is-not-regex-match"]="IsNotRegexMatch",e[e.IsNumber="is-number"]="IsNumber",e[e.IsPhoneNumber="is-phone-number"]="IsPhoneNumber",e[e.IsRegexMatch="is-regex-match"]="IsRegexMatch",e))(go||{}),To=(e=>(e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsSSN="is-ssn"]="IsSSN",e[e.IsString="is-string"]="IsString",e[e.IsRegexMatch="is-regex-match"]="IsRegexMatch",e))(To||{}),ho=(e=>(e[e.Contains="contains"]="Contains",e[e.IsBIC="is-bic"]="IsBIC",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(ho||{}),fo=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEAN="is-ean"]="IsEAN",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(fo||{}),po=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEIN="is-ein"]="IsEIN",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(po||{}),Co=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsIBAN="is-iban"]="IsIBAN",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(Co||{}),Eo=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsISBN="is-isbn"]="IsISBN",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(Eo||{}),_o=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsISIN="is-isin"]="IsISIN",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(_o||{}),So=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsISMN="is-ismn"]="IsISMN",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(So||{}),Io=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsISSN="is-issn"]="IsISSN",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e))(Io||{}),vo=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e[e.IsTaxIDNumber="is-tax-id-number"]="IsTaxIDNumber",e))(vo||{}),bo=(e=>(e[e.Contains="contains"]="Contains",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsInList="is-in-list"]="IsInList",e[e.IsNotEqual="is-not-equal"]="IsNotEqual",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsString="is-string"]="IsString",e[e.IsVATIDNumber="is-vat-id-number"]="IsVATIDNumber",e))(bo||{}),yo=(e=>(e[e.Contains="contains"]="Contains",e[e.HasNumberCount="has-number-count"]="HasNumberCount",e[e.HasLowercaseCount="has-lowercase-count"]="HasLowercaseCount",e[e.HasLetterCount="has-letter-count"]="HasLetterCount",e[e.HasSpacesCount="has-spaces-count"]="HasSpacesCount",e[e.HasSymbolCount="has-symbol-count"]="HasSymbolCount",e[e.HasUppercaseCount="has-uppercase-count"]="HasUppercaseCount",e[e.IsAlpha="is-alpha"]="IsAlpha",e[e.IsAlphanumeric="is-alphanumeric"]="IsAlphanumeric",e[e.IsAscii="is-ascii"]="IsAscii",e[e.IsBase64="is-base-64"]="IsBase64",e[e.IsColor="is-color"]="IsColor",e[e.IsComplexEnough="is-complex-enough"]="IsComplexEnough",e[e.IsCreditCard="is-credit-card"]="IsCreditCard",e[e.IsDataURI="is-data-uri"]="IsDataURI",e[e.IsDomainName="is-domain-name"]="IsDomainName",e[e.IsEmailAddress="is-email-address"]="IsEmailAddress",e[e.IsEthereumAddress="is-ethereum-address"]="IsEthereumAddress",e[e.IsEAN="is-ean"]="IsEAN",e[e.IsEIN="is-ein"]="IsEIN",e[e.IsEqual="is-equal"]="IsEqual",e[e.IsIBAN="is-iban"]="IsIBAN",e[e.IsHSLColor="is-hsl-color"]="IsHSLColor",e[e.IsHexColor="is-hex-color"]="IsHexColor",e[e.IsHexadecimal="is-hexadecimal"]="IsHexadecimal",e[e.IsIdentityCardCode="is-identity-card-code"]="IsIdentityCardCode",e[e.IsIMEI="is-imei"]="IsIMEI",e[e.IsInList="is-in-list"]="IsInList",e[e.IsIPAddress="is-ip-address"]="IsIPAddress",e[e.IsInIPAddressRange="is-in-ip-address-range"]="IsInIPAddressRange",e[e.IsISBN="is-isbn"]="IsISBN",e[e.IsISIN="is-isin"]="IsISIN",e[e.IsISMN="is-ismn"]="IsISMN",e[e.IsISRC="is-isrc"]="IsISRC",e[e.IsISSN="is-issn"]="IsISSN",e[e.IsLanguage="is-language"]="IsLanguage",e[e.IsLatitude="is-latitude"]="IsLatitude",e[e.IsLongitude="is-longitude"]="IsLongitude",e[e.IsLengthEqual="is-length-equal"]="IsLengthEqual",e[e.IsLengthGreaterThan="is-length-greater-than"]="IsLengthGreaterThan",e[e.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal"]="IsLengthGreaterThanOrEqual",e[e.IsLengthLessThan="is-length-less-than"]="IsLengthLessThan",e[e.IsLengthLessThanOrEqual="is-length-less-than-or-equal"]="IsLengthLessThanOrEqual",e[e.IsLicensePlateNumber="is-license-plate-number"]="IsLicensePlateNumber",e[e.IsLowercase="is-lowercase"]="IsLowercase",e[e.IsOctal="is-octal"]="IsOctal",e[e.IsMACAddress="is-mac-address"]="IsMACAddress",e[e.IsMD5="is-md5"]="IsMD5",e[e.IsMagnetURI="is-magnet-uri"]="IsMagnetURI",e[e.IsMarkdown="is-markdown"]="IsMarkdown",e[e.IsMimeType="is-mime-type"]="IsMimeType",e[e.IsMonth="is-month"]="IsMonth",e[e.IsNotInIPAddressRange="is-not-in-ip-address-range"]="IsNotInIPAddressRange",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNotNull="is-not-null"]="IsNotNull",e[e.IsNotRegexMatch="is-not-regex-match"]="IsNotRegexMatch",e[e.IsNumber="is-number"]="IsNumber",e[e.IsNumeric="is-numeric"]="IsNumeric",e[e.IsPassportNumber="is-passport-number"]="IsPassportNumber",e[e.IsPhoneNumber="is-phone-number"]="IsPhoneNumber",e[e.IsPort="is-port"]="IsPort",e[e.IsPostalCode="is-postal-code"]="IsPostalCode",e[e.IsProvince="is-province"]="IsProvince",e[e.IsRegexMatch="is-regex-match"]="IsRegexMatch",e[e.IsSemanticVersion="is-semantic-version"]="IsSemanticVersion",e[e.IsSlug="is-slug"]="IsSlug",e[e.IsSSN="is-ssn"]="IsSSN",e[e.IsState="is-state"]="IsState",e[e.IsStreetAddress="is-street-address"]="IsStreetAddress",e[e.IsString="is-string"]="IsString",e[e.IsTaxIDNumber="is-tax-id-number"]="IsTaxIDNumber",e[e.IsURL="is-url"]="IsURL",e[e.IsUUID="is-uuid"]="IsUUID",e[e.IsUppercase="is-uppercase"]="IsUppercase",e[e.IsVATIDNumber="is-vat-id-number"]="IsVATIDNumber",e[e.IsWeekday="is-weekday"]="IsWeekday",e[e.IsWeekend="is-weekend"]="IsWeekend",e[e.IsYear="is-year"]="IsYear",e))(yo||{}),Bo=(e=>(e[e.Contains="contains"]="Contains",e[e.IsAlpha="is-alpha"]="IsAlpha",e[e.IsAlphanumeric="is-alphanumeric"]="IsAlphanumeric",e[e.IsInList="is-in-list"]="IsInList",e[e.IsMarkdown="is-markdown"]="IsMarkdown",e[e.IsNotInList="is-not-in-list"]="IsNotInList",e[e.IsNumeric="is-numeric"]="IsNumeric",e[e.IsLowercase="is-lowercase"]="IsLowercase",e[e.IsString="is-string"]="IsString",e[e.IsUppercase="is-uppercase"]="IsUppercase",e))(Bo||{}),Do=(e=>(e.InvalidCharacters="invalid-characters",e.InvalidPattern="invalid-pattern",e.NotComplexEnough="not-complex-enough",e.NotUnique="not-unique",e.NotValidEmail="not-valid-email",e.TooLong="too-long",e.TooShort="too-short",e.Required="required",e))(Do||{}),Uo=(e=>(e[e.Allowed=0]="Allowed",e[e.Blocked=1]="Blocked",e))(Uo||{}),Po=(e=>(e.Canceled="Canceled",e.Completed="Completed",e.Created="Created",e.Faulted="Faulted",e.Queued="Queued",e.Running="Running",e.Waiting="Waiting",e))(Po||{}),No=(e=>(e.Archived="ARCHIVED",e.Compromised="COMPROMISED",e.Confirmed="CONFIRMED",e.ForcePasswordChange="FORCE_CHANGE_PASSWORD",e.ResetRequired="RESET_REQUIRED",e.Unconfirmed="UNCONFIRMED",e.Unknown="UNKNOWN",e))(No||{}),Mo=(e=>(e.Owner="Owner",e.Admin="Admin",e.User="User",e.Visitor="Visitor",e))(Mo||{}),Fo=(e=>(e.RequiresPaymentMethod="requires_payment_method",e.RequiresConfirmation="requires_confirmation",e.RequiresAction="requires_action",e.Processing="processing",e.RequiresCapture="requires_capture",e.Canceled="canceled",e.Succeeded="succeeded",e))(Fo||{}),ko=(e=>(e.Incomplete="incomplete",e.IncompleteExpired="incomplete_expired",e.Trialing="trialing",e.Active="active",e.PastDue="past_due",e.Canceled="canceled",e.Unpaid="unpaid",e))(ko||{}),Lo=(e=>(e.Monthly="monthly",e.Quarterly="quarterly",e.Yearly="yearly",e.Lifetime="lifetime",e))(Lo||{}),zo=(e=>(e.Delivered="delivered",e.Read="read",e.Sending="sending",e.Sent="sent",e))(zo||{}),Ro=(e=>(e.Audio="audio",e.File="file",e.Image="image",e.Text="text",e.Video="video",e))(Ro||{}),xo=(e=>(e.Audio="audio",e.File="file",e.Image="image",e.Video="video",e))(xo||{}),wo=(e=>(e.Angry="angry",e.Laugh="laugh",e.Like="like",e.Love="love",e.Sad="sad",e.Wow="wow",e.Wink="wink",e.Yay="yay",e))(wo||{}),qo=(e=>(e.Email="email",e.PhoneNumber="phone_number",e))(qo||{}),Go=(e=>(e.Analytics="analytics",e.Critical="critical",e.Debug="debug",e.Exception="exception",e.Http="http",e.Info="info",e.Warning="warning",e))(Go||{}),Ko=(e=>(e.Delete="delete",e.Get="get",e.Head="head",e.Patch="patch",e.Post="post",e.Put="put",e))(Ko||{}),Oo=(e=>(e[e.CONTINUE=100]="CONTINUE",e[e.SWITCHING_PROTOCOLS=101]="SWITCHING_PROTOCOLS",e[e.PROCESSING=102]="PROCESSING",e[e.OK=200]="OK",e[e.CREATED=201]="CREATED",e[e.ACCEPTED=202]="ACCEPTED",e[e.NON_AUTHORITATIVE_INFORMATION=203]="NON_AUTHORITATIVE_INFORMATION",e[e.NO_CONTENT=204]="NO_CONTENT",e[e.RESET_CONTENT=205]="RESET_CONTENT",e[e.PARTIAL_CONTENT=206]="PARTIAL_CONTENT",e[e.MULTI_STATUS=207]="MULTI_STATUS",e[e.ALREADY_REPORTED=208]="ALREADY_REPORTED",e[e.IM_USED=226]="IM_USED",e[e.MULTIPLE_CHOICES=300]="MULTIPLE_CHOICES",e[e.MOVED_PERMANENTLY=301]="MOVED_PERMANENTLY",e[e.FOUND=302]="FOUND",e[e.SEE_OTHER=303]="SEE_OTHER",e[e.NOT_MODIFIED=304]="NOT_MODIFIED",e[e.USE_PROXY=305]="USE_PROXY",e[e.SWITCH_PROXY=306]="SWITCH_PROXY",e[e.TEMPORARY_REDIRECT=307]="TEMPORARY_REDIRECT",e[e.PERMANENT_REDIRECT=308]="PERMANENT_REDIRECT",e[e.BAD_REQUEST=400]="BAD_REQUEST",e[e.UNAUTHORIZED=401]="UNAUTHORIZED",e[e.PAYMENT_REQUIRED=402]="PAYMENT_REQUIRED",e[e.FORBIDDEN=403]="FORBIDDEN",e[e.NOT_FOUND=404]="NOT_FOUND",e[e.METHOD_NOT_ALLOWED=405]="METHOD_NOT_ALLOWED",e[e.NOT_ACCEPTABLE=406]="NOT_ACCEPTABLE",e[e.PROXY_AUTHENTICATION_REQUIRED=407]="PROXY_AUTHENTICATION_REQUIRED",e[e.REQUEST_TIMEOUT=408]="REQUEST_TIMEOUT",e[e.CONFLICT=409]="CONFLICT",e[e.GONE=410]="GONE",e[e.LENGTH_REQUIRED=411]="LENGTH_REQUIRED",e[e.PRECONDITION_FAILED=412]="PRECONDITION_FAILED",e[e.PAYLOAD_TOO_LARGE=413]="PAYLOAD_TOO_LARGE",e[e.URI_TOO_LONG=414]="URI_TOO_LONG",e[e.UNSUPPORTED_MEDIA_TYPE=415]="UNSUPPORTED_MEDIA_TYPE",e[e.RANGE_NOT_SATISFIABLE=416]="RANGE_NOT_SATISFIABLE",e[e.EXPECTATION_FAILED=417]="EXPECTATION_FAILED",e[e.I_AM_A_TEAPOT=418]="I_AM_A_TEAPOT",e[e.MISDIRECTED_REQUEST=421]="MISDIRECTED_REQUEST",e[e.UNPROCESSABLE_ENTITY=422]="UNPROCESSABLE_ENTITY",e[e.LOCKED=423]="LOCKED",e[e.FAILED_DEPENDENCY=424]="FAILED_DEPENDENCY",e[e.TOO_EARLY=425]="TOO_EARLY",e[e.UPGRADE_REQUIRED=426]="UPGRADE_REQUIRED",e[e.PRECONDITION_REQUIRED=428]="PRECONDITION_REQUIRED",e[e.TOO_MANY_REQUESTS=429]="TOO_MANY_REQUESTS",e[e.REQUEST_HEADER_FIELDS_TOO_LARGE=431]="REQUEST_HEADER_FIELDS_TOO_LARGE",e[e.UNAVAILABLE_FOR_LEGAL_REASONS=451]="UNAVAILABLE_FOR_LEGAL_REASONS",e[e.INTERNAL_SERVER_ERROR=500]="INTERNAL_SERVER_ERROR",e[e.NOT_IMPLEMENTED=501]="NOT_IMPLEMENTED",e[e.BAD_GATEWAY=502]="BAD_GATEWAY",e[e.SERVICE_UNAVAILABLE=503]="SERVICE_UNAVAILABLE",e[e.GATEWAY_TIMEOUT=504]="GATEWAY_TIMEOUT",e[e.HTTP_VERSION_NOT_SUPPORTED=505]="HTTP_VERSION_NOT_SUPPORTED",e[e.VARIANT_ALSO_NEGOTIATES=506]="VARIANT_ALSO_NEGOTIATES",e[e.INSUFFICIENT_STORAGE=507]="INSUFFICIENT_STORAGE",e[e.LOOP_DETECTED=508]="LOOP_DETECTED",e[e.BANDWIDTH_LIMIT_EXCEEDED=509]="BANDWIDTH_LIMIT_EXCEEDED",e[e.NOT_EXTENDED=510]="NOT_EXTENDED",e[e.NETWORK_AUTHENTICATION_REQUIRED=511]="NETWORK_AUTHENTICATION_REQUIRED",e))(Oo||{}),Ho=(e=>(e.Afghanistan="AF",e.Albania="AL",e.Algeria="DZ",e.AmericanSamoa="AS",e.Andorra="AD",e.Angola="AO",e.Anguilla="AI",e.Antarctica="AQ",e.AntiguaAndBarbuda="AG",e.Argentina="AR",e.Armenia="AM",e.Aruba="AW",e.Australia="AU",e.Austria="AT",e.Azerbaijan="AZ",e.Bahamas="BS",e.Bahrain="BH",e.Bangladesh="BD",e.Barbados="BB",e.Belarus="BY",e.Belgium="BE",e.Belize="BZ",e.Benin="BJ",e.Bermuda="BM",e.Bhutan="BT",e.Bolivia="BO",e.BosniaAndHerzegovina="BA",e.Botswana="BW",e.BouvetIsland="BV",e.Brazil="BR",e.BritishIndianOceanTerritory="IO",e.Brunei="BN",e.Bulgaria="BG",e.BurkinaFaso="BF",e.Burundi="BI",e.Cambodia="KH",e.Cameroon="CM",e.Canada="CA",e.CapeVerde="CV",e.CaymanIslands="KY",e.CentralAfricanRepublic="CF",e.Chad="TD",e.Chile="CL",e.China="CN",e.ChristmasIsland="CX",e.CocosKeelingIslands="CC",e.Colombia="CO",e.Comoros="KM",e.Congo="CG",e.CongoTheDemocraticRepublicOfThe="CD",e.CookIslands="CK",e.CostaRica="CR",e.CoteDIvoire="CI",e.Croatia="HR",e.Cuba="CU",e.Cyprus="CY",e.CzechRepublic="CZ",e.Denmark="DK",e.Djibouti="DJ",e.Dominica="DM",e.DominicanRepublic="DO",e.Ecuador="EC",e.Egypt="EG",e.ElSalvador="SV",e.EquatorialGuinea="GQ",e.Eritrea="ER",e.Estonia="EE",e.Ethiopia="ET",e.FalklandIslands="FK",e.FaroeIslands="FO",e.Fiji="FJ",e.Finland="FI",e.France="FR",e.FrenchGuiana="GF",e.FrenchPolynesia="PF",e.FrenchSouthernTerritories="TF",e.Gabon="GA",e.Gambia="GM",e.Georgia="GE",e.Germany="DE",e.Ghana="GH",e.Gibraltar="GI",e.Greece="GR",e.Greenland="GL",e.Grenada="GD",e.Guadeloupe="GP",e.Guam="GU",e.Guatemala="GT",e.Guernsey="GG",e.Guinea="GN",e.GuineaBissau="GW",e.Guyana="GY",e.Haiti="HT",e.HeardIslandMcdonaldIslands="HM",e.HolySeeVaticanCityState="VA",e.Honduras="HN",e.HongKong="HK",e.Hungary="HU",e.Iceland="IS",e.India="IN",e.Indonesia="ID",e.Iran="IR",e.Iraq="IQ",e.Ireland="IE",e.IsleOfMan="IM",e.Israel="IL",e.Italy="IT",e.Jamaica="JM",e.Japan="JP",e.Jersey="JE",e.Jordan="JO",e.Kazakhstan="KZ",e.Kenya="KE",e.Kiribati="KI",e.Kuwait="KW",e.Kyrgyzstan="KG",e.Laos="LA",e.Latvia="LV",e.Lebanon="LB",e.Lesotho="LS",e.Liberia="LR",e.Libya="LY",e.Liechtenstein="LI",e.Lithuania="LT",e.Luxembourg="LU",e.Macau="MO",e.Madagascar="MG",e.Malawi="MW",e.Malaysia="MY",e.Maldives="MV",e.Mali="ML",e.Malta="MT",e.MarshallIslands="MH",e.Martinique="MQ",e.Mauritania="MR",e.Mauritius="MU",e.Mayotte="YT",e.Mexico="MX",e.MicronesiaFederatedStatesOf="FM",e.Moldova="MD",e.Monaco="MC",e.Mongolia="MN",e.Montenegro="ME",e.Montserrat="MS",e.Morocco="MA",e.Mozambique="MZ",e.Myanmar="MM",e.Namibia="NA",e.Nauru="NR",e.Nepal="NP",e.Netherlands="NL",e.NetherlandsAntilles="AN",e.NewCaledonia="NC",e.NewZealand="NZ",e.NorthKorea="KP",e.Nicaragua="NI",e.Niger="NE",e.Nigeria="NG",e.Niue="NU",e.NorfolkIsland="NF",e.NorthMacedonia="MK",e.NorthernMarianaIslands="MP",e.Norway="NO",e.Oman="OM",e.Pakistan="PK",e.Palau="PW",e.PalestinianTerritoryOccupied="PS",e.Panama="PA",e.PapuaNewGuinea="PG",e.Paraguay="PY",e.Peru="PE",e.Philippines="PH",e.Pitcairn="PN",e.Poland="PL",e.Portugal="PT",e.PuertoRico="PR",e.Qatar="QA",e.Reunion="RE",e.Romania="RO",e.RussianFederation="RU",e.Rwanda="RW",e.SaintBarthelemy="BL",e.SaintHelena="SH",e.SaintKittsAndNevis="KN",e.SaintLucia="LC",e.SaintMartin="MF",e.SaintPierreAndMiquelon="PM",e.SaintVincentAndTheGrenadines="VC",e.Samoa="WS",e.SanMarino="SM",e.SaoTomeAndPrincipe="ST",e.SaudiArabia="SA",e.Senegal="SN",e.Serbia="RS",e.SerbiaAndMontenegro="CS",e.Seychelles="SC",e.SierraLeone="SL",e.Singapore="SG",e.Slovakia="SK",e.Slovenia="SI",e.SolomonIslands="SB",e.Somalia="SO",e.SouthAfrica="ZA",e.SouthGeorgiaAndTheSouthSandwichIslands="GS",e.SouthKorea="KR",e.Spain="ES",e.SriLanka="LK",e.Sudan="SD",e.Suriname="SR",e.SvalbardAndJanMayen="SJ",e.Swaziland="SZ",e.Sweden="SE",e.Switzerland="CH",e.Syria="SY",e.Taiwan="TW",e.Tajikistan="TJ",e.Tanzania="TZ",e.Thailand="TH",e.TimorLeste="TL",e.Togo="TG",e.Tokelau="TK",e.Tonga="TO",e.TrinidadAndTobago="TT",e.Tunisia="TN",e.Turkey="TR",e.Turkmenistan="TM",e.TurksAndCaicosIslands="TC",e.Tuvalu="TV",e.Uganda="UG",e.Ukraine="UA",e.UnitedArabEmirates="AE",e.UnitedKingdom="GB",e.UnitedStates="US",e.UnitedStatesMinorOutlyingIslands="UM",e.Uruguay="UY",e.Uzbekistan="UZ",e.Vanuatu="VU",e.Venezuela="VE",e.Vietnam="VN",e.VirginIslandsBritish="VG",e.VirginIslandsUS="VI",e.WallisAndFutuna="WF",e.WesternSahara="EH",e.Yemen="YE",e.Zambia="ZM",e.Zimbabwe="ZW",e))(Ho||{}),jo=(e=>(e.AfghanistanAfghani="AFN",e.AlbaniaLek="ALL",e.ArmeniaDram="AMD",e.AlgeriaDinar="DZD",e.AmericanSamoaTala="WST",e.AngolaKwanza="AOA",e.ArgentinaPeso="ARS",e.AustraliaDollar="AUD",e.ArubaFlorin="AWG",e.AzerbaijanNewManat="AZN",e.BosniaAndHerzegovinaConvertibleMark="BAM",e.BahrainDinar="BHD",e.BarbadosDollar="BBD",e.BangladeshTaka="BDT",e.BelgiumFranc="BGN",e.BermudaDollar="BMD",e.BruneiDollar="BND",e.BoliviaBoliviano="BOB",e.BrazilReal="BRL",e.BahamasDollar="BSD",e.BhutanNgultrum="BTN",e.BotswanaPula="BWP",e.BelarusRuble="BYN",e.BelizeDollar="BZD",e.BulgariaLev="BGN",e.BurundiFranc="BIF",e.BritishPound="GBP",e.CanadaDollar="CAD",e.CambodiaRiel="KHR",e.ComorosFranc="KMF",e.CaymanIslandsDollar="KYD",e.ChilePeso="CLP",e.ChinaYuan="CNY",e.ColombiaPeso="COP",e.CostaRicaColon="CRC",e.CroatiaKuna="HRK",e.CubaConvertiblePeso="CUC",e.CubaPeso="CUP",e.CapeVerdeEscudo="CVE",e.CyprusPound="CYP",e.CzechRepublicKoruna="CZK",e.DjiboutiFranc="DJF",e.DenmarkKrone="DKK",e.DominicaDollar="XCD",e.DominicanRepublicPeso="DOP",e.EastCaribbeanDollar="XCD",e.EgyptPound="EGP",e.ElSalvadorColon="SVC",e.EquatorialGuineaEkwele="GQE",e.EritreaNakfa="ERN",e.EstoniaKroon="EEK",e.EthiopiaBirr="ETB",e.Euro="EUR",e.FijiDollar="FJD",e.FalklandIslandsPound="FKP",e.GambiaDalasi="GMD",e.GabonFranc="GMD",e.GeorgiaLari="GEL",e.GhanaCedi="GHS",e.GibraltarPound="GIP",e.GuatemalaQuetzal="GTQ",e.GuernseyPound="GGP",e.GuineaBissauPeso="GWP",e.GuyanaDollar="GYD",e.HongKongDollar="HKD",e.HondurasLempira="HNL",e.HaitiGourde="HTG",e.HungaryForint="HUF",e.IndonesiaRupiah="IDR",e.IsleOfManPound="IMP",e.IsraelNewShekel="ILS",e.IndiaRupee="INR",e.IraqDinar="IQD",e.IranRial="IRR",e.IcelandKrona="ISK",e.JamaicaDollar="JMD",e.JapanYen="JPY",e.JerseyPound="JEP",e.JordanDinar="JOD",e.KazakhstanTenge="KZT",e.KenyaShilling="KES",e.KyrgyzstanSom="KGS",e.NorthKoreaWon="KPW",e.SouthKoreaWon="KRW",e.KuwaitDinar="KWD",e.LaosKip="LAK",e.LebanonPound="LBP",e.LiberiaDollar="LRD",e.LesothoLoti="LSL",e.LibyanDinar="LYD",e.LithuaniaLitas="LTL",e.LatviaLats="LVL",e.LibyaDinar="LYD",e.MacauPataca="MOP",e.MaldivesRufiyaa="MVR",e.MalawiKwacha="MWK",e.MaltaLira="MTL",e.MauritiusRupee="MUR",e.MongoliaTughrik="MNT",e.MoroccoDirham="MAD",e.MoldovaLeu="MDL",e.MozambiqueMetical="MZN",e.MadagascarAriary="MGA",e.MacedoniaDenar="MKD",e.MexicoPeso="MXN",e.MalaysiaRinggit="MYR",e.MyanmarKyat="MMK",e.MicronesiaFederatedStatesDollar="USD",e.NicaraguaCordoba="NIO",e.NamibiaDollar="NAD",e.NetherlandsAntillesGuilder="ANG",e.NewCaledoniaFranc="XPF",e.NigeriaNaira="NGN",e.NicaraguaCordobaOro="NIO",e.NigerCFAFranc="XOF",e.NorwayKrone="NOK",e.NepalRupee="NPR",e.NewZealandDollar="NZD",e.OmanRial="OMR",e.PanamaBalboa="PAB",e.PeruNuevoSol="PEN",e.PapuaNewGuineaKina="PGK",e.PhilippinesPeso="PHP",e.PakistanRupee="PKR",e.PeruNuevo="PEN",e.PolandZloty="PLN",e.ParaguayGuarani="PYG",e.QatarRial="QAR",e.RomaniaNewLeu="RON",e.SerbiaDinar="RSD",e.SriLankaRupee="LKR",e.RussiaRuble="RUB",e.RwandaFranc="RWF",e.SaudiArabiaRiyal="SAR",e.SlovakiaKoruna="SKK",e.SloveniaTolar="SIT",e.SolomonIslandsDollar="SBD",e.SeychellesRupee="SCR",e.SudanPound="SDG",e.SwedenKrona="SEK",e.SingaporeDollar="SGD",e.SaintHelenaPound="SHP",e.SierraLeoneLeone="SLL",e.SomaliaShilling="SOS",e.SurinameDollar="SRD",e.SintMaartenPound="SXD",e.SyriaPound="SYP",e.SwazilandLilangeni="SZL",e.SwitzerlandFranc="CHF",e.ThailandBaht="THB",e.TajikistanSomoni="TJS",e.TurkmenistanManat="TMT",e.TunisiaDinar="TND",e.TongaPaanga="TOP",e.TurkeyLira="TRY",e.TrinidadAndTobagoDollar="TTD",e.TaiwanNewDollar="TWD",e.TanzaniaShilling="TZS",e.UnitedArabEmiratesDirham="AED",e.UkraineHryvnia="UAH",e.UgandaShilling="UGX",e.UnitedKingdomPound="GBP",e.UnitedStatesDollar="USD",e.UruguayPeso="UYU",e.UzbekistanSom="UZS",e.VenezuelaBolivar="VEF",e.VietnamDong="VND",e.VanuatuVatu="VUV",e.SamoaTala="WST",e.YemenRial="YER",e.SouthAfricaRand="ZAR",e.ZambiaKwacha="ZMW",e.ZimbabweDollar="ZWL",e))(jo||{});var $o=(e=>(e.Bitcoin="BTC",e.Ethereum="ETH",e.Litecoin="LTC",e.Ripple="XRP",e.Dash="DASH",e.Zcash="ZEC",e.Dogecoin="DOGE",e.Monero="XMR",e.BitcoinCash="BCH",e.EOS="EOS",e.Binance="BNB",e.Stellar="XLM",e.Cardano="ADA",e.IOTA="IOTA",e.Tezos="XTZ",e.NEO="NEO",e.TRON="TRX",e.EOSClassic="EOSC",e.Ontology="ONT",e.VeChain="VEN",e.QTUM="QTUM",e.Lisk="LSK",e.Waves="WAVES",e.OmiseGO="OMG",e.Zilliqa="ZIL",e.BitcoinGold="BTG",e.Decred="DCR",e.Stratis="STRAT",e.Populous="PPT",e.Augur="REP",e.Golem="GNT",e.Siacoin="SC",e.BasicAttentionToken="BAT",e.ZCoin="XZC",e.StratisHedged="SNT",e.VeChainHedged="VEN",e.PowerLedger="POWR",e.WavesHedged="WAVE",e.ZilliqaHedged="ZRX",e.BitcoinDiamond="BCD",e.DigiByte="DGB",e.DigiByteHedged="DGB",e.Bytecoin="BCN",e.BytecoinHedged="BCN",e))($o||{}),Wo=(e=>(e.Afrikaans="af",e.Albanian="sq",e.Amharic="am",e.Arabic="ar",e.Armenian="hy",e.Azerbaijani="az",e.Bashkir="ba",e.Basque="eu",e.Belarusian="be",e.Bengali="bn",e.Berber="ber",e.Bhutani="dz",e.Bihari="bh",e.Bislama="bi",e.Bosnian="bs",e.Breten="br",e.Bulgarian="bg",e.Burmese="my",e.Cantonese="yue",e.Catalan="ca",e.Chinese="zh",e.Chuvash="cv",e.Corsican="co",e.Croatian="hr",e.Czech="cs",e.Danish="da",e.Dari="prs",e.Divehi="dv",e.Dutch="nl",e.English="en",e.Esperanto="eo",e.Estonian="et",e.Faroese="fo",e.Farsi="fa",e.Filipino="fil",e.Finnish="fi",e.French="fr",e.Frisian="fy",e.Galician="gl",e.Georgian="ka",e.German="de",e.Greek="el",e.Greenlandic="kl",e.Gujarati="gu",e.Haitian="ht",e.Hausa="ha",e.Hebrew="he",e.Hindi="hi",e.Hungarian="hu",e.Icelandic="is",e.Igbo="ig",e.Indonesian="id",e.Irish="ga",e.Italian="it",e.Japanese="ja",e.Javanese="jv",e.Kannada="kn",e.Karelian="krl",e.Kazakh="kk",e.Khmer="km",e.Komi="kv",e.Konkani="kok",e.Korean="ko",e.Kurdish="ku",e.Kyrgyz="ky",e.Lao="lo",e.Latin="la",e.Latvian="lv",e.Lithuanian="lt",e.Luxembourgish="lb",e.Ossetian="os",e.Macedonian="mk",e.Malagasy="mg",e.Malay="ms",e.Malayalam="ml",e.Maltese="mt",e.Maori="mi",e.Marathi="mr",e.Mari="mhr",e.Mongolian="mn",e.Montenegrin="me",e.Nepali="ne",e.NorthernSotho="nso",e.Norwegian="no",e.NorwegianBokmal="nb",e.NorwegianNynorsk="nn",e.Oriya="or",e.Pashto="ps",e.Persian="fa",e.Polish="pl",e.Portuguese="pt",e.Punjabi="pa",e.Quechua="qu",e.Romanian="ro",e.Russian="ru",e.Sakha="sah",e.Sami="se",e.Samoan="sm",e.Sanskrit="sa",e.Scots="gd",e.Serbian="sr",e.SerbianCyrillic="sr-Cyrl",e.Sesotho="st",e.Shona="sn",e.Sindhi="sd",e.Sinhala="si",e.Slovak="sk",e.Slovenian="sl",e.Somali="so",e.Spanish="es",e.Sudanese="su",e.Sutu="sx",e.Swahili="sw",e.Swedish="sv",e.Syriac="syr",e.Tagalog="tl",e.Tajik="tg",e.Tamazight="tmh",e.Tamil="ta",e.Tatar="tt",e.Telugu="te",e.Thai="th",e.Tibetan="bo",e.Tsonga="ts",e.Tswana="tn",e.Turkish="tr",e.Turkmen="tk",e.Ukrainian="uk",e.Urdu="ur",e.Uzbek="uz",e.Vietnamese="vi",e.Welsh="cy",e.Xhosa="xh",e.Yiddish="yi",e.Yoruba="yo",e.Zulu="zu",e))(Wo||{}),Vo=(e=>(e.Afrikaans="af",e.AfrikaansSouthAfrica="af-ZA",e.Albanian="sq",e.AlbanianAlbania="sq-AL",e.Amharic="am",e.AmharicEthiopia="am-ET",e.Arabic="ar",e.ArabicAlgeria="ar-DZ",e.ArabicBahrain="ar-BH",e.ArabicEgypt="ar-EG",e.ArabicIraq="ar-IQ",e.ArabicJordan="ar-JO",e.ArabicKuwait="ar-KW",e.ArabicLebanon="ar-LB",e.ArabicLibya="ar-LY",e.ArabicMorocco="ar-MA",e.ArabicOman="ar-OM",e.ArabicQatar="ar-QA",e.ArabicSaudiArabia="ar-SA",e.ArabicSyria="ar-SY",e.ArabicTunisia="ar-TN",e.ArabicUnitedArabEmirates="ar-AE",e.ArabicYemen="ar-YE",e.Armenian="hy",e.ArmenianArmenia="hy-AM",e.Azerbaijani="az",e.AzerbaijaniAzerbaijan="az-AZ",e.AzerbaijaniCyrillicAzerbaijan="az-Cyrl-AZ",e.Bashkir="ba",e.Basque="eu",e.BasqueSpain="eu-ES",e.Belarusian="be",e.BelarusianBelarus="be-BY",e.Bengali="bn",e.BengaliBangladesh="bn-BD",e.BengaliIndia="bn-IN",e.Berber="ber",e.Bhutani="dz",e.BhutaniBhutan="dz-BT",e.Bosnian="bs",e.BosnianBosniaAndHerzegovina="bs-BA",e.Breton="br",e.Bulgarian="bg",e.BulgarianBosniaAndHerzegovina="bg-BG",e.BulgarianBulgaria="bg-BG",e.Burmese="my",e.BurmeseMyanmar="my-MM",e.Cantonese="yue",e.CantoneseHongKong="yue-HK",e.Catalan="ca",e.CatalanSpain="ca-ES",e.Chechen="ce",e.Cherokee="chr",e.Chinese="zh",e.ChineseSimplified="zh-Hans",e.ChineseSimplifiedChina="zh-Hans-CN",e.ChineseSimplifiedHongKong="zh-Hans-HK",e.ChineseSimplifiedMacau="zh-Hans-MO",e.ChineseSimplifiedSingapore="zh-Hans-SG",e.ChineseTraditional="zh-Hant",e.ChineseTraditionalHongKong="zh-Hant-HK",e.ChineseTraditionalMacau="zh-Hant-MO",e.ChineseTraditionalSingapore="zh-Hant-SG",e.ChineseTraditionalTaiwan="zh-Hant-TW",e.Chuvash="cv",e.CorsicanFrance="co-FR",e.Croatian="hr",e.CroatianBosniaAndHerzegovina="hr-BA",e.CroatianCroatia="hr-HR",e.Czech="cs",e.CzechCzechRepublic="cs-CZ",e.Danish="da",e.DanishDenmark="da-DK",e.Dari="prs",e.DariAfghanistan="prs-AF",e.Divehi="dv",e.DivehiMaldives="dv-MV",e.Dutch="nl",e.DutchBelgium="nl-BE",e.DutchNetherlands="nl-NL",e.English="en",e.EnglishAustralia="en-AU",e.EnglishBelgium="en-BE",e.EnglishBelize="en-BZ",e.EnglishCanada="en-CA",e.EnglishCaribbean="en-029",e.EnglishIreland="en-IE",e.EnglishJamaica="en-JM",e.EnglishNewZealand="en-NZ",e.EnglishPhilippines="en-PH",e.EnglishSingapore="en-SG",e.EnglishSouthAfrica="en-ZA",e.EnglishTrinidadAndTobago="en-TT",e.EnglishUnitedKingdom="en-GB",e.EnglishUnitedStates="en-US",e.EnglishZimbabwe="en-ZW",e.Esperanto="eo",e.Estonian="et",e.EstonianEstonia="et-EE",e.Faroese="fo",e.FaroeseFaroeIslands="fo-FO",e.Farsi="fa",e.FarsiIran="fa-IR",e.Filipino="fil",e.FilipinoPhilippines="fil-PH",e.Finnish="fi",e.FinnishFinland="fi-FI",e.French="fr",e.FrenchBelgium="fr-BE",e.FrenchCanada="fr-CA",e.FrenchFrance="fr-FR",e.FrenchLuxembourg="fr-LU",e.FrenchMonaco="fr-MC",e.FrenchReunion="fr-RE",e.FrenchSwitzerland="fr-CH",e.Frisian="fy",e.FrisianNetherlands="fy-NL",e.Galician="gl",e.GalicianSpain="gl-ES",e.Georgian="ka",e.GeorgianGeorgia="ka-GE",e.German="de",e.GermanAustria="de-AT",e.GermanBelgium="de-BE",e.GermanGermany="de-DE",e.GermanLiechtenstein="de-LI",e.GermanLuxembourg="de-LU",e.GermanSwitzerland="de-CH",e.Greenlandic="kl",e.GreenlandicGreenland="kl-GL",e.Greek="el",e.GreekGreece="el-GR",e.Gujarati="gu",e.GujaratiIndia="gu-IN",e.Haitian="ht",e.Hausa="ha",e.HausaGhana="ha-GH",e.HausaNiger="ha-NE",e.HausaNigeria="ha-NG",e.Hebrew="he",e.HebrewIsrael="he-IL",e.Hindi="hi",e.HindiIndia="hi-IN",e.Hungarian="hu",e.HungarianHungary="hu-HU",e.Icelandic="is",e.IcelandicIceland="is-IS",e.Igbo="ig",e.IgboNigeria="ig-NG",e.Indonesian="id",e.IndonesianIndonesia="id-ID",e.Irish="ga",e.IrishIreland="ga-IE",e.Italian="it",e.ItalianItaly="it-IT",e.ItalianSwitzerland="it-CH",e.Japanese="ja",e.JapaneseJapan="ja-JP",e.Javanese="jv",e.Kannada="kn",e.KannadaIndia="kn-IN",e.Karelian="krl",e.Kazakh="kk",e.KazakhKazakhstan="kk-KZ",e.Khmer="km",e.KhmerCambodia="km-KH",e.KinyarwandaRwanda="rw-RW",e.Komi="kv",e.Konkani="kok",e.KonkaniIndia="kok-IN",e.Korean="ko",e.KoreanSouthKorea="ko-KR",e.Kurdish="ku",e.KurdishIraq="ku-IQ",e.KurdishTurkey="ku-TR",e.Kyrgyz="ky",e.KyrgyzKyrgyzstan="ky-KG",e.Lao="lo",e.LaoLaos="lo-LA",e.Latin="la",e.Latvian="lv",e.LatvianLatvia="lv-LV",e.Lithuanian="lt",e.LithuanianLithuania="lt-LT",e.Luxembourgish="lb",e.LuxembourgishBelgium="lb-LU",e.LuxembourgishLuxembourg="lb-LU",e.Macedonian="mk",e.MacedonianNorthMacedonia="mk-MK",e.Malagasy="mg",e.Malay="ms",e.MalayBrunei="ms-BN",e.MalayIndia="ms-IN",e.MalayMalaysia="ms-MY",e.MalaySingapore="ms-SG",e.Malayalam="ml",e.MalayalamIndia="ml-IN",e.Maltese="mt",e.MalteseMalta="mt-MT",e.Maori="mi",e.MaoriNewZealand="mi-NZ",e.Marathi="mr",e.MarathiIndia="mr-IN",e.Mari="chm",e.Mongolian="mn",e.MongolianMongolia="mn-MN",e.Montenegrin="me",e.MontenegrinMontenegro="me-ME",e.Nepali="ne",e.NepaliNepal="ne-NP",e.NorthernSotho="ns",e.NorthernSothoSouthAfrica="ns-ZA",e.Norwegian="nb",e.NorwegianBokmalNorway="nb-NO",e.NorwegianNynorskNorway="nn-NO",e.Oriya="or",e.OriyaIndia="or-IN",e.Ossetian="os",e.Pashto="ps",e.PashtoAfghanistan="ps-AF",e.Persian="fa",e.PersianIran="fa-IR",e.Polish="pl",e.PolishPoland="pl-PL",e.Portuguese="pt",e.PortugueseBrazil="pt-BR",e.PortuguesePortugal="pt-PT",e.Punjabi="pa",e.PunjabiIndia="pa-IN",e.PunjabiPakistan="pa-PK",e.Quechua="qu",e.QuechuaBolivia="qu-BO",e.QuechuaEcuador="qu-EC",e.QuechuaPeru="qu-PE",e.Romanian="ro",e.RomanianRomania="ro-RO",e.Russian="ru",e.RussianKazakhstan="ru-KZ",e.RussianKyrgyzstan="ru-KG",e.RussianRussia="ru-RU",e.RussianUkraine="ru-UA",e.Sakha="sah",e.Sanskrit="sa",e.SanskritIndia="sa-IN",e.Sami="se",e.SamiNorway="se-NO",e.SamiSweden="se-SE",e.SamiFinland="se-FI",e.Samoan="sm",e.SamoanSamoa="sm-WS",e.Scots="gd",e.Serbian="sr",e.SerbianBosniaAndHerzegovina="sr-BA",e.SerbianSerbiaAndMontenegro="sr-SP",e.SerbianCyrillic="sr-SP-Cyrl",e.SerbianCyrillicBosniaAndHerzegovina="sr-Cyrl-BA",e.SerbianCyrillicSerbiaAndMontenegro="sr-Cyrl-SP",e.Sesotho="st",e.SesothoSouthAfrica="st-ZA",e.Shona="sn",e.ShonaZimbabwe="sn-ZW",e.Sindhi="sd",e.SindhiPakistan="sd-PK",e.Sinhala="si",e.SinhalaSriLanka="si-LK",e.Slovak="sk",e.SlovakSlovakia="sk-SK",e.Slovenian="sl",e.SlovenianSlovenia="sl-SI",e.Somali="so",e.SomaliSomalia="so-SO",e.Spanish="es",e.SpanishArgentina="es-AR",e.SpanishBolivia="es-BO",e.SpanishChile="es-CL",e.SpanishColombia="es-CO",e.SpanishCostaRica="es-CR",e.SpanishCuba="es-CU",e.SpanishDominicanRepublic="es-DO",e.SpanishEcuador="es-EC",e.SpanishEquatorialGuinea="es-GQ",e.SpanishElSalvador="es-SV",e.SpanishGuatemala="es-GT",e.SpanishHonduras="es-HN",e.SpanishMexico="es-MX",e.SpanishNicaragua="es-NI",e.SpanishPanama="es-PA",e.SpanishParaguay="es-PY",e.SpanishPeru="es-PE",e.SpanishPuertoRico="es-PR",e.SpanishSpain="es-ES",e.SpanishUnitedStates="es-US",e.SpanishUruguay="es-UY",e.SpanishVenezuela="es-VE",e.Sudanese="su",e.Sutu="st",e.SutuSouthAfrica="st-ZA",e.Swahili="sw",e.SwahiliKenya="sw-KE",e.Swedish="sv",e.SwedishFinland="sv-FI",e.SwedishSweden="sv-SE",e.Syriac="syr",e.SyriacSyria="syr-SY",e.Tajik="tg",e.TajikTajikistan="tg-TJ",e.Tagalog="tl",e.TagalogPhilippines="tl-PH",e.Tamazight="tmh",e.Tamil="ta",e.TamilIndia="ta-IN",e.Tatar="tt",e.Telugu="te",e.TeluguIndia="te-IN",e.Thai="th",e.ThaiThailand="th-TH",e.Tibetan="bo",e.TibetanBhutan="bo-BT",e.TibetanChina="bo-CN",e.TibetanIndia="bo-IN",e.Tsonga="ts",e.Tswana="tn",e.TswanaSouthAfrica="tn-ZA",e.Turkish="tr",e.TurkishTurkey="tr-TR",e.Turkmen="tk",e.Ukrainian="uk",e.UkrainianUkraine="uk-UA",e.Urdu="ur",e.UrduAfghanistan="ur-AF",e.UrduIndia="ur-IN",e.UrduPakistan="ur-PK",e.Uzbek="uz",e.UzbekCyrillic="uz-Cyrl-UZ",e.UzbekLatin="uz-Latn-UZ",e.UzbekUzbekistan="uz-UZ",e.Vietnamese="vi",e.VietnameseVietnam="vi-VN",e.Welsh="cy",e.WelshUnitedKingdom="cy-GB",e.Xhosa="xh",e.XhosaSouthAfrica="xh-ZA",e.Yiddish="yi",e.Yoruba="yo",e.YorubaNigeria="yo-NG",e.ZhuyinMandarinChina="yue-Hant-CN",e.Zulu="zu",e.ZuluSouthAfrica="zu-ZA",e))(Vo||{}),Yo=(e=>(e.AfricaAbidjan="Africa/Abidjan",e.AfricaAccra="Africa/Accra",e.AfricaAddisAbaba="Africa/Addis_Ababa",e.AfricaAlgiers="Africa/Algiers",e.AfricaAsmara="Africa/Asmara",e.AfricaBamako="Africa/Bamako",e.AfricaBangui="Africa/Bangui",e.AfricaBanjul="Africa/Banjul",e.AfricaBissau="Africa/Bissau",e.AfricaBlantyre="Africa/Blantyre",e.AfricaBrazzaville="Africa/Brazzaville",e.AfricaBujumbura="Africa/Bujumbura",e.AfricaCairo="Africa/Cairo",e.AfricaCasablanca="Africa/Casablanca",e.AfricaCeuta="Africa/Ceuta",e.AfricaConakry="Africa/Conakry",e.AfricaDakar="Africa/Dakar",e.AfricaDarEsSalaam="Africa/Dar_es_Salaam",e.AfricaDjibouti="Africa/Djibouti",e.AfricaDouala="Africa/Douala",e.AfricaElAaiun="Africa/El_Aaiun",e.AfricaFreetown="Africa/Freetown",e.AfricaGaborone="Africa/Gaborone",e.AfricaHarare="Africa/Harare",e.AfricaJohannesburg="Africa/Johannesburg",e.AfricaJuba="Africa/Juba",e.AfricaKampala="Africa/Kampala",e.AfricaKhartoum="Africa/Khartoum",e.AfricaKigali="Africa/Kigali",e.AfricaKinshasa="Africa/Kinshasa",e.AfricaLagos="Africa/Lagos",e.AfricaLibreville="Africa/Libreville",e.AfricaLome="Africa/Lome",e.AfricaLuanda="Africa/Luanda",e.AfricaLubumbashi="Africa/Lubumbashi",e.AfricaLusaka="Africa/Lusaka",e.AfricaMalabo="Africa/Malabo",e.AfricaMaputo="Africa/Maputo",e.AfricaMaseru="Africa/Maseru",e.AfricaMbabane="Africa/Mbabane",e.AfricaMogadishu="Africa/Mogadishu",e.AfricaMonrovia="Africa/Monrovia",e.AfricaNairobi="Africa/Nairobi",e.AfricaNdjamena="Africa/Ndjamena",e.AfricaNiamey="Africa/Niamey",e.AfricaNouakchott="Africa/Nouakchott",e.AfricaOuagadougou="Africa/Ouagadougou",e.AfricaPortoNovo="Africa/Porto-Novo",e.AfricaSaoTome="Africa/Sao_Tome",e.AfricaTripoli="Africa/Tripoli",e.AfricaTunis="Africa/Tunis",e.AfricaWindhoek="Africa/Windhoek",e.AmericaAdak="America/Adak",e.AmericaAnchorage="America/Anchorage",e.AmericaAnguilla="America/Anguilla",e.AmericaAntigua="America/Antigua",e.AmericaAraguaina="America/Araguaina",e.AmericaArgentinaBuenosAires="America/Argentina/Buenos_Aires",e.AmericaArgentinaCatamarca="America/Argentina/Catamarca",e.AmericaArgentinaCordoba="America/Argentina/Cordoba",e.AmericaArgentinaJujuy="America/Argentina/Jujuy",e.AmericaArgentinaLaRioja="America/Argentina/La_Rioja",e.AmericaArgentinaMendoza="America/Argentina/Mendoza",e.AmericaArgentinaRioGallegos="America/Argentina/Rio_Gallegos",e.AmericaArgentinaSalta="America/Argentina/Salta",e.AmericaArgentinaSanJuan="America/Argentina/San_Juan",e.AmericaArgentinaSanLuis="America/Argentina/San_Luis",e.AmericaArgentinaTucuman="America/Argentina/Tucuman",e.AmericaArgentinaUshuaia="America/Argentina/Ushuaia",e.AmericaAruba="America/Aruba",e.AmericaAsuncion="America/Asuncion",e.AmericaAtikokan="America/Atikokan",e.AmericaAtka="America/Atka",e.AmericaBahia="America/Bahia",e.AmericaBahiaBanderas="America/Bahia_Banderas",e.AmericaBarbados="America/Barbados",e.AmericaBelem="America/Belem",e.AmericaBelize="America/Belize",e.AmericaBlancSablon="America/Blanc-Sablon",e.AmericaBoaVista="America/Boa_Vista",e.AmericaBogota="America/Bogota",e.AmericaBoise="America/Boise",e.AmericaCambridgeBay="America/Cambridge_Bay",e.AmericaCampoGrande="America/Campo_Grande",e.AmericaCancun="America/Cancun",e.AmericaCaracas="America/Caracas",e.AmericaCayenne="America/Cayenne",e.AmericaCayman="America/Cayman",e.AmericaChicago="America/Chicago",e.AmericaChihuahua="America/Chihuahua",e.AmericaCoralHarbour="America/Coral_Harbour",e.AmericaCordoba="America/Cordoba",e.AmericaCostaRica="America/Costa_Rica",e.AmericaCreston="America/Creston",e.AmericaCuiaba="America/Cuiaba",e.AmericaCuracao="America/Curacao",e.AmericaDanmarkshavn="America/Danmarkshavn",e.AmericaDawson="America/Dawson",e.AmericaDawsonCreek="America/Dawson_Creek",e.AmericaDenver="America/Denver",e.AmericaDetroit="America/Detroit",e.AmericaDominica="America/Dominica",e.AmericaEdmonton="America/Edmonton",e.AmericaEirunepe="America/Eirunepe",e.AmericaElSalvador="America/El_Salvador",e.AmericaFortaleza="America/Fortaleza",e.AmericaGlaceBay="America/Glace_Bay",e.AmericaGodthab="America/Godthab",e.AmericaGooseBay="America/Goose_Bay",e.AmericaGrandTurk="America/Grand_Turk",e.AmericaGrenada="America/Grenada",e.AmericaGuadeloupe="America/Guadeloupe",e.AmericaGuatemala="America/Guatemala",e.AmericaGuayaquil="America/Guayaquil",e.AmericaGuyana="America/Guyana",e.AmericaHalifax="America/Halifax",e.AmericaHavana="America/Havana",e.AmericaHermosillo="America/Hermosillo",e.AmericaIndianaIndianapolis="America/Indiana/Indianapolis",e.AmericaIndianaKnox="America/Indiana/Knox",e.AmericaIndianaMarengo="America/Indiana/Marengo",e.AmericaIndianaPetersburg="America/Indiana/Petersburg",e.AmericaIndianaTellCity="America/Indiana/Tell_City",e.AmericaIndianaVevay="America/Indiana/Vevay",e.AmericaIndianaVincennes="America/Indiana/Vincennes",e.AmericaIndianaWinamac="America/Indiana/Winamac",e.AmericaInuvik="America/Inuvik",e.AmericaIqaluit="America/Iqaluit",e.AmericaJamaica="America/Jamaica",e.AmericaJuneau="America/Juneau",e.AmericaKentuckyLouisville="America/Kentucky/Louisville",e.AmericaKentuckyMonticello="America/Kentucky/Monticello",e.AmericaKralendijk="America/Kralendijk",e.AmericaLaPaz="America/La_Paz",e.AmericaLima="America/Lima",e.AmericaLosAngeles="America/Los_Angeles",e.AmericaLouisville="America/Louisville",e.AmericaLowerPrinces="America/Lower_Princes",e.AmericaMaceio="America/Maceio",e.AmericaManagua="America/Managua",e.AmericaManaus="America/Manaus",e.AmericaMarigot="America/Marigot",e.AmericaMartinique="America/Martinique",e.AmericaMatamoros="America/Matamoros",e.AmericaMazatlan="America/Mazatlan",e.AmericaMenominee="America/Menominee",e.AmericaMerida="America/Merida",e.AmericaMetlakatla="America/Metlakatla",e.AmericaMexicoCity="America/Mexico_City",e.AmericaMiquelon="America/Miquelon",e.AmericaMoncton="America/Moncton",e.AmericaMonterrey="America/Monterrey",e.AmericaMontevideo="America/Montevideo",e.AmericaMontserrat="America/Montserrat",e.AmericaMontreal="America/Montreal",e.AmericaNassau="America/Nassau",e.AmericaNewYork="America/New_York",e.AmericaNipigon="America/Nipigon",e.AmericaNome="America/Nome",e.AmericaNoronha="America/Noronha",e.AmericaNorthDakotaBeulah="America/North_Dakota/Beulah",e.AmericaNorthDakotaCenter="America/North_Dakota/Center",e.AmericaNorthDakotaNewSalem="America/North_Dakota/New_Salem",e.AmericaOjinaga="America/Ojinaga",e.AmericaPanama="America/Panama",e.AmericaPangnirtung="America/Pangnirtung",e.AmericaParamaribo="America/Paramaribo",e.AmericaPhoenix="America/Phoenix",e.AmericaPortAuPrince="America/Port-au-Prince",e.AmericaPortOfSpain="America/Port_of_Spain",e.AmericaPortoVelho="America/Porto_Velho",e.AmericaPuertoRico="America/Puerto_Rico",e.AmericaRainyRiver="America/Rainy_River",e.AmericaRankinInlet="America/Rankin_Inlet",e.AmericaRecife="America/Recife",e.AmericaRegina="America/Regina",e.AmericaResolute="America/Resolute",e.AmericaRioBranco="America/Rio_Branco",e.AmericaSantaIsabel="America/Santa_Isabel",e.AmericaSantarem="America/Santarem",e.AmericaSantiago="America/Santiago",e.AmericaSantoDomingo="America/Santo_Domingo",e.AmericaSaoPaulo="America/Sao_Paulo",e.AmericaScoresbysund="America/Scoresbysund",e.AmericaShiprock="America/Shiprock",e.AmericaSitka="America/Sitka",e.AmericaStBarthelemy="America/St_Barthelemy",e.AmericaStJohns="America/St_Johns",e.AmericaStKitts="America/St_Kitts",e.AmericaStLucia="America/St_Lucia",e.AmericaStThomas="America/St_Thomas",e.AmericaStVincent="America/St_Vincent",e.AmericaSwiftCurrent="America/Swift_Current",e.AmericaTegucigalpa="America/Tegucigalpa",e.AmericaThule="America/Thule",e.AmericaThunderBay="America/Thunder_Bay",e.AmericaTijuana="America/Tijuana",e.AmericaToronto="America/Toronto",e.AmericaTortola="America/Tortola",e.AmericaVancouver="America/Vancouver",e.AmericaWhitehorse="America/Whitehorse",e.AmericaWinnipeg="America/Winnipeg",e.AmericaYakutat="America/Yakutat",e.AmericaYellowknife="America/Yellowknife",e.AntarcticaCasey="Antarctica/Casey",e.AntarcticaDavis="Antarctica/Davis",e.AntarcticaDumontDUrville="Antarctica/DumontDUrville",e.AntarcticaMacquarie="Antarctica/Macquarie",e.AntarcticaMawson="Antarctica/Mawson",e.AntarcticaMcMurdo="Antarctica/McMurdo",e.AntarcticaPalmer="Antarctica/Palmer",e.AntarcticaRothera="Antarctica/Rothera",e.AntarcticaSyowa="Antarctica/Syowa",e.AntarcticaTroll="Antarctica/Troll",e.AntarcticaVostok="Antarctica/Vostok",e.ArcticLongyearbyen="Arctic/Longyearbyen",e.AsiaAden="Asia/Aden",e.AsiaAlmaty="Asia/Almaty",e.AsiaAmman="Asia/Amman",e.AsiaAnadyr="Asia/Anadyr",e.AsiaAqtau="Asia/Aqtau",e.AsiaAqtobe="Asia/Aqtobe",e.AsiaAshgabat="Asia/Ashgabat",e.AsiaBaghdad="Asia/Baghdad",e.AsiaBahrain="Asia/Bahrain",e.AsiaBaku="Asia/Baku",e.AsiaBangkok="Asia/Bangkok",e.AsiaBarnaul="Asia/Barnaul",e.AsiaBeirut="Asia/Beirut",e.AsiaBishkek="Asia/Bishkek",e.AsiaBrunei="Asia/Brunei",e.AsiaChita="Asia/Chita",e.AsiaChoibalsan="Asia/Choibalsan",e.AsiaColombo="Asia/Colombo",e.AsiaDamascus="Asia/Damascus",e.AsiaDhaka="Asia/Dhaka",e.AsiaDili="Asia/Dili",e.AsiaDubai="Asia/Dubai",e.AsiaDushanbe="Asia/Dushanbe",e.AsiaFamagusta="Asia/Famagusta",e.AsiaGaza="Asia/Gaza",e.AsiaHebron="Asia/Hebron",e.AsiaHoChiMinh="Asia/Ho_Chi_Minh",e.AsiaHongKong="Asia/Hong_Kong",e.AsiaHovd="Asia/Hovd",e.AsiaIrkutsk="Asia/Irkutsk",e.AsiaJakarta="Asia/Jakarta",e.AsiaJayapura="Asia/Jayapura",e.AsiaJerusalem="Asia/Jerusalem",e.AsiaKabul="Asia/Kabul",e.AsiaKamchatka="Asia/Kamchatka",e.AsiaKarachi="Asia/Karachi",e.AsiaKathmandu="Asia/Kathmandu",e.AsiaKhandyga="Asia/Khandyga",e.AsiaKolkata="Asia/Kolkata",e.AsiaKrasnoyarsk="Asia/Krasnoyarsk",e.AsiaKualaLumpur="Asia/Kuala_Lumpur",e.AsiaKuching="Asia/Kuching",e.AsiaKuwait="Asia/Kuwait",e.AsiaMacau="Asia/Macau",e.AsiaMagadan="Asia/Magadan",e.AsiaMakassar="Asia/Makassar",e.AsiaManila="Asia/Manila",e.AsiaMuscat="Asia/Muscat",e.AsiaNicosia="Asia/Nicosia",e.AsiaNovokuznetsk="Asia/Novokuznetsk",e.AsiaNovosibirsk="Asia/Novosibirsk",e.AsiaOmsk="Asia/Omsk",e.AsiaOral="Asia/Oral",e.AsiaPhnomPenh="Asia/Phnom_Penh",e.AsiaPontianak="Asia/Pontianak",e.AsiaPyongyang="Asia/Pyongyang",e.AsiaQatar="Asia/Qatar",e.AsiaQyzylorda="Asia/Qyzylorda",e.AsiaRangoon="Asia/Rangoon",e.AsiaRiyadh="Asia/Riyadh",e.AsiaSakhalin="Asia/Sakhalin",e.AsiaSamarkand="Asia/Samarkand",e.AsiaSeoul="Asia/Seoul",e.AsiaShanghai="Asia/Shanghai",e.AsiaSingapore="Asia/Singapore",e.AsiaSrednekolymsk="Asia/Srednekolymsk",e.AsiaTaipei="Asia/Taipei",e.AsiaTashkent="Asia/Tashkent",e.AsiaTbilisi="Asia/Tbilisi",e.AsiaTehran="Asia/Tehran",e.AsiaThimphu="Asia/Thimphu",e.AsiaTokyo="Asia/Tokyo",e.AsiaTomsk="Asia/Tomsk",e.AsiaUlaanbaatar="Asia/Ulaanbaatar",e.AsiaUrumqi="Asia/Urumqi",e.AsiaUstNera="Asia/Ust-Nera",e.AsiaVientiane="Asia/Vientiane",e.AsiaVladivostok="Asia/Vladivostok",e.AsiaYakutsk="Asia/Yakutsk",e.AsiaYekaterinburg="Asia/Yekaterinburg",e.AsiaYerevan="Asia/Yerevan",e.AtlanticAzores="Atlantic/Azores",e.AtlanticBermuda="Atlantic/Bermuda",e.AtlanticCanary="Atlantic/Canary",e.AtlanticCapeVerde="Atlantic/Cape_Verde",e.AtlanticFaroe="Atlantic/Faroe",e.AtlanticMadeira="Atlantic/Madeira",e.AtlanticReykjavik="Atlantic/Reykjavik",e.AtlanticSouthGeorgia="Atlantic/South_Georgia",e.AtlanticStHelena="Atlantic/St_Helena",e.AtlanticStanley="Atlantic/Stanley",e.AustraliaAdelaide="Australia/Adelaide",e.AustraliaBrisbane="Australia/Brisbane",e.AustraliaBrokenHill="Australia/Broken_Hill",e.AustraliaCanberra="Australia/Canberra",e.AustraliaCurrie="Australia/Currie",e.AustraliaDarwin="Australia/Darwin",e.AustraliaEucla="Australia/Eucla",e.AustraliaHobart="Australia/Hobart",e.AustraliaLindeman="Australia/Lindeman",e.AustraliaLordHowe="Australia/Lord_Howe",e.AustraliaMelbourne="Australia/Melbourne",e.AustraliaPerth="Australia/Perth",e.AustraliaSydney="Australia/Sydney",e.EuropeAmsterdam="Europe/Amsterdam",e.EuropeAndorra="Europe/Andorra",e.EuropeAthens="Europe/Athens",e.EuropeBelgrade="Europe/Belgrade",e.EuropeBerlin="Europe/Berlin",e.EuropeBratislava="Europe/Bratislava",e.EuropeBrussels="Europe/Brussels",e.EuropeBucharest="Europe/Bucharest",e.EuropeBudapest="Europe/Budapest",e.EuropeBusingen="Europe/Busingen",e.EuropeChisinau="Europe/Chisinau",e.EuropeCopenhagen="Europe/Copenhagen",e.EuropeDublin="Europe/Dublin",e.EuropeGibraltar="Europe/Gibraltar",e.EuropeGuernsey="Europe/Guernsey",e.EuropeHelsinki="Europe/Helsinki",e.EuropeIsleOfMan="Europe/Isle_of_Man",e.EuropeIstanbul="Europe/Istanbul",e.EuropeJersey="Europe/Jersey",e.EuropeKaliningrad="Europe/Kaliningrad",e.EuropeKiev="Europe/Kiev",e.EuropeKirov="Europe/Kirov",e.EuropeLisbon="Europe/Lisbon",e.EuropeLjubljana="Europe/Ljubljana",e.EuropeLondon="Europe/London",e.EuropeLuxembourg="Europe/Luxembourg",e.EuropeMadrid="Europe/Madrid",e.EuropeMalta="Europe/Malta",e.EuropeMariehamn="Europe/Mariehamn",e.EuropeMinsk="Europe/Minsk",e.EuropeMonaco="Europe/Monaco",e.EuropeMoscow="Europe/Moscow",e.EuropeOslo="Europe/Oslo",e.EuropeParis="Europe/Paris",e.EuropePodgorica="Europe/Podgorica",e.EuropePrague="Europe/Prague",e.EuropeRiga="Europe/Riga",e.EuropeRome="Europe/Rome",e.EuropeSamara="Europe/Samara",e.EuropeSanMarino="Europe/San_Marino",e.EuropeSarajevo="Europe/Sarajevo",e.EuropeSimferopol="Europe/Simferopol",e.EuropeSkopje="Europe/Skopje",e.EuropeSofia="Europe/Sofia",e.EuropeStockholm="Europe/Stockholm",e.EuropeTallinn="Europe/Tallinn",e.EuropeTirane="Europe/Tirane",e.EuropeUzhgorod="Europe/Uzhgorod",e.EuropeVaduz="Europe/Vaduz",e.EuropeVatican="Europe/Vatican",e.EuropeVienna="Europe/Vienna",e.EuropeVilnius="Europe/Vilnius",e.EuropeVolgograd="Europe/Volgograd",e.EuropeWarsaw="Europe/Warsaw",e.EuropeZagreb="Europe/Zagreb",e.EuropeZaporozhye="Europe/Zaporozhye",e.EuropeZurich="Europe/Zurich",e.GMT="GMT",e.IndianAntananarivo="Indian/Antananarivo",e.IndianChagos="Indian/Chagos",e.IndianChristmas="Indian/Christmas",e.IndianCocos="Indian/Cocos",e.IndianComoro="Indian/Comoro",e.IndianKerguelen="Indian/Kerguelen",e.IndianMahe="Indian/Mahe",e.IndianMaldives="Indian/Maldives",e.IndianMauritius="Indian/Mauritius",e.IndianMayotte="Indian/Mayotte",e.IndianReunion="Indian/Reunion",e.PacificApia="Pacific/Apia",e.PacificAuckland="Pacific/Auckland",e.PacificBougainville="Pacific/Bougainville",e.PacificChatham="Pacific/Chatham",e.PacificChuuk="Pacific/Chuuk",e.PacificEaster="Pacific/Easter",e.PacificEfate="Pacific/Efate",e.PacificEnderbury="Pacific/Enderbury",e.PacificFakaofo="Pacific/Fakaofo",e.PacificFiji="Pacific/Fiji",e.PacificFunafuti="Pacific/Funafuti",e.PacificGalapagos="Pacific/Galapagos",e.PacificGambier="Pacific/Gambier",e.PacificGuadalcanal="Pacific/Guadalcanal",e.PacificGuam="Pacific/Guam",e.PacificHonolulu="Pacific/Honolulu",e.PacificJohnston="Pacific/Johnston",e.PacificKiritimati="Pacific/Kiritimati",e.PacificKosrae="Pacific/Kosrae",e.PacificKwajalein="Pacific/Kwajalein",e.PacificMajuro="Pacific/Majuro",e.PacificMarquesas="Pacific/Marquesas",e.PacificMidway="Pacific/Midway",e.PacificNauru="Pacific/Nauru",e.PacificNiue="Pacific/Niue",e.PacificNorfolk="Pacific/Norfolk",e.PacificNoumea="Pacific/Noumea",e.PacificPagoPago="Pacific/Pago_Pago",e.PacificPalau="Pacific/Palau",e.PacificPitcairn="Pacific/Pitcairn",e.PacificPohnpei="Pacific/Pohnpei",e.PacificPonape="Pacific/Ponape",e.PacificPortMoresby="Pacific/Port_Moresby",e.PacificRarotonga="Pacific/Rarotonga",e.PacificSaipan="Pacific/Saipan",e.PacificSamoa="Pacific/Samoa",e.PacificTahiti="Pacific/Tahiti",e.PacificTarawa="Pacific/Tarawa",e.PacificTongatapu="Pacific/Tongatapu",e.PacificTruk="Pacific/Truk",e.PacificWake="Pacific/Wake",e.PacificWallis="Pacific/Wallis",e.PacificYap="Pacific/Yap",e))(Yo||{}),Zo=(e=>(e.UTC_MINUS_12="UTC-12",e.UTC_MINUS_11_30="UTC-11:30",e.UTC_MINUS_11="UTC-11",e.UTC_MINUS_10_30="UTC-10:30",e.UTC_MINUS_10="UTC-10",e.UTC_MINUS_9_30="UTC-9:30",e.UTC_MINUS_9="UTC-09",e.UTC_MINUS_8_45="UTC-8:45",e.UTC_MINUS_8="UTC-08",e.UTC_MINUS_7="UTC-07",e.UTC_MINUS_6_30="UTC-6:30",e.UTC_MINUS_6="UTC-06",e.UTC_MINUS_5_45="UTC-5:45",e.UTC_MINUS_5_30="UTC-5:30",e.UTC_MINUS_5="UTC-05",e.UTC_MINUS_4_30="UTC-4:30",e.UTC_MINUS_4="UTC-04",e.UTC_MINUS_3_30="UTC-3:30",e.UTC_MINUS_3="UTC-03",e.UTC_MINUS_2_30="UTC-2:30",e.UTC_MINUS_2="UTC-02",e.UTC_MINUS_1="UTC-01",e.UTC_0="UTC+00",e.UTC_PLUS_1="UTC+01",e.UTC_PLUS_2="UTC+02",e.UTC_PLUS_3="UTC+03",e.UTC_PLUS_3_30="UTC+3:30",e.UTC_PLUS_4="UTC+04",e.UTC_PLUS_4_30="UTC+4:30",e.UTC_PLUS_5="UTC+05",e.UTC_PLUS_5_30="UTC+5:30",e.UTC_PLUS_5_45="UTC+5:45",e.UTC_PLUS_6="UTC+06",e.UTC_PLUS_6_30="UTC+6:30",e.UTC_PLUS_7="UTC+07",e.UTC_PLUS_8="UTC+08",e.UTC_PLUS_8_45="UTC+8:45",e.UTC_PLUS_9="UTC+09",e.UTC_PLUS_9_30="UTC+9:30",e.UTC_PLUS_10="UTC+10",e.UTC_PLUS_10_30="UTC+10:30",e.UTC_PLUS_11="UTC+11",e.UTC_PLUS_11_30="UTC+11:30",e.UTC_PLUS_12="UTC+12",e.UTC_PLUS_12_45="UTC+12:45",e.UTC_PLUS_13="UTC+13",e.UTC_PLUS_13_45="UTC+13:45",e.UTC_PLUS_14="UTC+14",e))(Zo||{}),Jo=(e=>(e.AcreTime="ACT",e.AfghanistanTime="AFT",e.AIXCentralEuropeanTime="DFT",e.AlaskaDaylightTime="AKDT",e.AlaskaStandardTime="AKST",e.AlmaAtaTime="ALMT",e.AmazonSummerTime="AMST",e.AmazonTime="AMT",e.AnadyrTime="ANAT",e.AqtobeTime="AQTT",e.ArabiaStandardTime="AST",e.ArgentinaTime="ART",e.ArmeniaTime="AMT",e.ASEANCommonTime="ASEAN",e.AtlanticDaylightTime="ADT",e.AtlanticStandardTime="AST",e.AustralianCentralDaylightSavingTime="ACDT",e.AustralianCentralStandardTime="ACST",e.AustralianCentralWesternStandardTime="ACWST",e.AustralianEasternDaylightSavingTime="AEDT",e.AustralianEasternStandardTime="AEST",e.AustralianEasternTime="AET",e.AustralianWesternStandardTime="AWST",e.AzerbaijanTime="AZT",e.AzoresStandardTime="AZOT",e.AzoresSummerTime="AZOST",e.BakerIslandTime="BIT",e.BangladeshStandardTime="BST",e.BhutanTime="BTT",e.BoliviaTime="BOT",e.BougainvilleStandardTime="BST",e.BrasiliaSummerTime="BRST",e.BrasiliaTime="BRT",e.BritishIndianOceanTime="BIOT",e.BritishSummerTime="BST",e.BruneiTime="BNT",e.CapeVerdeTime="CVT",e.CentralAfricaTime="CAT",e.CentralDaylightTime="CDT",e.CentralEuropeanSummerTime="CEST",e.CentralEuropeanTime="CET",e.CentralIndonesiaTime="WITA",e.CentralStandardTime="CST",e.CentralTime="CT",e.CentralWesternStandardTime="CWST",e.ChamorroStandardTime="CHST",e.ChathamDaylightTime="CHADT",e.ChathamStandardTime="CHAST",e.ChileStandardTime="CLT",e.ChileSummerTime="CLST",e.ChinaStandardTime="CST",e.ChoibalsanStandardTime="CHOT",e.ChoibalsanSummerTime="CHOST",e.ChristmasIslandTime="CXT",e.ChuukTime="CHUT",e.ClipptertonIslandStandardTime="CIST",e.CocosIslandsTime="CCT",e.ColombiaSummerTime="COST",e.ColombiaTime="COT",e.CookIslandTime="CKT",e.CoordinatedUniversalTime="UTC",e.CubaDaylightTime="CDT",e.CubaStandardTime="CST",e.DavisTime="DAVT",e.DumontDUrvilleTime="DDUT",e.EastAfricaTime="EAT",e.EasterIslandStandardTime="EAST",e.EasterIslandSummerTime="EASST",e.EasternCaribbeanTime="ECT",e.EasternDaylightTime="EDT",e.EasternEuropeanSummerTime="EEST",e.EasternEuropeanTime="EET",e.EasternGreenlandSummerTime="EGST",e.EasternGreenlandTime="EGT",e.EasternIndonesianTime="WIT",e.EasternStandardTime="EST",e.EasternTime="ET",e.EcuadorTime="ECT",e.FalklandIslandsSummerTime="FKST",e.FalklandIslandsTime="FKT",e.FernandoDeNoronhaTime="FNT",e.FijiTime="FJT",e.FrenchGuianaTime="GFT",e.FrenchSouthernAndAntarcticTime="TFT",e.FurtherEasternEuropeanTime="FET",e.GalapagosTime="GALT",e.GambierIslandTime="GIT",e.GambierIslandsTime="GAMT",e.GeorgiaStandardTime="GET",e.GilbertIslandTime="GILT",e.GreenwichMeanTime="GMT",e.GulfStandardTime="GST",e.GuyanaTime="GYT",e.HawaiiAleutianDaylightTime="HDT",e.HawaiiAleutianStandardTime="HST",e.HeardAndMcDonaldIslandsTime="HMT",e.HeureAvanceeDEuropeCentraleTime="HAEC",e.HongKongTime="HKT",e.HovdSummerTime="HOVST",e.HovdTime="HOVT",e.IndianOceanTime="IOT",e.IndianStandardTime="IST",e.IndochinaTime="ICT",e.InternationalDayLineWestTime="IDLW",e.IranDaylightTime="IRDT",e.IranStandardTime="IRST",e.IrishStandardTime="IST",e.IrkutskSummerTime="IRKST",e.IrkutskTime="IRKT",e.IsraelDaylightTime="IDT",e.IsraelStandardTime="IST",e.JapanStandardTime="JST",e.KaliningradTime="KALT",e.KamchatkaTime="KAMT",e.KoreaStandardTime="KST",e.KosraeTime="KOST",e.KrasnoyarskSummerTime="KRAST",e.KrasnoyarskTime="KRAT",e.KyrgyzstanTime="KGT",e.LineIslandsTime="LINT",e.KazakhstanStandardTime="KAST",e.LordHoweStandardTime="LHST",e.LordHoweSummerTime="LHST",e.MacquarieIslandStationTime="MIST",e.MagadanTime="MAGT",e.MalaysiaStandardTime="MST",e.MalaysiaTime="MYT",e.MaldivesTime="MVT",e.MarquesasIslandsTime="MART",e.MarshallIslandsTime="MHT",e.MauritiusTime="MUT",e.MawsonStationTime="MAWT",e.MiddleEuropeanSummerTime="MEDT",e.MiddleEuropeanTime="MET",e.MoscowTime="MSK",e.MountainDaylightTime="MDT",e.MountainStandardTime="MST",e.MyanmarStandardTime="MMT",e.NepalTime="NCT",e.NauruTime="NRT",e.NewCaledoniaTime="NCT",e.NewZealandDaylightTime="NZDT",e.NewZealandStandardTime="NZST",e.NewfoundlandDaylightTime="NDT",e.NewfoundlandStandardTime="NST",e.NewfoundlandTime="NT",e.NiueTime="NUT",e.NorfolkIslandTime="NFT",e.NovosibirskTime="NOVT",e.OmskTime="OMST",e.OralTime="ORAT",e.PacificDaylightTime="PDT",e.PacificStandardTime="PST",e.PakistanStandardTime="PKT",e.PalauTime="PWT",e.PapuaNewGuineaTime="PGT",e.ParaguaySummerTime="PYST",e.ParaguayTime="PYT",e.PeruTime="PET",e.PhilippineStandardTime="PHST",e.PhilippineTime="PHT",e.PhoenixIslandTime="PHOT",e.PitcairnTime="PST",e.PohnpeiStandardTime="PONT",e.ReunionTime="RET",e.RotheraResearchStationTime="ROTT",e.SaintPierreAndMiquelonDaylightTime="PMDT",e.SaintPierreAndMiquelonStandardTime="PMST",e.SakhalinIslandTime="SAKT",e.SamaraTime="SAMT",e.SamoaDaylightTime="SDT",e.SamoaStandardTime="SST",e.SeychellesTime="SCT",e.ShowaStationTime="SYOT",e.SingaporeStandardTime="SST",e.SingaporeTime="SGT",e.SolomonIslandsTime="SBT",e.SouthAfricanStandardTime="SAST",e.SouthGeorgiaAndTheSouthSandwichIslandsTime="GST",e.SrednekolymskTime="SRET",e.SriLankaStandardTime="SLST",e.SurinameTime="SRT",e.TahitiTime="TAHT",e.TajikistanTime="TJT",e.ThailandStandardTime="THA",e.TimorLesteTime="TLT",e.TokelauTime="TKT",e.TongaTime="TOT",e.TurkeyTime="TRT",e.TurkmenistanTime="TMT",e.TuvaluTime="TVT",e.UlaanbaatarStandardTime="ULAT",e.UlaanbaatarSummerTime="ULAST",e.UruguayStandardTime="UYT",e.UruguaySummerTime="UYST",e.UzbekistanTime="UZT",e.VanuatuTime="VUT",e.VenezuelaStandardTime="VET",e.VladivostokTime="VLAT",e.VolgogradTime="VOLT",e.VostokStationTime="VOST",e.WakeIslandTime="WAKT",e.WestAfricaSummerTime="WAST",e.WestAfricaTime="WAT",e.WestGreenlandSummerTime="WGST",e.WestGreenlandTime="WGT",e.WestKazakhstanTime="WKT",e.WesternEuropeanSummerTime="WEDT",e.WesternEuropeanTime="WET",e.WesternIndonesianTime="WIT",e.WesternStandardTime="WST",e.YakutskTime="YAKT",e.YekaterinburgTime="YEKT",e))(Jo||{});var Qo=(e=>(e.Africa="Africa",e.Americas="Americas",e.Asia="Asia",e.Europe="Europe",e.Oceania="Oceania",e.Polar="Polar",e))(Qo||{}),Xo=(e=>(e.CentralAmerica="Central America",e.EasternAsia="Eastern Asia",e.EasternEurope="Eastern Europe",e.EasternAfrica="Eastern Africa",e.MiddleAfrica="Middle Africa",e.MiddleEast="Middle East",e.NorthernAfrica="Northern Africa",e.NorthernAmerica="Northern America",e.NorthernEurope="Northern Europe",e.Polynesia="Polynesia",e.SouthAmerica="South America",e.SouthernAfrica="Southern Africa",e.SouthernAsia="Southern Asia",e.SouthernEurope="Southern Europe",e.WesternAfrica="Western Africa",e.WesternAsia="Western Asia",e.WesternEurope="Western Europe",e.WesternAustralia="Western Australia",e))(Xo||{});var pe=y(require("fs-extra"),1),W=y(require("path"),1);function fe(e){switch(e){case I.Boolean:return"boolean";case I.DayOfMonth:return"number";case I.Weekday:return"string";case I.Float:return"number";case I.CurrencyCode:return"string";case I.DateTime:return"Date";case I.Image:return"Image[]";case I.JSON:return"Record<string, any>";case I.LongText:return"string";case I.Markdown:return"string";case I.Menu:return"Menu";case I.Month:return"number";case I.Number:return"number";case I.Tags:return"string[]";case I.String:return"string";case I.UUID:return"string";default:return"unknown"}}var X=y(require("fs-extra"),1),R=y(require("path"),1),we=y(Re(),1);var xe=e=>e.split("/").map(o=>o.split("_").map(c=>c.charAt(0).toUpperCase()+c.slice(1)).join("")).join("/");function ua(e){let o="import { ";for(let c of Object.values(e))switch(c.type){case I.Image:o.includes(" Image,")||(o+="Image, ");break;case I.Menu:o.includes(" Menu,")||(o+="Menu, ");break;default:break}return o+="} from '@srclaunch/types';",o}function e0(e){let o=Object.entries(e.fields).map(([l,m])=>`
${l}${m.required?"":"?"}: ${m.type===I.Menu?e.name+(0,we.default)(xe(l)):fe(m.type)}${m.required?";":" | null;"}`).join(""),c=`${ua(e.fields)}
`;for(let[l,m]of Object.entries(e.fields)){let g="";if(m.type===I.Menu&&m.menu){g+=`export enum ${e.name+(0,we.default)(xe(l))} {`;let d=/[^\dA-Za-z]/g;for(let h of m.menu)h.label&&(g+=`
  ${xe(h.label).replace(/ /g,"").replace(/0/g,"Zero").replace(/1/g,"One").replace(/2/g,"Two").replace(/3/g,"Three").replace(/4/g,"Four").replace(/5/g,"Five").replace(/6/g,"Six").replace(/7/g,"Seven").replace(/8/g,"Eight").replace(/9/g,"Nine").replace(d,"")} = "${h.value}",`);g+=`};

`}c+=`
${g}`}return c+=`export type ${e.name} = {
    id?: string;${o}
  };`,c}function a0(e){let o=`export { ${e.name} } from './${e.name}';
`,c="";for(let[l,m]of Object.entries(e.fields))m.type===I.Menu&&m.menu&&(c+=`${e.name+(0,we.default)(xe(l))},`);return c.length>0&&(o+=`export {${c}} from './${e.name}.js';
`),o}async function is({path:e}){try{let o=".applab",c=R.default.join(R.default.resolve(),o,"dependencies/models/dist/index.js"),l=R.default.join(R.default.resolve(),o,`${e}/src`),m=R.default.join(R.default.resolve(),o,`${e}/dist`),g=R.default.join(R.default.resolve(),"types");await X.default.emptyDir(l),await X.default.emptyDir(m);let d=await X.default.readdir(g);for(let f of d){let S=await X.default.readFile(R.default.join(g,f),"utf8");await X.default.writeFile(R.default.join(l,f),S,"utf8")}let h=await import(c),T="";for(let f of Object.entries(h)){let S=f[1].name,v=e0(f[1]),p=`${S}.ts`,C=R.default.join(l,p);await X.default.writeFile(C,v,"utf8"),T+=a0(f[1])}await X.default.writeFile(R.default.join(l,"index.ts"),T,"utf8")}catch(o){throw console.error("err",o),o}}function i0(e){switch(e){case I.Boolean:return"DataTypes.BOOLEAN";case I.DayOfMonth:return"DataTypes.INTEGER";case I.Weekday:return"DataTypes.STRING";case I.Float:return"DataTypes.FLOAT";case I.CurrencyCode:return"DataTypes.STRING";case I.DateTime:return"DataTypes.DATE";case I.Image:return"DataTypes.JSONB";case I.JSON:return"DataTypes.JSONB";case I.LongText:return"DataTypes.STRING";case I.Markdown:return"DataTypes.TEXT";case I.Menu:return"DataTypes.ENUM";case I.Month:return"DataTypes.INTEGER";case I.Number:return"DataTypes.INTEGER";case I.Tags:return"DataTypes.ARRAY(DataTypes.STRING)";case I.String:return"DataTypes.STRING";case I.UUID:return"DataTypes.UUID";default:return"DataTypes.STRING"}}function n0(e){let o=s0(e.fields,!0),c=u0(e);return`export type ${e.name}Attributes = {
  ${o}
};

export type ${e.name}CreationAttributes = Optional<${e.name}Attributes, 'id'>;
export class ${e.name} extends Model<
  ${e.name}Attributes,
  ${e.name}CreationAttributes
> implements ${e.name}Attributes {
${c}
}
`}function s0(e,o=!1){let c=` id: string;
  `;for(let l of[...Object.entries(e)].sort((m,g)=>m[0].localeCompare(g[0])))c+=`  ${l[0]}${l[1].required?"":"?"}: ${fe(l[1].type)} ${l[1].required?"":"| null"};
`;return c}function u0(e){let o=` public readonly id!: string;

  public static associate: (models: Record<string, ModelStatic<Model>>) => void;
`;for(let c of[...Object.entries(e.fields)].sort((l,m)=>l[0].localeCompare(m[0])))o+=`  public ${c[0]}!: ${fe(c[1].type)}${c[1].required?"":" | null"};
`;return o}function t0(e,o){let c=i0(o.type);return e?`
  ${e}: {
        allowNull: ${o?.required?"false":"true"},
        type: ${c==="DataTypes.ENUM"&&o.menu?`DataTypes.ENUM(${o.menu.map(l=>`'${l.value}'`).join(",")})`:c}
      },`:""}function r0(e){let o=` id: {
        allowNull: false,
        defaultValue: DataTypes.UUIDV4,
        primaryKey: true,
        type: DataTypes.UUID,
      },`;for(let c of[...Object.entries(e)].sort((l,m)=>l[0].localeCompare(m[0])))o+=t0(c[0],c[1]);return o}function o0(e,o){if(o){let{belongsTo:c,hasOne:l,hasMany:m}=o,g="";if(Array.isArray(c)&&c.length>0)for(let T of c)g+=`
          if (${T}) ${e}.belongsTo(${T});`;let d="";if(Array.isArray(l)&&l.length>0)for(let T of l)d+=`     
        if (${T}) ${e}.hasOne(${T});`;let h="";if(Array.isArray(m)&&m.length>0)for(let T of m)h+=`
        if (${T}) ${e}.hasMany(${T});`;return g+d+h}return""}function l0(e,o){if(!o)return[];let{belongsTo:c,hasOne:l,hasMany:m}=o;return[...new Set([...c&&c.length>0?c:[],...l&&l.length>0?l:[],...m&&m.length>0?m:[]])]}function m0(e){let o=n0(e),c=r0(e.fields),l=l0(e.name,e.relationships),m="";for(let d of l)m+=`import { ${d} as ${d}Type } from './${d}';
`;let g=Array.isArray(l)&&l.length>0?`${l.filter(d=>d!==e.name).join(", ")},`:"";return`import { DataTypes, Sequelize, Model, ModelStatic, Optional } from 'sequelize';


  ${ua(e.fields)}
  
${o}

export default (sequelize: Sequelize) => {
    ${e.name}.init(
      {${c}},
      {
        createdAt: 'created_date',
        indexes: [{ fields: ['id'], unique: true }],
        modelName: '${e.name}',
        sequelize,
        updatedAt: 'updated_date',
      },
    );
  
  ${l.length===0?"":`  ${e.name}.associate =  ({ ${g} }: Record<string, ModelStatic<Model>>) => {${o0(e.name,e.relationships)}
    };`}
  
    return ${e.name};
  };`}async function ns({path:e}){try{let o=".applab",c=W.default.join(W.default.resolve(),o,"dependencies/models/dist/index.js"),l=W.default.join(W.default.resolve(),o,`${e}/src`),m=W.default.join(W.default.resolve(),o,`${e}/dist`);await pe.default.emptyDir(l),await pe.default.emptyDir(m);let g=await import(c);for(let h of Object.entries(g)){let T=h[1].name,f=m0(h[1]),S=`${T}.ts`,v=W.default.join(l,S);await pe.default.writeFile(v,f,"utf8")}let d=be(Object.keys(g).map(h=>h),"sequelize");await pe.default.writeFile(W.default.join(l,"index.ts"),d,"utf8")}catch(o){throw console.error(o),o}}var w=y(require("fs-extra"),1),M=y(require("path"),1);function ss(){return`import { ModelProps, Primitives } from "@srclaunch/types";

  export const Document: ModelProps = {
    fields: {
      name: {
        label: "Name",
        type: Primitives.String,
        required: true,
      },
      description: {
        label: "Description",
        type: Primitives.String,
        required: true,
      }
    },
    name: "Document",
    relationships: {
      belongsTo: ["Organization", "Invoice", "User"],
    },
  };
  `}function us(){return`import { ModelProps, Primitives } from "@srclaunch/types";

  export const Invoice: ModelProps = {
    fields: {
      amount: {
        label: "Amount",
        type: Primitives.Number,
        required: true,
      },
      currency: {
        label: "Currency",
        type: Primitives.CurrencyCode,
        required: true,
      },
      date: {
        label: "Date",
        type: Primitives.Date,
        required: true,
      },
      due_date: {
        label: "Due Date",
        type: Primitives.Date,
        required: true,
      },
      notes: {
        label: "Notes",
        type: Primitives.String,
      },
      status: {
        label: "Status",
        type: Primitives.String,
        required: true,
      },
    },
    name: "Invoice",
    relationships: {
      belongsTo: ["Organization", "Payment", "User"],
    },
  };`}function ts(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const Organization: ModelProps = {
  fields: {
    description: {
      label: "Description",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
  },
  name: "Organization",
  relationships: {},
};`}function rs(){return`import { ModelProps, Primitives } from "@srclaunch/types";

  export const Payment: ModelProps = {
    fields: {
      amount: {
        label: "Amount",
        type: Primitives.Number,
        required: true,
      },
      currency: {
        label: "Currency",
        type: Primitives.CurrencyCode,
        required: true,
      },
      date: {
        label: "Date",
        type: Primitives.Date,
        required: true,
      },
      failure_reason: {
        label: "Failure Reason",
        type: Primitives.Menu,
        menu: [
          {
            label: 'Insufficient Funds',
            value: 'insufficient-funds',
          },
          {
            label: 'Invalid Amount',
            value: 'invalid-amount',
          },
          {
            label: 'Invalid Currency',
            value: 'invalid-currency',
          },
          {
            label: 'Invalid Card',
            value: 'invalid-card',
          },
          {
            label: 'Invalid Card Expiry',
            value: 'invalid-card-expiry',
          },
          {
            label: 'Invalid Card Number',
            value: 'invalid-card-number',
          },
          {
            label: 'Invalid Card Security Code',
            value: 'invalid-card-security-code',
          },
          {
            label: 'Invalid Card Holder',
            value: 'invalid-card-holder',
          },
          {
            label: 'Invalid Card Address',
            value: 'invalid-card-address',
          },
        ]
      },
      notes: {
        label: "Notes",
        type: Primitives.String,
        required: true,
      },
      status: {
        label: "Status",
        type: Primitives.Menu,
        required: true,
        menu: [
          {
            label: "Paid",
            value: "paid",
          },
          {
            label: "Failure",
            value: "failure",
          },
          {
            label: "Pending",
            value: "pending",
          },
        ],
      }
    },
    name: "Payment",
    relationships: {
      belongsTo: ["Organization", "User"],
    },
  };`}function os(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const PaymentMethod: ModelProps = {
  fields: {
    default: {
      label: "Default",
      type: Primitives.Boolean,
    },
    masked_number: {
      label: "Number",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
    type: {
      label: "Type",
      menu: [
        {
          label: "Bank Transfer",
          value: "bank-transfer",
        },
        {
          label: "Credit Card",
          value: "credit-card",
        },
        {
          label: "Crypto",
          value: "crypto",
        },
      ],
      type: Primitives.Menu,
    },
  },
  name: "PaymentMethod",
  relationships: {
    belongsTo: ["Organization", "Payment", "Team", "User"],
  },
};`}function ls(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const Person: ModelProps = {
  fields: {
    analytics: {
      label: "Analytics",
      type: Primitives.JSON,
    },
    billing: {
      label: "Billing Details",
      type: Primitives.JSON,
    },
  },
  name: "Person",
  relationships: {
    hasMany: ["Event"],
    hasOne: ["User"],
  },
};`}function ms(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const Subscription: ModelProps = {
  fields: {
    status: {
      label: "Status",
      menu: [
        {
          label: "Active",
          value: "active",
        },
        {
          label: "Expired",
          value: "expired",
        },
        {
          label: "Canceled",
          value: "canceled",
        },
      ],
      type: Primitives.Menu,
    },
    cancel_date: {
      label: "Cancel date",
      type: Primitives.DateTime,
    },
    expiration_date: {
      label: "Expiration date",
      type: Primitives.DateTime,
    },
    renewal_date: {
      label: "Renewal date",
      type: Primitives.DateTime,
    },
    start_date: {
      label: "Start date",
      type: Primitives.DateTime,
    },
  },
  name: "Subscription",
  relationships: {
    belongsTo: ["Organization", "Product", "Team", "User"],
  },
};`}function ds(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const Team: ModelProps = {
  fields: {
    description: {
      label: "Description",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
  },
  name: "Team",
  relationships: {
    belongsTo: ["Organization"],
  },
};`}function cs(){return`import {
  CurrencyCode,
  LanguageCode,
  LocaleCode,
  ModelProps,
  Primitives,
} from "@srclaunch/types";

export const User: ModelProps = {
  description: "A user that signs into the application",
  fields: {
    access: {
      label: "Access Details",
      type: Primitives.JSON,
    },
    cognito_id: {
      label: "Cognito ID",
      type: Primitives.String,
    },
    membership: {
      label: "Membership",
      type: Primitives.JSON,
    },
    onboarding: {
      label: "Onboarding",
      type: Primitives.JSON,
    },
    preferences: {
      defaultValue: {
        accessibility: {
          outlines: false,
        },
        localization: {
          currency: CurrencyCode.UnitedStatesDollar,
          language: LanguageCode.English,
          locale: LocaleCode.EnglishUnitedStates,
        },
        look_and_feel: {
          theme: "light",
        },
      },
      label: "Preferences",
      type: Primitives.JSON,
    },
  },
  name: "User",
  relationships: {
    belongsTo: ["Person", "Team"]
  },
};`}function As(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const UserGroup: ModelProps = {
  fields: {
    description: {
      label: "Description",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
  },
  name: "UserGroup",
  relationships: {
    belongsTo: ["Organization", "Team"],
  },
};`}function gs(){return`import { ModelProps, Primitives } from "@srclaunch/types";

export const UserRole: ModelProps = {
  fields: {
    description: {
      label: "Description",
      type: Primitives.String,
    },
    name: {
      label: "Name",
      type: Primitives.String,
    },
  },
  name: "UserRole",
  relationships: {
    belongsTo: ["Organization", "Team"],
  },
};`}async function Ts(){try{let e=".applab",o=M.default.join(M.default.resolve(),e,"dependencies/models"),c=M.default.join(o,"src");await w.default.writeFile(M.default.join(c,"Organization.ts"),ts(),"utf8"),await w.default.writeFile(M.default.join(c,"Team.ts"),ds(),"utf8"),await w.default.writeFile(M.default.join(c,"Document.ts"),ss(),"utf8"),await w.default.writeFile(M.default.join(c,"Payment.ts"),rs(),"utf8"),await w.default.writeFile(M.default.join(c,"Invoice.ts"),us(),"utf8"),await w.default.writeFile(M.default.join(c,"PaymentMethod.ts"),os(),"utf8"),await w.default.writeFile(M.default.join(c,"Person.ts"),ls(),"utf8"),await w.default.writeFile(M.default.join(c,"Subscription.ts"),ms(),"utf8"),await w.default.writeFile(M.default.join(c,"User.ts"),cs(),"utf8"),await w.default.writeFile(M.default.join(c,"UserGroup.ts"),As(),"utf8"),await w.default.writeFile(M.default.join(c,"UserRole.ts"),gs(),"utf8")}catch(e){console.error(e)}}async function Ce(e){let o=V.default.resolve(),c=V.default.join(o,V.default.join(e)),l=await ta.default.readFile(c),m=await JSON.parse(l.toString()),g=m.build,{buildDir:d,buildPath:h,inputScripts:T}=g;try{await Se({buildDir:d?V.default.join(o,d):void 0,buildPath:h?V.default.join(o,h):void 0,inputScripts:T?T.map(f=>V.default.join(o,f)):[],...m})}catch(f){throw new U(`Error in config file "${c}"`,{cause:f})}}async function hs(){console.info("Starting build of Core Object models...");let e=V.default.join(V.default.resolve(),".applab/config.json"),o=await ta.default.readFile(e),c=await JSON.parse(o.toString());if(!c)throw new U('Missing config file ".applab/config.json"');console.info("Cleaning models..."),await ve(),console.info("Copying stubs..."),await Ts(),console.info("Building AppLab models..."),await fn({path:c.dependencies.models.path}),await Ce(`.applab/${c.dependencies.models.path}/applab.config.json`),console.info("Creating model type definitions..."),await is({path:c.dependencies.types.path}),await Ce(`.applab/${c.dependencies.types.path}/applab.config.json`),console.info("Creating Sequelize models..."),await ns({path:c.dependencies["sequelize-models"].path}),await Ce(`.applab/${c.dependencies["sequelize-models"].path}/applab.config.json`),console.info("Building HTTP client..."),await es({httpClientProjectName:c.dependencies["http-client"].repo,modelsPath:c.dependencies.models.path,path:c.dependencies["http-client"].path,typesProjectName:c.dependencies.types.repo}),await Ce(`.applab/${c.dependencies["http-client"].path}/applab.config.json`),console.info("Building Redux state..."),await as({httpClientProjectName:c.dependencies["http-client"].repo,projectPath:c.dependencies["redux-state"].path,typesProjectName:c.dependencies.types.repo}),await Ce(`.applab/${c.dependencies["redux-state"].path}/applab.config.json`)}var fs=y(require("fs-extra"),1),ps=y(require("path"),1);async function Cs(){let e=ps.default.join("models"),o=fs.default.readdirSync(e).filter(c=>c.slice(-3)===".ts"&&c.split(".ts")[0]!=="index");console.info(o.map(c=>c.split(".ts")[0]).toString())}async function Es(e){switch(await _s(),e){case"clean":await ve();break;case"build":await hs();break;case"help":console.info("Available model commands are: build, list");break;case"list":await Cs();break;default:console.error("Unknown model command"),G.showHelp();break}}async function _s(){let e=qe.default.join("./.applab/config.json");if(!Boolean(await ra.default.stat(e)))throw new Error("Please run this command from the AppLab project directory.")}async function Ss({cliVersion:e,command:o,flags:c}){try{switch(o[0]){case"build":let l=await ra.default.readFile(qe.default.join(qe.default.resolve(),"applab.config.json"),"utf8");if(!l)console.error('Missing config file "applab.config.json"');else try{let m=JSON.parse(l).build;await Se(m)}catch(m){console.error('Error in config file "applab.config.json": ',m)}break;case"models":await Es(o[1]);break;case"dev":console.log("why hi here?");break;case"help":ma();break;default:console.error("Unknown command"),G.showHelp();break}}catch(l){console.log("err",l)}}var c0={},bs=`
Usage
  $ applab <command>

Commands
  build-models - Build models into Sequelize models, Typescript definitions and JSON
  data - Commands related to building shared data types and models
  dev - Start Web/mobile apps in development mode.
  create-project - Create a new AppLab project repository
  release - Collect changes, bump and tag version, and deploy
  text - Runs tests
  update - Update SrcLaunch and AppLab dependencies

To get help for a specific command type help after the command name, for example:
  $ applab dev help
`,G=(0,Is.default)(bs,{flags:{},importMeta:c0});(0,vs.default)({pkg:G.pkg}).notify();Ss({cliVersion:G.pkg.version,command:G.input,flags:G.flags});0&&(module.exports={cli,helpMessage});
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
//# sourceMappingURL=index.cjs.js.map
